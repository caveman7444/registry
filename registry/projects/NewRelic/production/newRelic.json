{
    "title": "NewRelic",
    "version": "v2",
    "baseUri": "https://api.newrelic.com/{version}",
    "baseUriParameters": {
        "version": {
            "name": "version",
            "displayName": "version",
            "type": "string",
            "required": true,
            "repeat": false,
            "enum": [
                "v2"
            ],
            "__METADATA__": {
                "calculated": true,
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    },
                    "type": {
                        "insertedAsDefault": true
                    },
                    "required": {
                        "insertedAsDefault": true
                    },
                    "repeat": {
                        "insertedAsDefault": true
                    },
                    "enum": {
                        "calculated": true
                    }
                }
            }
        }
    },
    "protocols": [
        "HTTPS"
    ],
    "schemas": [
        {
            "alertPoliciesList": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"alert_policies\": {\n      \"required\": false,\n      \"type\": \"array\",\n      \"items\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"alert_policy\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"enabled\": {\n                \"required\": false,\n                \"type\": \"boolean\"\n              },\n              \"conditions\": {\n                \"required\": false,\n                \"type\": \"array\",\n                \"items\": {\n                  \"required\": false,\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"enabled\": {\n                      \"required\": false,\n                      \"type\": \"boolean\"\n                    },\n                    \"id\": {\n                      \"required\": false,\n                      \"type\": \"integer\"\n                    },\n                    \"severity\": {\n                      \"required\": false,\n                      \"type\": \"string\"\n                    },\n                    \"threshold\": {\n                      \"required\": false,\n                      \"type\": \"number\"\n                    },\n                    \"trigger_minutes\": {\n                      \"required\": false,\n                      \"type\": \"integer\"\n                    },\n                    \"type\": {\n                      \"required\": false,\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              },\n              \"links\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"notification_channels\": {\n                    \"required\": false,\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"required\": false,\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"applications\": {\n                    \"required\": false,\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"required\": false,\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"key_transactions\": {\n                    \"required\": false,\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"required\": false,\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"servers\": {\n                    \"required\": false,\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"required\": false,\n                      \"type\": \"integer\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
        },
        {
            "alertPolicy": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"alert_policy\": {\n      \"required\": false,\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"type\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"enabled\": {\n          \"required\": false,\n          \"type\": \"boolean\"\n        },\n        \"conditions\": {\n          \"required\": false,\n          \"type\": \"array\",\n          \"items\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"enabled\": {\n                \"required\": false,\n                \"type\": \"boolean\"\n              },\n              \"id\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"severity\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"threshold\": {\n                \"required\": false,\n                \"type\": \"number\"\n              },\n              \"trigger_minutes\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          }\n        },\n        \"links\": {\n          \"required\": false,\n          \"type\": \"object\",\n          \"properties\": {\n            \"notification_channels\": {\n              \"required\": false,\n              \"type\": \"array\",\n              \"items\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            },\n            \"applications\": {\n              \"required\": false,\n              \"type\": \"array\",\n              \"items\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            },\n            \"key_transactions\": {\n              \"required\": false,\n              \"type\": \"array\",\n              \"items\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            },\n            \"servers\": {\n              \"required\": false,\n              \"type\": \"array\",\n              \"items\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
        },
        {
            "alertPolicyPut": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"alert_policy\": {\n      \"required\": false,\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"enabled\": {\n          \"required\": false,\n          \"type\": \"boolean\"\n        },\n        \"conditions\": {\n          \"required\": false,\n          \"type\": \"array\",\n          \"items\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"enabled\": {\n                \"required\": false,\n                \"type\": \"boolean\"\n              },\n              \"id\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"threshold\": {\n                \"required\": false,\n                \"type\": \"number\"\n              },\n              \"trigger_minutes\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          }\n        },\n        \"links\": {\n          \"required\": false,\n          \"type\": \"object\",\n          \"properties\": {\n            \"notification_channels\": {\n              \"required\": false,\n              \"type\": \"array\",\n              \"items\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            },\n            \"applications\": {\n              \"required\": false,\n              \"type\": \"array\",\n              \"items\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            },\n            \"key_transactions\": {\n              \"required\": false,\n              \"type\": \"array\",\n              \"items\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            },\n            \"servers\": {\n              \"required\": false,\n              \"type\": \"array\",\n              \"items\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
        },
        {
            "application": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"application\": {\n      \"required\": false,\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"name\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"language\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"health_status\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"reporting\": {\n          \"required\": false,\n          \"type\": \"boolean\"\n        },\n        \"last_reported_at\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"application_summaries\": {\n          \"required\": false,\n          \"type\": \"object\",\n          \"properties\": {\n            \"response_time\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"throughput\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"error_rate\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"apdex_target\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"apdex_score\": {\n              \"required\": false,\n              \"type\": \"number\"\n            }\n          }\n        },\n        \"end_user_summaries\": {\n          \"required\": false,\n          \"type\": \"object\",\n          \"properties\": {\n            \"response_time\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"throughput\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"apdex_target\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"apdex_score\": {\n              \"required\": false,\n              \"type\": \"number\"\n            }\n          }\n        },\n        \"settings\": {\n          \"required\": false,\n          \"type\": \"object\",\n          \"properties\": {\n            \"app_apdex_threshold\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"end_user_apdex_threshold\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"enable_real_user_monitoring\": {\n              \"required\": false,\n              \"type\": \"boolean\"\n            },\n            \"use_server_side_config\": {\n              \"required\": false,\n              \"type\": \"boolean\"\n            }\n          }\n        },\n        \"links\": {\n          \"required\": false,\n          \"type\": \"object\",\n          \"properties\": {\n            \"servers\": {\n              \"required\": false,\n              \"type\": \"array\",\n              \"items\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            },\n            \"application_hosts\": {\n              \"required\": false,\n              \"type\": \"array\",\n              \"items\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
        },
        {
            "applicationPut": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"application\": {\n      \"required\": false,\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"settings\": {\n          \"required\": false,\n          \"type\": \"object\",\n          \"properties\": {\n            \"app_apdex_threshold\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"end_user_apdex_threshold\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"enable_real_user_monitoring\": {\n              \"required\": false,\n              \"type\": \"boolean\"\n            }\n          }\n        }\n      }\n    }\n  }\n}"
        },
        {
            "applicationsList": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"applications\": {\n      \"required\": false,\n      \"type\": \"array\",\n      \"items\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"application\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"language\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"health_status\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"reporting\": {\n                \"required\": false,\n                \"type\": \"boolean\"\n              },\n              \"last_reported_at\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"application_summaries\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"response_time\": {\n                    \"required\": false,\n                    \"type\": \"number\"\n                  },\n                  \"throughput\": {\n                    \"required\": false,\n                    \"type\": \"number\"\n                  },\n                  \"error_rate\": {\n                    \"required\": false,\n                    \"type\": \"number\"\n                  },\n                  \"apdex_target\": {\n                    \"required\": false,\n                    \"type\": \"number\"\n                  },\n                  \"apdex_score\": {\n                    \"required\": false,\n                    \"type\": \"number\"\n                  }\n                }\n              },\n              \"end_user_summaries\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"response_time\": {\n                    \"required\": false,\n                    \"type\": \"number\"\n                  },\n                  \"throughput\": {\n                    \"required\": false,\n                    \"type\": \"number\"\n                  },\n                  \"apdex_target\": {\n                    \"required\": false,\n                    \"type\": \"number\"\n                  },\n                  \"apdex_score\": {\n                    \"required\": false,\n                    \"type\": \"number\"\n                  }\n                }\n              },\n              \"settings\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"app_apdex_threshold\": {\n                    \"required\": false,\n                    \"type\": \"number\"\n                  },\n                  \"end_user_apdex_threshold\": {\n                    \"required\": false,\n                    \"type\": \"number\"\n                  },\n                  \"enable_real_user_monitoring\": {\n                    \"required\": false,\n                    \"type\": \"boolean\"\n                  },\n                  \"use_server_side_config\": {\n                    \"required\": false,\n                    \"type\": \"boolean\"\n                  }\n                }\n              },\n              \"links\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"servers\": {\n                    \"required\": false,\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"required\": false,\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"application_hosts\": {\n                    \"required\": false,\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"required\": false,\n                      \"type\": \"integer\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
        },
        {
            "host": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"application_host\": {\n      \"required\": false,\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"application_name\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"host\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"language\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"health_status\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"application_summaries\": {\n          \"required\": false,\n          \"type\": \"object\",\n          \"properties\": {\n            \"response_time\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"throughput\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"error_rate\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"apdex_score\": {\n              \"required\": false,\n              \"type\": \"number\"\n            }\n          }\n        },\n        \"end_user_summaries\": {\n          \"required\": false,\n          \"type\": \"object\",\n          \"properties\": {\n            \"response_time\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"throughput\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"apdex_score\": {\n              \"required\": false,\n              \"type\": \"number\"\n            }\n          }\n        },\n        \"links\": {\n          \"required\": false,\n          \"type\": \"object\",\n          \"properties\": {\n            \"application\": {\n              \"required\": false,\n              \"type\": \"integer\"\n            },\n            \"application_instances\": {\n              \"required\": false,\n              \"type\": \"array\",\n              \"items\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            },\n            \"server\": {\n              \"required\": false,\n              \"type\": \"integer\"\n            }\n          }\n        }\n      }\n    }\n  }\n}"
        },
        {
            "hostsList": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"application_hosts\": {\n      \"required\": false,\n      \"type\": \"array\",\n      \"items\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"application_host\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"application_name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"host\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"language\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"health_status\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"application_summaries\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"response_time\": {\n                    \"required\": false,\n                    \"type\": \"number\"\n                  },\n                  \"throughput\": {\n                    \"required\": false,\n                    \"type\": \"number\"\n                  },\n                  \"error_rate\": {\n                    \"required\": false,\n                    \"type\": \"number\"\n                  },\n                  \"apdex_score\": {\n                    \"required\": false,\n                    \"type\": \"number\"\n                  }\n                }\n              },\n              \"end_user_summaries\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"response_time\": {\n                    \"required\": false,\n                    \"type\": \"number\"\n                  },\n                  \"throughput\": {\n                    \"required\": false,\n                    \"type\": \"number\"\n                  },\n                  \"apdex_score\": {\n                    \"required\": false,\n                    \"type\": \"number\"\n                  }\n                }\n              },\n              \"links\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"application\": {\n                    \"required\": false,\n                    \"type\": \"integer\"\n                  },\n                  \"application_instances\": {\n                    \"required\": false,\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"required\": false,\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"server\": {\n                    \"required\": false,\n                    \"type\": \"integer\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
        },
        {
            "instance": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": false,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"application_instance\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"application_name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"host\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"port\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"language\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"health_status\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"application_summaries\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"response_time\": {\r\n              \"required\": false,\r\n              \"type\": \"number\"\r\n            },\r\n            \"throughput\": {\r\n              \"required\": false,\r\n              \"type\": \"number\"\r\n            },\r\n            \"error_rate\": {\r\n              \"required\": false,\r\n              \"type\": \"number\"\r\n            },\r\n            \"apdex_score\": {\r\n              \"required\": false,\r\n              \"type\": \"number\"\r\n            }\r\n          }\r\n        },\r\n        \"end_user_summaries\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"response_time\": {\r\n              \"required\": false,\r\n              \"type\": \"number\"\r\n            },\r\n            \"throughput\": {\r\n              \"required\": false,\r\n              \"type\": \"number\"\r\n            },\r\n            \"apdex_score\": {\r\n              \"required\": false,\r\n              \"type\": \"number\"\r\n            }\r\n          }\r\n        },\r\n        \"links\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"application\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"application_host\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"server\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "instancesList": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": false,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"application_instances\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"application_instance\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"application_name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"host\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"port\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"language\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"health_status\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"application_summaries\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"response_time\": {\r\n                    \"required\": false,\r\n                    \"type\": \"number\"\r\n                  },\r\n                  \"throughput\": {\r\n                    \"required\": false,\r\n                    \"type\": \"number\"\r\n                  },\r\n                  \"error_rate\": {\r\n                    \"required\": false,\r\n                    \"type\": \"number\"\r\n                  },\r\n                  \"apdex_score\": {\r\n                    \"required\": false,\r\n                    \"type\": \"number\"\r\n                  }\r\n                }\r\n              },\r\n              \"end_user_summaries\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"response_time\": {\r\n                    \"required\": false,\r\n                    \"type\": \"number\"\r\n                  },\r\n                  \"throughput\": {\r\n                    \"required\": false,\r\n                    \"type\": \"number\"\r\n                  },\r\n                  \"apdex_score\": {\r\n                    \"required\": false,\r\n                    \"type\": \"number\"\r\n                  }\r\n                }\r\n              },\r\n              \"links\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"application\": {\r\n                    \"required\": false,\r\n                    \"type\": \"integer\"\r\n                  },\r\n                  \"application_host\": {\r\n                    \"required\": false,\r\n                    \"type\": \"integer\"\r\n                  },\r\n                  \"server\": {\r\n                    \"required\": false,\r\n                    \"type\": \"integer\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "metricNames": "{\r\n  \"required\" : true ,\r\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\r\n  \"type\" : \"object\" ,\r\n  \"properties\" : {\r\n    \"metric\" : {\r\n      \"type\" : \"object\" ,\r\n      \"required\" : false ,\r\n      \"properties\" : {\r\n        \"name\" : {\r\n          \"type\" : \"string\" ,\r\n          \"required\" : false\r\n        } ,\r\n        \"values\" : {\r\n          \"type\" : \"array\" ,\r\n          \"required\" : false ,\r\n          \"items\" : \r\n            {\r\n              \"type\" : \"string\"\r\n            }\r\n          \r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
        },
        {
            "notificationChannel": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"notification_channel\": {\n      \"required\": false,\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"type\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"downtime_only\": {\n          \"required\": false,\n          \"type\": \"boolean\"\n        },\n        \"url\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"email\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"subdomain\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"service\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"mobile_alerts\": {\n          \"required\": false,\n          \"type\": \"boolean\"\n        },\n        \"email_alerts\": {\n          \"required\": false,\n          \"type\": \"boolean\"\n        },\n        \"room\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"links\": {\n          \"required\": false,\n          \"type\": \"object\",\n          \"properties\": {\n            \"notification_channels\": {\n              \"required\": false,\n              \"type\": \"array\",\n              \"items\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            },\n            \"user\": {\n              \"required\": false,\n              \"type\": \"integer\"\n            }\n          }\n        }\n      }\n    }\n  }\n}"
        },
        {
            "notificationChannelsList": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"notification_channels\": {\n      \"required\": false,\n      \"type\": \"array\",\n      \"items\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"notification_channel\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"downtime_only\": {\n                \"required\": false,\n                \"type\": \"boolean\"\n              },\n              \"url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"description\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"email\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"subdomain\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"service\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"mobile_alerts\": {\n                \"required\": false,\n                \"type\": \"boolean\"\n              },\n              \"email_alerts\": {\n                \"required\": false,\n                \"type\": \"boolean\"\n              },\n              \"room\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"links\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"notification_channels\": {\n                    \"required\": false,\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"required\": false,\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"user\": {\n                    \"required\": false,\n                    \"type\": \"integer\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
        },
        {
            "server": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"server\": {\n      \"required\": false,\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"account_id\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"display_name\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"host\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"reporting\": {\n          \"required\": false,\n          \"type\": \"boolean\"\n        },\n        \"last_reported_at\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"summaries\": {\n          \"required\": false,\n          \"type\": \"object\",\n          \"properties\": {\n            \"cpu\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"cpu_stolen\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"disk_io\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"memory\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"memory_used\": {\n              \"required\": false,\n              \"type\": \"integer\"\n            },\n            \"memory_total\": {\n              \"required\": false,\n              \"type\": \"integer\"\n            },\n            \"fullest_disk\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"fullest_disk_free\": {\n              \"required\": false,\n              \"type\": \"integer\"\n            }\n          }\n        }\n      }\n    }\n  }\n}"
        },
        {
            "serverPut": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"server\": {\n      \"required\": false,\n      \"type\": \"object\",\n      \"properties\": {\n        \"display_name\": {\n          \"required\": false,\n          \"type\": \"string\"\n        }\n      }\n    }\n  }\n}"
        },
        {
            "serversList": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"servers\": {\n      \"required\": false,\n      \"type\": \"array\",\n      \"items\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"server\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"account_id\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"display_name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"host\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"reporting\": {\n                \"required\": false,\n                \"type\": \"boolean\"\n              },\n              \"last_reported_at\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"summaries\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"cpu\": {\n                    \"required\": false,\n                    \"type\": \"number\"\n                  },\n                  \"cpu_stolen\": {\n                    \"required\": false,\n                    \"type\": \"number\"\n                  },\n                  \"disk_io\": {\n                    \"required\": false,\n                    \"type\": \"number\"\n                  },\n                  \"memory\": {\n                    \"required\": false,\n                    \"type\": \"number\"\n                  },\n                  \"memory_used\": {\n                    \"required\": false,\n                    \"type\": \"integer\"\n                  },\n                  \"memory_total\": {\n                    \"required\": false,\n                    \"type\": \"integer\"\n                  },\n                  \"fullest_disk\": {\n                    \"required\": false,\n                    \"type\": \"number\"\n                  },\n                  \"fullest_disk_free\": {\n                    \"required\": false,\n                    \"type\": \"integer\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
        },
        {
            "user": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"user\": {\n      \"required\": false,\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"first_name\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"last_name\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"email\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"role\": {\n          \"required\": false,\n          \"type\": \"string\"\n        }\n      }\n    }\n  }\n}"
        },
        {
            "usersList": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"users\": {\n      \"required\": false,\n      \"type\": \"array\",\n      \"items\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"user\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"first_name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"last_name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"email\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"role\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
        },
        {
            "keyTransaction": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"key_transaction\": {\n      \"required\": false,\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"transaction_name\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"application_summaries\": {\n          \"required\": false,\n          \"type\": \"object\",\n          \"properties\": {\n            \"response_time\": {\n              \"required\": false,\n              \"type\": \"string\"\n            },\n            \"throughput\": {\n              \"required\": false,\n              \"type\": \"string\"\n            },\n            \"error_rate\": {\n              \"required\": false,\n              \"type\": \"string\"\n            },\n            \"apdex_target\": {\n              \"required\": false,\n              \"type\": \"string\"\n            },\n            \"apdex_score\": {\n              \"required\": false,\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"end_user_summaries\": {\n          \"required\": false,\n          \"type\": \"object\",\n          \"properties\": {\n            \"response_time\": {\n              \"required\": false,\n              \"type\": \"string\"\n            },\n            \"throughput\": {\n              \"required\": false,\n              \"type\": \"string\"\n            },\n            \"apdex_target\": {\n              \"required\": false,\n              \"type\": \"string\"\n            },\n            \"apdex_score\": {\n              \"required\": false,\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"links\": {\n          \"required\": false,\n          \"type\": \"object\",\n          \"properties\": {\n            \"application\": {\n              \"required\": false,\n              \"type\": \"string\"\n            }\n          }\n        }\n      }\n    }\n  }\n}"
        },
        {
            "keyTransactionsList": "{\r\n  \"required\" : true ,\r\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\r\n  \"type\" : \"object\" ,\r\n  \"properties\" : {\r\n    \"key_transaction\" : {\r\n      \"type\" : \"object\" ,\r\n      \"required\" : false ,\r\n      \"properties\" : {\r\n        \"id\" : {\r\n          \"type\" : \"string\" ,\r\n          \"required\" : false\r\n        } ,\r\n        \"name\" : {\r\n          \"type\" : \"string\" ,\r\n          \"required\" : false\r\n        } ,\r\n        \"transaction_name\" : {\r\n          \"type\" : \"string\" ,\r\n          \"required\" : false\r\n        } ,\r\n        \"application_summaries\" : {\r\n          \"type\" : \"object\" ,\r\n          \"required\" : false ,\r\n          \"properties\" : {\r\n            \"response_time\" : {\r\n              \"type\" : \"string\" ,\r\n              \"required\" : false\r\n            } ,\r\n            \"throughput\" : {\r\n              \"type\" : \"string\" ,\r\n              \"required\" : false\r\n            } ,\r\n            \"error_rate\" : {\r\n              \"type\" : \"string\" ,\r\n              \"required\" : false\r\n            } ,\r\n            \"apdex_target\" : {\r\n              \"type\" : \"string\" ,\r\n              \"required\" : false\r\n            } ,\r\n            \"apdex_score\" : {\r\n              \"type\" : \"string\" ,\r\n              \"required\" : false\r\n            }\r\n          }\r\n        } ,\r\n        \"end_user_summaries\" : {\r\n          \"type\" : \"object\" ,\r\n          \"required\" : false ,\r\n          \"properties\" : {\r\n            \"response_time\" : {\r\n              \"type\" : \"string\" ,\r\n              \"required\" : false\r\n            } ,\r\n            \"throughput\" : {\r\n              \"type\" : \"string\" ,\r\n              \"required\" : false\r\n            } ,\r\n            \"apdex_target\" : {\r\n              \"type\" : \"string\" ,\r\n              \"required\" : false\r\n            } ,\r\n            \"apdex_score\" : {\r\n              \"type\" : \"string\" ,\r\n              \"required\" : false\r\n            }\r\n          }\r\n        } ,\r\n        \"links\" : {\r\n          \"type\" : \"object\" ,\r\n          \"required\" : false ,\r\n          \"properties\" : {\r\n            \"application\" : {\r\n              \"type\" : \"string\" ,\r\n              \"required\" : false\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
        }
    ],
    "traits": [
        {
            "metricData": {
                "queryParameters": {
                    "names[]": {
                        "name": "names[]",
                        "displayName": "names[]",
                        "type": "string",
                        "required": true,
                        "repeat": true,
                        "description": "Retrieve specific metrics by name",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "values[]": {
                        "name": "values[]",
                        "displayName": "values[]",
                        "type": "string",
                        "required": false,
                        "repeat": true,
                        "description": "Retrieve specific metric values",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "from": {
                        "name": "from",
                        "displayName": "from",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Retrieve metrics after this time",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "to": {
                        "name": "to",
                        "displayName": "to",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Retrieve metrics before this time",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "summarize": {
                        "name": "summarize",
                        "displayName": "summarize",
                        "type": "boolean",
                        "required": false,
                        "repeat": false,
                        "description": "Summarize the data",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "description": "This API endpoint returns a list of values for each of the requested metrics. The list of available metrics can be returned using the Metric Name API endpoint.",
                "name": "metricData"
            }
        },
        {
            "filterableByName": {
                "queryParameters": {
                    "filter[name]": {
                        "name": "filter[name]",
                        "displayName": "filter[name]",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Filter by <<name>> name",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "name": "filterableByName"
            }
        },
        {
            "filterableByHostname": {
                "queryParameters": {
                    "filter[hostname]": {
                        "name": "filter[hostname]",
                        "displayName": "filter[hostname]",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Filter by server hostname",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "name": "filterableByHostname"
            }
        },
        {
            "filterableById": {
                "queryParameters": {
                    "filter[ids]": {
                        "name": "filter[ids]",
                        "displayName": "filter[ids]",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Filter by application <<name>> ids. Separate multiple List entries with a comma.",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "name": "filterableById"
            }
        },
        {
            "metricNames": {
                "responses": {
                    "200": {
                        "code": "200",
                        "body": {
                            "application/json": {
                                "name": "application/json",
                                "schema": "metricNames",
                                "example": "{\r\n  \"metric\" : {\r\n    \"name\" : \"string\" ,\r\n    \"values\" : [\r\n      \"string\"\r\n    ]\r\n  }\r\n}",
                                "schemaContent": "metricNames"
                            }
                        }
                    }
                },
                "queryParameters": {
                    "name": {
                        "name": "name",
                        "displayName": "name",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Filter metrics by name",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "page": {
                        "name": "page",
                        "displayName": "page",
                        "type": "integer",
                        "required": false,
                        "repeat": false,
                        "description": "Pagination index",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "description": "Return a list of known metrics and their value names for the given resource.",
                "name": "metricNames"
            }
        },
        {
            "filterableByType": {
                "queryParameters": {
                    "filter[type]": {
                        "name": "filter[type]",
                        "displayName": "filter[type]",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Filter by <<name>> types. Separate multiple List entries with a comma.",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "name": "filterableByType"
            }
        }
    ],
    "securitySchemes": [
        {
            "x-Api-Key": {
                "name": "x-Api-Key",
                "type": "x-Api-Key",
                "describedBy": {
                    "headers": {
                        "X-Api-Key": {
                            "name": "X-Api-Key",
                            "displayName": "API Key",
                            "type": "string",
                            "required": false,
                            "example": "apikey",
                            "repeat": false,
                            "description": "API authentication header",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    ],
    "resourceTypes": [
        {
            "basic": {
                "name": "basic",
                "securedBy": [
                    "x-Api-Key"
                ],
                "get": {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                },
                                "application/xml": {
                                    "name": "application/xml"
                                }
                            }
                        },
                        "401": {
                            "code": "401",
                            "description": "Invalid API key or Invalid request, API key required"
                        },
                        "403": {
                            "code": "403",
                            "description": "New Relic API access has not been enabled"
                        },
                        "500": {
                            "code": "500",
                            "description": "An server error occured, please contact New Relic support"
                        }
                    },
                    "securedBy": [
                        "x-Api-Key"
                    ],
                    "method": "get",
                    "__METADATA__": {
                        "optional": true,
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                },
                "put": {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                },
                                "application/xml": {
                                    "name": "application/xml"
                                }
                            }
                        },
                        "401": {
                            "code": "401",
                            "description": "Invalid API key or Invalid request, API key required"
                        },
                        "403": {
                            "code": "403",
                            "description": "New Relic API access has not been enabled"
                        },
                        "422": {
                            "code": "422",
                            "description": "Invalid attributes were sent to update"
                        },
                        "500": {
                            "code": "500",
                            "description": "An server error occured, please contact New Relic support"
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json"
                        },
                        "application/xml": {
                            "name": "application/xml"
                        }
                    },
                    "securedBy": [
                        "x-Api-Key"
                    ],
                    "headers": {
                        "Content-Type": {
                            "name": "Content-Type",
                            "displayName": "Content-Type",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "enum": [
                                "application/json",
                                "application/xml"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "method": "put",
                    "__METADATA__": {
                        "optional": true,
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                },
                "delete": {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                },
                                "application/xml": {
                                    "name": "application/xml"
                                }
                            }
                        },
                        "401": {
                            "code": "401",
                            "description": "Invalid API key or Invalid request, API key required"
                        },
                        "403": {
                            "code": "403",
                            "description": "New Relic API access has not been enabled"
                        },
                        "500": {
                            "code": "500",
                            "description": "An server error occured, please contact New Relic support"
                        }
                    },
                    "securedBy": [
                        "x-Api-Key"
                    ],
                    "method": "delete",
                    "__METADATA__": {
                        "optional": true,
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            }
        },
        {
            "collectionMember": {
                "name": "collectionMember",
                "type": "basic",
                "get": {
                    "responses": {
                        "404": {
                            "code": "404",
                            "description": "No <<name>> found with the given ID"
                        }
                    },
                    "method": "get",
                    "__METADATA__": {
                        "optional": true
                    }
                },
                "put": {
                    "responses": {
                        "404": {
                            "code": "404",
                            "description": "No <<name>> found with the given ID"
                        }
                    },
                    "method": "put",
                    "__METADATA__": {
                        "optional": true
                    }
                },
                "delete": {
                    "responses": {
                        "404": {
                            "code": "404",
                            "description": "No <<name>> found with the given ID"
                        },
                        "409": {
                            "code": "409",
                            "description": "Cannot delete an <<name>> that is still reporting data."
                        }
                    },
                    "method": "delete",
                    "__METADATA__": {
                        "optional": true
                    }
                }
            }
        },
        {
            "collection": {
                "name": "collection",
                "type": "basic",
                "get": {
                    "responses": {
                        "200": {
                            "code": "200"
                        }
                    },
                    "queryParameters": {
                        "page": {
                            "name": "page",
                            "displayName": "page",
                            "type": "integer",
                            "required": false,
                            "repeat": false,
                            "description": "Pagination index",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "method": "get"
                }
            }
        }
    ],
    "resources": [
        {
            "relativeUri": "/applications{mediaTypeExtension}",
            "type": "collection",
            "uriParameters": {
                "mediaTypeExtension": {
                    "name": "mediaTypeExtension",
                    "displayName": "mediaTypeExtension",
                    "type": "string",
                    "required": true,
                    "repeat": false,
                    "enum": [
                        ".json",
                        ".xml"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            },
                            "type": {
                                "insertedAsDefault": true
                            },
                            "required": {
                                "insertedAsDefault": true
                            },
                            "repeat": {
                                "insertedAsDefault": true
                            }
                        }
                    }
                }
            },
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "applicationsList",
                                    "example": "{\n  \"applications\": [\n    {\n      \"application\": {\n        \"id\": 1,\n        \"name\": \"some string\",\n        \"language\": 1,\n        \"health_status\": \"some string\",\n        \"reporting\": true,\n        \"last_reported_at\": \"time\",\n        \"application_summaries\": {\n          \"response_time\": 1.0,\n          \"throughput\": 1.0,\n          \"error_rate\": 1.0,\n          \"apdex_target\": 1.0,\n          \"apdex_score\": 1.0\n        },\n        \"end_user_summaries\": {\n          \"response_time\": 1.0,\n          \"throughput\": 1.0,\n          \"apdex_target\": 1.0,\n          \"apdex_score\": 1.0\n        },\n        \"settings\": {\n          \"app_apdex_threshold\": 1.0,\n          \"end_user_apdex_threshold\": 1.0,\n          \"enable_real_user_monitoring\": true,\n          \"use_server_side_config\": true\n        },\n        \"links\": {\n          \"servers\": [\n            1\n          ],\n          \"application_hosts\": [\n            1\n          ]\n        }\n      }\n    }\n  ]\n}",
                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"applications\": {\n      \"required\": false,\n      \"type\": \"array\",\n      \"items\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"application\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"language\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"health_status\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"reporting\": {\n                \"required\": false,\n                \"type\": \"boolean\"\n              },\n              \"last_reported_at\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"application_summaries\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"response_time\": {\n                    \"required\": false,\n                    \"type\": \"number\"\n                  },\n                  \"throughput\": {\n                    \"required\": false,\n                    \"type\": \"number\"\n                  },\n                  \"error_rate\": {\n                    \"required\": false,\n                    \"type\": \"number\"\n                  },\n                  \"apdex_target\": {\n                    \"required\": false,\n                    \"type\": \"number\"\n                  },\n                  \"apdex_score\": {\n                    \"required\": false,\n                    \"type\": \"number\"\n                  }\n                }\n              },\n              \"end_user_summaries\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"response_time\": {\n                    \"required\": false,\n                    \"type\": \"number\"\n                  },\n                  \"throughput\": {\n                    \"required\": false,\n                    \"type\": \"number\"\n                  },\n                  \"apdex_target\": {\n                    \"required\": false,\n                    \"type\": \"number\"\n                  },\n                  \"apdex_score\": {\n                    \"required\": false,\n                    \"type\": \"number\"\n                  }\n                }\n              },\n              \"settings\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"app_apdex_threshold\": {\n                    \"required\": false,\n                    \"type\": \"number\"\n                  },\n                  \"end_user_apdex_threshold\": {\n                    \"required\": false,\n                    \"type\": \"number\"\n                  },\n                  \"enable_real_user_monitoring\": {\n                    \"required\": false,\n                    \"type\": \"boolean\"\n                  },\n                  \"use_server_side_config\": {\n                    \"required\": false,\n                    \"type\": \"boolean\"\n                  }\n                }\n              },\n              \"links\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"servers\": {\n                    \"required\": false,\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"required\": false,\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"application_hosts\": {\n                    \"required\": false,\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"required\": false,\n                      \"type\": \"integer\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "queryParameters": {
                        "filter[language]": {
                            "name": "filter[language]",
                            "displayName": "filter[language]",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Filter by application language",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "This API endpoint returns a paginated list of the Applications associated with your New Relic account.\nApplications can be filtered by their name, the list of application IDs or the application language as reported by the agents.\n",
                    "method": "get",
                    "is": [
                        {
                            "filterableById": {
                                "name": "application"
                            }
                        },
                        {
                            "filterableByName": {
                                "name": "application"
                            }
                        }
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/applications{mediaTypeExtension}",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "applications{mediaTypeExtension}"
            ]
        },
        {
            "relativeUri": "/applications",
            "resources": [
                {
                    "relativeUri": "/{id}{mediaTypeExtension}",
                    "type": {
                        "collectionMember": {
                            "name": "application"
                        }
                    },
                    "uriParameters": {
                        "id": {
                            "name": "id",
                            "displayName": "id",
                            "type": "integer",
                            "required": true,
                            "repeat": false,
                            "description": "Application ID",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "mediaTypeExtension": {
                            "name": "mediaTypeExtension",
                            "displayName": "mediaTypeExtension",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "enum": [
                                ".json",
                                ".xml"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "application",
                                            "example": "{\n  \"application\": {\n    \"id\": 1,\n    \"name\": \"some string\",\n    \"language\": 1,\n    \"health_status\": \"some string\",\n    \"reporting\": true,\n    \"last_reported_at\": \"time\",\n    \"application_summaries\": {\n      \"response_time\": 1.0,\n      \"throughput\": 1.0,\n      \"error_rate\": 1.0,\n      \"apdex_target\": 1.0,\n      \"apdex_score\": 1.0\n    },\n    \"end_user_summaries\": {\n      \"response_time\": 1.0,\n      \"throughput\": 1.0,\n      \"apdex_target\": 1.0,\n      \"apdex_score\": 1.0\n    },\n    \"settings\": {\n      \"app_apdex_threshold\": 1.0,\n      \"end_user_apdex_threshold\": 1.0,\n      \"enable_real_user_monitoring\": true,\n      \"use_server_side_config\": true\n    },\n    \"links\": {\n      \"servers\": [\n        1\n      ],\n      \"application_hosts\": [\n        1\n      ]\n    }\n  }\n}",
                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"application\": {\n      \"required\": false,\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"name\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"language\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"health_status\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"reporting\": {\n          \"required\": false,\n          \"type\": \"boolean\"\n        },\n        \"last_reported_at\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"application_summaries\": {\n          \"required\": false,\n          \"type\": \"object\",\n          \"properties\": {\n            \"response_time\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"throughput\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"error_rate\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"apdex_target\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"apdex_score\": {\n              \"required\": false,\n              \"type\": \"number\"\n            }\n          }\n        },\n        \"end_user_summaries\": {\n          \"required\": false,\n          \"type\": \"object\",\n          \"properties\": {\n            \"response_time\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"throughput\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"apdex_target\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"apdex_score\": {\n              \"required\": false,\n              \"type\": \"number\"\n            }\n          }\n        },\n        \"settings\": {\n          \"required\": false,\n          \"type\": \"object\",\n          \"properties\": {\n            \"app_apdex_threshold\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"end_user_apdex_threshold\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"enable_real_user_monitoring\": {\n              \"required\": false,\n              \"type\": \"boolean\"\n            },\n            \"use_server_side_config\": {\n              \"required\": false,\n              \"type\": \"boolean\"\n            }\n          }\n        },\n        \"links\": {\n          \"required\": false,\n          \"type\": \"object\",\n          \"properties\": {\n            \"servers\": {\n              \"required\": false,\n              \"type\": \"array\",\n              \"items\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            },\n            \"application_hosts\": {\n              \"required\": false,\n              \"type\": \"array\",\n              \"items\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "description": "This API endpoint returns a single Application, identified its ID.\n",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "application",
                                            "example": "{\n  \"application\": {\n    \"id\": 1,\n    \"name\": \"some string\",\n    \"language\": 1,\n    \"health_status\": \"some string\",\n    \"reporting\": true,\n    \"last_reported_at\": \"time\",\n    \"application_summaries\": {\n      \"response_time\": 1.0,\n      \"throughput\": 1.0,\n      \"error_rate\": 1.0,\n      \"apdex_target\": 1.0,\n      \"apdex_score\": 1.0\n    },\n    \"end_user_summaries\": {\n      \"response_time\": 1.0,\n      \"throughput\": 1.0,\n      \"apdex_target\": 1.0,\n      \"apdex_score\": 1.0\n    },\n    \"settings\": {\n      \"app_apdex_threshold\": 1.0,\n      \"end_user_apdex_threshold\": 1.0,\n      \"enable_real_user_monitoring\": true,\n      \"use_server_side_config\": true\n    },\n    \"links\": {\n      \"servers\": [\n        1\n      ],\n      \"application_hosts\": [\n        1\n      ]\n    }\n  }\n}",
                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"application\": {\n      \"required\": false,\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"name\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"language\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"health_status\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"reporting\": {\n          \"required\": false,\n          \"type\": \"boolean\"\n        },\n        \"last_reported_at\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"application_summaries\": {\n          \"required\": false,\n          \"type\": \"object\",\n          \"properties\": {\n            \"response_time\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"throughput\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"error_rate\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"apdex_target\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"apdex_score\": {\n              \"required\": false,\n              \"type\": \"number\"\n            }\n          }\n        },\n        \"end_user_summaries\": {\n          \"required\": false,\n          \"type\": \"object\",\n          \"properties\": {\n            \"response_time\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"throughput\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"apdex_target\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"apdex_score\": {\n              \"required\": false,\n              \"type\": \"number\"\n            }\n          }\n        },\n        \"settings\": {\n          \"required\": false,\n          \"type\": \"object\",\n          \"properties\": {\n            \"app_apdex_threshold\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"end_user_apdex_threshold\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"enable_real_user_monitoring\": {\n              \"required\": false,\n              \"type\": \"boolean\"\n            },\n            \"use_server_side_config\": {\n              \"required\": false,\n              \"type\": \"boolean\"\n            }\n          }\n        },\n        \"links\": {\n          \"required\": false,\n          \"type\": \"object\",\n          \"properties\": {\n            \"servers\": {\n              \"required\": false,\n              \"type\": \"array\",\n              \"items\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            },\n            \"application_hosts\": {\n              \"required\": false,\n              \"type\": \"array\",\n              \"items\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "applicationPut",
                                    "example": "{\n  \"application\": {\n    \"name\": \"some string\",\n    \"settings\": {\n      \"app_apdex_threshold\": 1.0,\n      \"end_user_apdex_threshold\": 1.0,\n      \"enable_real_user_monitoring\": true\n    }\n  }\n}",
                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"application\": {\n      \"required\": false,\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"settings\": {\n          \"required\": false,\n          \"type\": \"object\",\n          \"properties\": {\n            \"app_apdex_threshold\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"end_user_apdex_threshold\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"enable_real_user_monitoring\": {\n              \"required\": false,\n              \"type\": \"boolean\"\n            }\n          }\n        }\n      }\n    }\n  }\n}"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "description": "This API endpoint allows you to update certain parameters of your application.\nThe input is expected to be in JSON or XML format in the body parameter of the PUT request. The exact schema is defined below. Any extra parameters passed in the body will be ignored.\n",
                            "method": "put",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "application",
                                            "example": "{\n  \"application\": {\n    \"id\": 1,\n    \"name\": \"some string\",\n    \"language\": 1,\n    \"health_status\": \"some string\",\n    \"reporting\": true,\n    \"last_reported_at\": \"time\",\n    \"application_summaries\": {\n      \"response_time\": 1.0,\n      \"throughput\": 1.0,\n      \"error_rate\": 1.0,\n      \"apdex_target\": 1.0,\n      \"apdex_score\": 1.0\n    },\n    \"end_user_summaries\": {\n      \"response_time\": 1.0,\n      \"throughput\": 1.0,\n      \"apdex_target\": 1.0,\n      \"apdex_score\": 1.0\n    },\n    \"settings\": {\n      \"app_apdex_threshold\": 1.0,\n      \"end_user_apdex_threshold\": 1.0,\n      \"enable_real_user_monitoring\": true,\n      \"use_server_side_config\": true\n    },\n    \"links\": {\n      \"servers\": [\n        1\n      ],\n      \"application_hosts\": [\n        1\n      ]\n    }\n  }\n}",
                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"application\": {\n      \"required\": false,\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"name\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"language\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"health_status\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"reporting\": {\n          \"required\": false,\n          \"type\": \"boolean\"\n        },\n        \"last_reported_at\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"application_summaries\": {\n          \"required\": false,\n          \"type\": \"object\",\n          \"properties\": {\n            \"response_time\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"throughput\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"error_rate\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"apdex_target\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"apdex_score\": {\n              \"required\": false,\n              \"type\": \"number\"\n            }\n          }\n        },\n        \"end_user_summaries\": {\n          \"required\": false,\n          \"type\": \"object\",\n          \"properties\": {\n            \"response_time\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"throughput\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"apdex_target\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"apdex_score\": {\n              \"required\": false,\n              \"type\": \"number\"\n            }\n          }\n        },\n        \"settings\": {\n          \"required\": false,\n          \"type\": \"object\",\n          \"properties\": {\n            \"app_apdex_threshold\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"end_user_apdex_threshold\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"enable_real_user_monitoring\": {\n              \"required\": false,\n              \"type\": \"boolean\"\n            },\n            \"use_server_side_config\": {\n              \"required\": false,\n              \"type\": \"boolean\"\n            }\n          }\n        },\n        \"links\": {\n          \"required\": false,\n          \"type\": \"object\",\n          \"properties\": {\n            \"servers\": {\n              \"required\": false,\n              \"type\": \"array\",\n              \"items\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            },\n            \"application_hosts\": {\n              \"required\": false,\n              \"type\": \"array\",\n              \"items\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "description": "This API endpoint deletes an application and all of its reported data.\n**WARNING**: Only applications that have stopped reporting can be deleted. This is an irreversible process which will delete all reported data for this application.\n",
                            "method": "delete",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/{id}{mediaTypeExtension}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{id}{mediaTypeExtension}"
                    ]
                },
                {
                    "relativeUri": "/{application_id}",
                    "uriParameters": {
                        "application_id": {
                            "name": "application_id",
                            "displayName": "application_id",
                            "type": "integer",
                            "required": true,
                            "repeat": false,
                            "description": "Application ID",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "resources": [
                        {
                            "relativeUri": "/metrics{mediaTypeExtension}",
                            "type": "collection",
                            "uriParameters": {
                                "mediaTypeExtension": {
                                    "name": "mediaTypeExtension",
                                    "displayName": "mediaTypeExtension",
                                    "type": "string",
                                    "required": true,
                                    "repeat": false,
                                    "enum": [
                                        ".json",
                                        ".xml"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "methods": [
                                {
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "method": "get",
                                    "is": [
                                        "metricNames"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/metrics{mediaTypeExtension}",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "metrics{mediaTypeExtension}"
                            ]
                        },
                        {
                            "relativeUri": "/metrics",
                            "resources": [
                                {
                                    "relativeUri": "/data{mediaTypeExtension}",
                                    "uriParameters": {
                                        "mediaTypeExtension": {
                                            "name": "mediaTypeExtension",
                                            "displayName": "mediaTypeExtension",
                                            "type": "string",
                                            "required": true,
                                            "repeat": false,
                                            "enum": [
                                                ".json",
                                                ".xml"
                                            ],
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "methods": [
                                        {
                                            "protocols": [
                                                "HTTPS"
                                            ],
                                            "method": "get",
                                            "is": [
                                                "metricData"
                                            ],
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/data{mediaTypeExtension}",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "data{mediaTypeExtension}"
                                    ]
                                }
                            ],
                            "displayName": "/metrics",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "metrics"
                            ]
                        },
                        {
                            "relativeUri": "/hosts{mediaTypeExtension}",
                            "type": "collection",
                            "uriParameters": {
                                "mediaTypeExtension": {
                                    "name": "mediaTypeExtension",
                                    "displayName": "mediaTypeExtension",
                                    "type": "string",
                                    "required": true,
                                    "repeat": false,
                                    "enum": [
                                        ".json",
                                        ".xml"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "hostsList",
                                                    "example": "{\n  \"application_hosts\": [\n    {\n      \"application_host\": {\n        \"id\": 1,\n        \"application_name\": \"some string\",\n        \"host\": \"some string\",\n        \"language\": 1,\n        \"health_status\": \"some string\",\n        \"application_summaries\": {\n          \"response_time\": 1.0,\n          \"throughput\": 1.0,\n          \"error_rate\": 1.0,\n          \"apdex_score\": 1.0\n        },\n        \"end_user_summaries\": {\n          \"response_time\": 1.0,\n          \"throughput\": 1.0,\n          \"apdex_score\": 1.0\n        },\n        \"links\": {\n          \"application\": 1,\n          \"application_instances\": [\n            1\n          ],\n          \"server\": 1\n        }\n      }\n    }\n  ]\n}",
                                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"application_hosts\": {\n      \"required\": false,\n      \"type\": \"array\",\n      \"items\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"application_host\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"application_name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"host\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"language\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"health_status\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"application_summaries\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"response_time\": {\n                    \"required\": false,\n                    \"type\": \"number\"\n                  },\n                  \"throughput\": {\n                    \"required\": false,\n                    \"type\": \"number\"\n                  },\n                  \"error_rate\": {\n                    \"required\": false,\n                    \"type\": \"number\"\n                  },\n                  \"apdex_score\": {\n                    \"required\": false,\n                    \"type\": \"number\"\n                  }\n                }\n              },\n              \"end_user_summaries\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"response_time\": {\n                    \"required\": false,\n                    \"type\": \"number\"\n                  },\n                  \"throughput\": {\n                    \"required\": false,\n                    \"type\": \"number\"\n                  },\n                  \"apdex_score\": {\n                    \"required\": false,\n                    \"type\": \"number\"\n                  }\n                }\n              },\n              \"links\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"application\": {\n                    \"required\": false,\n                    \"type\": \"integer\"\n                  },\n                  \"application_instances\": {\n                    \"required\": false,\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"required\": false,\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"server\": {\n                    \"required\": false,\n                    \"type\": \"integer\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "description": "This API endpoint returns a paginated list of hosts associated with the given application.\nApplication hosts can be filtered by hostname, or the list of application host IDs.\n",
                                    "method": "get",
                                    "is": [
                                        {
                                            "filterableById": {
                                                "name": "host"
                                            }
                                        },
                                        "filterableByHostname"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/hosts{mediaTypeExtension}",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "hosts{mediaTypeExtension}"
                            ]
                        },
                        {
                            "relativeUri": "/hosts",
                            "resources": [
                                {
                                    "relativeUri": "/{host_id}{mediaTypeExtension}",
                                    "type": {
                                        "collectionMember": {
                                            "name": "application host"
                                        }
                                    },
                                    "uriParameters": {
                                        "host_id": {
                                            "name": "host_id",
                                            "displayName": "host_id",
                                            "type": "integer",
                                            "required": true,
                                            "repeat": false,
                                            "description": "Application host ID",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "mediaTypeExtension": {
                                            "name": "mediaTypeExtension",
                                            "displayName": "mediaTypeExtension",
                                            "type": "string",
                                            "required": true,
                                            "repeat": false,
                                            "enum": [
                                                ".json",
                                                ".xml"
                                            ],
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "methods": [
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "host",
                                                            "example": "{\n  \"application_host\": {\n    \"id\": 1,\n    \"application_name\": \"some string\",\n    \"host\": \"some string\",\n    \"language\": 1,\n    \"health_status\": \"some string\",\n    \"application_summaries\": {\n      \"response_time\": 1.0,\n      \"throughput\": 1.0,\n      \"error_rate\": 1.0,\n      \"apdex_score\": 1.0\n    },\n    \"end_user_summaries\": {\n      \"response_time\": 1.0,\n      \"throughput\": 1.0,\n      \"apdex_score\": 1.0\n    },\n    \"links\": {\n      \"application\": 1,\n      \"application_instances\": [\n        1\n      ],\n      \"server\": 1\n    }\n  }\n}",
                                                            "schemaContent": "host"
                                                        }
                                                    }
                                                }
                                            },
                                            "protocols": [
                                                "HTTPS"
                                            ],
                                            "description": "This API endpoint returns a single application host, identified by its ID.\n",
                                            "method": "get",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/{host_id}{mediaTypeExtension}",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "{host_id}{mediaTypeExtension}"
                                    ]
                                },
                                {
                                    "relativeUri": "/{host_id}",
                                    "uriParameters": {
                                        "host_id": {
                                            "name": "host_id",
                                            "displayName": "host_id",
                                            "type": "string",
                                            "required": true,
                                            "repeat": false,
                                            "__METADATA__": {
                                                "calculated": true,
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "resources": [
                                        {
                                            "relativeUri": "/metrics{mediaTypeExtension}",
                                            "type": "collection",
                                            "uriParameters": {
                                                "mediaTypeExtension": {
                                                    "name": "mediaTypeExtension",
                                                    "displayName": "mediaTypeExtension",
                                                    "type": "string",
                                                    "required": true,
                                                    "repeat": false,
                                                    "enum": [
                                                        ".json",
                                                        ".xml"
                                                    ],
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "methods": [
                                                {
                                                    "protocols": [
                                                        "HTTPS"
                                                    ],
                                                    "method": "get",
                                                    "is": [
                                                        "metricNames"
                                                    ],
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "protocols": {
                                                                "calculated": true
                                                            }
                                                        }
                                                    }
                                                }
                                            ],
                                            "displayName": "/metrics{mediaTypeExtension}",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    }
                                                }
                                            },
                                            "relativeUriPathSegments": [
                                                "metrics{mediaTypeExtension}"
                                            ]
                                        },
                                        {
                                            "relativeUri": "/metrics",
                                            "resources": [
                                                {
                                                    "relativeUri": "/data{mediaTypeExtension}",
                                                    "uriParameters": {
                                                        "mediaTypeExtension": {
                                                            "name": "mediaTypeExtension",
                                                            "displayName": "mediaTypeExtension",
                                                            "type": "string",
                                                            "required": true,
                                                            "repeat": false,
                                                            "enum": [
                                                                ".json",
                                                                ".xml"
                                                            ],
                                                            "__METADATA__": {
                                                                "primitiveValuesMeta": {
                                                                    "displayName": {
                                                                        "calculated": true
                                                                    },
                                                                    "type": {
                                                                        "insertedAsDefault": true
                                                                    },
                                                                    "required": {
                                                                        "insertedAsDefault": true
                                                                    },
                                                                    "repeat": {
                                                                        "insertedAsDefault": true
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "methods": [
                                                        {
                                                            "protocols": [
                                                                "HTTPS"
                                                            ],
                                                            "method": "get",
                                                            "is": [
                                                                "metricData"
                                                            ],
                                                            "__METADATA__": {
                                                                "primitiveValuesMeta": {
                                                                    "protocols": {
                                                                        "calculated": true
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "displayName": "/data{mediaTypeExtension}",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            }
                                                        }
                                                    },
                                                    "relativeUriPathSegments": [
                                                        "data{mediaTypeExtension}"
                                                    ]
                                                }
                                            ],
                                            "displayName": "/metrics",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    }
                                                }
                                            },
                                            "relativeUriPathSegments": [
                                                "metrics"
                                            ]
                                        }
                                    ],
                                    "displayName": "/{host_id}",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "{host_id}"
                                    ]
                                }
                            ],
                            "displayName": "/hosts",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "hosts"
                            ]
                        },
                        {
                            "relativeUri": "/instances{mediaTypeExtension}",
                            "type": "collection",
                            "uriParameters": {
                                "mediaTypeExtension": {
                                    "name": "mediaTypeExtension",
                                    "displayName": "mediaTypeExtension",
                                    "type": "string",
                                    "required": true,
                                    "repeat": false,
                                    "enum": [
                                        ".json",
                                        ".xml"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "instancesList",
                                                    "example": "{\r\n  \"application_instances\": [\r\n    {\r\n      \"application_instance\": {\r\n        \"id\": 1,\r\n        \"application_name\": \"some string\",\r\n        \"host\": \"some string\",\r\n        \"port\": 1,\r\n        \"language\": 1,\r\n        \"health_status\": \"some string\",\r\n        \"application_summaries\": {\r\n          \"response_time\": 1.0,\r\n          \"throughput\": 1.0,\r\n          \"error_rate\": 1.0,\r\n          \"apdex_score\": 1.0\r\n        },\r\n        \"end_user_summaries\": {\r\n          \"response_time\": 1.0,\r\n          \"throughput\": 1.0,\r\n          \"apdex_score\": 1.0\r\n        },\r\n        \"links\": {\r\n          \"application\": 1,\r\n          \"application_host\": 1,\r\n          \"server\": 1\r\n        }\r\n      }\r\n    }\r\n  ]\r\n}\r\n",
                                                    "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": false,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"application_instances\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"application_instance\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"application_name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"host\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"port\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"language\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"health_status\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"application_summaries\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"response_time\": {\r\n                    \"required\": false,\r\n                    \"type\": \"number\"\r\n                  },\r\n                  \"throughput\": {\r\n                    \"required\": false,\r\n                    \"type\": \"number\"\r\n                  },\r\n                  \"error_rate\": {\r\n                    \"required\": false,\r\n                    \"type\": \"number\"\r\n                  },\r\n                  \"apdex_score\": {\r\n                    \"required\": false,\r\n                    \"type\": \"number\"\r\n                  }\r\n                }\r\n              },\r\n              \"end_user_summaries\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"response_time\": {\r\n                    \"required\": false,\r\n                    \"type\": \"number\"\r\n                  },\r\n                  \"throughput\": {\r\n                    \"required\": false,\r\n                    \"type\": \"number\"\r\n                  },\r\n                  \"apdex_score\": {\r\n                    \"required\": false,\r\n                    \"type\": \"number\"\r\n                  }\r\n                }\r\n              },\r\n              \"links\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"application\": {\r\n                    \"required\": false,\r\n                    \"type\": \"integer\"\r\n                  },\r\n                  \"application_host\": {\r\n                    \"required\": false,\r\n                    \"type\": \"integer\"\r\n                  },\r\n                  \"server\": {\r\n                    \"required\": false,\r\n                    \"type\": \"integer\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "description": "This API endpoint returns a paginated list of instances associated with the given application.\nApplication instances can be filtered by hostname, or the list of application instance IDs.\n",
                                    "method": "get",
                                    "is": [
                                        {
                                            "filterableById": {
                                                "name": "application instance"
                                            }
                                        },
                                        "filterableByHostname"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/instances{mediaTypeExtension}",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "instances{mediaTypeExtension}"
                            ]
                        },
                        {
                            "relativeUri": "/instances",
                            "resources": [
                                {
                                    "relativeUri": "/{instance_id}{mediaTypeExtension}",
                                    "type": {
                                        "collectionMember": {
                                            "name": "application instance"
                                        }
                                    },
                                    "uriParameters": {
                                        "instance_id": {
                                            "name": "instance_id",
                                            "displayName": "instance_id",
                                            "type": "integer",
                                            "required": true,
                                            "repeat": false,
                                            "description": "Application instance ID",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "mediaTypeExtension": {
                                            "name": "mediaTypeExtension",
                                            "displayName": "mediaTypeExtension",
                                            "type": "string",
                                            "required": true,
                                            "repeat": false,
                                            "enum": [
                                                ".json",
                                                ".xml"
                                            ],
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "methods": [
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "instance",
                                                            "example": "{\r\n  \"application_instance\": {\r\n    \"id\": 1,\r\n    \"application_name\": \"some string\",\r\n    \"host\": \"some string\",\r\n    \"port\": 1,\r\n    \"language\": 1,\r\n    \"health_status\": \"some string\",\r\n    \"application_summaries\": {\r\n      \"response_time\": 1.0,\r\n      \"throughput\": 1.0,\r\n      \"error_rate\": 1.0,\r\n      \"apdex_score\": 1.0\r\n    },\r\n    \"end_user_summaries\": {\r\n      \"response_time\": 1.0,\r\n      \"throughput\": 1.0,\r\n      \"apdex_score\": 1.0\r\n    },\r\n    \"links\": {\r\n      \"application\": 1,\r\n      \"application_host\": 1,\r\n      \"server\": 1\r\n    }\r\n  }\r\n}\r\n",
                                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": false,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"application_instance\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"application_name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"host\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"port\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"language\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"health_status\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"application_summaries\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"response_time\": {\r\n              \"required\": false,\r\n              \"type\": \"number\"\r\n            },\r\n            \"throughput\": {\r\n              \"required\": false,\r\n              \"type\": \"number\"\r\n            },\r\n            \"error_rate\": {\r\n              \"required\": false,\r\n              \"type\": \"number\"\r\n            },\r\n            \"apdex_score\": {\r\n              \"required\": false,\r\n              \"type\": \"number\"\r\n            }\r\n          }\r\n        },\r\n        \"end_user_summaries\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"response_time\": {\r\n              \"required\": false,\r\n              \"type\": \"number\"\r\n            },\r\n            \"throughput\": {\r\n              \"required\": false,\r\n              \"type\": \"number\"\r\n            },\r\n            \"apdex_score\": {\r\n              \"required\": false,\r\n              \"type\": \"number\"\r\n            }\r\n          }\r\n        },\r\n        \"links\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"application\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"application_host\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"server\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
                                                        }
                                                    }
                                                }
                                            },
                                            "protocols": [
                                                "HTTPS"
                                            ],
                                            "description": "This API endpoint returns a single application instance, identified by its ID.\n",
                                            "method": "get",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/{instance_id}{mediaTypeExtension}",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "{instance_id}{mediaTypeExtension}"
                                    ]
                                },
                                {
                                    "relativeUri": "/{instance_id}",
                                    "uriParameters": {
                                        "instance_id": {
                                            "name": "instance_id",
                                            "displayName": "instance_id",
                                            "type": "string",
                                            "required": true,
                                            "repeat": false,
                                            "__METADATA__": {
                                                "calculated": true,
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "resources": [
                                        {
                                            "relativeUri": "/metrics{mediaTypeExtension}",
                                            "type": "collection",
                                            "uriParameters": {
                                                "mediaTypeExtension": {
                                                    "name": "mediaTypeExtension",
                                                    "displayName": "mediaTypeExtension",
                                                    "type": "string",
                                                    "required": true,
                                                    "repeat": false,
                                                    "enum": [
                                                        ".json",
                                                        ".xml"
                                                    ],
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "methods": [
                                                {
                                                    "protocols": [
                                                        "HTTPS"
                                                    ],
                                                    "method": "get",
                                                    "is": [
                                                        "metricNames"
                                                    ],
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "protocols": {
                                                                "calculated": true
                                                            }
                                                        }
                                                    }
                                                }
                                            ],
                                            "displayName": "/metrics{mediaTypeExtension}",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    }
                                                }
                                            },
                                            "relativeUriPathSegments": [
                                                "metrics{mediaTypeExtension}"
                                            ]
                                        },
                                        {
                                            "relativeUri": "/metrics",
                                            "resources": [
                                                {
                                                    "relativeUri": "/data{mediaTypeExtension}",
                                                    "uriParameters": {
                                                        "mediaTypeExtension": {
                                                            "name": "mediaTypeExtension",
                                                            "displayName": "mediaTypeExtension",
                                                            "type": "string",
                                                            "required": true,
                                                            "repeat": false,
                                                            "enum": [
                                                                ".json",
                                                                ".xml"
                                                            ],
                                                            "__METADATA__": {
                                                                "primitiveValuesMeta": {
                                                                    "displayName": {
                                                                        "calculated": true
                                                                    },
                                                                    "type": {
                                                                        "insertedAsDefault": true
                                                                    },
                                                                    "required": {
                                                                        "insertedAsDefault": true
                                                                    },
                                                                    "repeat": {
                                                                        "insertedAsDefault": true
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "methods": [
                                                        {
                                                            "protocols": [
                                                                "HTTPS"
                                                            ],
                                                            "method": "get",
                                                            "is": [
                                                                "metricData"
                                                            ],
                                                            "__METADATA__": {
                                                                "primitiveValuesMeta": {
                                                                    "protocols": {
                                                                        "calculated": true
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "displayName": "/data{mediaTypeExtension}",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            }
                                                        }
                                                    },
                                                    "relativeUriPathSegments": [
                                                        "data{mediaTypeExtension}"
                                                    ]
                                                }
                                            ],
                                            "displayName": "/metrics",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    }
                                                }
                                            },
                                            "relativeUriPathSegments": [
                                                "metrics"
                                            ]
                                        }
                                    ],
                                    "displayName": "/{instance_id}",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "{instance_id}"
                                    ]
                                }
                            ],
                            "displayName": "/instances",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "instances"
                            ]
                        }
                    ],
                    "displayName": "/{application_id}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{application_id}"
                    ]
                }
            ],
            "displayName": "/applications",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "applications"
            ]
        },
        {
            "relativeUri": "/servers{mediaTypeExtension}",
            "type": "collection",
            "uriParameters": {
                "mediaTypeExtension": {
                    "name": "mediaTypeExtension",
                    "displayName": "mediaTypeExtension",
                    "type": "string",
                    "required": true,
                    "repeat": false,
                    "enum": [
                        ".json",
                        ".xml"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            },
                            "type": {
                                "insertedAsDefault": true
                            },
                            "required": {
                                "insertedAsDefault": true
                            },
                            "repeat": {
                                "insertedAsDefault": true
                            }
                        }
                    }
                }
            },
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "serversList",
                                    "example": "{\n  \"servers\": [\n    {\n      \"server\": {\n        \"id\": 1,\n        \"account_id\": 1,\n        \"display_name\": \"some string\",\n        \"host\": \"some string\",\n        \"reporting\": true,\n        \"last_reported_at\": \"time\",\n        \"summaries\": {\n          \"cpu\": 1.0,\n          \"cpu_stolen\": 1.0,\n          \"disk_io\": 1.0,\n          \"memory\": 1.0,\n          \"memory_used\": 1,\n          \"memory_total\": 1,\n          \"fullest_disk\": 1.0,\n          \"fullest_disk_free\": 1\n        }\n      }\n    }\n  ]\n}",
                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"servers\": {\n      \"required\": false,\n      \"type\": \"array\",\n      \"items\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"server\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"account_id\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"display_name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"host\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"reporting\": {\n                \"required\": false,\n                \"type\": \"boolean\"\n              },\n              \"last_reported_at\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"summaries\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"cpu\": {\n                    \"required\": false,\n                    \"type\": \"number\"\n                  },\n                  \"cpu_stolen\": {\n                    \"required\": false,\n                    \"type\": \"number\"\n                  },\n                  \"disk_io\": {\n                    \"required\": false,\n                    \"type\": \"number\"\n                  },\n                  \"memory\": {\n                    \"required\": false,\n                    \"type\": \"number\"\n                  },\n                  \"memory_used\": {\n                    \"required\": false,\n                    \"type\": \"integer\"\n                  },\n                  \"memory_total\": {\n                    \"required\": false,\n                    \"type\": \"integer\"\n                  },\n                  \"fullest_disk\": {\n                    \"required\": false,\n                    \"type\": \"number\"\n                  },\n                  \"fullest_disk_free\": {\n                    \"required\": false,\n                    \"type\": \"integer\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "description": "This API endpoint returns a paginated list of the Servers associated with your New Relic account.\nServers can be filtered by their name/hostname, or the list of server IDs.\n",
                    "method": "get",
                    "is": [
                        {
                            "filterableById": {
                                "name": "server"
                            }
                        },
                        {
                            "filterableByName": {
                                "name": "server"
                            }
                        }
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/servers{mediaTypeExtension}",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "servers{mediaTypeExtension}"
            ]
        },
        {
            "relativeUri": "/servers",
            "resources": [
                {
                    "relativeUri": "/{server_id}{mediaTypeExtension}",
                    "type": {
                        "collectionMember": {
                            "name": "server"
                        }
                    },
                    "uriParameters": {
                        "server_id": {
                            "name": "server_id",
                            "displayName": "server_id",
                            "type": "integer",
                            "required": true,
                            "repeat": false,
                            "description": "Server ID",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "mediaTypeExtension": {
                            "name": "mediaTypeExtension",
                            "displayName": "mediaTypeExtension",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "enum": [
                                ".json",
                                ".xml"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "server",
                                            "example": "{\n  \"server\": {\n    \"id\": 1,\n    \"account_id\": 1,\n    \"display_name\": \"some string\",\n    \"host\": \"some string\",\n    \"reporting\": true,\n    \"last_reported_at\": \"time\",\n    \"summaries\": {\n      \"cpu\": 1.0,\n      \"cpu_stolen\": 1.0,\n      \"disk_io\": 1.0,\n      \"memory\": 1.0,\n      \"memory_used\": 1,\n      \"memory_total\": 1,\n      \"fullest_disk\": 1.0,\n      \"fullest_disk_free\": 1\n    }\n  }\n}",
                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"server\": {\n      \"required\": false,\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"account_id\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"display_name\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"host\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"reporting\": {\n          \"required\": false,\n          \"type\": \"boolean\"\n        },\n        \"last_reported_at\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"summaries\": {\n          \"required\": false,\n          \"type\": \"object\",\n          \"properties\": {\n            \"cpu\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"cpu_stolen\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"disk_io\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"memory\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"memory_used\": {\n              \"required\": false,\n              \"type\": \"integer\"\n            },\n            \"memory_total\": {\n              \"required\": false,\n              \"type\": \"integer\"\n            },\n            \"fullest_disk\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"fullest_disk_free\": {\n              \"required\": false,\n              \"type\": \"integer\"\n            }\n          }\n        }\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "description": "This API endpoint returns a single Server, identified by ID.\n",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "server",
                                            "example": "{\n  \"server\": {\n    \"id\": 1,\n    \"account_id\": 1,\n    \"display_name\": \"some string\",\n    \"host\": \"some string\",\n    \"reporting\": true,\n    \"last_reported_at\": \"time\",\n    \"summaries\": {\n      \"cpu\": 1.0,\n      \"cpu_stolen\": 1.0,\n      \"disk_io\": 1.0,\n      \"memory\": 1.0,\n      \"memory_used\": 1,\n      \"memory_total\": 1,\n      \"fullest_disk\": 1.0,\n      \"fullest_disk_free\": 1\n    }\n  }\n}",
                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"server\": {\n      \"required\": false,\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"account_id\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"display_name\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"host\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"reporting\": {\n          \"required\": false,\n          \"type\": \"boolean\"\n        },\n        \"last_reported_at\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"summaries\": {\n          \"required\": false,\n          \"type\": \"object\",\n          \"properties\": {\n            \"cpu\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"cpu_stolen\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"disk_io\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"memory\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"memory_used\": {\n              \"required\": false,\n              \"type\": \"integer\"\n            },\n            \"memory_total\": {\n              \"required\": false,\n              \"type\": \"integer\"\n            },\n            \"fullest_disk\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"fullest_disk_free\": {\n              \"required\": false,\n              \"type\": \"integer\"\n            }\n          }\n        }\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "serverPut",
                                    "example": "{\n  \"server\": {\n    \"display_name\": \"some string\"\n  }\n}",
                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"server\": {\n      \"required\": false,\n      \"type\": \"object\",\n      \"properties\": {\n        \"display_name\": {\n          \"required\": false,\n          \"type\": \"string\"\n        }\n      }\n    }\n  }\n}"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "description": "This API endpoint allows you to rename your server.\nThe input is expected to be in JSON or XML format in the body parameter of the PUT request. The exact schema is defined below. Any extra parameters passed in the body will be ignored.\n",
                            "method": "put",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "server",
                                            "example": "{\n  \"server\": {\n    \"id\": 1,\n    \"account_id\": 1,\n    \"display_name\": \"some string\",\n    \"host\": \"some string\",\n    \"reporting\": true,\n    \"last_reported_at\": \"time\",\n    \"summaries\": {\n      \"cpu\": 1.0,\n      \"cpu_stolen\": 1.0,\n      \"disk_io\": 1.0,\n      \"memory\": 1.0,\n      \"memory_used\": 1,\n      \"memory_total\": 1,\n      \"fullest_disk\": 1.0,\n      \"fullest_disk_free\": 1\n    }\n  }\n}",
                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"server\": {\n      \"required\": false,\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"account_id\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"display_name\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"host\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"reporting\": {\n          \"required\": false,\n          \"type\": \"boolean\"\n        },\n        \"last_reported_at\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"summaries\": {\n          \"required\": false,\n          \"type\": \"object\",\n          \"properties\": {\n            \"cpu\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"cpu_stolen\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"disk_io\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"memory\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"memory_used\": {\n              \"required\": false,\n              \"type\": \"integer\"\n            },\n            \"memory_total\": {\n              \"required\": false,\n              \"type\": \"integer\"\n            },\n            \"fullest_disk\": {\n              \"required\": false,\n              \"type\": \"number\"\n            },\n            \"fullest_disk_free\": {\n              \"required\": false,\n              \"type\": \"integer\"\n            }\n          }\n        }\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "description": "This API endpoint deletes a server and all of its reported data.\n**WARNING**: Only servers that have stopped reporting can be deleted. This is an irreversible process which will delete all reported data for this server.\n",
                            "method": "delete",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/{server_id}{mediaTypeExtension}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{server_id}{mediaTypeExtension}"
                    ]
                },
                {
                    "relativeUri": "/{server_id}",
                    "uriParameters": {
                        "server_id": {
                            "name": "server_id",
                            "displayName": "server_id",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "resources": [
                        {
                            "relativeUri": "/metrics{mediaTypeExtension}",
                            "type": "collection",
                            "uriParameters": {
                                "mediaTypeExtension": {
                                    "name": "mediaTypeExtension",
                                    "displayName": "mediaTypeExtension",
                                    "type": "string",
                                    "required": true,
                                    "repeat": false,
                                    "enum": [
                                        ".json",
                                        ".xml"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "methods": [
                                {
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "method": "get",
                                    "is": [
                                        "metricNames"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/metrics{mediaTypeExtension}",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "metrics{mediaTypeExtension}"
                            ]
                        },
                        {
                            "relativeUri": "/metrics",
                            "resources": [
                                {
                                    "relativeUri": "/data{mediaTypeExtension}",
                                    "type": "collection",
                                    "uriParameters": {
                                        "mediaTypeExtension": {
                                            "name": "mediaTypeExtension",
                                            "displayName": "mediaTypeExtension",
                                            "type": "string",
                                            "required": true,
                                            "repeat": false,
                                            "enum": [
                                                ".json",
                                                ".xml"
                                            ],
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "methods": [
                                        {
                                            "protocols": [
                                                "HTTPS"
                                            ],
                                            "method": "get",
                                            "is": [
                                                "metricData"
                                            ],
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/data{mediaTypeExtension}",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "data{mediaTypeExtension}"
                                    ]
                                }
                            ],
                            "displayName": "/metrics",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "metrics"
                            ]
                        }
                    ],
                    "displayName": "/{server_id}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{server_id}"
                    ]
                }
            ],
            "displayName": "/servers",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "servers"
            ]
        },
        {
            "relativeUri": "/users{mediaTypeExtension}",
            "type": "collection",
            "uriParameters": {
                "mediaTypeExtension": {
                    "name": "mediaTypeExtension",
                    "displayName": "mediaTypeExtension",
                    "type": "string",
                    "required": true,
                    "repeat": false,
                    "enum": [
                        ".json",
                        ".xml"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            },
                            "type": {
                                "insertedAsDefault": true
                            },
                            "required": {
                                "insertedAsDefault": true
                            },
                            "repeat": {
                                "insertedAsDefault": true
                            }
                        }
                    }
                }
            },
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "usersList",
                                    "example": "{\n  \"users\": [\n    {\n      \"user\": {\n        \"id\": 1,\n        \"first_name\": \"some string\",\n        \"last_name\": \"some string\",\n        \"email\": \"some string\",\n        \"role\": \"some string\"\n      }\n    }\n  ]\n}",
                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"users\": {\n      \"required\": false,\n      \"type\": \"array\",\n      \"items\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"user\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"first_name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"last_name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"email\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"role\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "queryParameters": {
                        "filter[email]": {
                            "name": "filter[email]",
                            "displayName": "filter[email]",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Filter by user email",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Show a list of all users\n",
                    "method": "get",
                    "is": [
                        {
                            "filterableById": {
                                "name": "user"
                            }
                        }
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/users{mediaTypeExtension}",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "users{mediaTypeExtension}"
            ]
        },
        {
            "relativeUri": "/users",
            "resources": [
                {
                    "relativeUri": "/{id}{mediaTypeExtension}",
                    "type": {
                        "collectionMember": {
                            "name": "user"
                        }
                    },
                    "uriParameters": {
                        "id": {
                            "name": "id",
                            "displayName": "id",
                            "type": "integer",
                            "required": true,
                            "repeat": false,
                            "description": "User ID",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "mediaTypeExtension": {
                            "name": "mediaTypeExtension",
                            "displayName": "mediaTypeExtension",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "enum": [
                                ".json",
                                ".xml"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "user",
                                            "example": "{\n  \"user\": {\n    \"id\": 1,\n    \"first_name\": \"some string\",\n    \"last_name\": \"some string\",\n    \"email\": \"some string\",\n    \"role\": \"some string\"\n  }\n}",
                                            "schemaContent": "user"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "description": "This API endpoint returns a single user, identified by ID.\n",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/{id}{mediaTypeExtension}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{id}{mediaTypeExtension}"
                    ]
                }
            ],
            "displayName": "/users",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "users"
            ]
        },
        {
            "relativeUri": "/alert_policies{mediaTypeExtension}",
            "type": "collection",
            "uriParameters": {
                "mediaTypeExtension": {
                    "name": "mediaTypeExtension",
                    "displayName": "mediaTypeExtension",
                    "type": "string",
                    "required": true,
                    "repeat": false,
                    "enum": [
                        ".json",
                        ".xml"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            },
                            "type": {
                                "insertedAsDefault": true
                            },
                            "required": {
                                "insertedAsDefault": true
                            },
                            "repeat": {
                                "insertedAsDefault": true
                            }
                        }
                    }
                }
            },
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "alertPoliciesList",
                                    "example": "{\n  \"alert_policies\": [\n    {\n      \"alert_policy\": {\n        \"id\": 1,\n        \"type\": \"some string\",\n        \"name\": \"some string\",\n        \"enabled\": true,\n        \"conditions\": [\n          {\n            \"id\": 1,\n            \"type\": \"some string\",\n            \"severity\": \"some string\",\n            \"threshold\": 1.0,\n            \"trigger_minutes\": 1,\n            \"enabled\": true\n          }\n        ],\n        \"links\": {\n          \"notification_channels\": [\n            1\n          ],\n          \"applications\": [\n            1\n          ],\n          \"key_transactions\": [\n            1\n          ],\n          \"servers\": [\n            1\n          ]\n        }\n      }\n    }\n  ]\n}",
                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"alert_policies\": {\n      \"required\": false,\n      \"type\": \"array\",\n      \"items\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"alert_policy\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"enabled\": {\n                \"required\": false,\n                \"type\": \"boolean\"\n              },\n              \"conditions\": {\n                \"required\": false,\n                \"type\": \"array\",\n                \"items\": {\n                  \"required\": false,\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"enabled\": {\n                      \"required\": false,\n                      \"type\": \"boolean\"\n                    },\n                    \"id\": {\n                      \"required\": false,\n                      \"type\": \"integer\"\n                    },\n                    \"severity\": {\n                      \"required\": false,\n                      \"type\": \"string\"\n                    },\n                    \"threshold\": {\n                      \"required\": false,\n                      \"type\": \"number\"\n                    },\n                    \"trigger_minutes\": {\n                      \"required\": false,\n                      \"type\": \"integer\"\n                    },\n                    \"type\": {\n                      \"required\": false,\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              },\n              \"links\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"notification_channels\": {\n                    \"required\": false,\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"required\": false,\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"applications\": {\n                    \"required\": false,\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"required\": false,\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"key_transactions\": {\n                    \"required\": false,\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"required\": false,\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"servers\": {\n                    \"required\": false,\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"required\": false,\n                      \"type\": \"integer\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "queryParameters": {
                        "filter[enabled]": {
                            "name": "filter[enabled]",
                            "displayName": "filter[enabled]",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "description": "Select only enabled/disabled policies",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "This API endpoint returns a paginated list of the alert policies associated with your New Relic account.\nAlert policies can be filtered by their name, list of IDs, type (application, key_transaction, or server) or whether or not policies are archived (defaults to filtering archived policies).\n",
                    "method": "get",
                    "is": [
                        {
                            "filterableById": {
                                "name": "policy"
                            }
                        },
                        {
                            "filterableByName": {
                                "name": "policy"
                            }
                        },
                        {
                            "filterableByType": {
                                "name": "policy"
                            }
                        }
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/alert_policies{mediaTypeExtension}",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "alert_policies{mediaTypeExtension}"
            ]
        },
        {
            "relativeUri": "/alert_policies",
            "resources": [
                {
                    "relativeUri": "/{id}{mediaTypeExtension}",
                    "type": {
                        "collectionMember": {
                            "name": "aliert policy"
                        }
                    },
                    "uriParameters": {
                        "id": {
                            "name": "id",
                            "displayName": "id",
                            "type": "integer",
                            "required": true,
                            "repeat": false,
                            "description": "Alert policy ID",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "mediaTypeExtension": {
                            "name": "mediaTypeExtension",
                            "displayName": "mediaTypeExtension",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "enum": [
                                ".json",
                                ".xml"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "alertPolicy",
                                            "example": "{\n  \"alert_policy\": {\n    \"id\": 1,\n    \"type\": \"some string\",\n    \"name\": \"some string\",\n    \"enabled\": true,\n    \"conditions\": [\n      {\n        \"id\": 1,\n        \"type\": \"some string\",\n        \"severity\": \"some string\",\n        \"threshold\": 1.0,\n        \"trigger_minutes\": 1,\n        \"enabled\": true\n      }\n    ],\n    \"links\": {\n      \"notification_channels\": [\n        1\n      ],\n      \"applications\": [\n        1\n      ],\n      \"key_transactions\": [\n        1\n      ],\n      \"servers\": [\n        1\n      ]\n    }\n  }\n}",
                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"alert_policy\": {\n      \"required\": false,\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"type\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"enabled\": {\n          \"required\": false,\n          \"type\": \"boolean\"\n        },\n        \"conditions\": {\n          \"required\": false,\n          \"type\": \"array\",\n          \"items\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"enabled\": {\n                \"required\": false,\n                \"type\": \"boolean\"\n              },\n              \"id\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"severity\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"threshold\": {\n                \"required\": false,\n                \"type\": \"number\"\n              },\n              \"trigger_minutes\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          }\n        },\n        \"links\": {\n          \"required\": false,\n          \"type\": \"object\",\n          \"properties\": {\n            \"notification_channels\": {\n              \"required\": false,\n              \"type\": \"array\",\n              \"items\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            },\n            \"applications\": {\n              \"required\": false,\n              \"type\": \"array\",\n              \"items\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            },\n            \"key_transactions\": {\n              \"required\": false,\n              \"type\": \"array\",\n              \"items\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            },\n            \"servers\": {\n              \"required\": false,\n              \"type\": \"array\",\n              \"items\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "description": "This API endpoint returns a single alert policy, identified by ID.\n",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "alertPolicy",
                                            "example": "{\n  \"alert_policy\": {\n    \"id\": 1,\n    \"type\": \"some string\",\n    \"name\": \"some string\",\n    \"enabled\": true,\n    \"conditions\": [\n      {\n        \"id\": 1,\n        \"type\": \"some string\",\n        \"severity\": \"some string\",\n        \"threshold\": 1.0,\n        \"trigger_minutes\": 1,\n        \"enabled\": true\n      }\n    ],\n    \"links\": {\n      \"notification_channels\": [\n        1\n      ],\n      \"applications\": [\n        1\n      ],\n      \"key_transactions\": [\n        1\n      ],\n      \"servers\": [\n        1\n      ]\n    }\n  }\n}",
                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"alert_policy\": {\n      \"required\": false,\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"type\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"enabled\": {\n          \"required\": false,\n          \"type\": \"boolean\"\n        },\n        \"conditions\": {\n          \"required\": false,\n          \"type\": \"array\",\n          \"items\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"enabled\": {\n                \"required\": false,\n                \"type\": \"boolean\"\n              },\n              \"id\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"severity\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"threshold\": {\n                \"required\": false,\n                \"type\": \"number\"\n              },\n              \"trigger_minutes\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          }\n        },\n        \"links\": {\n          \"required\": false,\n          \"type\": \"object\",\n          \"properties\": {\n            \"notification_channels\": {\n              \"required\": false,\n              \"type\": \"array\",\n              \"items\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            },\n            \"applications\": {\n              \"required\": false,\n              \"type\": \"array\",\n              \"items\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            },\n            \"key_transactions\": {\n              \"required\": false,\n              \"type\": \"array\",\n              \"items\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            },\n            \"servers\": {\n              \"required\": false,\n              \"type\": \"array\",\n              \"items\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "alertPolicyPut",
                                    "example": "{\n  \"alert_policy\": {\n    \"name\": \"some string\",\n    \"enabled\": true,\n    \"conditions\": [\n      {\n        \"id\": 1,\n        \"threshold\": 1.0,\n        \"trigger_minutes\": 1,\n        \"enabled\": true\n      }\n    ],\n    \"links\": {\n      \"notification_channels\": [\n        1\n      ],\n      \"applications\": [\n        1\n      ],\n      \"key_transactions\": [\n        1\n      ],\n      \"servers\": [\n        1\n      ]\n    }\n  }\n}",
                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"alert_policy\": {\n      \"required\": false,\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"enabled\": {\n          \"required\": false,\n          \"type\": \"boolean\"\n        },\n        \"conditions\": {\n          \"required\": false,\n          \"type\": \"array\",\n          \"items\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"enabled\": {\n                \"required\": false,\n                \"type\": \"boolean\"\n              },\n              \"id\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"threshold\": {\n                \"required\": false,\n                \"type\": \"number\"\n              },\n              \"trigger_minutes\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          }\n        },\n        \"links\": {\n          \"required\": false,\n          \"type\": \"object\",\n          \"properties\": {\n            \"notification_channels\": {\n              \"required\": false,\n              \"type\": \"array\",\n              \"items\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            },\n            \"applications\": {\n              \"required\": false,\n              \"type\": \"array\",\n              \"items\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            },\n            \"key_transactions\": {\n              \"required\": false,\n              \"type\": \"array\",\n              \"items\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            },\n            \"servers\": {\n              \"required\": false,\n              \"type\": \"array\",\n              \"items\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "description": "This API endpoint allows you to update your alert policies.\nThe input is expected to be in JSON or XML format in the body parameters of the PUT request. The exact schema is defined below. Any extra parameters passed in the body will be ignored.\n**NOTE**: When updating alertable and notification channel links, the list sent replaces the existing list. Invalid values will be ignored but an empty array will result in alertables/channels being reset.\n",
                            "method": "put",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/{id}{mediaTypeExtension}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{id}{mediaTypeExtension}"
                    ]
                }
            ],
            "displayName": "/alert_policies",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "alert_policies"
            ]
        },
        {
            "relativeUri": "/notification_channels{mediaTypeExtension}",
            "type": "collection",
            "uriParameters": {
                "mediaTypeExtension": {
                    "name": "mediaTypeExtension",
                    "displayName": "mediaTypeExtension",
                    "type": "string",
                    "required": true,
                    "repeat": false,
                    "enum": [
                        ".json",
                        ".xml"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            },
                            "type": {
                                "insertedAsDefault": true
                            },
                            "required": {
                                "insertedAsDefault": true
                            },
                            "repeat": {
                                "insertedAsDefault": true
                            }
                        }
                    }
                }
            },
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "notificationChannelsList",
                                    "example": "{\n  \"notification_channels\": [\n    {\n      \"notification_channel\": {\n        \"id\": 1,\n        \"type\": \"some string\",\n        \"downtime_only\": true,\n        \"url\": \"some string\",\n        \"name\": \"some string\",\n        \"description\": \"some string\",\n        \"email\": \"some string\",\n        \"subdomain\": \"some string\",\n        \"service\": \"some string\",\n        \"mobile_alerts\": true,\n        \"email_alerts\": true,\n        \"room\": \"some string\",\n        \"links\": {\n          \"notification_channels\": [\n            1\n          ],\n          \"user\": 1\n        }\n      }\n    }\n  ]\n}",
                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"notification_channels\": {\n      \"required\": false,\n      \"type\": \"array\",\n      \"items\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"notification_channel\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"downtime_only\": {\n                \"required\": false,\n                \"type\": \"boolean\"\n              },\n              \"url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"description\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"email\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"subdomain\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"service\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"mobile_alerts\": {\n                \"required\": false,\n                \"type\": \"boolean\"\n              },\n              \"email_alerts\": {\n                \"required\": false,\n                \"type\": \"boolean\"\n              },\n              \"room\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"links\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"notification_channels\": {\n                    \"required\": false,\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"required\": false,\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"user\": {\n                    \"required\": false,\n                    \"type\": \"integer\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "description": "This API endpoint returns a paginated list of the notification channels associated with your New Relic account.\nNotification channels can be filtered by their type or a list of IDs.\n",
                    "method": "get",
                    "is": [
                        {
                            "filterableById": {
                                "name": "notification channel"
                            }
                        },
                        {
                            "filterableByType": {
                                "name": "notification channel"
                            }
                        }
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/notification_channels{mediaTypeExtension}",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "notification_channels{mediaTypeExtension}"
            ]
        },
        {
            "relativeUri": "/notification_channels",
            "resources": [
                {
                    "relativeUri": "/{id}{mediaTypeExtension}",
                    "type": {
                        "collectionMember": {
                            "name": "notification channel"
                        }
                    },
                    "uriParameters": {
                        "id": {
                            "name": "id",
                            "displayName": "id",
                            "type": "integer",
                            "required": true,
                            "repeat": false,
                            "description": "User ID",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "mediaTypeExtension": {
                            "name": "mediaTypeExtension",
                            "displayName": "mediaTypeExtension",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "enum": [
                                ".json",
                                ".xml"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "notificationChannel",
                                            "example": "{\n  \"notification_channel\": {\n    \"id\": 1,\n    \"type\": \"some string\",\n    \"downtime_only\": true,\n    \"url\": \"some string\",\n    \"name\": \"some string\",\n    \"description\": \"some string\",\n    \"email\": \"some string\",\n    \"subdomain\": \"some string\",\n    \"service\": \"some string\",\n    \"mobile_alerts\": true,\n    \"email_alerts\": true,\n    \"room\": \"some string\",\n    \"links\": {\n      \"notification_channels\": [\n        1\n      ],\n      \"user\": 1\n    }\n  }\n}",
                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"notification_channel\": {\n      \"required\": false,\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"type\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"downtime_only\": {\n          \"required\": false,\n          \"type\": \"boolean\"\n        },\n        \"url\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"email\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"subdomain\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"service\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"mobile_alerts\": {\n          \"required\": false,\n          \"type\": \"boolean\"\n        },\n        \"email_alerts\": {\n          \"required\": false,\n          \"type\": \"boolean\"\n        },\n        \"room\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"links\": {\n          \"required\": false,\n          \"type\": \"object\",\n          \"properties\": {\n            \"notification_channels\": {\n              \"required\": false,\n              \"type\": \"array\",\n              \"items\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            },\n            \"user\": {\n              \"required\": false,\n              \"type\": \"integer\"\n            }\n          }\n        }\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "description": "This API endpoint returns a single notification channel, identified by ID.\n",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/{id}{mediaTypeExtension}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{id}{mediaTypeExtension}"
                    ]
                }
            ],
            "displayName": "/notification_channels",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "notification_channels"
            ]
        },
        {
            "relativeUri": "/key_transactions{mediaTypeExtension}",
            "type": "collection",
            "uriParameters": {
                "mediaTypeExtension": {
                    "name": "mediaTypeExtension",
                    "displayName": "mediaTypeExtension",
                    "type": "string",
                    "required": true,
                    "repeat": false,
                    "enum": [
                        ".json",
                        ".xml"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            },
                            "type": {
                                "insertedAsDefault": true
                            },
                            "required": {
                                "insertedAsDefault": true
                            },
                            "repeat": {
                                "insertedAsDefault": true
                            }
                        }
                    }
                }
            },
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "keyTransactionsList",
                                    "example": "{\r\n  \"key_transaction\" : {\r\n    \"id\" : \"integer\" ,\r\n    \"name\" : \"string\" ,\r\n    \"transaction_name\" : \"string\" ,\r\n    \"application_summaries\" : {\r\n      \"response_time\" : \"float\" ,\r\n      \"throughput\" : \"float\" ,\r\n      \"error_rate\" : \"float\" ,\r\n      \"apdex_target\" : \"float\" ,\r\n      \"apdex_score\" : \"float\"\r\n    } ,\r\n    \"end_user_summaries\" : {\r\n      \"response_time\" : \"float\" ,\r\n      \"throughput\" : \"float\" ,\r\n      \"apdex_target\" : \"float\" ,\r\n      \"apdex_score\" : \"float\"\r\n    } ,\r\n    \"links\" : {\r\n      \"application\" : \"integer\"\r\n    }\r\n  }\r\n}",
                                    "schemaContent": "{\r\n  \"required\" : true ,\r\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\r\n  \"type\" : \"object\" ,\r\n  \"properties\" : {\r\n    \"key_transaction\" : {\r\n      \"type\" : \"object\" ,\r\n      \"required\" : false ,\r\n      \"properties\" : {\r\n        \"id\" : {\r\n          \"type\" : \"string\" ,\r\n          \"required\" : false\r\n        } ,\r\n        \"name\" : {\r\n          \"type\" : \"string\" ,\r\n          \"required\" : false\r\n        } ,\r\n        \"transaction_name\" : {\r\n          \"type\" : \"string\" ,\r\n          \"required\" : false\r\n        } ,\r\n        \"application_summaries\" : {\r\n          \"type\" : \"object\" ,\r\n          \"required\" : false ,\r\n          \"properties\" : {\r\n            \"response_time\" : {\r\n              \"type\" : \"string\" ,\r\n              \"required\" : false\r\n            } ,\r\n            \"throughput\" : {\r\n              \"type\" : \"string\" ,\r\n              \"required\" : false\r\n            } ,\r\n            \"error_rate\" : {\r\n              \"type\" : \"string\" ,\r\n              \"required\" : false\r\n            } ,\r\n            \"apdex_target\" : {\r\n              \"type\" : \"string\" ,\r\n              \"required\" : false\r\n            } ,\r\n            \"apdex_score\" : {\r\n              \"type\" : \"string\" ,\r\n              \"required\" : false\r\n            }\r\n          }\r\n        } ,\r\n        \"end_user_summaries\" : {\r\n          \"type\" : \"object\" ,\r\n          \"required\" : false ,\r\n          \"properties\" : {\r\n            \"response_time\" : {\r\n              \"type\" : \"string\" ,\r\n              \"required\" : false\r\n            } ,\r\n            \"throughput\" : {\r\n              \"type\" : \"string\" ,\r\n              \"required\" : false\r\n            } ,\r\n            \"apdex_target\" : {\r\n              \"type\" : \"string\" ,\r\n              \"required\" : false\r\n            } ,\r\n            \"apdex_score\" : {\r\n              \"type\" : \"string\" ,\r\n              \"required\" : false\r\n            }\r\n          }\r\n        } ,\r\n        \"links\" : {\r\n          \"type\" : \"object\" ,\r\n          \"required\" : false ,\r\n          \"properties\" : {\r\n            \"application\" : {\r\n              \"type\" : \"string\" ,\r\n              \"required\" : false\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "description": "This API endpoint returns a paginated list of the key transactions associated with your New Relic account.\n",
                    "method": "get",
                    "is": [
                        {
                            "filterableById": {
                                "name": "key transaction"
                            }
                        },
                        {
                            "filterableByName": {
                                "name": "key transaction"
                            }
                        }
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/key_transactions{mediaTypeExtension}",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "key_transactions{mediaTypeExtension}"
            ]
        },
        {
            "relativeUri": "/key_transactions",
            "resources": [
                {
                    "relativeUri": "/{id}{mediaTypeExtension}",
                    "type": {
                        "collectionMember": {
                            "name": "key transaction"
                        }
                    },
                    "uriParameters": {
                        "id": {
                            "name": "id",
                            "displayName": "id",
                            "type": "integer",
                            "required": true,
                            "repeat": false,
                            "description": "Key Transaction ID",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "mediaTypeExtension": {
                            "name": "mediaTypeExtension",
                            "displayName": "mediaTypeExtension",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "enum": [
                                ".json",
                                ".xml"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "keyTransactionsList",
                                            "example": "{\r\n  \"key_transaction\" : {\r\n    \"id\" : \"integer\" ,\r\n    \"name\" : \"string\" ,\r\n    \"transaction_name\" : \"string\" ,\r\n    \"application_summaries\" : {\r\n      \"response_time\" : \"float\" ,\r\n      \"throughput\" : \"float\" ,\r\n      \"error_rate\" : \"float\" ,\r\n      \"apdex_target\" : \"float\" ,\r\n      \"apdex_score\" : \"float\"\r\n    } ,\r\n    \"end_user_summaries\" : {\r\n      \"response_time\" : \"float\" ,\r\n      \"throughput\" : \"float\" ,\r\n      \"apdex_target\" : \"float\" ,\r\n      \"apdex_score\" : \"float\"\r\n    } ,\r\n    \"links\" : {\r\n      \"application\" : \"integer\"\r\n    }\r\n  }\r\n}",
                                            "schemaContent": "{\r\n  \"required\" : true ,\r\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\r\n  \"type\" : \"object\" ,\r\n  \"properties\" : {\r\n    \"key_transaction\" : {\r\n      \"type\" : \"object\" ,\r\n      \"required\" : false ,\r\n      \"properties\" : {\r\n        \"id\" : {\r\n          \"type\" : \"string\" ,\r\n          \"required\" : false\r\n        } ,\r\n        \"name\" : {\r\n          \"type\" : \"string\" ,\r\n          \"required\" : false\r\n        } ,\r\n        \"transaction_name\" : {\r\n          \"type\" : \"string\" ,\r\n          \"required\" : false\r\n        } ,\r\n        \"application_summaries\" : {\r\n          \"type\" : \"object\" ,\r\n          \"required\" : false ,\r\n          \"properties\" : {\r\n            \"response_time\" : {\r\n              \"type\" : \"string\" ,\r\n              \"required\" : false\r\n            } ,\r\n            \"throughput\" : {\r\n              \"type\" : \"string\" ,\r\n              \"required\" : false\r\n            } ,\r\n            \"error_rate\" : {\r\n              \"type\" : \"string\" ,\r\n              \"required\" : false\r\n            } ,\r\n            \"apdex_target\" : {\r\n              \"type\" : \"string\" ,\r\n              \"required\" : false\r\n            } ,\r\n            \"apdex_score\" : {\r\n              \"type\" : \"string\" ,\r\n              \"required\" : false\r\n            }\r\n          }\r\n        } ,\r\n        \"end_user_summaries\" : {\r\n          \"type\" : \"object\" ,\r\n          \"required\" : false ,\r\n          \"properties\" : {\r\n            \"response_time\" : {\r\n              \"type\" : \"string\" ,\r\n              \"required\" : false\r\n            } ,\r\n            \"throughput\" : {\r\n              \"type\" : \"string\" ,\r\n              \"required\" : false\r\n            } ,\r\n            \"apdex_target\" : {\r\n              \"type\" : \"string\" ,\r\n              \"required\" : false\r\n            } ,\r\n            \"apdex_score\" : {\r\n              \"type\" : \"string\" ,\r\n              \"required\" : false\r\n            }\r\n          }\r\n        } ,\r\n        \"links\" : {\r\n          \"type\" : \"object\" ,\r\n          \"required\" : false ,\r\n          \"properties\" : {\r\n            \"application\" : {\r\n              \"type\" : \"string\" ,\r\n              \"required\" : false\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "description": "This endpoint returns a single key transaction, identified by ID\n",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/{id}{mediaTypeExtension}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{id}{mediaTypeExtension}"
                    ]
                }
            ],
            "displayName": "/key_transactions",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "key_transactions"
            ]
        }
    ],
    "documentation": [
        {
            "title": "Headline",
            "content": "New Relic is the all-in-one web and mobile application performance management provider for the cloud and the datacenter. More than 70,000 organizations use them to optimize over 100 billion metrics in production each day. They provide 24x7 real user monitoring and code-level diagnostics for production apps deployed on dedicated infrastructures, the cloud, or hybrid environments and real time end-to-end monitoring for your iOS and Android app's. New Relic provides support for applications written in Ruby, Python, PHP, Java, .NET and Node.js and related frameworks. New Relic also partners with leading cloud management, platform, and hosting vendors to provide their customers with instant visibility into the performance of deployed applications. New Relic also has an open SaaS platform that enables its community of developers, partners and customers to build plugins using open API's to monitor any technology of their choice, from databases, networks, caching layers and more."
        }
    ],
    "__METADATA__": {
        "primitiveValuesMeta": {
            "protocols": {
                "calculated": true
            }
        }
    }
}