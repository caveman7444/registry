{
    "title": "23andMe",
    "version": "1",
    "baseUri": "https://api.23andme.com/{version}",
    "baseUriParameters": {
        "version": {
            "name": "version",
            "displayName": "version",
            "type": "string",
            "required": true,
            "repeat": false,
            "enum": [
                "1"
            ],
            "__METADATA__": {
                "calculated": true,
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    },
                    "type": {
                        "insertedAsDefault": true
                    },
                    "required": {
                        "insertedAsDefault": true
                    },
                    "repeat": {
                        "insertedAsDefault": true
                    },
                    "enum": {
                        "calculated": true
                    }
                }
            }
        }
    },
    "protocols": [
        "HTTPS"
    ],
    "schemas": [
        {
            "usersResponse": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"profiles\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"genotyped\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"services\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"object\" ,\n                  \"properties\" : {\n                    \"description\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"label\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"id\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    }\n                  }\n                }\n              ]\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "profileResponse": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"first_name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"last_name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"profiles\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"first_name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"last_name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "pictureResponse": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"url_size_40_40\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"url_size_60_60\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"url_size_200_200\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "featureResponse": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"url\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"link_id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"feature_id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"status\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "introductionResponse": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"introduction\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"status\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"visibility\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"message_text\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"can_send\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "createIntroductionResponse": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"introduction\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"status\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"visibility\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"message_text\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
        },
        {
            "genotypeResponse": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"genotypes\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"location\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"call\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "phenotypeResponse": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"phenotype_id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"value\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"profile_id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "genomeResponse": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"genome\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "haplogroupsResponse": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"maternal_terminal_snps\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"rsid\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"rcrs_position\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    } ,\n    \"paternal_terminal_snps\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"rsid\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"snp\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    } ,\n    \"maternal\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"paternal\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "ancestryResponse": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"ancestry\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"label\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"proportion\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"unassigned\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"sub_populations\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"label\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"proportion\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                }\n              }\n            } , {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"label\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"proportion\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"unassigned\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"sub_populations\" : {\n                  \"type\" : \"array\" ,\n                  \"required\" : false ,\n                  \"items\" : [\n                    {\n                      \"type\" : \"object\" ,\n                      \"properties\" : {\n                        \"label\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"proportion\" : {\n                          \"type\" : \"number\" ,\n                          \"required\" : false\n                        } ,\n                        \"unassigned\" : {\n                          \"type\" : \"number\" ,\n                          \"required\" : false\n                        } ,\n                        \"sub_populations\" : {\n                          \"type\" : \"array\" ,\n                          \"required\" : false ,\n                          \"items\" : [\n                            {\n                              \"type\" : \"object\" ,\n                              \"properties\" : {\n                                \"label\" : {\n                                  \"type\" : \"string\" ,\n                                  \"required\" : false\n                                } ,\n                                \"proportion\" : {\n                                  \"type\" : \"number\" ,\n                                  \"required\" : false\n                                }\n                              }\n                            }\n                          ]\n                        }\n                      }\n                    }\n                  ]\n                }\n              }\n            }\n          ]\n        }\n      }\n    }\n  }\n}"
        },
        {
            "familyMembersResponse": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"limit\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"offset\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"count\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"members\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"profile_id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"first_name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"middle_name\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false\n            } ,\n            \"last_name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"birth_surname\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false\n            } ,\n            \"name_suffix\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"nickname\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"sex\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"adopted\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"deceased\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"partners\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"string\"\n                }\n              ]\n            } ,\n            \"parents\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"string\"\n                }\n              ]\n            } ,\n            \"events\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"object\" ,\n                  \"properties\" : {\n                    \"type\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"date\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"end_date\" : {\n                      \"type\" : \"object\" ,\n                      \"required\" : false\n                    } ,\n                    \"location\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } , {\n                  \"type\" : \"object\" ,\n                  \"properties\" : {\n                    \"type\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"date\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"end_date\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"location\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                }\n              ]\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "neanderthalResponse": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"neanderthal\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"proportion\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"ancestry\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"average\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"percentile\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
        },
        {
            "relativesResponse": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"count\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"relatives\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"match_id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"first_name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"last_name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"sex\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"birth_year\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"birthplace\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"ancestry\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"family_locations\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"string\"\n                }\n              ]\n            } ,\n            \"family_surnames\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"string\"\n                }\n              ]\n            } ,\n            \"shared_segments\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"relationship\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"predicted_relationship_code\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"user_relationship_code\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false\n            } ,\n            \"range\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"string\"\n                }\n              ]\n            } ,\n            \"similarity\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"maternal_haplogroup\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"paternal_haplogroup\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"maternal_side\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"paternal_side\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"notes\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"added\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"updated\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"residence\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"intro_status\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"share_status\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"profile_picture_urls\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"url_size_40_40\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "risksResponse": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"risks\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"description\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"report_id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"population_risk\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"risk\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "carriersResponse": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"carriers\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"description\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"report_id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"mutations\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "drugResponsesResponse": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"drug_responses\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"description\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"report_id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"status\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "traitsResponse": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"traits\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"description\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"report_id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"possible_traits\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"string\"\n                }\n              ]\n            } ,\n            \"trait\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "gfrsResponse": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"genetic_risk_factors\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"mutations\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"description\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"report_id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    } ,\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "introductionStateResponse": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"introduction\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"status\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"visibility\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"message_text\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"can_send\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
        }
    ],
    "securedBy": [
        "oauth_2_0"
    ],
    "securitySchemes": [
        {
            "oauth_2_0": {
                "name": "oauth_2_0",
                "type": "OAuth 2.0",
                "describedBy": {
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "queryParameters": {
                        "access_token": {
                            "name": "access_token",
                            "displayName": "access_token",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"Authorization\" header\n",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                },
                "settings": {
                    "accessTokenUri": "https://api.23andme.com/token/",
                    "authorizationUri": "https://api.23andme.com/authorize/",
                    "authorizationGrants": [
                        "code"
                    ],
                    "scopes": [
                        "genomes",
                        "basic",
                        "names",
                        "email",
                        "haplogroups",
                        "ancestry",
                        "family_tree",
                        "relatives",
                        "relatives:write",
                        "analyses",
                        "profile:read",
                        "profile:write",
                        "publish",
                        "introduction:read",
                        "introduction:write",
                        "phenotypes:write:sex"
                    ]
                }
            }
        }
    ],
    "resources": [
        {
            "relativeUri": "/user",
            "securedBy": [
                "oauth_2_0"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "usersResponse",
                                    "example": "{\r\n    \"id\": \"a42e94634e3f7683\",\r\n    \"profiles\": [\r\n        {\r\n            \"genotyped\": true,\r\n            \"id\": \"c4480ba411939067\",\r\n            \"services\": [\r\n                {\r\n                    \"description\": \"Health\",\r\n                    \"label\": \"pgs_health\",\r\n                    \"id\": 1\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"profiles\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"genotyped\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"services\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"object\" ,\n                  \"properties\" : {\n                    \"description\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"label\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"id\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    }\n                  }\n                }\n              ]\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "queryParameters": {
                        "email": {
                            "name": "email",
                            "displayName": "email",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "services": {
                            "name": "services",
                            "displayName": "services",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Gets the user id, and a list of profiles (an account can have multiple genotyped people) with ids, whether or not they're genotyped.\n\nThe optional email parameter can be used to request the email for this account. Requires the \"email\" scope.\n\nThe optional services parameter can be used to request the endpoint to return what services are available to the profiles.\n\nA service model object is made up of a unique service id, a service label, and a user-readable description of the service. All genotyped profiles should have \"pgs_ancestry\". Customers with access to health data will have \"pgs_health\". Demo profiles will have no services.\n\nThis endpoint is great for using an app anonymously because there is no personally identifying information.\n",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/user",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "user"
            ]
        },
        {
            "relativeUri": "/names/{profile_id}",
            "securedBy": [
                "oauth_2_0"
            ],
            "uriParameters": {
                "profile_id": {
                    "name": "profile_id",
                    "displayName": "profile_id",
                    "type": "string",
                    "required": true,
                    "repeat": false,
                    "__METADATA__": {
                        "calculated": true,
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            },
                            "type": {
                                "insertedAsDefault": true
                            },
                            "required": {
                                "insertedAsDefault": true
                            },
                            "repeat": {
                                "insertedAsDefault": true
                            }
                        }
                    }
                }
            },
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "profileResponse",
                                    "example": "{\r\n    \"first_name\": \"Gregor\",\r\n    \"last_name\": \"Mendel\",\r\n    \"id\": \"a42e94634e3f7683\",\r\n    \"profiles\": [\r\n        {\r\n            \"first_name\": \"Johann\",\r\n            \"last_name\": \"Mendel\",\r\n            \"id\": \"c4480ba411939067\"\r\n        }\r\n    ]\r\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"first_name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"last_name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"profiles\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"first_name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"last_name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "description": "For the user and user's profile, gets first and last names. If your user wants to remain anonymous, you shouldn't request this scope. You can optionally filter by profile_id to get the names for just that profile.",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/names/{profile_id}",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "names",
                "{profile_id}"
            ]
        },
        {
            "relativeUri": "/profile_picture/{profile_id}",
            "securedBy": [
                "oauth_2_0"
            ],
            "uriParameters": {
                "profile_id": {
                    "name": "profile_id",
                    "displayName": "profile_id",
                    "type": "string",
                    "required": true,
                    "repeat": false,
                    "__METADATA__": {
                        "calculated": true,
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            },
                            "type": {
                                "insertedAsDefault": true
                            },
                            "required": {
                                "insertedAsDefault": true
                            },
                            "repeat": {
                                "insertedAsDefault": true
                            }
                        }
                    }
                }
            },
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "pictureResponse",
                                    "example": "{\n  \"id\" : \"c4480ba411939067\" ,\n  \"url_size_40_40\" : \"https://...cfff05bbb_T.0_0_299_299.jpg\" ,\n  \"url_size_60_60\" : \"https://...cfff05bbb_S.0_0_299_299.jpg\" ,\n  \"url_size_200_200\" : \"https://...ff05bbb_M.0_0_299_299.jpg\"\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"url_size_40_40\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"url_size_60_60\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"url_size_200_200\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "description": "Gets the user's profile picture for a few sizes",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                },
                {
                    "responses": {
                        "201": {
                            "code": "201",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "pictureResponse",
                                    "example": "{\n  \"id\" : \"c4480ba411939067\" ,\n  \"url_size_40_40\" : \"https://...cfff05bbb_T.0_0_299_299.jpg\" ,\n  \"url_size_60_60\" : \"https://...cfff05bbb_S.0_0_299_299.jpg\" ,\n  \"url_size_200_200\" : \"https://...ff05bbb_M.0_0_299_299.jpg\"\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"url_size_40_40\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"url_size_60_60\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"url_size_200_200\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "body": {
                        "multipart/form-data": {
                            "name": "multipart/form-data",
                            "formParameters": {
                                "image": {
                                    "name": "image",
                                    "displayName": "image",
                                    "type": "file",
                                    "required": false,
                                    "repeat": false,
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "description": "Uploads a picture, < 5MB, and crops it.  For the POST, set Content-Type: multipart/form-data and upload the image with parameter <image>.",
                    "method": "post",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/profile_picture/{profile_id}",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "profile_picture",
                "{profile_id}"
            ]
        },
        {
            "relativeUri": "/publish/{profile_id}/{feature_id}",
            "securedBy": [
                "oauth_2_0"
            ],
            "uriParameters": {
                "profile_id": {
                    "name": "profile_id",
                    "displayName": "profile_id",
                    "type": "string",
                    "required": true,
                    "repeat": false,
                    "__METADATA__": {
                        "calculated": true,
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            },
                            "type": {
                                "insertedAsDefault": true
                            },
                            "required": {
                                "insertedAsDefault": true
                            },
                            "repeat": {
                                "insertedAsDefault": true
                            }
                        }
                    }
                },
                "feature_id": {
                    "name": "feature_id",
                    "displayName": "feature_id",
                    "type": "string",
                    "required": true,
                    "repeat": false,
                    "__METADATA__": {
                        "calculated": true,
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            },
                            "type": {
                                "insertedAsDefault": true
                            },
                            "required": {
                                "insertedAsDefault": true
                            },
                            "repeat": {
                                "insertedAsDefault": true
                            }
                        }
                    }
                }
            },
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "featureResponse",
                                    "example": "{\r\n    \"id\": \"c4480ba411939067\",\r\n    \"url\": \"https://www.23andme.com/published/.../\",\r\n    \"link_id\": \"925v3n92424g4\",\r\n    \"feature_id\": \"neanderthal\",\r\n    \"status\": \"unpublished\"\r\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"url\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"link_id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"feature_id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"status\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "description": "Users can publish and share certain features publicly, for example on social networks, with a special link. Anyone with the link, if active, can view that person's results for the following feature_ids:\n\nmusic: DNA Music \nneanderthal: Neanderthal Ancestry \nmaternal: Maternal Haplogroup \ncomposition: Ancestry Composition \npaternal: Paternal Haplogroup \n",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                },
                {
                    "responses": {
                        "201": {
                            "code": "201",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "featureResponse",
                                    "example": "{\r\n    \"id\": \"c4480ba411939067\",\r\n    \"url\": \"https://www.23andme.com/published/.../\",\r\n    \"link_id\": \"925v3n92424g4\",\r\n    \"feature_id\": \"neanderthal\",\r\n    \"status\": \"unpublished\"\r\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"url\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"link_id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"feature_id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"status\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "description": "Users can publish and share certain features publicly, for example on social networks, with a special link. Anyone with the link, if active, can view that person's results for the following feature_ids:\n\nmusic: DNA Music \nneanderthal: Neanderthal Ancestry \nmaternal: Maternal Haplogroup \ncomposition: Ancestry Composition \npaternal: Paternal Haplogroup \n",
                    "method": "post",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/{link_id}",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "uriParameters": {
                        "link_id": {
                            "name": "link_id",
                            "displayName": "link_id",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "featureResponse",
                                            "example": "{\r\n    \"id\": \"c4480ba411939067\",\r\n    \"url\": \"https://www.23andme.com/published/.../\",\r\n    \"link_id\": \"925v3n92424g4\",\r\n    \"feature_id\": \"neanderthal\",\r\n    \"status\": \"unpublished\"\r\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"url\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"link_id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"feature_id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"status\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Users can publish and share certain features publicly, for example on social networks, with a special link. Anyone with the link, if active, can view that person's results for the following feature_ids:\n\nmusic: DNA Music \nneanderthal: Neanderthal Ancestry \nmaternal: Maternal Haplogroup \ncomposition: Ancestry Composition \npaternal: Paternal Haplogroup \n",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "featureResponse",
                                            "example": "{\r\n    \"id\": \"c4480ba411939067\",\r\n    \"url\": \"https://www.23andme.com/published/.../\",\r\n    \"link_id\": \"925v3n92424g4\",\r\n    \"feature_id\": \"neanderthal\",\r\n    \"status\": \"unpublished\"\r\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"url\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"link_id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"feature_id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"status\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Users can publish and share certain features publicly, for example on social networks, with a special link. This method set status to published or unpublished.",
                            "method": "put",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/{link_id}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{link_id}"
                    ]
                }
            ],
            "displayName": "/publish/{profile_id}/{feature_id}",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "publish",
                "{profile_id}",
                "{feature_id}"
            ]
        },
        {
            "relativeUri": "/introduction/{profile_id}/{match_id}",
            "securedBy": [
                "oauth_2_0"
            ],
            "uriParameters": {
                "profile_id": {
                    "name": "profile_id",
                    "displayName": "profile_id",
                    "type": "string",
                    "required": true,
                    "repeat": false,
                    "__METADATA__": {
                        "calculated": true,
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            },
                            "type": {
                                "insertedAsDefault": true
                            },
                            "required": {
                                "insertedAsDefault": true
                            },
                            "repeat": {
                                "insertedAsDefault": true
                            }
                        }
                    }
                },
                "match_id": {
                    "name": "match_id",
                    "displayName": "match_id",
                    "type": "string",
                    "required": true,
                    "repeat": false,
                    "__METADATA__": {
                        "calculated": true,
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            },
                            "type": {
                                "insertedAsDefault": true
                            },
                            "required": {
                                "insertedAsDefault": true
                            },
                            "repeat": {
                                "insertedAsDefault": true
                            }
                        }
                    }
                }
            },
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "introductionResponse",
                                    "example": "{\n  \"introduction\" : {\n    \"status\" : \"received\" ,\n    \"visibility\" : \"genome\" ,\n    \"message_text\" : \"Hi! Want to explore?\"\n  } ,\n  \"can_send\" : false\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"introduction\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"status\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"visibility\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"message_text\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"can_send\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "description": "Users can see the status of introductions between themselves and other relatives as identified by /relatives. If an introduction exists between the two users, the endpoint returns a JSON representation of the introduction and can_send. If can_send is true, the user can send another introduction via a POST /introduction.\n\nPossible values for status are those settable by the PATCH method as well as sent and received. An introduction is sent before being accepted, rejected, read, or cancelled. An introduction is sent and received at exactly the same time depending on whether the person querying is the sender or the recipient.\n\nStatuses listed above are relative to you. For instance, if user B sends an introduction to you, cancels it, and then you query this endpoint, you will find that no introduction exists between you and user B. If user B then queries the endpoint, she will find an introduction between herself and you with the status cancelled.\n\nYou may send an introduction if there is no outstanding introduction between you and the user, if you've sent and cancelled an introduction, or if an invitation between you and the user has been rejected. A minimum time interval between introduction resends is also imposed. These cases are abstracted away for you -- just check if can_send is true.\n\nIf there is no outstanding introduction between you and the user represented by match_id, then you will receive an empty dict.\n",
                    "method": "patch",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                },
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "createIntroductionResponse",
                                    "example": "{\n  \"introduction\" : {\n    \"status\" : \"sent\" ,\n    \"visibility\" : \"genome\" ,\n    \"message_text\" : \"Hi! Want to explore?\"\n  }\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"introduction\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"status\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"visibility\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"message_text\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "queryParameters": {
                        "message_text": {
                            "name": "message_text",
                            "displayName": "message_text",
                            "type": "string",
                            "required": false,
                            "default": "Hi, Through our shared DNA, 23andMe has identified us as relatives. Our predicted relationship is <your_relationship>. Would you like to explore our relationship?",
                            "example": "Hi! Want to explore?",
                            "repeat": false,
                            "description": "Introduction message",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "visibility": {
                            "name": "visibility",
                            "displayName": "visibility",
                            "type": "string",
                            "required": false,
                            "default": "anonymous",
                            "example": "genome",
                            "repeat": false,
                            "description": "Visibility",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Users can send introductions to other users who we've identified as genetic matches per the /relatives endpoint. The match_id must be a match of the profile_id (it must show up in /relatives endpoint.)\n\nParameters are message_text and visibility.\n\nmessage_text may be customized, and defaults to:\nHi, Through our shared DNA, 23andMe has identified us as relatives. Our predicted relationship is <your_relationship>. Would you like to explore our relationship?\n\nValues for visibility are the same as those of the PATCH method. If no parameter is supplied, visibility defaults to anonymous.\n",
                    "method": "post",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                },
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "introductionStateResponse",
                                    "example": "{\n  \"introduction\" : {\n    \"status\" : \"received\" ,\n    \"visibility\" : \"genome\" ,\n    \"message_text\" : \"Hi! Want to explore?\"\n  } ,\n  \"can_send\" : false\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"introduction\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"status\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"visibility\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"message_text\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"can_send\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "description": "Users can see the status of introductions between themselves and other relatives as identified by /relatives. If an introduction exists between the two users, the endpoint returns a JSON representation of the introduction and can_send. If can_send is true, the user can send another introduction via a POST /introduction.\n\nPossible values for status are those settable by the PATCH method as well as sent and received. An introduction is sent before being accepted, rejected, read, or cancelled. An introduction is sent and received at exactly the same time depending on whether the person querying is the sender or the recipient.\n\nStatuses listed above are relative to you. For instance, if user B sends an introduction to you, cancels it, and then you query this endpoint, you will find that no introduction exists between you and user B. If user B then queries the endpoint, she will find an introduction between herself and you with the status cancelled.\n\nYou may send an introduction if there is no outstanding introduction between you and the user, if you've sent and cancelled an introduction, or if an invitation between you and the user has been rejected. A minimum time interval between introduction resends is also imposed. These cases are abstracted away for you -- just check if can_send is true.\n\nIf there is no outstanding introduction between you and the user represented by match_id, then you will receive an empty dict.\n",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/introduction/{profile_id}/{match_id}",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "introduction",
                "{profile_id}",
                "{match_id}"
            ]
        },
        {
            "relativeUri": "/genotypes/{profile_id}",
            "securedBy": [
                "oauth_2_0"
            ],
            "uriParameters": {
                "profile_id": {
                    "name": "profile_id",
                    "displayName": "profile_id",
                    "type": "string",
                    "required": true,
                    "repeat": false,
                    "__METADATA__": {
                        "calculated": true,
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            },
                            "type": {
                                "insertedAsDefault": true
                            },
                            "required": {
                                "insertedAsDefault": true
                            },
                            "repeat": {
                                "insertedAsDefault": true
                            }
                        }
                    }
                }
            },
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "genotypeResponse",
                                    "example": "{\n  \"id\" : \"c4480ba411939067\" ,\n  \"genotypes\" : [\n    {\n      \"location\" : \"i3000001\" ,\n      \"call\" : \"II\"\n    } , {\n      \"location\" : \"rs3094315\" ,\n      \"call\" : \"AA\"\n    }\n  ]\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"genotypes\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"location\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"call\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "queryParameters": {
                        "locations": {
                            "name": "locations",
                            "displayName": "locations",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "unfiltered": {
                            "name": "unfiltered",
                            "displayName": "unfiltered",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "format": {
                            "name": "format",
                            "displayName": "format",
                            "type": "string",
                            "required": false,
                            "example": "embedded",
                            "repeat": false,
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "For the user's profile, returns the base-pairs, like AA, for the given locations. The value can have Ds or Is for deletions and insertions (for example, DD or DI). It can be __ if the customer is not on a chip that calls that location, or hasn't yet unlocked their call since it corresponds to a sensitive report. It can be -- if the customer is on a chip that calls that location, but we could not determine it. To keep consistency with the /genomes endoint, which always returns two base pairs, hemizygous calls (such as on X-linked genes in males) will also return two base pairs. \n\nThe scope of your token must include each location you request (i.e., getting the below data requires a scope of at least rs3094315 i3000001). This list of SNPs (31MB) shows which SNPs our customers are genotyped for. \n\nThe unfiltered parameter can be used for completely sex-unfiltered data. \n\nThe format parameter can be used to alter the JSON output format of this endpoint. \n\nSince this is a GET endpoint, you may hit the browser-imposed URL limit with a lot of SNPs. We recommend splitting your requests into 100-SNP chunks.\n",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/genotypes/{profile_id}",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "genotypes",
                "{profile_id}"
            ]
        },
        {
            "relativeUri": "/phenotypes/{profile_id}/{phenotype_id}",
            "securedBy": [
                "oauth_2_0"
            ],
            "uriParameters": {
                "profile_id": {
                    "name": "profile_id",
                    "displayName": "profile_id",
                    "type": "string",
                    "required": true,
                    "repeat": false,
                    "__METADATA__": {
                        "calculated": true,
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            },
                            "type": {
                                "insertedAsDefault": true
                            },
                            "required": {
                                "insertedAsDefault": true
                            },
                            "repeat": {
                                "insertedAsDefault": true
                            }
                        }
                    }
                },
                "phenotype_id": {
                    "name": "phenotype_id",
                    "displayName": "phenotype_id",
                    "type": "string",
                    "required": true,
                    "repeat": false,
                    "__METADATA__": {
                        "calculated": true,
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            },
                            "type": {
                                "insertedAsDefault": true
                            },
                            "required": {
                                "insertedAsDefault": true
                            },
                            "repeat": {
                                "insertedAsDefault": true
                            }
                        }
                    }
                }
            },
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "phenotypeResponse",
                                    "example": "{\n  \"phenotype_id\" : \"sex\" ,\n  \"value\" : \"male\" ,\n  \"profile_id\" : \"c4480ba411939067\"\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"phenotype_id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"value\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"profile_id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "description": "For the user's profile, returns the requested phenotype.\nFor the /phenotypes read and write endpoints, your phenotype_id can be any of the following:\n\nfamily_tree_url: family tree url\ndate_of_birth: date of birth (YYYY-MM-DD)\nweight_g: weight in grams\nheight_mm: height in millimeters\nsex: sex\n",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/phenotypes/{profile_id}/{phenotype_id}",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "phenotypes",
                "{profile_id}",
                "{phenotype_id}"
            ]
        },
        {
            "relativeUri": "/genomes/{profile_id}",
            "securedBy": [
                "oauth_2_0"
            ],
            "uriParameters": {
                "profile_id": {
                    "name": "profile_id",
                    "displayName": "profile_id",
                    "type": "string",
                    "required": true,
                    "repeat": false,
                    "__METADATA__": {
                        "calculated": true,
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            },
                            "type": {
                                "insertedAsDefault": true
                            },
                            "required": {
                                "insertedAsDefault": true
                            },
                            "repeat": {
                                "insertedAsDefault": true
                            }
                        }
                    }
                }
            },
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "genomeResponse",
                                    "example": "{\r\n    \"id\": \"c4480ba411939067\",\r\n    \"genome\": \"ACTAGTAG__TTGADDAAIICCTT\"\r\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"genome\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "queryParameters": {
                        "unfiltered": {
                            "name": "unfiltered",
                            "displayName": "unfiltered",
                            "type": "boolean",
                            "required": false,
                            "example": "true",
                            "repeat": false,
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Returns the entire profile's genome as a packed string of base pairs \"AACTGA...\". This ~2MB request returns over a million SNP locations, so you must specify profile_id. See the /genotypes endpoint for possible values. Each SNP is represented with two base pairs, and to know which SNP corresponds to which index, see this key. \n\nThe unfiltered parameter can be used for completely sex-unfiltered data. \n\nWhen our genotyping chip is upgraded, the packed string and corresponding key will grow, but the changes will be backwards-compatible additions.\n",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/genomes/{profile_id}",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "genomes",
                "{profile_id}"
            ]
        },
        {
            "relativeUri": "/haplogroups/{profile_id}",
            "securedBy": [
                "oauth_2_0"
            ],
            "uriParameters": {
                "profile_id": {
                    "name": "profile_id",
                    "displayName": "profile_id",
                    "type": "string",
                    "required": true,
                    "repeat": false,
                    "__METADATA__": {
                        "calculated": true,
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            },
                            "type": {
                                "insertedAsDefault": true
                            },
                            "required": {
                                "insertedAsDefault": true
                            },
                            "repeat": {
                                "insertedAsDefault": true
                            }
                        }
                    }
                }
            },
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "haplogroupsResponse",
                                    "example": "{\n  \"maternal_terminal_snps\" : [\n    {\n      \"rsid\" : \"i3001424\" ,\n      \"rcrs_position\" : \"15874\"\n    } , {\n      \"rsid\" : \"i5050411\" ,\n      \"rcrs_position\" : \"15874\"\n    }\n  ] ,\n  \"paternal_terminal_snps\" : [\n    {\n      \"rsid\" : \"i3000015\" ,\n      \"snp\" : \"M125\"\n    }\n  ] ,\n  \"maternal\" : \"D4e2\" ,\n  \"paternal\" : \"D2a1\" ,\n  \"id\" : \"c4480ba411939067\"\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"maternal_terminal_snps\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"rsid\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"rcrs_position\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    } ,\n    \"paternal_terminal_snps\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"rsid\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"snp\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    } ,\n    \"maternal\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"paternal\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "description": "For the user's profile, gets maternal and paternal haplogroups, as well as terminal SNPs. Maternal terminal SNPs include the rsid and rCRS reference position, while the paternal ones include the rsid and ISOGG SNP.\n\nNote: if the profile belongs to a female, the paternal (y) haplogroup and terminal SNP information will be null.\n",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/haplogroups/{profile_id}",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "haplogroups",
                "{profile_id}"
            ]
        },
        {
            "relativeUri": "/ancestry/{profile_id}",
            "securedBy": [
                "oauth_2_0"
            ],
            "uriParameters": {
                "profile_id": {
                    "name": "profile_id",
                    "displayName": "profile_id",
                    "type": "string",
                    "required": true,
                    "repeat": false,
                    "__METADATA__": {
                        "calculated": true,
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            },
                            "type": {
                                "insertedAsDefault": true
                            },
                            "required": {
                                "insertedAsDefault": true
                            },
                            "repeat": {
                                "insertedAsDefault": true
                            }
                        }
                    }
                }
            },
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "ancestryResponse",
                                    "example": "{\n  \"id\" : \"7ad467ea509080fb\" ,\n  \"ancestry\" : {\n    \"label\" : \"Total\" ,\n    \"proportion\" : 1 ,\n    \"unassigned\" : 0 ,\n    \"sub_populations\" : [\n      {\n        \"label\" : \"Sub-Saharan African\" ,\n        \"proportion\" : 0.8227\n      } , {\n        \"label\" : \"European\" ,\n        \"proportion\" : 0.1773 ,\n        \"unassigned\" : 0.0193 ,\n        \"sub_populations\" : [\n          {\n            \"label\" : \"Northern European\" ,\n            \"proportion\" : 0.1579 ,\n            \"unassigned\" : 0.0725 ,\n            \"sub_populations\" : [\n              {\n                \"label\" : \"French and German\" ,\n                \"proportion\" : 0.0676\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"ancestry\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"label\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"proportion\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"unassigned\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"sub_populations\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"label\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"proportion\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                }\n              }\n            } , {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"label\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"proportion\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"unassigned\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"sub_populations\" : {\n                  \"type\" : \"array\" ,\n                  \"required\" : false ,\n                  \"items\" : [\n                    {\n                      \"type\" : \"object\" ,\n                      \"properties\" : {\n                        \"label\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"proportion\" : {\n                          \"type\" : \"number\" ,\n                          \"required\" : false\n                        } ,\n                        \"unassigned\" : {\n                          \"type\" : \"number\" ,\n                          \"required\" : false\n                        } ,\n                        \"sub_populations\" : {\n                          \"type\" : \"array\" ,\n                          \"required\" : false ,\n                          \"items\" : [\n                            {\n                              \"type\" : \"object\" ,\n                              \"properties\" : {\n                                \"label\" : {\n                                  \"type\" : \"string\" ,\n                                  \"required\" : false\n                                } ,\n                                \"proportion\" : {\n                                  \"type\" : \"number\" ,\n                                  \"required\" : false\n                                }\n                              }\n                            }\n                          ]\n                        }\n                      }\n                    }\n                  ]\n                }\n              }\n            }\n          ]\n        }\n      }\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "description": "Ancestral breakdown for the user's profile. Each population has an absolute proportion of the genome. A population with sub_populations has an unassigned proportion — the ancestry we couldn't classify in it. \n\nthreshold is optional, default 0.51 and range (0.5, 1.0) exclusive. 0.51 means a speculative estimate, 0.75 standard, and 0.90 conservative. A higher threshold would increase the unassigned proportions, a lower would speculate. \n\nIf the user's ancestry hasn't been computed yet, you'll see \"ancestry\": null.\n",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/ancestry/{profile_id}",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "ancestry",
                "{profile_id}"
            ]
        },
        {
            "relativeUri": "/family_members",
            "securedBy": [
                "oauth_2_0"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "familyMembersResponse",
                                    "example": "{\n  \"id\" : \"a42e94634e3f7683\" ,\n  \"limit\" : 10 ,\n  \"offset\" : 0 ,\n  \"count\" : 23 ,\n  \"members\" : [\n    {\n      \"id\" : \"48f2489h294hf\" ,\n      \"profile_id\" : \"8cb31789fb47912c\" ,\n      \"first_name\" : \"Ian\" ,\n      \"middle_name\" : null ,\n      \"last_name\" : \"Mendel\" ,\n      \"birth_surname\" : null ,\n      \"name_suffix\" : \"Jr\" ,\n      \"nickname\" : \"Junior\" ,\n      \"sex\" : \"m\" ,\n      \"adopted\" : false ,\n      \"deceased\" : false ,\n      \"partners\" : [\n        \"c4480ba411939067\"\n      ] ,\n      \"parents\" : [\n        \"b5d5423af9a82848\" ,\n        \"e07427ff8628a8ce\"\n      ] ,\n      \"events\" : [\n        {\n          \"type\" : \"birth\" ,\n          \"date\" : \"1943-11-29\" ,\n          \"end_date\" : null ,\n          \"location\" : \"New Orleans, LA\"\n        } , {\n          \"type\" : \"residence\" ,\n          \"date\" : \"1956-05-16\" ,\n          \"end_date\" : \"1969-07-16\" ,\n          \"location\" : \"Chicago, IL\"\n        }\n      ]\n    }\n  ]\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"limit\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"offset\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"count\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"members\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"profile_id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"first_name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"middle_name\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false\n            } ,\n            \"last_name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"birth_surname\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false\n            } ,\n            \"name_suffix\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"nickname\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"sex\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"adopted\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"deceased\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"partners\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"string\"\n                }\n              ]\n            } ,\n            \"parents\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"string\"\n                }\n              ]\n            } ,\n            \"events\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"object\" ,\n                  \"properties\" : {\n                    \"type\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"date\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"end_date\" : {\n                      \"type\" : \"object\" ,\n                      \"required\" : false\n                    } ,\n                    \"location\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } , {\n                  \"type\" : \"object\" ,\n                  \"properties\" : {\n                    \"type\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"date\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"end_date\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"location\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                }\n              ]\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "queryParameters": {
                        "limit": {
                            "name": "limit",
                            "displayName": "limit",
                            "type": "string",
                            "required": false,
                            "default": 10,
                            "example": "x",
                            "repeat": false,
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "offset": {
                            "name": "offset",
                            "displayName": "offset",
                            "type": "string",
                            "required": false,
                            "default": 0,
                            "example": "y",
                            "repeat": false,
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "count": {
                            "name": "count",
                            "displayName": "count",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "All Family Members in an account's family tree as entered in the family tree tool. Every profile has a family tree member node created automatically, so even users who have never used the family tree tool will have some data here.\n\nThe response is formed to return the account id, and pagination information limit offset and count. Since the account can have thousands of family tree members, limit defaults to 10, and offset to 0. You can override the limit (or not limit it at all with limit = 0, but be careful, the user may have thousands of family tree members). count gives the total number of matches after filtering. The limit and offset values in the response will represent the pagination values used by this request.\n\nFamily Members:\nA family member in the members array will have a member id field id. Any family member that is associated with a profile will also have non empty profile_id. The sex field can be set to \"m\" or \"f\" to represent male and female respectively. The adopted and deceased fields will both contain true or false. The first_name, middle_name, last_name, birth_surname, name_suffix and nickname fields will only be sent if the account has given you the 'names' scope. The partners and parents fields are arrays of member ids. Finally, the events field contains an array of events for the family member as shown in the example below.\n",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/family_members",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "family_members"
            ]
        },
        {
            "relativeUri": "/neanderthal/{profile_id}",
            "securedBy": [
                "oauth_2_0"
            ],
            "uriParameters": {
                "profile_id": {
                    "name": "profile_id",
                    "displayName": "profile_id",
                    "type": "string",
                    "required": true,
                    "repeat": false,
                    "__METADATA__": {
                        "calculated": true,
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            },
                            "type": {
                                "insertedAsDefault": true
                            },
                            "required": {
                                "insertedAsDefault": true
                            },
                            "repeat": {
                                "insertedAsDefault": true
                            }
                        }
                    }
                }
            },
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "neanderthalResponse",
                                    "example": "{\r\n    \"id\": \"7ad467ea509080fb\",\r\n    \"neanderthal\": {\r\n        \"proportion\": 0.0310,\r\n        \"ancestry\": \"East Asian\",\r\n        \"average\": 0.028,\r\n        \"percentile\": 20\r\n    }\r\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"neanderthal\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"proportion\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"ancestry\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"average\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"percentile\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "description": "Estimated genome-wide proportion of Neanderthal ancestry for the user's profile. Most users have between 0.01 and 0.04 Neanderthal ancestry -- read a full explanation of the science. proportion is -1 for un-genotyped (or as-of-yet uncomputed) profiles.",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/neanderthal/{profile_id}",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "neanderthal",
                "{profile_id}"
            ]
        },
        {
            "relativeUri": "/relatives/{profile_id}",
            "securedBy": [
                "oauth_2_0"
            ],
            "uriParameters": {
                "profile_id": {
                    "name": "profile_id",
                    "displayName": "profile_id",
                    "type": "string",
                    "required": true,
                    "repeat": false,
                    "__METADATA__": {
                        "calculated": true,
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            },
                            "type": {
                                "insertedAsDefault": true
                            },
                            "required": {
                                "insertedAsDefault": true
                            },
                            "repeat": {
                                "insertedAsDefault": true
                            }
                        }
                    }
                }
            },
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "relativesResponse",
                                    "example": "{\n  \"id\" : \"18974891hh1f3h\" ,\n  \"count\" : 10 ,\n  \"relatives\" : [\n    {\n      \"match_id\" : \"48f2489h294hf\" ,\n      \"first_name\" : \"Aodh\" ,\n      \"last_name\" : \"O'Donnell\" ,\n      \"sex\" : \"Male\" ,\n      \"birth_year\" : 1977 ,\n      \"birthplace\" : \"United States\" ,\n      \"ancestry\" : \"Northern Europe\" ,\n      \"family_locations\" : [\n        \"Arlington, VA\" ,\n        \"County Louth, Ireland\"\n      ] ,\n      \"family_surnames\" : [\n        \"Lindell\" ,\n        \"Dillingham\" ,\n        \"Kelly\"\n      ] ,\n      \"shared_segments\" : 23 ,\n      \"relationship\" : \"3rd Cousin\" ,\n      \"predicted_relationship_code\" : 32 ,\n      \"user_relationship_code\" : null ,\n      \"range\" : [\n        \"3rd Cousin\" ,\n        \"6th Cousin\"\n      ] ,\n      \"similarity\" : 0.24 ,\n      \"maternal_haplogroup\" : \"K1b1a1\" ,\n      \"paternal_haplogroup\" : \"G2a5\" ,\n      \"maternal_side\" : false ,\n      \"paternal_side\" : true ,\n      \"notes\" : \"we have the same familiar surnames\" ,\n      \"added\" : 1348699925 ,\n      \"updated\" : 1348699975 ,\n      \"residence\" : \"North Carolina\" ,\n      \"intro_status\" : \"Introduction Accepted\" ,\n      \"share_status\" : \"Sharing Genomes\" ,\n      \"profile_picture_urls\" : {\n        \"url_size_40_40\" : \"https://...cfff05bbb_T.0_0_299_299.jpg\"\n      }\n    }\n  ]\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"count\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"relatives\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"match_id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"first_name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"last_name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"sex\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"birth_year\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"birthplace\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"ancestry\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"family_locations\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"string\"\n                }\n              ]\n            } ,\n            \"family_surnames\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"string\"\n                }\n              ]\n            } ,\n            \"shared_segments\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"relationship\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"predicted_relationship_code\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"user_relationship_code\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false\n            } ,\n            \"range\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"string\"\n                }\n              ]\n            } ,\n            \"similarity\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"maternal_haplogroup\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"paternal_haplogroup\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"maternal_side\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"paternal_side\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"notes\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"added\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"updated\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"residence\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"intro_status\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"share_status\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"profile_picture_urls\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"url_size_40_40\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "queryParameters": {
                        "limit": {
                            "name": "limit",
                            "displayName": "limit",
                            "type": "string",
                            "required": false,
                            "example": "x",
                            "repeat": false,
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "offset": {
                            "name": "offset",
                            "displayName": "offset",
                            "type": "string",
                            "required": false,
                            "example": "y",
                            "repeat": false,
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "since": {
                            "name": "since",
                            "displayName": "since",
                            "type": "string",
                            "required": false,
                            "example": "1348699925",
                            "repeat": false,
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "share_status": {
                            "name": "share_status",
                            "displayName": "share_status",
                            "type": "string",
                            "required": false,
                            "example": "z",
                            "repeat": false,
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "intro_status": {
                            "name": "intro_status",
                            "displayName": "intro_status",
                            "type": "string",
                            "required": false,
                            "example": "a",
                            "repeat": false,
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Relatives on 23andMe, for the user's profile. shared_segments is the total number of shared IBD segments; similarity is the actual proportion (1.00 being you, or an identical twin). maternal/paternal_side are True if this match is a relative from your mom or dad's side. range is defined if we couldn't pinpoint the relatedness of the match.\n\nmatch_id is a unique identifier for matches for a given profile, but not across profiles. For example, if profile A has a relative C1, and profile B has relative C2, then any C1.match_id = C2.match_id is coincidental and does not mean C1 and C2 represent the same person. We cannot expose globally unique match_ids. match_id is null if the match is you.\n\nSince you could have thousands of matches, limit defaults to 10, and offset to 0. You can override the limit (or not limit it at all with limit = 0, but be careful, the user may have thousands of relatives). count gives the total number of matches after filtering. Results are sorted by updated, descending. You can also get results that have been updated or added since a timestamp.\n\nYou can also filter matches by their intro_status and share_status. Note that you will have to URL-encode these parameters (i.e., Introduction%20Sent). The possible values are:\n\nintro_status\nIntroduction Received\nIntroduction Accepted\nIntroduction Sent\nIntroduction Cancelled\nIntroduction Declined\nshare_status\nOwned Profile\nSharing Genomes\nPublic Match\n\nYou can provide an optional match_id parameter to limit the results returned to that of an individual match. In this case, match_id overrides any other conflicting parameters. For instance, if you provide both a match_id and a since parameter, the match's information will be returned regardless of whether the match was updated or added since the timestamp specified by the since parameter. The count returned will be 1 when the match_id parameter is specified. Example usage is as follows: https://api.23andme.com/1/relatives/c44.../?match_id=48f...\n",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/{match_id}",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "uriParameters": {
                        "match_id": {
                            "name": "match_id",
                            "displayName": "match_id",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "204": {
                                    "code": "204"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "queryParameters": {
                                "notes": {
                                    "name": "notes",
                                    "displayName": "notes",
                                    "type": "string",
                                    "required": false,
                                    "example": "nice",
                                    "repeat": false,
                                    "description": "Add notes about the match.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "user_relationship_code": {
                                    "name": "user_relationship_code",
                                    "displayName": "user_relationship_code",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "If you know for sure, you can update the match with a known user_relationship_code (see below).\n\n0 You\n1 Identical Twin\n2 Father\n3 Mother\n4 Son\n5 Daughter\n6 Brother\n7 Sister\n8 Half Brother\n9 Half Sister\n10 Grandfather\n11 Grandmother\n12 Grandson\n13 Granddaughter\n14 Uncle\n15 Aunt\n16 Nephew\n17 Niece\n18 Great Grandfather\n19 Great Grandson\n20 Great Grandmother\n21 Great Granddaughter\n22 Great Uncle\n23 Great Aunt\n24 Great Nephew\n25 Great Niece\n26 1st Cousin\n27 1st Cousin, Once Removed\n28 1st Cousin, Twice Removed\n29 2nd Cousin\n30 2nd Cousin, Once Removed\n31 2nd Cousin, Twice Removed\n32 3rd Cousin\n33 3rd Cousin, Once Removed\n34 3rd Cousin, Twice Removed\n35 4th Cousin\n38 5th Cousin\n41 6th Cousin\n44 Distant Cousin\n",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Updates a relative match. In our DNA Relatives feature, we calculate a predicted relationship based on your overlapping DNA segments. But if you know for sure, you can update the match with a known user_relationship_code (see below). You can also add notes about the match.",
                            "method": "patch",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/{match_id}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{match_id}"
                    ]
                }
            ],
            "displayName": "/relatives/{profile_id}",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "relatives",
                "{profile_id}"
            ]
        },
        {
            "relativeUri": "/risks/{profile_id}",
            "securedBy": [
                "oauth_2_0"
            ],
            "uriParameters": {
                "profile_id": {
                    "name": "profile_id",
                    "displayName": "profile_id",
                    "type": "string",
                    "required": true,
                    "repeat": false,
                    "__METADATA__": {
                        "calculated": true,
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            },
                            "type": {
                                "insertedAsDefault": true
                            },
                            "required": {
                                "insertedAsDefault": true
                            },
                            "repeat": {
                                "insertedAsDefault": true
                            }
                        }
                    }
                }
            },
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "risksResponse",
                                    "example": "{\n  \"id\" : \"c4480ba411939067\" ,\n  \"risks\" : [\n    {\n      \"description\" : \"Atrial Fibrillation\" ,\n      \"report_id\" : \"atrialfib\" ,\n      \"population_risk\" : 0.2715 ,\n      \"risk\" : 0.4164\n    } , {\n      \"description\" : \"Prostate Cancer\" ,\n      \"report_id\" : \"prostate\" ,\n      \"population_risk\" : 0.1783 ,\n      \"risk\" : 0.2585\n    }\n  ]\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"risks\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"description\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"report_id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"population_risk\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"risk\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "description": "Our analysis for each profile's lifetime risk of these diseases (starred reports). population_risk is the average risk for the population for which the analysis applies, and risk is the profile's risk.",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/risks/{profile_id}",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "risks",
                "{profile_id}"
            ]
        },
        {
            "relativeUri": "/carriers/{profile_id}",
            "securedBy": [
                "oauth_2_0"
            ],
            "uriParameters": {
                "profile_id": {
                    "name": "profile_id",
                    "displayName": "profile_id",
                    "type": "string",
                    "required": true,
                    "repeat": false,
                    "__METADATA__": {
                        "calculated": true,
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            },
                            "type": {
                                "insertedAsDefault": true
                            },
                            "required": {
                                "insertedAsDefault": true
                            },
                            "repeat": {
                                "insertedAsDefault": true
                            }
                        }
                    }
                }
            },
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "carriersResponse",
                                    "example": "{\n  \"id\" : \"c4480ba411939067\" ,\n  \"carriers\" : [\n    {\n      \"description\" : \"Tay-Sachs Disease\" ,\n      \"report_id\" : \"tay_sachs\" ,\n      \"mutations\" : 1\n    } , {\n      \"description\" : \"Cystic Fibrosis\" ,\n      \"report_id\" : \"cf_panel\" ,\n      \"mutations\" : 2\n    }\n  ]\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"carriers\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"description\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"report_id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"mutations\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "description": "Our analysis of whether or not each profile is a carrier for these diseases (starred reports). The person has 0, 1, or 2 mutations, or null if they're not analyzed at any of the markers. Normally, with one mutation, the person is considered a \"carrier\" and can pass the mutation to children; with two, the person is likely to be affected by the disease.\n",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/carriers/{profile_id}",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "carriers",
                "{profile_id}"
            ]
        },
        {
            "relativeUri": "/drug_responses/{profile_id}",
            "securedBy": [
                "oauth_2_0"
            ],
            "uriParameters": {
                "profile_id": {
                    "name": "profile_id",
                    "displayName": "profile_id",
                    "type": "string",
                    "required": true,
                    "repeat": false,
                    "__METADATA__": {
                        "calculated": true,
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            },
                            "type": {
                                "insertedAsDefault": true
                            },
                            "required": {
                                "insertedAsDefault": true
                            },
                            "repeat": {
                                "insertedAsDefault": true
                            }
                        }
                    }
                }
            },
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "drugResponsesResponse",
                                    "example": "{\n  \"id\" : \"c4480ba411939067\" ,\n  \"drug_responses\" : [\n    {\n      \"description\" : \"Alcohol Consumption, Smoking and Risk of Esophageal Cancer\" ,\n      \"report_id\" : \"alcohol_esophageal_pgx\" ,\n      \"status\" : \"typical\"\n    } , {\n      \"description\" : \"Response to Hepatitis C Treatment\" ,\n      \"report_id\" : \"hepc_peginf_ribavirin\" ,\n      \"status\" : \"reduced\"\n    }\n  ]\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"drug_responses\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"description\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"report_id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"status\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "description": "Our analysis of how each profile responds to these drugs (starred reports). status is reduced, typical, or increased for a person, not_applicable if the drug is not applicable to them (e.g., the oral contraceptives report is for women only), or null if they're not analyzed at any of the markers.",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/drug_responses/{profile_id}",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "drug_responses",
                "{profile_id}"
            ]
        },
        {
            "relativeUri": "/traits/{profile_id}",
            "securedBy": [
                "oauth_2_0"
            ],
            "uriParameters": {
                "profile_id": {
                    "name": "profile_id",
                    "displayName": "profile_id",
                    "type": "string",
                    "required": true,
                    "repeat": false,
                    "__METADATA__": {
                        "calculated": true,
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            },
                            "type": {
                                "insertedAsDefault": true
                            },
                            "required": {
                                "insertedAsDefault": true
                            },
                            "repeat": {
                                "insertedAsDefault": true
                            }
                        }
                    }
                }
            },
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "traitsResponse",
                                    "example": "{\n  \"id\" : \"c4480ba411939067\" ,\n  \"traits\" : [\n    {\n      \"description\" : \"Muscle Performance\" ,\n      \"report_id\" : \"muscleperformance\" ,\n      \"possible_traits\" : [\n        \"Likely Sprinter\" ,\n        \"Unlikely Sprinter\"\n      ] ,\n      \"trait\" : \"Unlikely Sprinter\"\n    } , {\n      \"description\" : \"Resistance to HIV/AIDS\" ,\n      \"report_id\" : \"hiv\" ,\n      \"possible_traits\" : [\n        \"Not Resistant\" ,\n        \"Partially Resistant\"\n      ] ,\n      \"trait\" : \"Not Resistant\"\n    }\n  ]\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"traits\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"description\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"report_id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"possible_traits\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"string\"\n                }\n              ]\n            } ,\n            \"trait\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "description": "Our analysis for each profile for these traits (starred reports). trait is a value in possible_traits, or null if the profile's not analyzed at those markers.",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/traits/{profile_id}",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "traits",
                "{profile_id}"
            ]
        },
        {
            "relativeUri": "/grfs/{profile_id}",
            "securedBy": [
                "oauth_2_0"
            ],
            "uriParameters": {
                "profile_id": {
                    "name": "profile_id",
                    "displayName": "profile_id",
                    "type": "string",
                    "required": true,
                    "repeat": false,
                    "__METADATA__": {
                        "calculated": true,
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            },
                            "type": {
                                "insertedAsDefault": true
                            },
                            "required": {
                                "insertedAsDefault": true
                            },
                            "repeat": {
                                "insertedAsDefault": true
                            }
                        }
                    }
                }
            },
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "gfrsResponse",
                                    "example": "{\n  \"genetic_risk_factors\" : [\n    {\n      \"mutations\" : \"positive\" ,\n      \"description\" : \"Celiac Disease (HLA-DQ2-Related)\" ,\n      \"report_id\" : \"i_celiac\"\n    } , {\n      \"mutations\" : \"negative\" ,\n      \"description\" : \"Alpha-1 Antitrypsin Deficiency\" ,\n      \"report_id\" : \"i_aatd\"\n    }\n  ] ,\n  \"id\" : \"c4480ba411939067\"\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"genetic_risk_factors\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"mutations\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"description\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"report_id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    } ,\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "description": "Our analysis for each profile for genetic risk factors. mutations is positive if the profile contains a mutation which corresponds to the condition denoted by description.",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/grfs/{profile_id}",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "grfs",
                "{profile_id}"
            ]
        },
        {
            "relativeUri": "/demo",
            "securedBy": [
                "oauth_2_0"
            ],
            "resources": [
                {
                    "relativeUri": "/user",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "usersResponse",
                                            "example": "{\r\n    \"id\": \"a42e94634e3f7683\",\r\n    \"profiles\": [\r\n        {\r\n            \"genotyped\": true,\r\n            \"id\": \"c4480ba411939067\",\r\n            \"services\": [\r\n                {\r\n                    \"description\": \"Health\",\r\n                    \"label\": \"pgs_health\",\r\n                    \"id\": 1\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"profiles\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"genotyped\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"services\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"object\" ,\n                  \"properties\" : {\n                    \"description\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"label\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"id\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    }\n                  }\n                }\n              ]\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "queryParameters": {
                                "email": {
                                    "name": "email",
                                    "displayName": "email",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "services": {
                                    "name": "services",
                                    "displayName": "services",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Gets the user id, and a list of profiles (an account can have multiple genotyped people) with ids, whether or not they're genotyped.\n\nThe optional email parameter can be used to request the email for this account. Requires the \"email\" scope.\n\nThe optional services parameter can be used to request the endpoint to return what services are available to the profiles.\n\nA service model object is made up of a unique service id, a service label, and a user-readable description of the service. All genotyped profiles should have \"pgs_ancestry\". Customers with access to health data will have \"pgs_health\". Demo profiles will have no services.\n\nThis endpoint is great for using an app anonymously because there is no personally identifying information.\n",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/user",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "user"
                    ]
                },
                {
                    "relativeUri": "/names/{profile_id}",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "uriParameters": {
                        "profile_id": {
                            "name": "profile_id",
                            "displayName": "profile_id",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "profileResponse",
                                            "example": "{\r\n    \"first_name\": \"Gregor\",\r\n    \"last_name\": \"Mendel\",\r\n    \"id\": \"a42e94634e3f7683\",\r\n    \"profiles\": [\r\n        {\r\n            \"first_name\": \"Johann\",\r\n            \"last_name\": \"Mendel\",\r\n            \"id\": \"c4480ba411939067\"\r\n        }\r\n    ]\r\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"first_name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"last_name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"profiles\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"first_name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"last_name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "For the user and user's profile, gets first and last names. If your user wants to remain anonymous, you shouldn't request this scope. You can optionally filter by profile_id to get the names for just that profile.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/names/{profile_id}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "names",
                        "{profile_id}"
                    ]
                },
                {
                    "relativeUri": "/introduction/{profile_id}/{match_id}",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "uriParameters": {
                        "profile_id": {
                            "name": "profile_id",
                            "displayName": "profile_id",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "match_id": {
                            "name": "match_id",
                            "displayName": "match_id",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "introductionStateResponse",
                                            "example": "{\n  \"introduction\" : {\n    \"status\" : \"received\" ,\n    \"visibility\" : \"genome\" ,\n    \"message_text\" : \"Hi! Want to explore?\"\n  } ,\n  \"can_send\" : false\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"introduction\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"status\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"visibility\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"message_text\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"can_send\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Users can see the status of introductions between themselves and other relatives as identified by /relatives. If an introduction exists between the two users, the endpoint returns a JSON representation of the introduction and can_send. If can_send is true, the user can send another introduction via a POST /introduction.\n\nPossible values for status are those settable by the PATCH method as well as sent and received. An introduction is sent before being accepted, rejected, read, or cancelled. An introduction is sent and received at exactly the same time depending on whether the person querying is the sender or the recipient.\n\nStatuses listed above are relative to you. For instance, if user B sends an introduction to you, cancels it, and then you query this endpoint, you will find that no introduction exists between you and user B. If user B then queries the endpoint, she will find an introduction between herself and you with the status cancelled.\n\nYou may send an introduction if there is no outstanding introduction between you and the user, if you've sent and cancelled an introduction, or if an invitation between you and the user has been rejected. A minimum time interval between introduction resends is also imposed. These cases are abstracted away for you -- just check if can_send is true.\n\nIf there is no outstanding introduction between you and the user represented by match_id, then you will receive an empty dict.\n",
                            "method": "patch",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "createIntroductionResponse",
                                            "example": "{\n  \"introduction\" : {\n    \"status\" : \"sent\" ,\n    \"visibility\" : \"genome\" ,\n    \"message_text\" : \"Hi! Want to explore?\"\n  }\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"introduction\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"status\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"visibility\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"message_text\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "queryParameters": {
                                "message_text": {
                                    "name": "message_text",
                                    "displayName": "message_text",
                                    "type": "string",
                                    "required": false,
                                    "default": "Hi, Through our shared DNA, 23andMe has identified us as relatives. Our predicted relationship is <your_relationship>. Would you like to explore our relationship?",
                                    "example": "Hi! Want to explore?",
                                    "repeat": false,
                                    "description": "Introduction message",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "visibility": {
                                    "name": "visibility",
                                    "displayName": "visibility",
                                    "type": "string",
                                    "required": false,
                                    "default": "anonymous",
                                    "example": "genome",
                                    "repeat": false,
                                    "description": "Visibility",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Users can send introductions to other users who we've identified as genetic matches per the /relatives endpoint. The match_id must be a match of the profile_id (it must show up in /relatives endpoint.)\n\nParameters are message_text and visibility.\n\nmessage_text may be customized, and defaults to:\nHi, Through our shared DNA, 23andMe has identified us as relatives. Our predicted relationship is <your_relationship>. Would you like to explore our relationship?\n\nValues for visibility are the same as those of the PATCH method. If no parameter is supplied, visibility defaults to anonymous.\n",
                            "method": "post",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/introduction/{profile_id}/{match_id}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "introduction",
                        "{profile_id}",
                        "{match_id}"
                    ]
                },
                {
                    "relativeUri": "/genotypes/{profile_id}",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "uriParameters": {
                        "profile_id": {
                            "name": "profile_id",
                            "displayName": "profile_id",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "genotypeResponse",
                                            "example": "{\n  \"id\" : \"c4480ba411939067\" ,\n  \"genotypes\" : [\n    {\n      \"location\" : \"i3000001\" ,\n      \"call\" : \"II\"\n    } , {\n      \"location\" : \"rs3094315\" ,\n      \"call\" : \"AA\"\n    }\n  ]\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"genotypes\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"location\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"call\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "queryParameters": {
                                "locations": {
                                    "name": "locations",
                                    "displayName": "locations",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "unfiltered": {
                                    "name": "unfiltered",
                                    "displayName": "unfiltered",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "embedded",
                                    "repeat": false,
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "For the user's profile, returns the base-pairs, like AA, for the given locations. The value can have Ds or Is for deletions and insertions (for example, DD or DI). It can be __ if the customer is not on a chip that calls that location, or hasn't yet unlocked their call since it corresponds to a sensitive report. It can be -- if the customer is on a chip that calls that location, but we could not determine it. To keep consistency with the /genomes endoint, which always returns two base pairs, hemizygous calls (such as on X-linked genes in males) will also return two base pairs. \n\nThe scope of your token must include each location you request (i.e., getting the below data requires a scope of at least rs3094315 i3000001). This list of SNPs (31MB) shows which SNPs our customers are genotyped for. \n\nThe unfiltered parameter can be used for completely sex-unfiltered data. \n\nThe format parameter can be used to alter the JSON output format of this endpoint. \n\nSince this is a GET endpoint, you may hit the browser-imposed URL limit with a lot of SNPs. We recommend splitting your requests into 100-SNP chunks.\n",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/genotypes/{profile_id}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "genotypes",
                        "{profile_id}"
                    ]
                },
                {
                    "relativeUri": "/phenotypes/{profile_id}/{phenotype_id}",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "uriParameters": {
                        "profile_id": {
                            "name": "profile_id",
                            "displayName": "profile_id",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "phenotype_id": {
                            "name": "phenotype_id",
                            "displayName": "phenotype_id",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "phenotypeResponse",
                                            "example": "{\n  \"phenotype_id\" : \"sex\" ,\n  \"value\" : \"male\" ,\n  \"profile_id\" : \"c4480ba411939067\"\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"phenotype_id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"value\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"profile_id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "For the user's profile, returns the requested phenotype.\nFor the /phenotypes read and write endpoints, your phenotype_id can be any of the following:\n\nfamily_tree_url: family tree url\ndate_of_birth: date of birth (YYYY-MM-DD)\nweight_g: weight in grams\nheight_mm: height in millimeters\nsex: sex\n",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/phenotypes/{profile_id}/{phenotype_id}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "phenotypes",
                        "{profile_id}",
                        "{phenotype_id}"
                    ]
                },
                {
                    "relativeUri": "/genomes/{profile_id}",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "uriParameters": {
                        "profile_id": {
                            "name": "profile_id",
                            "displayName": "profile_id",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "genomeResponse",
                                            "example": "{\r\n    \"id\": \"c4480ba411939067\",\r\n    \"genome\": \"ACTAGTAG__TTGADDAAIICCTT\"\r\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"genome\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "queryParameters": {
                                "unfiltered": {
                                    "name": "unfiltered",
                                    "displayName": "unfiltered",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Returns the entire profile's genome as a packed string of base pairs \"AACTGA...\". This ~2MB request returns over a million SNP locations, so you must specify profile_id. See the /genotypes endpoint for possible values. Each SNP is represented with two base pairs, and to know which SNP corresponds to which index, see this key. \n\nThe unfiltered parameter can be used for completely sex-unfiltered data. \n\nWhen our genotyping chip is upgraded, the packed string and corresponding key will grow, but the changes will be backwards-compatible additions.\n",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/genomes/{profile_id}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "genomes",
                        "{profile_id}"
                    ]
                },
                {
                    "relativeUri": "/haplogroups/{profile_id}",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "uriParameters": {
                        "profile_id": {
                            "name": "profile_id",
                            "displayName": "profile_id",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "haplogroupsResponse",
                                            "example": "{\n  \"maternal_terminal_snps\" : [\n    {\n      \"rsid\" : \"i3001424\" ,\n      \"rcrs_position\" : \"15874\"\n    } , {\n      \"rsid\" : \"i5050411\" ,\n      \"rcrs_position\" : \"15874\"\n    }\n  ] ,\n  \"paternal_terminal_snps\" : [\n    {\n      \"rsid\" : \"i3000015\" ,\n      \"snp\" : \"M125\"\n    }\n  ] ,\n  \"maternal\" : \"D4e2\" ,\n  \"paternal\" : \"D2a1\" ,\n  \"id\" : \"c4480ba411939067\"\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"maternal_terminal_snps\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"rsid\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"rcrs_position\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    } ,\n    \"paternal_terminal_snps\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"rsid\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"snp\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    } ,\n    \"maternal\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"paternal\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "For the user's profile, gets maternal and paternal haplogroups, as well as terminal SNPs. Maternal terminal SNPs include the rsid and rCRS reference position, while the paternal ones include the rsid and ISOGG SNP.\n\nNote: if the profile belongs to a female, the paternal (y) haplogroup and terminal SNP information will be null.\n",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/haplogroups/{profile_id}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "haplogroups",
                        "{profile_id}"
                    ]
                },
                {
                    "relativeUri": "/ancestry/{profile_id}",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "uriParameters": {
                        "profile_id": {
                            "name": "profile_id",
                            "displayName": "profile_id",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "ancestryResponse",
                                            "example": "{\n  \"id\" : \"7ad467ea509080fb\" ,\n  \"ancestry\" : {\n    \"label\" : \"Total\" ,\n    \"proportion\" : 1 ,\n    \"unassigned\" : 0 ,\n    \"sub_populations\" : [\n      {\n        \"label\" : \"Sub-Saharan African\" ,\n        \"proportion\" : 0.8227\n      } , {\n        \"label\" : \"European\" ,\n        \"proportion\" : 0.1773 ,\n        \"unassigned\" : 0.0193 ,\n        \"sub_populations\" : [\n          {\n            \"label\" : \"Northern European\" ,\n            \"proportion\" : 0.1579 ,\n            \"unassigned\" : 0.0725 ,\n            \"sub_populations\" : [\n              {\n                \"label\" : \"French and German\" ,\n                \"proportion\" : 0.0676\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"ancestry\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"label\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"proportion\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"unassigned\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"sub_populations\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"label\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"proportion\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                }\n              }\n            } , {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"label\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"proportion\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"unassigned\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"sub_populations\" : {\n                  \"type\" : \"array\" ,\n                  \"required\" : false ,\n                  \"items\" : [\n                    {\n                      \"type\" : \"object\" ,\n                      \"properties\" : {\n                        \"label\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"proportion\" : {\n                          \"type\" : \"number\" ,\n                          \"required\" : false\n                        } ,\n                        \"unassigned\" : {\n                          \"type\" : \"number\" ,\n                          \"required\" : false\n                        } ,\n                        \"sub_populations\" : {\n                          \"type\" : \"array\" ,\n                          \"required\" : false ,\n                          \"items\" : [\n                            {\n                              \"type\" : \"object\" ,\n                              \"properties\" : {\n                                \"label\" : {\n                                  \"type\" : \"string\" ,\n                                  \"required\" : false\n                                } ,\n                                \"proportion\" : {\n                                  \"type\" : \"number\" ,\n                                  \"required\" : false\n                                }\n                              }\n                            }\n                          ]\n                        }\n                      }\n                    }\n                  ]\n                }\n              }\n            }\n          ]\n        }\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Ancestral breakdown for the user's profile. Each population has an absolute proportion of the genome. A population with sub_populations has an unassigned proportion — the ancestry we couldn't classify in it. \n\nthreshold is optional, default 0.51 and range (0.5, 1.0) exclusive. 0.51 means a speculative estimate, 0.75 standard, and 0.90 conservative. A higher threshold would increase the unassigned proportions, a lower would speculate. \n\nIf the user's ancestry hasn't been computed yet, you'll see \"ancestry\": null.\n",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/ancestry/{profile_id}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "ancestry",
                        "{profile_id}"
                    ]
                },
                {
                    "relativeUri": "/family_members",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "familyMembersResponse",
                                            "example": "{\n  \"id\" : \"a42e94634e3f7683\" ,\n  \"limit\" : 10 ,\n  \"offset\" : 0 ,\n  \"count\" : 23 ,\n  \"members\" : [\n    {\n      \"id\" : \"48f2489h294hf\" ,\n      \"profile_id\" : \"8cb31789fb47912c\" ,\n      \"first_name\" : \"Ian\" ,\n      \"middle_name\" : null ,\n      \"last_name\" : \"Mendel\" ,\n      \"birth_surname\" : null ,\n      \"name_suffix\" : \"Jr\" ,\n      \"nickname\" : \"Junior\" ,\n      \"sex\" : \"m\" ,\n      \"adopted\" : false ,\n      \"deceased\" : false ,\n      \"partners\" : [\n        \"c4480ba411939067\"\n      ] ,\n      \"parents\" : [\n        \"b5d5423af9a82848\" ,\n        \"e07427ff8628a8ce\"\n      ] ,\n      \"events\" : [\n        {\n          \"type\" : \"birth\" ,\n          \"date\" : \"1943-11-29\" ,\n          \"end_date\" : null ,\n          \"location\" : \"New Orleans, LA\"\n        } , {\n          \"type\" : \"residence\" ,\n          \"date\" : \"1956-05-16\" ,\n          \"end_date\" : \"1969-07-16\" ,\n          \"location\" : \"Chicago, IL\"\n        }\n      ]\n    }\n  ]\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"limit\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"offset\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"count\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"members\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"profile_id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"first_name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"middle_name\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false\n            } ,\n            \"last_name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"birth_surname\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false\n            } ,\n            \"name_suffix\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"nickname\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"sex\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"adopted\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"deceased\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"partners\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"string\"\n                }\n              ]\n            } ,\n            \"parents\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"string\"\n                }\n              ]\n            } ,\n            \"events\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"object\" ,\n                  \"properties\" : {\n                    \"type\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"date\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"end_date\" : {\n                      \"type\" : \"object\" ,\n                      \"required\" : false\n                    } ,\n                    \"location\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } , {\n                  \"type\" : \"object\" ,\n                  \"properties\" : {\n                    \"type\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"date\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"end_date\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"location\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                }\n              ]\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "queryParameters": {
                                "limit": {
                                    "name": "limit",
                                    "displayName": "limit",
                                    "type": "string",
                                    "required": false,
                                    "default": 10,
                                    "example": "x",
                                    "repeat": false,
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "offset": {
                                    "name": "offset",
                                    "displayName": "offset",
                                    "type": "string",
                                    "required": false,
                                    "default": 0,
                                    "example": "y",
                                    "repeat": false,
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "count": {
                                    "name": "count",
                                    "displayName": "count",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "All Family Members in an account's family tree as entered in the family tree tool. Every profile has a family tree member node created automatically, so even users who have never used the family tree tool will have some data here.\n\nThe response is formed to return the account id, and pagination information limit offset and count. Since the account can have thousands of family tree members, limit defaults to 10, and offset to 0. You can override the limit (or not limit it at all with limit = 0, but be careful, the user may have thousands of family tree members). count gives the total number of matches after filtering. The limit and offset values in the response will represent the pagination values used by this request.\n\nFamily Members:\nA family member in the members array will have a member id field id. Any family member that is associated with a profile will also have non empty profile_id. The sex field can be set to \"m\" or \"f\" to represent male and female respectively. The adopted and deceased fields will both contain true or false. The first_name, middle_name, last_name, birth_surname, name_suffix and nickname fields will only be sent if the account has given you the 'names' scope. The partners and parents fields are arrays of member ids. Finally, the events field contains an array of events for the family member as shown in the example below.\n",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/family_members",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "family_members"
                    ]
                },
                {
                    "relativeUri": "/neanderthal/{profile_id}",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "uriParameters": {
                        "profile_id": {
                            "name": "profile_id",
                            "displayName": "profile_id",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "neanderthalResponse",
                                            "example": "{\r\n    \"id\": \"7ad467ea509080fb\",\r\n    \"neanderthal\": {\r\n        \"proportion\": 0.0310,\r\n        \"ancestry\": \"East Asian\",\r\n        \"average\": 0.028,\r\n        \"percentile\": 20\r\n    }\r\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"neanderthal\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"proportion\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"ancestry\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"average\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"percentile\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Estimated genome-wide proportion of Neanderthal ancestry for the user's profile. Most users have between 0.01 and 0.04 Neanderthal ancestry -- read a full explanation of the science. proportion is -1 for un-genotyped (or as-of-yet uncomputed) profiles.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/neanderthal/{profile_id}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "neanderthal",
                        "{profile_id}"
                    ]
                },
                {
                    "relativeUri": "/risks/{profile_id}",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "uriParameters": {
                        "profile_id": {
                            "name": "profile_id",
                            "displayName": "profile_id",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "risksResponse",
                                            "example": "{\n  \"id\" : \"c4480ba411939067\" ,\n  \"risks\" : [\n    {\n      \"description\" : \"Atrial Fibrillation\" ,\n      \"report_id\" : \"atrialfib\" ,\n      \"population_risk\" : 0.2715 ,\n      \"risk\" : 0.4164\n    } , {\n      \"description\" : \"Prostate Cancer\" ,\n      \"report_id\" : \"prostate\" ,\n      \"population_risk\" : 0.1783 ,\n      \"risk\" : 0.2585\n    }\n  ]\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"risks\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"description\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"report_id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"population_risk\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"risk\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Our analysis for each profile's lifetime risk of these diseases (starred reports). population_risk is the average risk for the population for which the analysis applies, and risk is the profile's risk.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/risks/{profile_id}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "risks",
                        "{profile_id}"
                    ]
                },
                {
                    "relativeUri": "/carriers/{profile_id}",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "uriParameters": {
                        "profile_id": {
                            "name": "profile_id",
                            "displayName": "profile_id",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "carriersResponse",
                                            "example": "{\n  \"id\" : \"c4480ba411939067\" ,\n  \"carriers\" : [\n    {\n      \"description\" : \"Tay-Sachs Disease\" ,\n      \"report_id\" : \"tay_sachs\" ,\n      \"mutations\" : 1\n    } , {\n      \"description\" : \"Cystic Fibrosis\" ,\n      \"report_id\" : \"cf_panel\" ,\n      \"mutations\" : 2\n    }\n  ]\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"carriers\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"description\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"report_id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"mutations\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Our analysis of whether or not each profile is a carrier for these diseases (starred reports). The person has 0, 1, or 2 mutations, or null if they're not analyzed at any of the markers. Normally, with one mutation, the person is considered a \"carrier\" and can pass the mutation to children; with two, the person is likely to be affected by the disease.\n",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/carriers/{profile_id}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "carriers",
                        "{profile_id}"
                    ]
                },
                {
                    "relativeUri": "/drug_responses/{profile_id}",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "uriParameters": {
                        "profile_id": {
                            "name": "profile_id",
                            "displayName": "profile_id",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "drugResponsesResponse",
                                            "example": "{\n  \"id\" : \"c4480ba411939067\" ,\n  \"drug_responses\" : [\n    {\n      \"description\" : \"Alcohol Consumption, Smoking and Risk of Esophageal Cancer\" ,\n      \"report_id\" : \"alcohol_esophageal_pgx\" ,\n      \"status\" : \"typical\"\n    } , {\n      \"description\" : \"Response to Hepatitis C Treatment\" ,\n      \"report_id\" : \"hepc_peginf_ribavirin\" ,\n      \"status\" : \"reduced\"\n    }\n  ]\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"drug_responses\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"description\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"report_id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"status\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Our analysis of how each profile responds to these drugs (starred reports). status is reduced, typical, or increased for a person, not_applicable if the drug is not applicable to them (e.g., the oral contraceptives report is for women only), or null if they're not analyzed at any of the markers.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/drug_responses/{profile_id}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "drug_responses",
                        "{profile_id}"
                    ]
                },
                {
                    "relativeUri": "/traits/{profile_id}",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "uriParameters": {
                        "profile_id": {
                            "name": "profile_id",
                            "displayName": "profile_id",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "traitsResponse",
                                            "example": "{\n  \"id\" : \"c4480ba411939067\" ,\n  \"traits\" : [\n    {\n      \"description\" : \"Muscle Performance\" ,\n      \"report_id\" : \"muscleperformance\" ,\n      \"possible_traits\" : [\n        \"Likely Sprinter\" ,\n        \"Unlikely Sprinter\"\n      ] ,\n      \"trait\" : \"Unlikely Sprinter\"\n    } , {\n      \"description\" : \"Resistance to HIV/AIDS\" ,\n      \"report_id\" : \"hiv\" ,\n      \"possible_traits\" : [\n        \"Not Resistant\" ,\n        \"Partially Resistant\"\n      ] ,\n      \"trait\" : \"Not Resistant\"\n    }\n  ]\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"traits\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"description\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"report_id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"possible_traits\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"string\"\n                }\n              ]\n            } ,\n            \"trait\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Our analysis for each profile for these traits (starred reports). trait is a value in possible_traits, or null if the profile's not analyzed at those markers.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/traits/{profile_id}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "traits",
                        "{profile_id}"
                    ]
                },
                {
                    "relativeUri": "/grfs/{profile_id}",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "uriParameters": {
                        "profile_id": {
                            "name": "profile_id",
                            "displayName": "profile_id",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "gfrsResponse",
                                            "example": "{\n  \"genetic_risk_factors\" : [\n    {\n      \"mutations\" : \"positive\" ,\n      \"description\" : \"Celiac Disease (HLA-DQ2-Related)\" ,\n      \"report_id\" : \"i_celiac\"\n    } , {\n      \"mutations\" : \"negative\" ,\n      \"description\" : \"Alpha-1 Antitrypsin Deficiency\" ,\n      \"report_id\" : \"i_aatd\"\n    }\n  ] ,\n  \"id\" : \"c4480ba411939067\"\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"genetic_risk_factors\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"mutations\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"description\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"report_id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    } ,\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Our analysis for each profile for genetic risk factors. mutations is positive if the profile contains a mutation which corresponds to the condition denoted by description.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/grfs/{profile_id}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "grfs",
                        "{profile_id}"
                    ]
                },
                {
                    "relativeUri": "/relatives/{profile_id}",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "uriParameters": {
                        "profile_id": {
                            "name": "profile_id",
                            "displayName": "profile_id",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "relativesResponse",
                                            "example": "{\n  \"id\" : \"18974891hh1f3h\" ,\n  \"count\" : 10 ,\n  \"relatives\" : [\n    {\n      \"match_id\" : \"48f2489h294hf\" ,\n      \"first_name\" : \"Aodh\" ,\n      \"last_name\" : \"O'Donnell\" ,\n      \"sex\" : \"Male\" ,\n      \"birth_year\" : 1977 ,\n      \"birthplace\" : \"United States\" ,\n      \"ancestry\" : \"Northern Europe\" ,\n      \"family_locations\" : [\n        \"Arlington, VA\" ,\n        \"County Louth, Ireland\"\n      ] ,\n      \"family_surnames\" : [\n        \"Lindell\" ,\n        \"Dillingham\" ,\n        \"Kelly\"\n      ] ,\n      \"shared_segments\" : 23 ,\n      \"relationship\" : \"3rd Cousin\" ,\n      \"predicted_relationship_code\" : 32 ,\n      \"user_relationship_code\" : null ,\n      \"range\" : [\n        \"3rd Cousin\" ,\n        \"6th Cousin\"\n      ] ,\n      \"similarity\" : 0.24 ,\n      \"maternal_haplogroup\" : \"K1b1a1\" ,\n      \"paternal_haplogroup\" : \"G2a5\" ,\n      \"maternal_side\" : false ,\n      \"paternal_side\" : true ,\n      \"notes\" : \"we have the same familiar surnames\" ,\n      \"added\" : 1348699925 ,\n      \"updated\" : 1348699975 ,\n      \"residence\" : \"North Carolina\" ,\n      \"intro_status\" : \"Introduction Accepted\" ,\n      \"share_status\" : \"Sharing Genomes\" ,\n      \"profile_picture_urls\" : {\n        \"url_size_40_40\" : \"https://...cfff05bbb_T.0_0_299_299.jpg\"\n      }\n    }\n  ]\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"count\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"relatives\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"match_id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"first_name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"last_name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"sex\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"birth_year\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"birthplace\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"ancestry\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"family_locations\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"string\"\n                }\n              ]\n            } ,\n            \"family_surnames\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"string\"\n                }\n              ]\n            } ,\n            \"shared_segments\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"relationship\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"predicted_relationship_code\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"user_relationship_code\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false\n            } ,\n            \"range\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"string\"\n                }\n              ]\n            } ,\n            \"similarity\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"maternal_haplogroup\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"paternal_haplogroup\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"maternal_side\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"paternal_side\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"notes\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"added\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"updated\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"residence\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"intro_status\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"share_status\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"profile_picture_urls\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"url_size_40_40\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "queryParameters": {
                                "limit": {
                                    "name": "limit",
                                    "displayName": "limit",
                                    "type": "string",
                                    "required": false,
                                    "example": "x",
                                    "repeat": false,
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "offset": {
                                    "name": "offset",
                                    "displayName": "offset",
                                    "type": "string",
                                    "required": false,
                                    "example": "y",
                                    "repeat": false,
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "since": {
                                    "name": "since",
                                    "displayName": "since",
                                    "type": "string",
                                    "required": false,
                                    "example": "1348699925",
                                    "repeat": false,
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "share_status": {
                                    "name": "share_status",
                                    "displayName": "share_status",
                                    "type": "string",
                                    "required": false,
                                    "example": "z",
                                    "repeat": false,
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "intro_status": {
                                    "name": "intro_status",
                                    "displayName": "intro_status",
                                    "type": "string",
                                    "required": false,
                                    "example": "a",
                                    "repeat": false,
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Relatives on 23andMe, for the user's profile. shared_segments is the total number of shared IBD segments; similarity is the actual proportion (1.00 being you, or an identical twin). maternal/paternal_side are True if this match is a relative from your mom or dad's side. range is defined if we couldn't pinpoint the relatedness of the match.\n\nmatch_id is a unique identifier for matches for a given profile, but not across profiles. For example, if profile A has a relative C1, and profile B has relative C2, then any C1.match_id = C2.match_id is coincidental and does not mean C1 and C2 represent the same person. We cannot expose globally unique match_ids. match_id is null if the match is you.\n\nSince you could have thousands of matches, limit defaults to 10, and offset to 0. You can override the limit (or not limit it at all with limit = 0, but be careful, the user may have thousands of relatives). count gives the total number of matches after filtering. Results are sorted by updated, descending. You can also get results that have been updated or added since a timestamp.\n\nYou can also filter matches by their intro_status and share_status. Note that you will have to URL-encode these parameters (i.e., Introduction%20Sent). The possible values are:\n\nintro_status\nIntroduction Received\nIntroduction Accepted\nIntroduction Sent\nIntroduction Cancelled\nIntroduction Declined\nshare_status\nOwned Profile\nSharing Genomes\nPublic Match\n\nYou can provide an optional match_id parameter to limit the results returned to that of an individual match. In this case, match_id overrides any other conflicting parameters. For instance, if you provide both a match_id and a since parameter, the match's information will be returned regardless of whether the match was updated or added since the timestamp specified by the since parameter. The count returned will be 1 when the match_id parameter is specified. Example usage is as follows: https://api.23andme.com/1/relatives/c44.../?match_id=48f...\n",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/{match_id}",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "uriParameters": {
                                "match_id": {
                                    "name": "match_id",
                                    "displayName": "match_id",
                                    "type": "string",
                                    "required": true,
                                    "repeat": false,
                                    "__METADATA__": {
                                        "calculated": true,
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "methods": [
                                {
                                    "responses": {
                                        "204": {
                                            "code": "204"
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "queryParameters": {
                                        "notes": {
                                            "name": "notes",
                                            "displayName": "notes",
                                            "type": "string",
                                            "required": false,
                                            "example": "nice",
                                            "repeat": false,
                                            "description": "Add notes about the match.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "user_relationship_code": {
                                            "name": "user_relationship_code",
                                            "displayName": "user_relationship_code",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "If you know for sure, you can update the match with a known user_relationship_code (see below).\n\n0 You\n1 Identical Twin\n2 Father\n3 Mother\n4 Son\n5 Daughter\n6 Brother\n7 Sister\n8 Half Brother\n9 Half Sister\n10 Grandfather\n11 Grandmother\n12 Grandson\n13 Granddaughter\n14 Uncle\n15 Aunt\n16 Nephew\n17 Niece\n18 Great Grandfather\n19 Great Grandson\n20 Great Grandmother\n21 Great Granddaughter\n22 Great Uncle\n23 Great Aunt\n24 Great Nephew\n25 Great Niece\n26 1st Cousin\n27 1st Cousin, Once Removed\n28 1st Cousin, Twice Removed\n29 2nd Cousin\n30 2nd Cousin, Once Removed\n31 2nd Cousin, Twice Removed\n32 3rd Cousin\n33 3rd Cousin, Once Removed\n34 3rd Cousin, Twice Removed\n35 4th Cousin\n38 5th Cousin\n41 6th Cousin\n44 Distant Cousin\n",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Updates a relative match. In our DNA Relatives feature, we calculate a predicted relationship based on your overlapping DNA segments. But if you know for sure, you can update the match with a known user_relationship_code (see below). You can also add notes about the match.",
                                    "method": "patch",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/{match_id}",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "{match_id}"
                            ]
                        }
                    ],
                    "displayName": "/relatives/{profile_id}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "relatives",
                        "{profile_id}"
                    ]
                }
            ],
            "displayName": "/demo",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "demo"
            ]
        }
    ],
    "documentation": [
        {
            "title": "Headline",
            "content": "can not resolve docs/api/headline.md"
        }
    ],
    "__METADATA__": {
        "primitiveValuesMeta": {
            "protocols": {
                "calculated": true
            }
        }
    }
}