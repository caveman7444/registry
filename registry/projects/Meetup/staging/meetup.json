{
    "title": "Meetup",
    "version": "v3",
    "baseUri": "https://api.meetup.com/",
    "protocols": [
        "HTTP",
        "HTTPS"
    ],
    "schemas": [
        {
            "batch": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": false,\r\n  \"type\": \"array\",\r\n  \"items\": {\r\n    \"required\": false,\r\n    \"type\": \"object\",\r\n    \"properties\": {\r\n      \"body\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      },\r\n      \"headers\": {\r\n        \"required\": false,\r\n        \"type\": \"object\"\r\n      },\r\n      \"path\": {\r\n        \"required\": false,\r\n        \"type\": \"string\"\r\n      },\r\n      \"ref\": {\r\n        \"required\": false,\r\n        \"type\": \"string\"\r\n      },\r\n      \"status\": {\r\n        \"required\": false,\r\n        \"type\": \"integer\"\r\n      }\r\n    }\r\n  }\r\n}"
        },
        {
            "boards": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"0\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"created\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"discussion_count\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"group\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"id\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            }\r\n          }\r\n        },\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"latest_reply\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"created\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"member\": {\r\n              \"required\": false,\r\n              \"type\": \"object\",\r\n              \"properties\": {\r\n                \"name\": {\r\n                  \"required\": false,\r\n                  \"type\": \"string\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"post_count\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"updated\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "discussions": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"board\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        }\r\n      }\r\n    },\r\n    \"body\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"created\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"last_post\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"created\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"member\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"name\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"reply_count\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"started_by\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"subject\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"updated\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "discussion": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"body\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"created\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"discussion\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        }\r\n      }\r\n    },\r\n    \"id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"in_reply_to\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"member\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"city\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"country\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"photo\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"thumb\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            }\r\n          }\r\n        },\r\n        \"state\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        }\r\n      }\r\n    },\r\n    \"subject\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"updated\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "categories": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"shortname\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "cities": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"city\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"country\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"distance\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"lat\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"lon\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"member_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"name_string\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"ranking\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"state\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"zip\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n} \r\n"
        },
        {
            "dashboard": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"last_event\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"announced\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"comment_count\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"created\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"description\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"distance\": {\r\n          \"required\": false,\r\n          \"type\": \"number\"\r\n        },\r\n        \"duration\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"email_reminders\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"event_hosts\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"member_id\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"member_name\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"event_url\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"featured\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"fee\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"accepts\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"amount\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"currency\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"description\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"label\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"required\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"group\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"category\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"group_lat\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"group_lon\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"group_photo\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"id\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"join_mode\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"membership_dues\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"name\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"topics\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"urlname\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"who\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"headcount\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"how_to_find_us\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"is_simplehtml\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"maybe_rsvp_count\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"photo_album_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"photo_count\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"photo_url\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"publish_status\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"rating\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"average\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"count\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            }\r\n          }\r\n        },\r\n        \"rsvp_alerts\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"rsvp_limit\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"rsvp_rules\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"close_time\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"closed\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"guest_limit\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"open_time\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"refund_policy\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"waitlisting\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"rsvpable\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"self\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"actions\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"checked_in\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"pay_status\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"rated\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"role\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"rsvp\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"watching\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"short_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"simple_html_description\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"status\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"survey_questions\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"id\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"question\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"required\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"time\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"timezone\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"trending_rank\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"updated\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"utc_offset\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"venue\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"address_1\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"address_2\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"address_3\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"city\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"state\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"country\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"id\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"lat\": {\r\n              \"required\": false,\r\n              \"type\": \"number\"\r\n            },\r\n            \"lon\": {\r\n              \"required\": false,\r\n              \"type\": \"number\"\r\n            },\r\n            \"name\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"phone\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"repinned\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"zip\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"venue_visibility\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"visibility\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"why\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"yes_rsvp_count\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        }\r\n      }\r\n    },\r\n    \"next_event\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"announced\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"comment_count\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"created\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"description\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"distance\": {\r\n          \"required\": false,\r\n          \"type\": \"number\"\r\n        },\r\n        \"duration\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"email_reminders\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"event_hosts\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"member_id\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"member_name\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"event_url\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"featured\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"fee\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"accepts\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"amount\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"currency\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"description\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"label\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"required\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"group\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"category\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"group_lat\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"group_lon\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"group_photo\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"id\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"join_mode\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"membership_dues\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"name\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"topics\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"urlname\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"who\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"headcount\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"how_to_find_us\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"is_simplehtml\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"maybe_rsvp_count\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"photo_album_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"photo_count\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"photo_url\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"publish_status\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"rating\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"average\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"count\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            }\r\n          }\r\n        },\r\n        \"rsvp_alerts\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"rsvp_limit\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"rsvp_rules\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"close_time\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"closed\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"guest_limit\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"open_time\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"refund_policy\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"waitlisting\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"rsvpable\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"self\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"actions\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"checked_in\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"pay_status\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"rated\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"role\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"rsvp\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"watching\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"short_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"simple_html_description\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"status\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"survey_questions\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"id\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"question\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"required\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"time\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"timezone\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"trending_rank\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"updated\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"utc_offset\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"venue\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"address_1\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"address_2\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"address_3\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"city\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"state\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"country\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"id\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"lat\": {\r\n              \"required\": false,\r\n              \"type\": \"number\"\r\n            },\r\n            \"lon\": {\r\n              \"required\": false,\r\n              \"type\": \"number\"\r\n            },\r\n            \"name\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"phone\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"repinned\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"zip\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"venue_visibility\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"visibility\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"why\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"yes_rsvp_count\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        }\r\n      }\r\n    },\r\n    \"ongoing_event\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"announced\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"comment_count\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"created\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"description\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"distance\": {\r\n          \"required\": false,\r\n          \"type\": \"number\"\r\n        },\r\n        \"duration\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"email_reminders\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"event_hosts\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"member_id\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"member_name\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"event_url\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"featured\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"fee\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"accepts\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"amount\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"currency\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"description\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"label\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"required\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"group\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"category\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"group_lat\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"group_lon\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"group_photo\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"id\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"join_mode\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"membership_dues\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"name\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"topics\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"urlname\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"who\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"headcount\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"how_to_find_us\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"is_simplehtml\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"maybe_rsvp_count\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"photo_album_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"photo_count\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"photo_url\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"publish_status\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"rating\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"average\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"count\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            }\r\n          }\r\n        },\r\n        \"rsvp_alerts\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"rsvp_limit\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"rsvp_rules\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"close_time\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"closed\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"guest_limit\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"open_time\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"refund_policy\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"waitlisting\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"rsvpable\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"self\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"actions\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"checked_in\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"pay_status\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"rated\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"role\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"rsvp\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"watching\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"short_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"simple_html_description\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"status\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"survey_questions\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"id\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"question\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"required\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"time\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"timezone\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"trending_rank\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"updated\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"utc_offset\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"venue\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"address_1\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"address_2\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"address_3\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"city\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"state\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"country\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"id\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"lat\": {\r\n              \"required\": false,\r\n              \"type\": \"number\"\r\n            },\r\n            \"lon\": {\r\n              \"required\": false,\r\n              \"type\": \"number\"\r\n            },\r\n            \"name\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"phone\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"repinned\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"zip\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"venue_visibility\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"visibility\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"why\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"yes_rsvp_count\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        }\r\n      }\r\n    },\r\n    \"stats\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"city_top_groups\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"fb_friend_events\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"global_top_groups\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"memberships\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"nearby_events\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"upcoming_events\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "events": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"announced\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"comment_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"created\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"description\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"distance\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"duration\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"email_reminders\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"event_hosts\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"member_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"member_name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"event_url\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"featured\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"fee\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"accepts\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"amount\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"currency\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"description\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"label\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"required\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"group\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"category\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"id\": {\r\n                    \"required\": false,\r\n                    \"type\": \"integer\"\r\n                  },\r\n                  \"name\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"shortname\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              },\r\n              \"group_lat\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"group_lon\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"group_photo\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"highres_link\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"photo_id\": {\r\n                    \"required\": false,\r\n                    \"type\": \"integer\"\r\n                  },\r\n                  \"photo_link\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"thumb_link\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              },\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"join_mode\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"membership_dues\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"currency\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"fee\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"fee_desc\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"methods\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"refund_policy\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"required\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"topics\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"id\": {\r\n                    \"required\": false,\r\n                    \"type\": \"integer\"\r\n                  },\r\n                  \"name\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"urlkey\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              },\r\n              \"urlname\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"who\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"headcount\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"how_to_find_us\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"is_simplehtml\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"maybe_rsvp_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"photo_album_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"photo_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"photo_url\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"publish_status\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"rating\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"average\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"count\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              }\r\n            }\r\n          },\r\n          \"rsvp_alerts\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"rsvp_limit\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"rsvp_rules\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"close_time\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"closed\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"guest_limit\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"open_time\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"refund_policy\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"days\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"notes\": {\r\n                    \"required\": false,\r\n                    \"type\": \"integer\"\r\n                  },\r\n                  \"policies\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              },\r\n              \"waitlisting\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"rsvpable\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"self\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"actions\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"checked_in\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"pay_status\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"rated\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"role\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"rsvp\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"answers\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"guests\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"response\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              },\r\n              \"watching\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"short_link\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"simple_html_description\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"status\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"survey_questions\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"question\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"required\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"time\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"timezone\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"trending_rank\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"updated\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"utc_offset\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"venue\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"address_1\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"address_2\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"address_3\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"city\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"state\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"country\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"lat\": {\r\n                \"required\": false,\r\n                \"type\": \"number\"\r\n              },\r\n              \"lon\": {\r\n                \"required\": false,\r\n                \"type\": \"number\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"phone\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"repinned\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"zip\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"venue_visibility\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"visibility\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"why\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"yes_rsvp_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "event": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"announced\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"comment_count\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"created\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"description\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"distance\": {\r\n      \"required\": false,\r\n      \"type\": \"number\"\r\n    },\r\n    \"duration\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"email_reminders\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"event_hosts\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"member_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"member_name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"event_url\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"featured\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"fee\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"accepts\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"amount\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"currency\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"description\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"label\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"required\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"group\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"category\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"id\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"name\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"shortname\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"group_lat\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"group_lon\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"group_photo\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"highres_link\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"photo_id\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"photo_link\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"thumb_link\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"join_mode\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"membership_dues\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"currency\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"fee\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"fee_desc\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"methods\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"refund_policy\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"required\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"topics\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"id\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"name\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"urlkey\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"urlname\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"who\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"headcount\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"how_to_find_us\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"is_simplehtml\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"maybe_rsvp_count\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"name\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"photo_album_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"photo_count\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"photo_url\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"publish_status\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"rating\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"average\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"count\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        }\r\n      }\r\n    },\r\n    \"rsvp_alerts\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"rsvp_limit\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"rsvp_rules\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"close_time\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"closed\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"guest_limit\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"open_time\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"refund_policy\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"days\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"notes\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"policies\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"waitlisting\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"rsvpable\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"self\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"actions\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"checked_in\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"pay_status\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"rated\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"role\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"rsvp\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"answers\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"guests\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"response\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"watching\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"short_link\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"simple_html_description\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"status\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"survey_questions\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"question\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"required\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"time\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"timezone\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"trending_rank\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"updated\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"utc_offset\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"venue\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"address_1\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"address_2\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"address_3\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"city\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"state\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"country\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"lat\": {\r\n          \"required\": false,\r\n          \"type\": \"number\"\r\n        },\r\n        \"lon\": {\r\n          \"required\": false,\r\n          \"type\": \"number\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"phone\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"repinned\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"zip\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"venue_visibility\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"visibility\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"why\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"yes_rsvp_count\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "concierge": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"announced\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"comment_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"created\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"description\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"distance\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"duration\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"email_reminders\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"event_hosts\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"member_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"member_name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"event_url\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"featured\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"fee\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"accepts\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"amount\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"currency\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"description\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"label\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"required\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"group\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"category\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"id\": {\r\n                    \"required\": false,\r\n                    \"type\": \"integer\"\r\n                  },\r\n                  \"name\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"shortname\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              },\r\n              \"group_lat\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"group_lon\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"group_photo\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"highres_link\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"photo_id\": {\r\n                    \"required\": false,\r\n                    \"type\": \"integer\"\r\n                  },\r\n                  \"photo_link\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"thumb_link\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              },\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"join_mode\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"membership_dues\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"currency\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"fee\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"fee_desc\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"methods\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"refund_policy\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"required\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"topics\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"id\": {\r\n                    \"required\": false,\r\n                    \"type\": \"integer\"\r\n                  },\r\n                  \"name\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"urlkey\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              },\r\n              \"urlname\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"who\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"headcount\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"how_to_find_us\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"is_simplehtml\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"maybe_rsvp_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"photo_album_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"photo_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"photo_url\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"publish_status\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"rating\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"average\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"count\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              }\r\n            }\r\n          },\r\n          \"rsvp_alerts\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"rsvp_limit\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"rsvp_rules\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"close_time\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"closed\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"guest_limit\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"open_time\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"refund_policy\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"days\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"notes\": {\r\n                    \"required\": false,\r\n                    \"type\": \"integer\"\r\n                  },\r\n                  \"policies\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              },\r\n              \"waitlisting\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"rsvpable\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"self\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"actions\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"checked_in\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"pay_status\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"rated\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"role\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"rsvp\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"answers\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"guests\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"response\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              },\r\n              \"watching\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"short_link\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"simple_html_description\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"status\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"survey_questions\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"question\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"required\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"time\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"timezone\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"trending_rank\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"updated\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"utc_offset\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"venue\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"address_1\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"address_2\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"address_3\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"city\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"state\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"country\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"lat\": {\r\n                \"required\": false,\r\n                \"type\": \"number\"\r\n              },\r\n              \"lon\": {\r\n                \"required\": false,\r\n                \"type\": \"number\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"phone\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"repinned\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"zip\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"venue_visibility\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"visibility\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"why\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"yes_rsvp_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "eventComments": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"comment\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"comment_url\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"event\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"event_url\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"time\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              }\r\n            }\r\n          },\r\n          \"event_comment_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"event_diff_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"event_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"group_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"in_reply_to\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"like_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"member_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"member_name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"member_photo\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"hires_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"photo_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"photo_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"thumb_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"notifications\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"self\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"actions\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "eventComment": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"comment\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"comment_url\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"event\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"event_url\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"time\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        }\r\n      }\r\n    },\r\n    \"event_comment_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"event_diff_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"event_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"group_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"in_reply_to\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"like_count\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"member_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"member_name\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"member_photo\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"hires_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"photo_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"photo_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"thumb_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"notifications\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"replies\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"self\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"actions\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "eventCommentLikes": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"created\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"event_comment_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"member\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"member_city\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_country\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"member_state\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"photo\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"highres_link\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"photo_id\": {\r\n                    \"required\": false,\r\n                    \"type\": \"integer\"\r\n                  },\r\n                  \"photo_link\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"thumb_link\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "eventRatings": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"event_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"group_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"member_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"member_name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"rating\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"time\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "eventRating": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"event_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"group_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"rating\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"rating_count\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"time\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "attendance": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"member\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"photo\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"thumb\": {\r\n                    \"required\": false,\r\n                    \"type\": \"integer\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"rsvp\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"guests\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"response\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"status\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "payments": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"confirm_code\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "watching": "{\r\n    \"$schema\" : \"http://json-schema.org/draft-03/schema\",\r\n    \"required\" : true,\r\n    \"type\" : \"object\",\r\n    \"properties\" : {\r\n        \"status\" : {\r\n            \"required\" : true,\r\n            \"type\" : \"string\"\r\n        }\r\n    }\r\n}\r\n"
        },
        {
            "notWatching": "{\r\n    \"$schema\" : \"http://json-schema.org/draft-03/schema\",\r\n    \"required\" : true,\r\n    \"type\" : \"object\",\r\n    \"properties\" : {\r\n        \"status\" : {\r\n            \"required\" : true,\r\n            \"type\" : \"string\"\r\n        }\r\n    }\r\n}\r\n"
        },
        {
            "everywhereComments": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"comment\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"created\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"event_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"member\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"member_city\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_country\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"member_state\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"parent_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"udf_{varname}\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "everywhereComment": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"comment\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"created\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"event_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"member\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"member_city\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"member_country\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"member_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"member_state\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"parent_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"udf_{varname}\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "everywhereCommunities": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"city\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"container\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"urlname\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"country\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"created\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"lat\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"lon\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"meetup_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"meetup_url\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"past_meetup_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"state\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"udf_{varname}\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"updated\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"urlname\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"zip\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "everywhereCommunity": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"city\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"container\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"urlname\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"country\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"created\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"lat\": {\r\n      \"required\": false,\r\n      \"type\": \"number\"\r\n    },\r\n    \"lon\": {\r\n      \"required\": false,\r\n      \"type\": \"number\"\r\n    },\r\n    \"meetup_count\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"meetup_url\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"name\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"past_meetup_count\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"state\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"udf_{varname}\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"updated\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"urlname\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"zip\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "everywhereFollows": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"community\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"urlname\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"container\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"urlname\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"created\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"member\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"member_city\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_country\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"member_state\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"status\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"udf_{varname}\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "everywhereFollowers": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"community\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"urlname\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"container\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"urlname\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"created\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"member\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"member_city\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_country\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"member_state\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"status\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"udf_{varname}\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "everywhereFollow": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"community\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"urlname\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"container\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"urlname\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"created\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"member\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"member_city\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"member_country\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"member_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"member_state\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"status\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"udf_{varname}\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "everywhereContainers": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"countries\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"created\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"description\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"facebook_urlname\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"founder\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"member_city\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_country\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"member_state\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"link\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"link_name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"meetup_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"meetup_url\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"member_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"past_meetup_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"theme\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"banner_height\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"banner_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"boxback_color\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"button_color\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"link_color\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"pageback_color\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"twitter_urlname\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"udf_{varname}\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"updated\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"urlname\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "everywhereContainer": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"countries\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"created\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"description\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"facebook_urlname\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"founder\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"member_city\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"member_country\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"member_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"member_state\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"link\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"link_name\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"meetup_count\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"meetup_url\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"member_count\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"name\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"past_meetup_count\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"theme\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"banner_height\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"banner_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"boxback_color\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"button_color\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"link_color\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"pageback_color\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"twitter_urlname\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"udf_{varname}\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"updated\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"urlname\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "everywhereRsvps": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"created\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"event_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"member\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"member_city\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_country\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"member_state\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"member_photo\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"highres_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"photo_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"photo_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"thumb_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"udf_{varname}\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "everywhereRsvp": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"created\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"event_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"member\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"member_city\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"member_country\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"member_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"member_state\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"member_photo\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"highres_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"photo_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"photo_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"thumb_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"udf_{varname}\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "everywhereEvents": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"address1\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"city\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"community\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"urlname\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"container\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"urlname\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"country\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"created\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"description\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"helpers\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"member_city\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_country\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"member_state\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"lat\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"lon\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"link\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"meetup_url\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"rsvp_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"short_description\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"state\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"status\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"time\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"udf_{varname}\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"updated\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"venue_name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"zip\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "everywhereEvent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"address1\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"city\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"community\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"urlname\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"container\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"urlname\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"country\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"created\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"description\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"helpers\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"member_city\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"member_country\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"member_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"member_state\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"lat\": {\r\n      \"required\": false,\r\n      \"type\": \"number\"\r\n    },\r\n    \"lon\": {\r\n      \"required\": false,\r\n      \"type\": \"number\"\r\n    },\r\n    \"link\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"meetup_url\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"rsvp_count\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"short_description\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"state\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"status\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"time\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"udf_{varname}\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"updated\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"venue_name\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"zip\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "everywhereEventSeeds": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"container\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"urlname\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"created\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"description\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"local_time\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"short_description\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"status\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"udf_{varname}\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"updated\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "everywhereEventSeed": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"container\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"urlname\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"created\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"description\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"local_time\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"short_description\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"status\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"udf_{varname}\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"updated\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "feed": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"group_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"group_name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"item_type\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"link\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"member_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"member_name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"photo_url\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"published\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"title\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "groupsFull": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"category\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"shortname\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"city\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"country\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"created\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"description\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"ga_code\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"group_photo\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"highres_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"photo_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"photo_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"thumb_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"is_simplehtml\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"join_info\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"intro_req\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"photo_req\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"questions\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"id\": {\r\n                    \"required\": false,\r\n                    \"type\": \"integer\"\r\n                  },\r\n                  \"question\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              },\r\n              \"questions_req\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"join_mode\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"lat\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"link\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"list_addr\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"list_mode\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"lon\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"members\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"membership_dues\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"currency\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"fee\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"fee_desc\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"methods\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"refund_policy\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"required\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"next_event\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"time\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              }\r\n            }\r\n          },\r\n          \"organizer\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"member_city\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_country\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"member_state\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"other_services\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"[service-name]\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"identifier\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"pending_members\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"photos\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"highres_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"photo_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"photo_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"thumb_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"primary_topic\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"rating\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"self\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"actions\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"role\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"status\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"visited\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              }\r\n            }\r\n          },\r\n          \"short_link\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"similar_groups\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"group_lat\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"group_lon\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"join_mode\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"photos\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"urlname\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"who\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"simple_html_description\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"sponsors\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"details\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"image_url\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"info\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"perk_url\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"redeem\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"url\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"state\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"timezone\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"topics\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"urlkey\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"urlname\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"visibility\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"welcome_message\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"who\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "comments": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"comment\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"country\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"city\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"state\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"created\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"lat\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"lon\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"link\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"photo_url\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "groups": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"category\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"shortname\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"city\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"country\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"created\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"description\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"ga_code\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"group_photo\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"highres_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"photo_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"thumb_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"is_simplehtml\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"join_info\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"intro_required\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"photo_required\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"questions\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"id\": {\r\n                    \"required\": false,\r\n                    \"type\": \"integer\"\r\n                  },\r\n                  \"question\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              },\r\n              \"questions_req\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"join_mode\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"lat\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"link\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"list_addr\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"list_mode\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"lon\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"members\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"next_event\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"time\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              }\r\n            }\r\n          },\r\n          \"organizer\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"bio\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"photos\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"highres_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"photo_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"thumb_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"simple_html_description\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"state\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"timezone\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"urlname\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"visibility\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"who\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "group": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"category\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"shortname\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"city\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"country\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"created\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"description\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"ga_code\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"group_photo\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"highres_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"photo_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"thumb_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"is_simplehtml\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"join_info\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"intro_required\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"photo_required\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"questions\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"id\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"question\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"questions_req\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"join_mode\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"lat\": {\r\n      \"required\": false,\r\n      \"type\": \"number\"\r\n    },\r\n    \"link\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"list_addr\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"list_mode\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"lon\": {\r\n      \"required\": false,\r\n      \"type\": \"number\"\r\n    },\r\n    \"members\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"name\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"next_event\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"time\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        }\r\n      }\r\n    },\r\n    \"organizer\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"bio\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"photos\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"highres_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"photo_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"thumb_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"simple_html_description\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"state\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"timezone\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"urlname\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"visibility\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"who\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "groupPhotoUploadResult": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"group_photo_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"photo_url\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"title\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "members": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"bio\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"birthday\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"day\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"month\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"year\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"country\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"city\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"state\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"email\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"gender\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"hometown\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"joined\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"lang\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"lat\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"lon\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"link\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"membership_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"messagable\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"messaging_pref\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"other_services\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"[service-name]\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"identifier\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"photo\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"highres_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"photo_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"photo_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"thumb_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"photo_url\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"photos\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"privacy\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"bio\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"facebook\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"groups\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"photos\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"topics\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"reachable\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"self\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"common\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"friends\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"groups\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"topics\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"urlkey\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"visited\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "member": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"bio\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"birthday\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"day\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"month\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"year\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"country\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"city\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"state\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"email\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"gender\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"hometown\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"joined\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"lang\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"lat\": {\r\n      \"required\": false,\r\n      \"type\": \"number\"\r\n    },\r\n    \"lon\": {\r\n      \"required\": false,\r\n      \"type\": \"number\"\r\n    },\r\n    \"link\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"membership_count\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"messagable\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"messaging_pref\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"name\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"other_services\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"[service-name]\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"identifier\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"photo\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"highres_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"photo_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"photo_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"thumb_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"photo_url\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"photos\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"privacy\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"bio\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"facebook\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"groups\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"photos\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"topics\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"reachable\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"self\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"common\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"friends\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"groups\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"topics\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"urlkey\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"visited\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "memberPhotoUploadResult": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"member_photo_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"photo_url\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"title\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "photos": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"caption\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"created\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"highres_link\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"member\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"member_city\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_country\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"member_state\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"member_photo\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"highres_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"photo_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"photo_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"thumb_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"photo_album\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"event\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"event_url\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"id\": {\r\n                    \"required\": false,\r\n                    \"type\": \"integer\"\r\n                  },\r\n                  \"name\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"time\": {\r\n                    \"required\": false,\r\n                    \"type\": \"integer\"\r\n                  }\r\n                }\r\n              },\r\n              \"event_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"group_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"photo_album_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              }\r\n            }\r\n          },\r\n          \"photo_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"photo_link\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"self\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"actions\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"role\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"site_link\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"thumb_link\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"updated\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "photo": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"album_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"created\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"event_photo_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"member\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"member_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"photo_url\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"site_link\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"title\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"updated\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "photoAlbums": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"album_photo\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"highres_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"photo_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"photo_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"thumb_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"created\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"event_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"group_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"ordering\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"photo_album_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"photo_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"title\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"updated\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "photoAlbum": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"album_photo\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"highres_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"photo_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"photo_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"thumb_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"created\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"event_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"group_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"ordering\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"photo_album_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"photo_count\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"title\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"updated\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "photoComments": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"comment\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"created\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"member\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"member_city\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_country\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"member_state\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"member_photo\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"hires_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"photo_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"photo_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"thumb_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"photo_comment_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"photo_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "photoComment": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"comment\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"created\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"member\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"member_city\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"member_country\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"member_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"member_state\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"member_photo\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"hires_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"photo_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"photo_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"thumb_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"photo_comment_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"photo_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "profiles": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"additional\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"answers\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"answer\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"question\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"question_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              }\r\n            }\r\n          },\r\n          \"attendance_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"bio\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"comment\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"created\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"updated\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"group\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"group_lat\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"group_lon\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"join_mode\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"urlname\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"who\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"member_city\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"member_country\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"member_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"member_state\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"membership_dues\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"period_status\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"total_amount\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"transaction_time\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              }\r\n            }\r\n          },\r\n          \"name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"other_services\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"[service-name]\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"identifier\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"photo\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"highres_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"photo_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"photo_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"thumb_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"photo_url\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"profile_url\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"role\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"site_url\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"site_name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"status\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"title\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"visited\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "profile": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"additional\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"answers\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"answer\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"question\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"question_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        }\r\n      }\r\n    },\r\n    \"attendance_count\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"bio\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"comment\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"created\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"updated\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"group\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"group_lat\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"group_lon\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"join_mode\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"urlname\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"who\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"member_city\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"member_country\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"member_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"member_state\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"membership_dues\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"period_status\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"total_amount\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"transaction_time\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        }\r\n      }\r\n    },\r\n    \"name\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"other_services\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"[service-name]\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"identifier\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"photo\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"highres_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"photo_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"photo_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"thumb_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"photo_url\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"profile_url\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"role\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"site_url\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"site_name\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"status\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"title\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"visited\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "rsvps": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"answers\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"comments\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"created\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"event\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"event_url\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"time\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              }\r\n            }\r\n          },\r\n          \"group\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"group_lat\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"group_lon\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"join_mode\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"urlname\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"who\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"guests\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"host\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"member\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"bio\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_city\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_country\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"member_state\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"other_services\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"[service-name]\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"member_photo\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"highres_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"photo_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"photo_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"thumb_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"mtime\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"pay_status\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"response\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"rsvp_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"venue\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"address_1\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"address_2\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"address_3\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"city\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"state\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"country\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"lat\": {\r\n                \"required\": false,\r\n                \"type\": \"number\"\r\n              },\r\n              \"lon\": {\r\n                \"required\": false,\r\n                \"type\": \"number\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"phone\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"repinned\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"zip\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"watching\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "rsvp": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"answers\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"comments\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"created\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"event\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"event_url\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"time\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        }\r\n      }\r\n    },\r\n    \"group\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"group_lat\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"group_lon\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"join_mode\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"urlname\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"who\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"guests\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"host\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"member\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"bio\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"member_city\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"member_country\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"member_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"member_state\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"other_services\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"[service-name]\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"member_photo\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"highres_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"photo_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"photo_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"thumb_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"mtime\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"pay_status\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"response\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"rsvp_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"venue\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"address_1\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"address_2\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"address_3\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"city\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"state\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"country\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"lat\": {\r\n          \"required\": false,\r\n          \"type\": \"number\"\r\n        },\r\n        \"lon\": {\r\n          \"required\": false,\r\n          \"type\": \"number\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"phone\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"repinned\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"zip\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"watching\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "topicCategories": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"best_topics\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"urlkey\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"category_ids\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"photo\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"highres_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"photo_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"photo_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"thumb_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"shortname\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"topic\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"urlkey\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "topics": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"description\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"link\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"members\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"urlkey\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "venues": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"address_1\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"address_2\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"address_3\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"city\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"state\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"country\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"distance\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"email\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"fax\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"lat\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"lon\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"phone\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"rating\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"rating_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"taglist\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"venue_url\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"zip\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "groupVenues": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"address_1\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"address_2\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"address_3\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"city\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"country\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"lat\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"lon\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"phone\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"state\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"visibility\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"zip\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "groupVenue": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"address_1\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"address_2\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"address_3\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"city\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"country\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"lat\": {\r\n      \"required\": false,\r\n      \"type\": \"number\"\r\n    },\r\n    \"lon\": {\r\n      \"required\": false,\r\n      \"type\": \"number\"\r\n    },\r\n    \"name\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"phone\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"state\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"visibility\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"zip\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "deprecatedCheckins": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"checker\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"member_city\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_country\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"member_state\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"checkin_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"comment\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"event_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"group_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"lat\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"lon\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"member_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"member_name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"time\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "deprecatedCheckin": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"checker\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"member_city\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"member_country\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"member_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"member_state\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"checkin_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"comment\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"event_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"group_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"lat\": {\r\n      \"required\": false,\r\n      \"type\": \"number\"\r\n    },\r\n    \"lon\": {\r\n      \"required\": false,\r\n      \"type\": \"number\"\r\n    },\r\n    \"member_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"member_name\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"time\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "deprecatedCities": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"checker\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"member_city\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_country\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"member_state\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"checkin_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"comment\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"event_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"group_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"lat\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"lon\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"member_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"member_name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"time\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "deprecatedEvents": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"allow_maybe_rsvp\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"attendee_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"description\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"event_hosts\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"member_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"member_name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"fee\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"feecurrency\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"feedesc\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"feelabel\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"guest_limit\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"how_to_find_us\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"ismeetup\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"lat\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"lon\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"maybe_rsvpcount\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"member_status\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"my_waitlist_status\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"myrsvp\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"no_rsvpcount\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"organizer_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"organizer_name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"photo_album_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"photo_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"photo_url\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"rating\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"rating_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"rsvpcount\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"short_link\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"status\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"time\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"updated\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"utc_rsvp_cutoff\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"utc_rsvp_open_time\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"utc_time\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"venue_address1\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"venue_address2\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"venue_city\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"venue_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"venue_lat\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"venue_lon\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"venue_map\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"venue_name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"venue_phone\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"venue_state\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"venue_visibility\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"venue_zip\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"waiting_rsvpcount\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "deprecatedGroups": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"country\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"city\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"state\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"created\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"daysleft\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"description\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"group_urlname\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"join_info\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"intro_required\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"questions\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"id\": {\r\n                    \"required\": false,\r\n                    \"type\": \"integer\"\r\n                  },\r\n                  \"question\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              },\r\n              \"questions_required\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"lat\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"link\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"lon\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"members\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"organizerName\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"organizerProfileURL\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"photo_url\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"rating\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"short_link\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"topics\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"urlkey\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"updated\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"visibility\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"who\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"zip\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "deprecatedMembers": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"bio\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"country\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"city\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"state\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"email\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"joined\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"lang\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"lat\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"lon\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"link\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"messaging_pref\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"other_services\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"[service-name]\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"identifier\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"photo_url\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"topics\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"urlkey\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"visited\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "deprecatedPhotoUploadResult": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"album_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"details\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"photo_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"title\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "deprecatedPhotos": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"album_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"albumtitle\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"captions\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"created\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"descr\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"link\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"member_url\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "deprecatedRsvps": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"answers\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"city\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"comment\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"country\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"created\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"event_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"lat\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"link\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"lon\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"member_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"response\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"state\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"updated:\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "deprecatedRsvp": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"answers\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"city\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"comment\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"country\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"created\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"event_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"lat\": {\r\n      \"required\": false,\r\n      \"type\": \"number\"\r\n    },\r\n    \"link\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"lon\": {\r\n      \"required\": false,\r\n      \"type\": \"number\"\r\n    },\r\n    \"member_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"name\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"response\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"state\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"updated:\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    }\r\n  }\r\n}\r\n"
        }
    ],
    "traits": [
        {
            "groupmember": {
                "securedBy": [
                    "oauth_2_0"
                ],
                "queryParameters": {
                    "group_id": {
                        "name": "group_id",
                        "displayName": "group_id",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Return comments in groups with these ID numbers, separated by commas",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "member_id": {
                        "name": "member_id",
                        "displayName": "member_id",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Return comments for the given member_ids, separated by commas",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "name": "groupmember",
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                }
            }
        },
        {
            "hasProfileProperties": {
                "securedBy": [
                    "oauth_2_0"
                ],
                "queryParameters": {
                    "answer_{qid}": {
                        "name": "answer_{qid}",
                        "displayName": "answer_{qid}",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Answers to questions from groups API join_info question fields",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "intro": {
                        "name": "intro",
                        "displayName": "intro",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Provides a Member an opportunity to tell the group about themselves",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "new_photo": {
                        "name": "new_photo",
                        "displayName": "new_photo",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "file upload for a new member photo",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "photo_id": {
                        "name": "photo_id",
                        "displayName": "photo_id",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "photo_id of the photo to use for this profile",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "site_name": {
                        "name": "site_name",
                        "displayName": "site_name",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Name of member's site. Max length is 32",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "site_url": {
                        "name": "site_url",
                        "displayName": "site_url",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Link to member's site. Max length is 80",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "name": "hasProfileProperties",
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                }
            }
        },
        {
            "locatable": {
                "securedBy": [
                    "oauth_2_0"
                ],
                "queryParameters": {
                    "lon": {
                        "name": "lon",
                        "displayName": "lon",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Longitude to search",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "lat": {
                        "name": "lat",
                        "displayName": "lat",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Latitude to search",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "name": "locatable",
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                }
            }
        },
        {
            "hasEverywhereContainerAlertProperties": {
                "securedBy": [
                    "oauth_2_0"
                ],
                "queryParameters": {
                    "comments": {
                        "name": "comments",
                        "displayName": "comments",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Alert for each comment, \"true\" or \"false\"",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "rsvps": {
                        "name": "rsvps",
                        "displayName": "rsvps",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Alert for each rsvp, \"true\" or \"false\"",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "updates": {
                        "name": "updates",
                        "displayName": "updates",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Alert for updates to events, \"true\" or \"false\"",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "name": "hasEverywhereContainerAlertProperties",
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                }
            }
        },
        {
            "searchesByGroup": {
                "securedBy": [
                    "oauth_2_0"
                ],
                "queryParameters": {
                    "group_id": {
                        "name": "group_id",
                        "displayName": "group_id",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Return <<name>> in groups with these ID numbers [separated by commas]",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "group_urlname": {
                        "name": "group_urlname",
                        "displayName": "group_urlname",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Return <<name>> for the group with this custom URL path",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "topic": {
                        "name": "topic",
                        "displayName": "topic",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "{topic, groupnum} - Return <<name>> for the group with given topic and number\n",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "groupnum": {
                        "name": "groupnum",
                        "displayName": "groupnum",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "{topic, groupnum} - Return <<name>> for the group with given topic and number\n",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "name": "searchesByGroup",
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                }
            }
        },
        {
            "list": {
                "securedBy": [
                    "oauth_2_0"
                ],
                "queryParameters": {
                    "order": {
                        "name": "order",
                        "displayName": "Order",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "How to order the results",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "page": {
                        "name": "page",
                        "displayName": "Page Size",
                        "type": "integer",
                        "required": false,
                        "repeat": false,
                        "description": "The page size",
                        "minimum": 1,
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "offset": {
                        "name": "offset",
                        "displayName": "Offset",
                        "type": "integer",
                        "required": false,
                        "repeat": false,
                        "description": "The starting page for results to return",
                        "minimum": 0,
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "desc": {
                        "name": "desc",
                        "displayName": "Descending",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Reverses the sorting order, when you include the parameter \"desc=desc\" or \"desc=true\"",
                        "enum": [
                            "desc",
                            "true",
                            "false"
                        ],
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "only": {
                        "name": "only",
                        "displayName": "Only",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "You can select result fields by specifying only parameters",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "omit": {
                        "name": "omit",
                        "displayName": "Omit",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "You can suppress result fields by specifying omit parameters",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "description": "The collection of <<resourcePathName>>",
                "name": "list",
                "usage": "This type should be used for methods that return any list",
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                }
            }
        },
        {
            "hasCommunity": {
                "securedBy": [
                    "oauth_2_0"
                ],
                "queryParameters": {
                    "community_urlname": {
                        "name": "community_urlname",
                        "displayName": "community_urlname",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Up to five URL paths, separated by commas. \"urlname\" or \"container_id\" is also required",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "community_id": {
                        "name": "community_id",
                        "displayName": "community_id",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "One or more IDs, separated by commas",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "name": "hasCommunity",
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                }
            }
        },
        {
            "hasEventProperties": {
                "securedBy": [
                    "oauth_2_0"
                ],
                "queryParameters": {
                    "description": {
                        "name": "description",
                        "displayName": "description",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Longer description of the event, in HTML.",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "email_reminders": {
                        "name": "email_reminders",
                        "displayName": "email_reminders",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Limited to organizers and event hosts, if false, disables event reminders",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "group_id": {
                        "name": "group_id",
                        "displayName": "group_id",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Group hosting the event",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "guest_limit": {
                        "name": "guest_limit",
                        "displayName": "guest_limit",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Number of guests members may include in their RSVP, 0 or more",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "host_instructions": {
                        "name": "host_instructions",
                        "displayName": "host_instructions",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "optional set of instructions to provide to hosts, only used when hosts are provided",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "hosts": {
                        "name": "hosts",
                        "displayName": "hosts",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Up to 5 comma-separated valid member ids to be hosts for the event. If hosts is not provided, the authorized member is the default host",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "how_to_find_us": {
                        "name": "how_to_find_us",
                        "displayName": "how_to_find_us",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Extra tips for locating the venue",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "name": {
                        "name": "name",
                        "displayName": "name",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Name of the event",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "publish_status": {
                        "name": "publish_status",
                        "displayName": "publish_status",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "If you are an organizer of the group, you may set this to \"draft\" to save the event as a draft. Doing so will require a status=draft filter on /2/event queries.",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "question_{index}": {
                        "name": "question_{index}",
                        "displayName": "question_{index}",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Those with permission may include up to 6 survey questions for the event. See the parameter notes section for more information",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "rsvp_alerts": {
                        "name": "rsvp_alerts",
                        "displayName": "rsvp_alerts",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Limited to organizers and event hosts, if false, disables member RSVP alerts",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "rsvp_close": {
                        "name": "rsvp_close",
                        "displayName": "rsvp_close",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Users with permission may set the RSVP close time for the event. The time may be specified in milliseconds since the epoch, or relative to the current time in the d/w/m format.",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "rsvp_limit": {
                        "name": "rsvp_limit",
                        "displayName": "rsvp_limit",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Total number of RSVPs available for the event",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "rsvp_open": {
                        "name": "rsvp_open",
                        "displayName": "rsvp_open",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Users with permission may set the RSVP open time for the event. The time may be specified in milliseconds since the epoch, or relative to the current time in the d/w/m format.",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "simple_html_description": {
                        "name": "simple_html_description",
                        "displayName": "simple_html_description",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Description of the event, in simple HTML format. This value is translated to HTML to update the description.",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "time": {
                        "name": "time",
                        "displayName": "time",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Event start time in milliseconds since the epoch, or relative to the current time in the d/w/m format.",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "venue_id": {
                        "name": "venue_id",
                        "displayName": "venue_id",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Numeric identifier of a venue",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "venue_visibility": {
                        "name": "venue_visibility",
                        "displayName": "venue_visibility",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Controls the visibility of the event venue for non members of the hosting group. May be one of \"public\" or \"members\"",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "waitlisting": {
                        "name": "waitlisting",
                        "displayName": "waitlisting",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Waiting list status may be one of: auto, manual, off\n",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "why": {
                        "name": "why",
                        "displayName": "why",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "We should do this because...",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "name": "hasEventProperties",
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                }
            }
        },
        {
            "hasTimeRange": {
                "securedBy": [
                    "oauth_2_0"
                ],
                "queryParameters": {
                    "after": {
                        "name": "after",
                        "displayName": "after",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Return events scheduled after the specified date, formatted as described below",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "before": {
                        "name": "before",
                        "displayName": "before",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Return events scheduled before the specified date, formatted as described below",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "name": "hasTimeRange",
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                }
            }
        },
        {
            "hasUserDefinedFields": {
                "securedBy": [
                    "oauth_2_0"
                ],
                "queryParameters": {
                    "udf_{varname}": {
                        "name": "udf_{varname}",
                        "displayName": "udf_{varname}",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "User defined fields",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "fields": {
                        "name": "fields",
                        "displayName": "fields",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Request that additional fields (separated by commas) be included in the output.",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "name": "hasUserDefinedFields",
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                }
            }
        },
        {
            "locationByCity": {
                "securedBy": [
                    "oauth_2_0"
                ],
                "queryParameters": {
                    "country": {
                        "name": "country",
                        "displayName": "country",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "A valid country code",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "city": {
                        "name": "city",
                        "displayName": "city",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "A valid city",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "name": "locationByCity",
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                }
            }
        },
        {
            "hasContainerProperties": {
                "securedBy": [
                    "oauth_2_0"
                ],
                "queryParameters": {
                    "description": {
                        "name": "description",
                        "displayName": "description",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Description of this container",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "facebook_urlname": {
                        "name": "facebook_urlname",
                        "displayName": "facebook_urlname",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "path name without slashes",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "link": {
                        "name": "link",
                        "displayName": "link",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "must be a URL",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "link_name": {
                        "name": "link_name",
                        "displayName": "link_name",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Name of link",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "name": {
                        "name": "name",
                        "displayName": "name",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Name of this container",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "twitter_urlname": {
                        "name": "twitter_urlname",
                        "displayName": "twitter_urlname",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "account name, no slash or @",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "name": "hasContainerProperties",
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                }
            }
        },
        {
            "hasEverywhereEventProperties": {
                "securedBy": [
                    "oauth_2_0"
                ],
                "queryParameters": {
                    "address1": {
                        "name": "address1",
                        "displayName": "address1",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "street address; specify an empty string if you want to prevent this from being inferred from other parameters",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "description": {
                        "name": "description",
                        "displayName": "description",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "description of the event",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "link": {
                        "name": "link",
                        "displayName": "link",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Link associated with the event. Displayed on the event page, and users are prompted to follow this link after indicating interest.",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "local_time": {
                        "name": "local_time",
                        "displayName": "local_time",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Alternative to the time parameter for applications that can not easily calculate an event's UTC time. If you know the wall-clock time and location for an event but do not know its UTC offset, you can supply a local_time and Meetup will apply the appropriate offset. The format for this parameter is milliseconds since the epoch as if the event occurred in a UTC zone.",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "short_description": {
                        "name": "short_description",
                        "displayName": "short_description",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "short description of the event",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "time": {
                        "name": "time",
                        "displayName": "time",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "event start time in milliseconds since the epoch. If the container has a default time value it will be used when no time is supplied, otherwise the event will be created without a time.",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "venue_name": {
                        "name": "venue_name",
                        "displayName": "venue_name",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Name of the place where the event will happen",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "zip": {
                        "name": "zip",
                        "displayName": "zip",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "A US zip or Canadian postal code. May serve as the required location parameter set.",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "name": "hasEverywhereEventProperties",
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                }
            }
        }
    ],
    "securedBy": [
        "oauth_2_0"
    ],
    "securitySchemes": [
        {
            "oauth_2_0": {
                "name": "oauth_2_0",
                "type": "OAuth 2.0",
                "description": "#OAuth 2 Requests over HTTPS\nThe Meetup API implements rfc6749, the superseding specification for OAuth 1, OAuth 2. This protocol requires all communication with the Meetup servers to use HTTPS. If your application does not, you will receive an error.\n\nWe provide implementations of both the server and implicit protocol flows. We provide the following endpoints for both where necessary.\n\nAuthorization https://secure.meetup.com/oauth2/authorize\nAccess Tokens https://secure.meetup.com/oauth2/access\nBefore you can use OAuth 2 for user authorization, you need to either register a new OAuth consumer or add a redirect_uri to your existing consumer by clicking the edit link next to you consumer's listing. The redirect_uri you register for a given client will be used to validate future oauth2 requests. Any redirect_uri parameter that starts with the registered uri will be considered valid. For instance if you register the uri http://foo.com, http://foo.com/authed will be considered valid while http://bar.foo.com will not.\n\nOAuth 2 consumers are also valid OAuth 1.0a consumers.\n",
                "describedBy": {
                    "responses": {
                        "401": {
                            "code": "401",
                            "description": "Bad or expired token. This can happen if the user or Dropbox\nrevoked or expired an access token. To fix, you should re-\nauthenticate the user.\n"
                        },
                        "403": {
                            "code": "403",
                            "description": "Bad OAuth request (wrong consumer key, bad nonce, expired\ntimestamp...). Unfortunately, re-authenticating the user won't help here.\n"
                        }
                    },
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "queryParameters": {
                        "access_token": {
                            "name": "access_token",
                            "displayName": "access_token",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"Authorization\" header\n",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "headers": {
                        "Authorization": {
                            "name": "Authorization",
                            "displayName": "Authorization",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Used to send a valid OAuth 2 access token. Do not use\nwith the \"access_token\" query string parameter.\n",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                },
                "settings": {
                    "accessTokenUri": "https://secure.meetup.com/oauth2/access",
                    "authorizationUri": "https://secure.meetup.com/oauth2/authorize",
                    "authorizationGrants": [
                        "code"
                    ]
                }
            }
        },
        {
            "oauth_1_0": {
                "name": "oauth_1_0",
                "type": "OAuth 1.0",
                "description": "OAuth 1.0 continues to be supported for all API requests, but OAuth 2.0 is now preferred.\n\n#OAuth 1.0a Signed Requests\nThe Meetup API supports authentication of third-party applications using the OAuth protocol. This allows your application to access a user's data and RSVP to events on behalf of the user (after they have explicitly granted permission). If you would like to set up an OAuth consumer to use for your application, you can create one here. The procedure to making requests with OAuth is as follows:\n\nFetch a request token, by using the request token URL: https://api.meetup.com/oauth/request/ signed with your consumer credentials. You must include an oauth_callback parameter. Set it to URL that the user will be redirected to after authorizing the application, or oob for out-of-band authentication. The response will include a key and secret for a request token.\nRedirect the user to the authorization url:\nhttp://www.meetup.com/authorize/?oauth_token=request_token_key.\nAfter authorizing, the user is redirected to your callback url with the oauth_token and an oauth_verifier parameter that your application will need acquire an access token. For out-of-band authorization, the verifier is displayed as a \"pin\" for the user to enter into your application.\nFetch an access token using the access token URL: https://api.meetup.com/oauth/access/. If the user has chosen to allow the application and a correct oauth_verifier parameter is supplied, the request will return an access token key and secret which can be used for subsequent requests.\nMake API calls as normal - but with the necessary OAuth parameters or headers added to the request. Meetup users can see a list of applications they've authorized in their account settings page, and choose to remove an application. After a user chooses to remove an application, the access token will expire and any requests made with the token will fail. The user will need to re-authorize the application in order to allow access to continue with a new token.\nSignatures are used to ensure the identity of the consumer application. Currently, the Meetup implementation of OAuth supports plaintext and HMAC_SHA1 as signature methods. For the URL portion of the signature base string, use the following values:\n\nRequest Tokens: https://api.meetup.com/oauth/request/\nAccess Tokens: https://api.meetup.com/oauth/access/\nProtected Resources (API calls): http://api.meetup.com/\nFor complete details on how to form signatures for OAuth requests, refer to the OAuth specification details.\n\n#OAuth Authentication\nEndpoint: http://www.meetup.com/authenticate/?oauth_token=request_token_key\n\nIn addition to the standard OAuth 1.0a authorization flow, we support an authentication endpoint for sites that wish to use Meetup to sign in users. Under certain conditions this endpoint will immediately redirect back to the callback URL:\n\nThe user is already logged in to Meetup, and\nThe user has already authorized your application and that authorization has not been revoked, and\nThe provided request token is valid\nWhen these conditions are not satisfied the authentication endpoint behaves the same as the authorization endpoint, sending the user to the sign in or authorization page as appropriate.\n\n#API Request Signing\nOAuth requests must also satisfy the following requirements:\n\nInclude a timestamp (oauth_timestamp) which must match to within a 5 minute window of the server time, expressed in the number of seconds since January 1, 1970 00:00:00 GMT.\nInclude a nonce (oauth_nonce) which is a unique, randomly generated number that is specific to this request.\nInclude the consumer key (oauth_consumer_key) which is used to identify the application making the request.\nInclude the signature method (oauth_signature_method) and signature (oauth_signature) which are cryptographically generated digests of the resource URL, the parameters, the consumer secret, and the nonce + timestamp values.\nIf any of these components are missing or invalid, the OAuth request will be rejected with an error. The tedious part of assembling these parameters is easily addressed by using one of the open source OAuth clients or the Meetup Python client, which has bundled support for OAuth requests.\n\nYou should store access tokens (key and secret) so that they can be re-used without forcing the user to authorize a new token every time. Initialize MeetupOAuth with an access_key and access_secret if you want an API client specific to a given user, which eliminates the need to specify a sess with each API call. The app.py script included with the python-api-client implements a basic command-line driven OAuth flow with token persistence and client-user binding.\n",
                "describedBy": {
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "queryParameters": {
                        "oauth_timestamp": {
                            "name": "oauth_timestamp",
                            "displayName": "oauth_timestamp",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Include a timestamp (oauth_timestamp) which must match to within a 5 minute window of the server time, expressed in the number of seconds since January 1, 1970 00:00:00 GMT.\n",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "oauth_nonce": {
                            "name": "oauth_nonce",
                            "displayName": "oauth_nonce",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Include a nonce (oauth_nonce) which is a unique, randomly generated number that is specific to this request.\n",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "oauth_consumer_key": {
                            "name": "oauth_consumer_key",
                            "displayName": "oauth_consumer_key",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Include the consumer key (oauth_consumer_key) which is used to identify the application making the request.\n",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "oauth_signature_method": {
                            "name": "oauth_signature_method",
                            "displayName": "oauth_signature_method",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Include the signature method (oauth_signature_method) and signature (oauth_signature) which are cryptographically generated digests of the resource URL, the parameters, the consumer secret, and the nonce + timestamp values.\n",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "oauth_signature": {
                            "name": "oauth_signature",
                            "displayName": "oauth_signature",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Include the signature method (oauth_signature_method) and signature (oauth_signature) which are cryptographically generated digests of the resource URL, the parameters, the consumer secret, and the nonce + timestamp values.\n",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                },
                "settings": {
                    "requestTokenUri": "https://api.meetup.com/oauth/request/",
                    "authorizationUri": "http://www.meetup.com/authorize/",
                    "tokenCredentialsUri": "https://api.meetup.com/oauth/access/"
                }
            }
        },
        {
            "api_key": {
                "name": "api_key",
                "type": "x-API-Key-Signatures",
                "description": "#API Key signatures\nSimilar to OAuth signing, this method of authentication certifies that a request was approved by a particular user. Unlike OAuth-signed requests, key-signed requests may be reused and recycled as long as their corresponding API key is valid. If a signed URL is released to the public, any application can use it to interact with Meetup as if it had that API key; the difference is that it can not change definitive parameters or use the signature against other API methods.\n\nBecause requests are signed with an API key as well as a Meetup private key, it is not possible for applications to sign them independently. Instead they pass a \"sign=true\" parameter along with a standard read request authorized by an API key. This causes a \"signed_url\" field to be returned in the response metadata. OAuth requests may not be signed with an API key, as this would allow a consumer to continue act on behalf of a user even if its access token is revoked.\n\nURL: any read method\nFormats: json, xml\nParameters: all of the required parameters for the standard request must be supplied, as well as the following:\n\nsign Set to \"true\"\nkey API key authentication is required.\n#Variable Parameters:\nCertain parameters are excluded from the URL signature calculation so that they may be updated to recycle the request.\n\noffset Paging through long responses.\nformat Change the response format to xml or json.\ncallback Specify a JavaScript callback to handle the results.\n\n#Response Data\nAlong with the normal results and metadata, a \"signed_url\" is returned that can be used to repeat the request. In JSON it is in the \"meta\" object, in XML the \"head\" element.\n\nsigned_url Full signed url, may include default values for parameters not specified in the original request. Parameters may be reordered when reusing but only the value of the \"variable parameters\" may be altered.\n\n#Examples:\nGet the upcoming NY Tech Meetups.\n\nhttps://api.meetup.com/events.json?key=ABDE12456AB2324445&group_urlname=ny-tech&sign=true\nThe returned \"signed_url\" field to be published and reused.\n\nhttp://api.meetup.com/events/?radius=25.0&order=time&group_urlname=ny-tech&offset=0&format=json&page=20&sig_id=123456780&sig=xxxxxx\n",
                "describedBy": {
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "queryParameters": {
                        "key": {
                            "name": "key",
                            "displayName": "key",
                            "type": "string",
                            "required": true,
                            "example": "ABDE12456AB2324445",
                            "repeat": false,
                            "description": "Your unique API key",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "sign": {
                            "name": "sign",
                            "displayName": "sign",
                            "type": "string",
                            "required": true,
                            "example": "true",
                            "repeat": false,
                            "description": "Should have the 'true' value.\n",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            }
        }
    ],
    "resourceTypes": [
        {
            "collectionElement": {
                "name": "collectionElement",
                "usage": "This type should be used for methods that allows to edit elements of collections",
                "type": "meetupResource",
                "securedBy": [
                    "oauth_2_0"
                ],
                "uriParameters": [
                    {
                        "name": "id",
                        "displayName": "id",
                        "type": "string",
                        "required": true,
                        "repeat": false,
                        "description": ":id in the path should be the <<resourcePathName>> id",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                ],
                "description": "The element of collection of <<resourcePathName>>",
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                },
                "get": {
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "description": "Get a <<resourcePathName>> by id",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                },
                "post": {
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "description": "Edit a <<resourcePathName>> by id",
                    "method": "post",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                },
                "delete": {
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "description": "Delete a <<resourcePathName>> by id",
                    "method": "delete",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            }
        },
        {
            "meetupResource": {
                "name": "meetupResource",
                "securedBy": [
                    "oauth_2_0"
                ],
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                },
                "get": {
                    "responses": {
                        "200": {
                            "code": "200",
                            "description": "When everything goes well, we'll send a 200 response code along with your data.\n\nJSON requests that specify a callback parameter are treated differently: the API always responds with an HTTP status of 200, so that a client browser will load the response and handle the callback. When an error occurs its corresponding status line is served in a \"status\" field of the error response object rather than in the response header.\n"
                        },
                        "400": {
                            "code": "400",
                            "description": "Bad request when there was a problem with the request.\n\nThe 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.\n"
                        },
                        "401": {
                            "code": "401",
                            "description": "Unauthorized when you don't provide a valid key.\n"
                        },
                        "500": {
                            "code": "500",
                            "description": "Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!\n"
                        }
                    },
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "method": "get",
                    "__METADATA__": {
                        "optional": true,
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                },
                "post": {
                    "responses": {
                        "200": {
                            "code": "200",
                            "description": "When everything goes well, we'll send a 200 response code along with your data.\n\nJSON requests that specify a callback parameter are treated differently: the API always responds with an HTTP status of 200, so that a client browser will load the response and handle the callback. When an error occurs its corresponding status line is served in a \"status\" field of the error response object rather than in the response header.\n"
                        },
                        "400": {
                            "code": "400",
                            "description": "Bad request when there was a problem with the request.\n\nThe 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.\n"
                        },
                        "401": {
                            "code": "401",
                            "description": "Unauthorized when you don't provide a valid key.\n"
                        },
                        "500": {
                            "code": "500",
                            "description": "Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!\n"
                        }
                    },
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "method": "post",
                    "__METADATA__": {
                        "optional": true,
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                },
                "delete": {
                    "responses": {
                        "200": {
                            "code": "200",
                            "description": "When everything goes well, we'll send a 200 response code along with your data.\n\nJSON requests that specify a callback parameter are treated differently: the API always responds with an HTTP status of 200, so that a client browser will load the response and handle the callback. When an error occurs its corresponding status line is served in a \"status\" field of the error response object rather than in the response header.\n"
                        },
                        "400": {
                            "code": "400",
                            "description": "Bad request when there was a problem with the request.\n\nThe 400 BadRequest response is something of a catch-all: sent if you have incorrect or missing parameters, if you exceed your API limits or you request an unsupported format. The response body will have more detail.\n"
                        },
                        "401": {
                            "code": "401",
                            "description": "Unauthorized when you don't provide a valid key.\n"
                        },
                        "500": {
                            "code": "500",
                            "description": "Internal Server Error if we messed up -- please let us know (http://groups.google.com/group/meetup-api/topics)!\n"
                        }
                    },
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "method": "delete",
                    "__METADATA__": {
                        "optional": true,
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            }
        },
        {
            "binaryState": {
                "name": "binaryState",
                "usage": "This type should be used for methods that allows to select one of the two states (the default and the \"activated\")",
                "type": "meetupResource",
                "securedBy": [
                    "oauth_2_0"
                ],
                "description": "<<resourcePathName>>",
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                },
                "post": {
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "description": "Change the state to the \"activated\"",
                    "method": "post",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                },
                "delete": {
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "description": "Restore the default state",
                    "method": "delete",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            }
        },
        {
            "collection": {
                "name": "collection",
                "usage": "This type should be used for methods that allows to edit collections and its elements",
                "type": "meetupResource",
                "securedBy": [
                    "oauth_2_0"
                ],
                "description": "The collection of <<resourcePathName>>",
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                },
                "post": {
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "description": "Create a new <<resourcePathName | !singularize>>",
                    "method": "post",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            }
        }
    ],
    "resources": [
        {
            "relativeUri": "/batch",
            "type": "meetupResource",
            "securedBy": [
                "oauth_2_0"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "batch",
                                    "example": "[{\r\n   \"path\": \"/2/member/self\",\r\n   \"status\": 200,\r\n   \"ref\": \"me\",\r\n   \"body\": {\r\n     \"id\": 1234,\r\n     \"name\": \"Noah\"\r\n   },\r\n   \"headers\": {\r\n     \"key\": \"value\"\r\n   }\r\n}]\r\n",
                                    "schemaContent": "batch"
                                }
                            },
                            "description": "The response will be a JSON-encoded array of responses to requests defined in the batch request\n"
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json",
                            "example": "[ {\r\n    \"path\" : \"/2/member/self\"\r\n}, {\r\n    \"path\" : \"/2/events\",\r\n    \"params\" : {\r\n        \"member_id\" : \"self\",\r\n        \"rsvp\" : \"yes\",\r\n        \"only\" : \"name,time\"\r\n    }\r\n} ]\r\n"
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0",
                        "oauth_1_0"
                    ],
                    "queryParameters": {
                        "requests": {
                            "name": "requests",
                            "displayName": "requests",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "JSON-encoding of multiple request objects as described in the parameter notes",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Performs multiple API requests in batch, useful for reducing HTTP network requests. This method is only available for OAuth authentication\n\n#Request Parameters\nYou may supply up to 10 API requests in one batch request using the required \"requests\" parameter. Each of these individual batched requests will be tallied separately the same way they would when making individual requests. The batch request itself will not be tallied. As such, batch requests can not be rate limited. The only failures that you should account for are an authentication failure or a malformed JSON encoding of requests provided with the \"requests\" parameter.\n\n#Composing batch requests\nRequests should be provided within a JSON-encoded array in the following format attached the requests parameter within a POST body\n  \n <pre><code>[{\n   \"path\": \"/2/member/self\",\n   \"ref\":  \"me\",\n   \"params\": {\n     \"only\": \"name,id\"\n   }\n }]</code></pre>\n\nOnly \"path\" is required. \"path\" represents the API path for the method. \"ref\" provides a way to tag a request in a batch with a label that you can associated with its response in the body of the batch response. This will default to the provided \"path\". You may also supply a \"params\" key with a JSON object representing the parameters provided for the request. At this time only HTTP GET requests are supported. In the future we may also support POST and DELETE requests. When that happens you may indicate the HTTP method with the \"method\" key which may be one of \"GET\", \"POST\", or \"DELETE\". For now you may omit \"method\" as it will always be \"GET\" until other HTTP methods are supported.\n\n#Interpreting batch responses\nA response to a batch request will be in the format\n\n<pre><code>[{\n   \"path\": \"/2/member/self\"\n   \"status\": 200,\n   \"ref\": \"me\",\n   \"body\": {\n     \"id\": 1234,\n     \"name\": \"Noah\"\n   },\n   \"headers\": {\n     \"key\": \"value\"\n    }\n }]</code></pre>\n\n\"path\" is the path of the method invoked. \"status\" represents the HTTP status code returned for the request. \"ref\" is the name provided for the inbound request. \"body\" is the JSON-encoded response from the given API request. \"headers\" is a JSON-encoded object representing the headers returned for that request. These requests may fail the same way they would when making individual requests. The response will indicate these failures.\n\nIn order to preserve server resources and return batch responses within a reasonable amount of time, individual requests may will timeout if a response is not computed within a reasonable amount of time. This allows for some requests to fail and others to pass which is a nicer alternative to an all or nothing response timeout. A timed out request can be identified by inspecting its response's \"status\" field for a value of 504. A timed out response may look like.\n\n<pre><code>[{\n   \"status\" : 504,\n   \"body\" : {\n    \"errors\" : [{\"code\": \"request_timeout\", \"message\":\"request timed out\"}]\n   },\n   \"headers\" : { ... },\n   \"path\" : \"/end/point\",\n   \"ref\" : \"request_ref\"\n }]</code></pre>\n",
                    "method": "post",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/batch",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "batch"
            ]
        },
        {
            "relativeUri": "/dashboard",
            "type": "meetupResource",
            "securedBy": [
                "oauth_2_0"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "dashboard",
                                    "example": "{\n  \"last_event\": {\n    \"visibility\": \"visibility\",\n    \"is_simplehtml\": \"is_simplehtml\",\n    \"self\": {\n      \"checked_in\": \"checked_in\",\n      \"watching\": \"watching\",\n      \"rsvp\": \"rsvp\",\n      \"role\": \"role\",\n      \"rated\": 100,\n      \"actions\": \"actions\",\n      \"pay_status\": \"pay_status\"\n    },\n    \"featured\": \"featured\",\n    \"rsvpable\": \"rsvpable\",\n    \"publish_status\": \"publish_status\",\n    \"email_reminders\": \"email_reminders\",\n    \"rsvp_rules\": {\n      \"open_time\": \"open_time\",\n      \"waitlisting\": \"waitlisting\",\n      \"close_time\": \"close_time\",\n      \"guest_limit\": \"guest_limit\",\n      \"closed\": \"closed\",\n      \"refund_policy\": \"refund_policy\"\n    },\n    \"id\": 100,\n    \"timezone\": \"timezone\",\n    \"time\": 100,\n    \"distance\": 1.0,\n    \"venue_visibility\": \"venue_visibility\",\n    \"yes_rsvp_count\": 100,\n    \"updated\": 100,\n    \"created\": 100,\n    \"description\": \"description\",\n    \"survey_questions\": {\n      \"id\": 100,\n      \"question\": \"question\",\n      \"required\": \"required\"\n    },\n    \"headcount\": \"headcount\",\n    \"name\": \"name\",\n    \"photo_album_id\": 100,\n    \"rsvp_alerts\": \"rsvp_alerts\",\n    \"photo_count\": 100,\n    \"comment_count\": 100,\n    \"rsvp_limit\": \"rsvp_limit\",\n    \"trending_rank\": \"trending_rank\",\n    \"status\": \"status\",\n    \"maybe_rsvp_count\": 100,\n    \"photo_url\": \"photo_url\",\n    \"venue\": {\n      \"id\": 100,\n      \"zip\": \"zip\",\n      \"phone\": 100,\n      \"lon\": 1.0,\n      \"repinned\": \"repinned\",\n      \"address_3\": \"address_3\",\n      \"name\": \"name\",\n      \"state\": 100,\n      \"address_1\": \"address_1\",\n      \"address_2\": \"address_2\",\n      \"lat\": 1.0,\n      \"country\": \"country\",\n      \"city\": \"city\"\n    },\n    \"short_link\": \"short_link\",\n    \"event_hosts\": {\n      \"member_name\": \"member_name\",\n      \"member_id\": 100\n    },\n    \"utc_offset\": 100,\n    \"fee\": {\n      \"amount\": \"amount\",\n      \"description\": \"description\",\n      \"label\": 100,\n      \"required\": \"required\",\n      \"accepts\": \"accepts\",\n      \"currency\": \"currency\"\n    },\n    \"duration\": 100,\n    \"announced\": \"announced\",\n    \"event_url\": \"event_url\",\n    \"how_to_find_us\": \"how_to_find_us\",\n    \"rating\": {\n      \"count\": 100,\n      \"average\": \"average\"\n    },\n    \"group\": {\n      \"id\": 100,\n      \"topics\": \"topics\",\n      \"category\": \"category\",\n      \"group_photo\": \"group_photo\",\n      \"group_lat\": \"group_lat\",\n      \"name\": \"name\",\n      \"group_lon\": \"group_lon\",\n      \"membership_dues\": \"membership_dues\",\n      \"join_mode\": \"join_mode\",\n      \"urlname\": \"urlname\",\n      \"who\": \"who\"\n    },\n    \"simple_html_description\": \"simple_html_description\",\n    \"why\": \"why\"\n  },\n  \"stats\": {\n    \"city_top_groups\": \"city_top_groups\",\n    \"global_top_groups\": \"global_top_groups\",\n    \"nearby_events\": \"nearby_events\",\n    \"upcoming_events\": \"upcoming_events\",\n    \"memberships\": \"memberships\",\n    \"fb_friend_events\": \"fb_friend_events\"\n  },\n  \"next_event\": {\n    \"visibility\": \"visibility\",\n    \"is_simplehtml\": \"is_simplehtml\",\n    \"self\": {\n      \"checked_in\": \"checked_in\",\n      \"watching\": \"watching\",\n      \"rsvp\": \"rsvp\",\n      \"role\": \"role\",\n      \"rated\": 100,\n      \"actions\": \"actions\",\n      \"pay_status\": \"pay_status\"\n    },\n    \"featured\": \"featured\",\n    \"rsvpable\": \"rsvpable\",\n    \"publish_status\": \"publish_status\",\n    \"email_reminders\": \"email_reminders\",\n    \"rsvp_rules\": {\n      \"open_time\": \"open_time\",\n      \"waitlisting\": \"waitlisting\",\n      \"close_time\": \"close_time\",\n      \"guest_limit\": \"guest_limit\",\n      \"closed\": \"closed\",\n      \"refund_policy\": \"refund_policy\"\n    },\n    \"id\": 100,\n    \"timezone\": \"timezone\",\n    \"time\": 100,\n    \"distance\": 1.0,\n    \"venue_visibility\": \"venue_visibility\",\n    \"yes_rsvp_count\": 100,\n    \"updated\": 100,\n    \"created\": 100,\n    \"description\": \"description\",\n    \"survey_questions\": {\n      \"id\": 100,\n      \"question\": \"question\",\n      \"required\": \"required\"\n    },\n    \"headcount\": \"headcount\",\n    \"name\": \"name\",\n    \"photo_album_id\": 100,\n    \"rsvp_alerts\": \"rsvp_alerts\",\n    \"photo_count\": 100,\n    \"comment_count\": 100,\n    \"rsvp_limit\": \"rsvp_limit\",\n    \"trending_rank\": \"trending_rank\",\n    \"status\": \"status\",\n    \"maybe_rsvp_count\": 100,\n    \"photo_url\": \"photo_url\",\n    \"venue\": {\n      \"id\": 100,\n      \"zip\": \"zip\",\n      \"phone\": 100,\n      \"lon\": 1.0,\n      \"repinned\": \"repinned\",\n      \"address_3\": \"address_3\",\n      \"name\": \"name\",\n      \"state\": 100,\n      \"address_1\": \"address_1\",\n      \"address_2\": \"address_2\",\n      \"lat\": 1.0,\n      \"country\": \"country\",\n      \"city\": \"city\"\n    },\n    \"short_link\": \"short_link\",\n    \"event_hosts\": {\n      \"member_name\": \"member_name\",\n      \"member_id\": 100\n    },\n    \"utc_offset\": 100,\n    \"fee\": {\n      \"amount\": \"amount\",\n      \"description\": \"description\",\n      \"label\": 100,\n      \"required\": \"required\",\n      \"accepts\": \"accepts\",\n      \"currency\": \"currency\"\n    },\n    \"duration\": 100,\n    \"announced\": \"announced\",\n    \"event_url\": \"event_url\",\n    \"how_to_find_us\": \"how_to_find_us\",\n    \"rating\": {\n      \"count\": 100,\n      \"average\": \"average\"\n    },\n    \"group\": {\n      \"id\": 100,\n      \"topics\": \"topics\",\n      \"category\": \"category\",\n      \"group_photo\": \"group_photo\",\n      \"group_lat\": \"group_lat\",\n      \"name\": \"name\",\n      \"group_lon\": \"group_lon\",\n      \"membership_dues\": \"membership_dues\",\n      \"join_mode\": \"join_mode\",\n      \"urlname\": \"urlname\",\n      \"who\": \"who\"\n    },\n    \"simple_html_description\": \"simple_html_description\",\n    \"why\": \"why\"\n  },\n  \"ongoing_event\": {\n    \"visibility\": \"visibility\",\n    \"is_simplehtml\": \"is_simplehtml\",\n    \"self\": {\n      \"checked_in\": \"checked_in\",\n      \"watching\": \"watching\",\n      \"rsvp\": \"rsvp\",\n      \"role\": \"role\",\n      \"rated\": 100,\n      \"actions\": \"actions\",\n      \"pay_status\": \"pay_status\"\n    },\n    \"featured\": \"featured\",\n    \"rsvpable\": \"rsvpable\",\n    \"publish_status\": \"publish_status\",\n    \"email_reminders\": \"email_reminders\",\n    \"rsvp_rules\": {\n      \"open_time\": \"open_time\",\n      \"waitlisting\": \"waitlisting\",\n      \"close_time\": \"close_time\",\n      \"guest_limit\": \"guest_limit\",\n      \"closed\": \"closed\",\n      \"refund_policy\": \"refund_policy\"\n    },\n    \"id\": 100,\n    \"timezone\": \"timezone\",\n    \"time\": 100,\n    \"distance\": 1.0,\n    \"venue_visibility\": \"venue_visibility\",\n    \"yes_rsvp_count\": 100,\n    \"updated\": 100,\n    \"created\": 100,\n    \"description\": \"description\",\n    \"survey_questions\": {\n      \"id\": 100,\n      \"question\": \"question\",\n      \"required\": \"required\"\n    },\n    \"headcount\": \"headcount\",\n    \"name\": \"name\",\n    \"photo_album_id\": 100,\n    \"rsvp_alerts\": \"rsvp_alerts\",\n    \"photo_count\": 100,\n    \"comment_count\": 100,\n    \"rsvp_limit\": \"rsvp_limit\",\n    \"trending_rank\": \"trending_rank\",\n    \"status\": \"status\",\n    \"maybe_rsvp_count\": 100,\n    \"photo_url\": \"photo_url\",\n    \"venue\": {\n      \"id\": 100,\n      \"zip\": \"zip\",\n      \"phone\": 100,\n      \"lon\": 1.0,\n      \"repinned\": \"repinned\",\n      \"address_3\": \"address_3\",\n      \"name\": \"name\",\n      \"state\": 100,\n      \"address_1\": \"address_1\",\n      \"address_2\": \"address_2\",\n      \"lat\": 1.0,\n      \"country\": \"country\",\n      \"city\": \"city\"\n    },\n    \"short_link\": \"short_link\",\n    \"event_hosts\": {\n      \"member_name\": \"member_name\",\n      \"member_id\": 100\n    },\n    \"utc_offset\": 100,\n    \"fee\": {\n      \"amount\": \"amount\",\n      \"description\": \"description\",\n      \"label\": 100,\n      \"required\": \"required\",\n      \"accepts\": \"accepts\",\n      \"currency\": \"currency\"\n    },\n    \"duration\": 100,\n    \"announced\": \"announced\",\n    \"event_url\": \"event_url\",\n    \"how_to_find_us\": \"how_to_find_us\",\n    \"rating\": {\n      \"count\": 100,\n      \"average\": \"average\"\n    },\n    \"group\": {\n      \"id\": 100,\n      \"topics\": \"topics\",\n      \"category\": \"category\",\n      \"group_photo\": \"group_photo\",\n      \"group_lat\": \"group_lat\",\n      \"name\": \"name\",\n      \"group_lon\": \"group_lon\",\n      \"membership_dues\": \"membership_dues\",\n      \"join_mode\": \"join_mode\",\n      \"urlname\": \"urlname\",\n      \"who\": \"who\"\n    },\n    \"simple_html_description\": \"simple_html_description\",\n    \"why\": \"why\"\n  }\n}\n",
                                    "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"last_event\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"announced\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"comment_count\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"created\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"description\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"distance\": {\r\n          \"required\": false,\r\n          \"type\": \"number\"\r\n        },\r\n        \"duration\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"email_reminders\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"event_hosts\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"member_id\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"member_name\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"event_url\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"featured\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"fee\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"accepts\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"amount\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"currency\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"description\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"label\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"required\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"group\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"category\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"group_lat\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"group_lon\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"group_photo\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"id\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"join_mode\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"membership_dues\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"name\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"topics\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"urlname\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"who\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"headcount\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"how_to_find_us\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"is_simplehtml\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"maybe_rsvp_count\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"photo_album_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"photo_count\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"photo_url\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"publish_status\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"rating\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"average\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"count\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            }\r\n          }\r\n        },\r\n        \"rsvp_alerts\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"rsvp_limit\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"rsvp_rules\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"close_time\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"closed\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"guest_limit\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"open_time\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"refund_policy\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"waitlisting\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"rsvpable\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"self\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"actions\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"checked_in\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"pay_status\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"rated\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"role\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"rsvp\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"watching\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"short_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"simple_html_description\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"status\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"survey_questions\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"id\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"question\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"required\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"time\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"timezone\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"trending_rank\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"updated\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"utc_offset\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"venue\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"address_1\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"address_2\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"address_3\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"city\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"state\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"country\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"id\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"lat\": {\r\n              \"required\": false,\r\n              \"type\": \"number\"\r\n            },\r\n            \"lon\": {\r\n              \"required\": false,\r\n              \"type\": \"number\"\r\n            },\r\n            \"name\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"phone\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"repinned\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"zip\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"venue_visibility\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"visibility\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"why\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"yes_rsvp_count\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        }\r\n      }\r\n    },\r\n    \"next_event\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"announced\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"comment_count\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"created\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"description\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"distance\": {\r\n          \"required\": false,\r\n          \"type\": \"number\"\r\n        },\r\n        \"duration\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"email_reminders\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"event_hosts\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"member_id\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"member_name\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"event_url\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"featured\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"fee\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"accepts\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"amount\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"currency\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"description\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"label\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"required\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"group\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"category\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"group_lat\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"group_lon\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"group_photo\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"id\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"join_mode\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"membership_dues\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"name\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"topics\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"urlname\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"who\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"headcount\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"how_to_find_us\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"is_simplehtml\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"maybe_rsvp_count\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"photo_album_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"photo_count\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"photo_url\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"publish_status\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"rating\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"average\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"count\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            }\r\n          }\r\n        },\r\n        \"rsvp_alerts\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"rsvp_limit\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"rsvp_rules\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"close_time\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"closed\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"guest_limit\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"open_time\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"refund_policy\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"waitlisting\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"rsvpable\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"self\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"actions\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"checked_in\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"pay_status\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"rated\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"role\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"rsvp\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"watching\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"short_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"simple_html_description\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"status\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"survey_questions\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"id\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"question\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"required\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"time\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"timezone\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"trending_rank\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"updated\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"utc_offset\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"venue\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"address_1\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"address_2\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"address_3\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"city\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"state\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"country\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"id\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"lat\": {\r\n              \"required\": false,\r\n              \"type\": \"number\"\r\n            },\r\n            \"lon\": {\r\n              \"required\": false,\r\n              \"type\": \"number\"\r\n            },\r\n            \"name\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"phone\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"repinned\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"zip\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"venue_visibility\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"visibility\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"why\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"yes_rsvp_count\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        }\r\n      }\r\n    },\r\n    \"ongoing_event\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"announced\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"comment_count\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"created\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"description\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"distance\": {\r\n          \"required\": false,\r\n          \"type\": \"number\"\r\n        },\r\n        \"duration\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"email_reminders\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"event_hosts\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"member_id\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"member_name\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"event_url\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"featured\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"fee\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"accepts\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"amount\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"currency\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"description\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"label\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"required\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"group\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"category\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"group_lat\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"group_lon\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"group_photo\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"id\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"join_mode\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"membership_dues\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"name\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"topics\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"urlname\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"who\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"headcount\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"how_to_find_us\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"is_simplehtml\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"maybe_rsvp_count\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"photo_album_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"photo_count\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"photo_url\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"publish_status\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"rating\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"average\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"count\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            }\r\n          }\r\n        },\r\n        \"rsvp_alerts\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"rsvp_limit\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"rsvp_rules\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"close_time\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"closed\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"guest_limit\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"open_time\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"refund_policy\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"waitlisting\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"rsvpable\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"self\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"actions\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"checked_in\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"pay_status\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"rated\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"role\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"rsvp\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"watching\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"short_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"simple_html_description\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"status\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"survey_questions\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"id\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"question\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"required\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"time\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"timezone\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"trending_rank\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"updated\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"utc_offset\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"venue\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"address_1\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"address_2\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"address_3\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"city\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"state\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"country\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"id\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"lat\": {\r\n              \"required\": false,\r\n              \"type\": \"number\"\r\n            },\r\n            \"lon\": {\r\n              \"required\": false,\r\n              \"type\": \"number\"\r\n            },\r\n            \"name\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"phone\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"repinned\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"zip\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"venue_visibility\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"visibility\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"why\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"yes_rsvp_count\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        }\r\n      }\r\n    },\r\n    \"stats\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"city_top_groups\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"fb_friend_events\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"global_top_groups\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"memberships\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"nearby_events\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"upcoming_events\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
                                }
                            },
                            "description": "|||\n|-|\n|last_event|The last meetup the current member RSVP'd to|\n|next_event|The next meetup event the current member has RSVP'd to|\n|ongoing_event|The meetup event the current member has RSVP'd to that's currently happening|\n|stats|A map of statistics for the current member|\n"
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0",
                        "oauth_1_0",
                        "api_key"
                    ],
                    "queryParameters": {
                        "fields": {
                            "name": "fields",
                            "displayName": "fields",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Request that additional fields (separated by commas) be included in the output",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "A dashboard of aggregated Meetup information for the authorized member. No parameters are required.",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/dashboard",
            "description": "Dashboard",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "dashboard"
            ]
        },
        {
            "relativeUri": "/activity",
            "type": "meetupResource",
            "securedBy": [
                "oauth_2_0"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "feed",
                                    "example": "{\n  \"results\": [\n    {\n      \"id\": 0,\n      \"group_name\": \"group_name 0\",\n      \"title\": 0,\n      \"photo_url\": \"photo_url 0\",\n      \"link\": \"link 0\",\n      \"group_id\": 0,\n      \"published\": \"published 0\",\n      \"member_name\": \"member_name 0\",\n      \"member_id\": 0,\n      \"item_type\": \"item_type 0\"\n    },\n    {\n      \"id\": 1,\n      \"group_name\": \"group_name 1\",\n      \"title\": 1,\n      \"photo_url\": \"photo_url 1\",\n      \"link\": \"link 1\",\n      \"group_id\": 1,\n      \"published\": \"published 1\",\n      \"member_name\": \"member_name 1\",\n      \"member_id\": 1,\n      \"item_type\": \"item_type 1\"\n    }\n  ]\n}\n",
                                    "schemaContent": "feed"
                                }
                            },
                            "description": "|||\n|-|\n|group_id|Unique ID of the group where the action took place.|\n|group_name|Name of the group where the action took place.|\n|id|Unique identifier for the feed item.|\n|item_type|Type of activity that occurred. One of: new_member, chapter_greeting, photo_upload, new_discussion, new_reply, new_rsvp, edit_rsvp, photo_tag, photo_comment, new_checkin|\n|link|URL to the content represented in the action.|\n|member_id|ID of member who performed the action.|\n|member_name|Member who performed the action.|\n|photo_url|Link to the profile photo of the member represented (except in the case of photo actions, where the photo URL is used instead).|\n|published|Date and time of when the action occurred.|\n|title|A short description of the action that occurred.|\n"
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0",
                        "oauth_1_0",
                        "api_key"
                    ],
                    "queryParameters": {
                        "member_id": {
                            "name": "member_id",
                            "displayName": "member_id",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Returns activity from this member's groups. Must be authenticated as this member",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "page_start": {
                            "name": "page_start",
                            "displayName": "page_start",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Starting timestamp for item to return.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "API method for retrieving the activity feed for a member's groups",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/activity",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "activity"
            ]
        },
        {
            "relativeUri": "/comments",
            "type": "meetupResource",
            "securedBy": [
                "oauth_2_0"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "comments",
                                    "example": "{\n  \"results\": [\n    {\n      \"lon\": 1.0,\n      \"created\": 0,\n      \"photo_url\": \"photo_url 0\",\n      \"name\": \"name 0\",\n      \"link\": \"link 0\",\n      \"state\": 0,\n      \"comment\": \"comment 0\",\n      \"lat\": 1.0,\n      \"city\": \"city 0\",\n      \"country\": \"country 0\"\n    },\n    {\n      \"lon\": 1.0,\n      \"created\": 1,\n      \"photo_url\": \"photo_url 1\",\n      \"name\": \"name 1\",\n      \"link\": \"link 1\",\n      \"state\": 1,\n      \"comment\": \"comment 1\",\n      \"lat\": 1.0,\n      \"city\": \"city 1\",\n      \"country\": \"country 1\"\n    }\n  ]\n}\n",
                                    "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"comment\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"country\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"city\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"state\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"created\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"lat\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"lon\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"link\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"photo_url\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
                                }
                            },
                            "description": "|||\n|-|\n|comment|Text of the comment that was posted|\n|country,city,state|Country, City, (and for the US, State) the member has provided|\n|created|The time and date that the comment was created|\n|lat,lon|Latitude and longitude coordinates of the members reported city|\n|link|Link to the members profile page|\n|name|The name of the member that posted the comment|\n|photo_url|Link to the profile photo of the member|\n"
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0",
                        "oauth_1_0",
                        "api_key"
                    ],
                    "queryParameters": {
                        "order": {
                            "name": "order",
                            "displayName": "order",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "|value|description|\n|-|\n|ctime|the date the comment was posted|\n",
                            "enum": [
                                "ctime"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "API method for accessing meetup group comments\n\n#Request Parameters\nAt least one of the required parameter(s) must be supplied with the request.\n",
                    "method": "get",
                    "is": [
                        "list",
                        {
                            "searchesByGroup": {
                                "name": "comments"
                            }
                        }
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/comments",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "comments"
            ]
        },
        {
            "relativeUri": "/find/groups",
            "type": "meetupResource",
            "securedBy": [
                "oauth_2_0"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "groups",
                                    "example": "{\n  \"results\": [\n    {\n      \"visibility\": \"visibility 0\",\n      \"is_simplehtml\": \"is_simplehtml 0\",\n      \"link\": \"link 0\",\n      \"next_event\": {\n        \"id\": 0,\n        \"time\": 0,\n        \"name\": \"name 0\"\n      },\n      \"state\": 0,\n      \"join_mode\": \"join_mode 0\",\n      \"who\": \"who 0\",\n      \"city\": \"city 0\",\n      \"id\": 0,\n      \"timezone\": \"timezone 0\",\n      \"created\": 0,\n      \"list_addr\": \"list_addr 0\",\n      \"description\": \"description 0\",\n      \"ga_code\": \"ga_code 0\",\n      \"name\": \"name 0\",\n      \"urlname\": \"urlname 0\",\n      \"lat\": 1.0,\n      \"members\": \"members 0\",\n      \"list_mode\": \"list_mode 0\",\n      \"lon\": 1.0,\n      \"join_info\": {\n        \"questions\": {\n          \"id\": 0,\n          \"question\": \"question 0\"\n        },\n        \"intro_required\": \"intro_required 0\",\n        \"questions_req\": \"questions_req 0\",\n        \"photo_required\": \"photo_required 0\"\n      },\n      \"organizer\": {\n        \"id\": 0,\n        \"bio\": \"bio 0\",\n        \"name\": \"name 0\"\n      },\n      \"country\": \"country 0\",\n      \"photos\": {\n        \"id\": 0,\n        \"photo_link\": \"photo_link 0\",\n        \"highres_link\": \"highres_link 0\",\n        \"thumb_link\": \"thumb_link 0\"\n      },\n      \"category\": {\n        \"id\": 0,\n        \"name\": \"name 0\",\n        \"shortname\": \"shortname 0\"\n      },\n      \"group_photo\": {\n        \"id\": 0,\n        \"photo_link\": \"photo_link 0\",\n        \"highres_link\": \"highres_link 0\",\n        \"thumb_link\": \"thumb_link 0\"\n      },\n      \"simple_html_description\": \"simple_html_description 0\"\n    },\n    {\n      \"visibility\": \"visibility 1\",\n      \"is_simplehtml\": \"is_simplehtml 1\",\n      \"link\": \"link 1\",\n      \"next_event\": {\n        \"id\": 1,\n        \"time\": 1,\n        \"name\": \"name 1\"\n      },\n      \"state\": 1,\n      \"join_mode\": \"join_mode 1\",\n      \"who\": \"who 1\",\n      \"city\": \"city 1\",\n      \"id\": 1,\n      \"timezone\": \"timezone 1\",\n      \"created\": 1,\n      \"list_addr\": \"list_addr 1\",\n      \"description\": \"description 1\",\n      \"ga_code\": \"ga_code 1\",\n      \"name\": \"name 1\",\n      \"urlname\": \"urlname 1\",\n      \"lat\": 1.0,\n      \"members\": \"members 1\",\n      \"list_mode\": \"list_mode 1\",\n      \"lon\": 1.0,\n      \"join_info\": {\n        \"questions\": {\n          \"id\": 1,\n          \"question\": \"question 1\"\n        },\n        \"intro_required\": \"intro_required 1\",\n        \"questions_req\": \"questions_req 1\",\n        \"photo_required\": \"photo_required 1\"\n      },\n      \"organizer\": {\n        \"id\": 1,\n        \"bio\": \"bio 1\",\n        \"name\": \"name 1\"\n      },\n      \"country\": \"country 1\",\n      \"photos\": {\n        \"id\": 1,\n        \"photo_link\": \"photo_link 1\",\n        \"highres_link\": \"highres_link 1\",\n        \"thumb_link\": \"thumb_link 1\"\n      },\n      \"category\": {\n        \"id\": 1,\n        \"name\": \"name 1\",\n        \"shortname\": \"shortname 1\"\n      },\n      \"group_photo\": {\n        \"id\": 1,\n        \"photo_link\": \"photo_link 1\",\n        \"highres_link\": \"highres_link 1\",\n        \"thumb_link\": \"thumb_link 1\"\n      },\n      \"simple_html_description\": \"simple_html_description 1\"\n    }\n  ]\n}\n",
                                    "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"category\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"shortname\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"city\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"country\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"created\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"description\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"ga_code\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"group_photo\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"highres_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"photo_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"thumb_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"is_simplehtml\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"join_info\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"intro_required\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"photo_required\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"questions\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"id\": {\r\n                    \"required\": false,\r\n                    \"type\": \"integer\"\r\n                  },\r\n                  \"question\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              },\r\n              \"questions_req\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"join_mode\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"lat\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"link\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"list_addr\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"list_mode\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"lon\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"members\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"next_event\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"time\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              }\r\n            }\r\n          },\r\n          \"organizer\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"bio\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"photos\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"highres_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"photo_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"thumb_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"simple_html_description\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"state\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"timezone\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"urlname\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"visibility\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"who\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
                                }
                            },
                            "description": "|||\n|-|\n|category|The primary category of the group, if the group has one|\n|city|City of the group|\n|country|Country of the group|\n|created|Time the group was created in milliseconds since the epoch|\n|description|Short description of group|\n|ga_code|Optional field return the google analytics code for the group. Only members that can edit group settings can see this|\n|group_photo|Group photo|\n|id|Numeric group ID|\n|is_simplehtml|Optional field, 'true' when the group description has been saved in a simplified HTML format, 'false' otherwise.|\n|join_info|Optional field, lists any questions requested when joining and required fields|\n|join_mode|Who can join this group and how. One of approval, closed, open|\n|lat|Latitude|\n|link|Link to group on meetup.com|\n|list_addr|Optional field returning list address prefix. List mail will be {list_addr}-list@meetup.com. Announce email will be {list_addr}-announce@meetup.com. You must be a member of the group to see this|\n|list_mode|Optional fields parameter representing the policy for who can post the the group mailing list. One of moderated, off, open, orgs_only|\n|lon|Longitude|\n|members|Number of Meetup members in this group|\n|name|Name of the group|\n|next_event|The next upcoming event, if the group has one|\n|organizer|Group's primary organizer|\n|photos|A small set of photos from the group|\n|simple_html_description|Description of the group, in simple HTML format. This value is translated to HTML to update the description.|\n|state|State of the group, if in US or Canada|\n|timezone|This represents the universal timezone identifier for the group|\n|urlname|Urlname used to identify the group on meetup.com|\n|visibility|Who can see this group. One of members, public or public_limited|\n|who|What the group calls its members|\n"
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0",
                        "oauth_1_0",
                        "api_key"
                    ],
                    "queryParameters": {
                        "category": {
                            "name": "category",
                            "displayName": "category",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Comma-delimited list of numeric category ids",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "country": {
                            "name": "country",
                            "displayName": "country",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "A valid two character country code, defaults to US",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "fields": {
                            "name": "fields",
                            "displayName": "fields",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Request that additional fields (separated by commas) be included in the output.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "filter": {
                            "name": "filter",
                            "displayName": "filter",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Determines which groups are returned. If 'all' (default), the text and category parameters are applied. If 'friends', groups your friends are in are returned. The value of this parameter may be one of all, friends",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "location": {
                            "name": "location",
                            "displayName": "location",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Raw text location query",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "radius": {
                            "name": "radius",
                            "displayName": "radius",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Radius in miles. May be 0.0-100.0, 'global' or 'smart', a dynamic radius based on the number of active groups in the area",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "self_groups": {
                            "name": "self_groups",
                            "displayName": "self_groups",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "set to 'include' or 'exclude' meetups the authorized member belongs to; default is 'include'",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "text": {
                            "name": "text",
                            "displayName": "text",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Raw full text search query",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "upcoming_events": {
                            "name": "upcoming_events",
                            "displayName": "upcoming_events",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "If true, filters text and category based searches on groups that have upcoming events. Defaults to false",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "zip": {
                            "name": "zip",
                            "displayName": "zip",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Zipcode of location to limit search to",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "order": {
                            "name": "order",
                            "displayName": "order",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "|value|description|\n|-|\n|distance|Order by distance|\n|members|Order by number of members|\n|most_active|Order by group with most active members|\n|newest|Order by date group was founded|\n",
                            "enum": [
                                "distance",
                                "members",
                                "most_active",
                                "newest"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Text, location, category and friend-based group searches\n\n#Request Parameters\nAll parameters are optional. If you do not supply some form of location, the results will be implicitly based on your IP's geographic location. See the 'filter' parameter for more information controlling the results returned. Ordering does not apply to friend-filtered queries.\n",
                    "method": "get",
                    "is": [
                        "list",
                        "locatable"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/find/groups",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "find",
                "groups"
            ]
        },
        {
            "relativeUri": "/{urlname}",
            "type": "meetupResource",
            "securedBy": [
                "oauth_2_0"
            ],
            "uriParameters": {
                "urlname": {
                    "name": "urlname",
                    "displayName": "urlname",
                    "type": "string",
                    "required": true,
                    "repeat": false,
                    "description": ":urlname is a group name",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            },
                            "type": {
                                "insertedAsDefault": true
                            },
                            "required": {
                                "insertedAsDefault": true
                            },
                            "repeat": {
                                "insertedAsDefault": true
                            }
                        }
                    }
                }
            },
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "group",
                                    "example": "{\n  \"visibility\": \"visibility\",\n  \"is_simplehtml\": \"is_simplehtml\",\n  \"link\": \"link\",\n  \"next_event\": {\n    \"id\": 100,\n    \"time\": 100,\n    \"name\": \"name\"\n  },\n  \"state\": 100,\n  \"join_mode\": \"join_mode\",\n  \"who\": \"who\",\n  \"city\": \"city\",\n  \"id\": 100,\n  \"timezone\": \"timezone\",\n  \"created\": 100,\n  \"list_addr\": \"list_addr\",\n  \"description\": \"description\",\n  \"ga_code\": \"ga_code\",\n  \"name\": \"name\",\n  \"urlname\": \"urlname\",\n  \"lat\": 1.0,\n  \"members\": \"members\",\n  \"list_mode\": \"list_mode\",\n  \"lon\": 1.0,\n  \"join_info\": {\n    \"questions\": {\n      \"id\": 100,\n      \"question\": \"question\"\n    },\n    \"intro_required\": \"intro_required\",\n    \"questions_req\": \"questions_req\",\n    \"photo_required\": \"photo_required\"\n  },\n  \"organizer\": {\n    \"id\": 100,\n    \"bio\": \"bio\",\n    \"name\": \"name\"\n  },\n  \"country\": \"country\",\n  \"photos\": {\n    \"id\": 100,\n    \"photo_link\": \"photo_link\",\n    \"highres_link\": \"highres_link\",\n    \"thumb_link\": \"thumb_link\"\n  },\n  \"category\": {\n    \"id\": 100,\n    \"name\": \"name\",\n    \"shortname\": \"shortname\"\n  },\n  \"group_photo\": {\n    \"id\": 100,\n    \"photo_link\": \"photo_link\",\n    \"highres_link\": \"highres_link\",\n    \"thumb_link\": \"thumb_link\"\n  },\n  \"simple_html_description\": \"simple_html_description\"\n}\n",
                                    "schemaContent": "group"
                                }
                            },
                            "description": "|||\n|-|\n|category|The primary category of the group, if the group has one|\n|city|City of the group|\n|country|Country of the group|\n|created|Time the group was created in milliseconds since the epoch|\n|description|Short description of group|\n|ga_code|Optional field return the google analytics code for the group. Only members that can edit group settings can see this|\n|group_photo|Group photo|\n|id|Numeric group ID|\n|is_simplehtml|Optional field, 'true' when the group description has been saved in a simplified HTML format, 'false' otherwise.|\n|join_info|Optional field, lists any questions requested when joining and required fields|\n|join_mode|Who can join this group and how. One of approval, closed, open|\n|lat|Latitude|\n|link|Link to group on meetup.com|\n|list_addr|Optional field returning list address prefix. List mail will be {list_addr}-list@meetup.com. Announce email will be {list_addr}-announce@meetup.com. You must be a member of the group to see this|\n|list_mode|Optional fields parameter representing the policy for who can post the the group mailing list. One of moderated, off, open, orgs_only|\n|lon|Longitude|\n|members|Number of Meetup members in this group|\n|name|Name of the group|\n|next_event|The next upcoming event, if the group has one|\n|organizer|Group's primary organizer|\n|photos|A small set of photos from the group|\n|simple_html_description|Description of the group, in simple HTML format. This value is translated to HTML to update the description.|\n|state|State of the group, if in US or Canada|\n|timezone|This represents the universal timezone identifier for the group|\n|urlname|Urlname used to identify the group on meetup.com|\n|visibility|Who can see this group. One of members, public or public_limited|\n|who|What the group calls its members|\n"
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0",
                        "oauth_1_0"
                    ],
                    "queryParameters": {
                        "country": {
                            "name": "country",
                            "displayName": "country",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "The ISO_3166-1 country code for the country which contains the city",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "description": {
                            "name": "description",
                            "displayName": "description",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Summary of what the Meetup group is about in simple HTML format",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "dryrun": {
                            "name": "dryrun",
                            "displayName": "dryrun",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Boolean parameter that will cause this endpoint to apply all validation rules without actually saving changes in which case the response will only reflect the group's current attributes",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "ga_code": {
                            "name": "ga_code",
                            "displayName": "ga_code",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Google analytics code for group",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "intro_req": {
                            "name": "intro_req",
                            "displayName": "intro_req",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Indicates that a member must supply an introduction before joining. Expects true or false values",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "join_mode": {
                            "name": "join_mode",
                            "displayName": "join_mode",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Controls how member's are let into the group. May be one of 'open' meaning any Meetup member my join, 'closed' meaning group is not currently accepting new members, or 'approval' meaning members must be approved by an organizer. Note, the 'closed' options is only available to groups that already have a 'closed' join_mode",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "list_addr": {
                            "name": "list_addr",
                            "displayName": "list_addr",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Mailing list prefix. By default this is the Group's urlname.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "list_mode": {
                            "name": "list_mode",
                            "displayName": "list_mode",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Defines policy for who can post to the group mailing list. May be one of 'open' meaning any Member can post, 'off' meaning no one can post, 'moderated' meaning messages must be approved, or 'orgs_only' meaning only organizers may post to the list",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "name": {
                            "name": "name",
                            "displayName": "name",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Display name of the group. Can be at most 60 characters",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "photo_req": {
                            "name": "photo_req",
                            "displayName": "photo_req",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Indicates that a member must provide a photo before joining. Expects true or false values",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "question_edit_{id}": {
                            "name": "question_edit_{id}",
                            "displayName": "question_edit_{id}",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Edits a current profile question identified by an id in the parameter name. The index updated index should also be encoded in the parameter name",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "question_{index}": {
                            "name": "question_{index}",
                            "displayName": "question_{index}",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "A new profile question defined in the order of index provided in the request parameter name",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "questions_req": {
                            "name": "questions_req",
                            "displayName": "questions_req",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Indicates that provide questions are required before joining. Expects true or false values",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "urlname": {
                            "name": "urlname",
                            "displayName": "urlname",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Name used for the groups web address on meetup.com. Must be between 6 and 60 characters",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "visibility": {
                            "name": "visibility",
                            "displayName": "visibility",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Restricts group visibility for non-members. May be one of 'public', 'public_limited' or 'members'. Note, the 'members' option is only available to groups that already have 'members' visibility",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "welcome_message": {
                            "name": "welcome_message",
                            "displayName": "welcome_message",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Message sent to members after they join. Can be at most 2000 characters",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "who": {
                            "name": "who",
                            "displayName": "who",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "What members of the group will be called. Can be at most 32 characters",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "zip": {
                            "name": "zip",
                            "displayName": "zip",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "The zip code of the city",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "{service}_uri": {
                            "name": "{service}_uri",
                            "displayName": "{service}_uri",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "A URI for a social network service. Service must be one of facebook, flickr, linkedin, other, tumblr, twitter",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Allows organizers to edit their Meetup group information. To change group topics, see the add and remove topics endpoints. To change group photo use the Group photo upload endpoint\n\n#Request Parameters\nAll parameters are optional.\n",
                    "method": "post",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/boards",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "boards",
                                            "example": "{\n  \"0\": {\n    \"id\": 100,\n    \"updated\": 100,\n    \"discussion_count\": 100,\n    \"created\": 100,\n    \"post_count\": 100,\n    \"name\": \"name\",\n    \"latest_reply\": {\n      \"member\": {\n        \"name\": \"name\"\n      },\n      \"created\": 100\n    },\n    \"group\": {\n      \"id\": 100\n    }\n  }\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"0\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"created\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"discussion_count\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"group\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"id\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            }\r\n          }\r\n        },\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"latest_reply\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"created\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            },\r\n            \"member\": {\r\n              \"required\": false,\r\n              \"type\": \"object\",\r\n              \"properties\": {\r\n                \"name\": {\r\n                  \"required\": false,\r\n                  \"type\": \"string\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"post_count\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"updated\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
                                        }
                                    },
                                    "description": "|||\n|-|\n|created|Time board was created in milliseconds since the epoch|\n|discussion_count|Number of discussions on this board|\n|group|The group associated with this board|\n|id|Numeric ID of discussion board|\n|latest_reply|The latest reply on this board|\n|name|Discussion board name|\n|post_count|Number of posts in discussions on this board|\n|updated|Time board was updated in milliseconds since the epoch|\n"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0",
                                "api_key"
                            ],
                            "description": "Listings of Group discussion boards",
                            "method": "get",
                            "is": [
                                "list"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/boards",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "boards"
                    ]
                },
                {
                    "relativeUri": "/topics",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "group",
                                            "example": "{\n  \"visibility\": \"visibility\",\n  \"is_simplehtml\": \"is_simplehtml\",\n  \"link\": \"link\",\n  \"next_event\": {\n    \"id\": 100,\n    \"time\": 100,\n    \"name\": \"name\"\n  },\n  \"state\": 100,\n  \"join_mode\": \"join_mode\",\n  \"who\": \"who\",\n  \"city\": \"city\",\n  \"id\": 100,\n  \"timezone\": \"timezone\",\n  \"created\": 100,\n  \"list_addr\": \"list_addr\",\n  \"description\": \"description\",\n  \"ga_code\": \"ga_code\",\n  \"name\": \"name\",\n  \"urlname\": \"urlname\",\n  \"lat\": 1.0,\n  \"members\": \"members\",\n  \"list_mode\": \"list_mode\",\n  \"lon\": 1.0,\n  \"join_info\": {\n    \"questions\": {\n      \"id\": 100,\n      \"question\": \"question\"\n    },\n    \"intro_required\": \"intro_required\",\n    \"questions_req\": \"questions_req\",\n    \"photo_required\": \"photo_required\"\n  },\n  \"organizer\": {\n    \"id\": 100,\n    \"bio\": \"bio\",\n    \"name\": \"name\"\n  },\n  \"country\": \"country\",\n  \"photos\": {\n    \"id\": 100,\n    \"photo_link\": \"photo_link\",\n    \"highres_link\": \"highres_link\",\n    \"thumb_link\": \"thumb_link\"\n  },\n  \"category\": {\n    \"id\": 100,\n    \"name\": \"name\",\n    \"shortname\": \"shortname\"\n  },\n  \"group_photo\": {\n    \"id\": 100,\n    \"photo_link\": \"photo_link\",\n    \"highres_link\": \"highres_link\",\n    \"thumb_link\": \"thumb_link\"\n  },\n  \"simple_html_description\": \"simple_html_description\"\n}\n",
                                            "schemaContent": "group"
                                        }
                                    },
                                    "description": "A successful response will include a representation of the group topics were added to\n|||\n|-|\n|category|The primary category of the group, if the group has one|\n|city|City of the group|\n|country|Country of the group|\n|created|Time the group was created in milliseconds since the epoch|\n|description|Short description of group|\n|ga_code|Optional field return the google analytics code for the group. Only members that can edit group settings can see this|\n|group_photo|Group photo|\n|id|Numeric group ID|\n|is_simplehtml|Optional field, 'true' when the group description has been saved in a simplified HTML format, 'false' otherwise.|\n|join_info|Optional field, lists any questions requested when joining and required fields|\n|join_mode|Who can join this group and how. One of approval, closed, open|\n|lat|Latitude|\n|link|Link to group on meetup.com|\n|list_addr|Optional field returning list address prefix. List mail will be {list_addr}-list@meetup.com. Announce email will be {list_addr}-announce@meetup.com. You must be a member of the group to see this|\n|list_mode|Optional fields parameter representing the policy for who can post the the group mailing list. One of moderated, off, open, orgs_only|\n|lon|Longitude|\n|members|Number of Meetup members in this group|\n|name|Name of the group|\n|next_event|The next upcoming event, if the group has one|\n|organizer|Group's primary organizer|\n|photos|A small set of photos from the group|\n|simple_html_description|Description of the group, in simple HTML format. This value is translated to HTML to update the description.|\n|state|State of the group, if in US or Canada|\n|timezone|This represents the universal timezone identifier for the group|\n|urlname|Urlname used to identify the group on meetup.com|\n|visibility|Who can see this group. One of members, public or public_limited|\n|who|What the group calls its members|\n"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0"
                            ],
                            "queryParameters": {
                                "topic_id": {
                                    "name": "topic_id",
                                    "displayName": "topic_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Comma-delimited list of topic ids to associate with group",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Associates topics with a given Meetup Group. Limited to organizers of the group.\n\n#Request Parameters\nA group can have at most 15 topics\n",
                            "method": "post",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "group",
                                            "example": "{\n  \"visibility\": \"visibility\",\n  \"is_simplehtml\": \"is_simplehtml\",\n  \"link\": \"link\",\n  \"next_event\": {\n    \"id\": 100,\n    \"time\": 100,\n    \"name\": \"name\"\n  },\n  \"state\": 100,\n  \"join_mode\": \"join_mode\",\n  \"who\": \"who\",\n  \"city\": \"city\",\n  \"id\": 100,\n  \"timezone\": \"timezone\",\n  \"created\": 100,\n  \"list_addr\": \"list_addr\",\n  \"description\": \"description\",\n  \"ga_code\": \"ga_code\",\n  \"name\": \"name\",\n  \"urlname\": \"urlname\",\n  \"lat\": 1.0,\n  \"members\": \"members\",\n  \"list_mode\": \"list_mode\",\n  \"lon\": 1.0,\n  \"join_info\": {\n    \"questions\": {\n      \"id\": 100,\n      \"question\": \"question\"\n    },\n    \"intro_required\": \"intro_required\",\n    \"questions_req\": \"questions_req\",\n    \"photo_required\": \"photo_required\"\n  },\n  \"organizer\": {\n    \"id\": 100,\n    \"bio\": \"bio\",\n    \"name\": \"name\"\n  },\n  \"country\": \"country\",\n  \"photos\": {\n    \"id\": 100,\n    \"photo_link\": \"photo_link\",\n    \"highres_link\": \"highres_link\",\n    \"thumb_link\": \"thumb_link\"\n  },\n  \"category\": {\n    \"id\": 100,\n    \"name\": \"name\",\n    \"shortname\": \"shortname\"\n  },\n  \"group_photo\": {\n    \"id\": 100,\n    \"photo_link\": \"photo_link\",\n    \"highres_link\": \"highres_link\",\n    \"thumb_link\": \"thumb_link\"\n  },\n  \"simple_html_description\": \"simple_html_description\"\n}\n",
                                            "schemaContent": "group"
                                        }
                                    },
                                    "description": "A successful response will include a representation of the group topics were removed from\n|||\n|-|\n|category|The primary category of the group, if the group has one|\n|city|City of the group|\n|country|Country of the group|\n|created|Time the group was created in milliseconds since the epoch|\n|description|Short description of group|\n|ga_code|Optional field return the google analytics code for the group. Only members that can edit group settings can see this|\n|group_photo|Group photo|\n|id|Numeric group ID|\n|is_simplehtml|Optional field, 'true' when the group description has been saved in a simplified HTML format, 'false' otherwise.|\n|join_info|Optional field, lists any questions requested when joining and required fields|\n|join_mode|Who can join this group and how. One of approval, closed, open|\n|lat|Latitude|\n|link|Link to group on meetup.com|\n|list_addr|Optional field returning list address prefix. List mail will be {list_addr}-list@meetup.com. Announce email will be {list_addr}-announce@meetup.com. You must be a member of the group to see this|\n|list_mode|Optional fields parameter representing the policy for who can post the the group mailing list. One of moderated, off, open, orgs_only|\n|lon|Longitude|\n|members|Number of Meetup members in this group|\n|name|Name of the group|\n|next_event|The next upcoming event, if the group has one|\n|organizer|Group's primary organizer|\n|photos|A small set of photos from the group|\n|simple_html_description|Description of the group, in simple HTML format. This value is translated to HTML to update the description.|\n|state|State of the group, if in US or Canada|\n|timezone|This represents the universal timezone identifier for the group|\n|urlname|Urlname used to identify the group on meetup.com|\n|visibility|Who can see this group. One of members, public or public_limited|\n|who|What the group calls its members|\n"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0"
                            ],
                            "queryParameters": {
                                "topic_id": {
                                    "name": "topic_id",
                                    "displayName": "topic_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Comma-delimited list of topic ids to disassociate with group",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Associates topics with a given Meetup Group. Limited to organizers of the group.\n\n#Request Parameters\nGroups must have at one topic. Attempts to remove all topics will result in a failed request\n",
                            "method": "delete",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/topics",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "topics"
                    ]
                },
                {
                    "relativeUri": "/member/approvals",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "description": "A successful request will result in a simple JSON-encoded message with an HTTP 200 response."
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0"
                            ],
                            "queryParameters": {
                                "member": {
                                    "name": "member",
                                    "displayName": "member",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Comma-delimited numeric pending member IDs. The maximum allowed is 200",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "send_copy": {
                                    "name": "send_copy",
                                    "displayName": "send_copy",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Optional Boolean value indicating whether or not the org should receive a copy of the message sent to the approved members",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "welcome_message": {
                                    "name": "welcome_message",
                                    "displayName": "welcome_message",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Optional message to send to the members being approved. If not provided, the groups default welcome message will be sent. Max message size is 2000",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Approves one or more requests for group membership\n\n#Request Parameters\nThe :urlname path element may be any valid group urlname or domain name. If you need access to your group's welcome message, you can access it from the /2/groups method, providing a value of welcome_message for the fields parameter. To get a list of pending members, as an organizer, you can request the status pending in the /2/profiles method.\n",
                            "method": "post",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "description": "A successful request will result in a simple JSON-encoded message with an HTTP 200 response"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0"
                            ],
                            "queryParameters": {
                                "anon": {
                                    "name": "anon",
                                    "displayName": "anon",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Optional Boolean value indicating whether your email should be revealed to the members. Default is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "ban": {
                                    "name": "ban",
                                    "displayName": "ban",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Optional Boolean value indicating whether or not to ban the member in the future. Default is false",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "explanation": {
                                    "name": "explanation",
                                    "displayName": "explanation",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Optional explanation to send to the members being declined. Max message size is 2000",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "member": {
                                    "name": "member",
                                    "displayName": "member",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Comma-delimited numeric pending member IDs. The maximum allowed is 200",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "send_copy": {
                                    "name": "send_copy",
                                    "displayName": "send_copy",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Optional Boolean value indicating whether or to send a copy to the member issuing the decline. Default is true",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Declines one or more requests for group membership\n\n#Request Parameters\nThe :urlname path element may be any valid group urlname or domain name. To get a list of pending members, as an organizer, you can request the status pending in the /2/profiles method.\n",
                            "method": "delete",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/member/approvals",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "member",
                        "approvals"
                    ]
                },
                {
                    "relativeUri": "/boards/{bid}/discussions",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "uriParameters": {
                        "bid": {
                            "name": "bid",
                            "displayName": "bid",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "description": "The :bid path element may be any valid board ID for this group.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "discussions",
                                            "example": "{\n  \"id\": 100,\n  \"body\": \"body\",\n  \"last_post\": {\n    \"member\": {\n      \"name\": \"name\"\n    },\n    \"created\": 100\n  },\n  \"updated\": 100,\n  \"reply_count\": 100,\n  \"created\": 100,\n  \"subject\": \"subject\",\n  \"started_by\": {\n    \"name\": \"name\"\n  },\n  \"board\": {\n    \"id\": 100\n  }\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"board\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        }\r\n      }\r\n    },\r\n    \"body\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"created\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"last_post\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"created\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"member\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"name\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"reply_count\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"started_by\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"subject\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"updated\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    }\r\n  }\r\n}\r\n"
                                        }
                                    },
                                    "description": "|||\n|-|\n|board|The board this discussion belongs to|\n|body|The contents of the first post in this discussion|\n|created|Time board was created in milliseconds since the epoch|\n|id|Numeric discussion ID|\n|last_post|The last post made in this discussion|\n|reply_count|Number of replies this discussion has|\n|started_by|The member that started this discussion|\n|subject|The subject of the first post in this discussion|\n|updated|Time board was updated in milliseconds since the epoch|\n"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0",
                                "api_key"
                            ],
                            "queryParameters": {
                                "order": {
                                    "name": "order",
                                    "displayName": "order",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "|value|description|\n|-|\n|last_post_date|(default) by post date|\n|member_name|by posting member's name|\n|thread_reply_count|by the threads reply count|\n|thread_view_count|by the number of views a thread has|\n",
                                    "enum": [
                                        "last_post_date",
                                        "member_name",
                                        "thread_reply_count",
                                        "thread_view_count"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Listings of Group discussions",
                            "method": "get",
                            "is": [
                                "list"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/{did}",
                            "type": "meetupResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "uriParameters": {
                                "did": {
                                    "name": "did",
                                    "displayName": "did",
                                    "type": "string",
                                    "required": true,
                                    "repeat": false,
                                    "description": "The :did may be any valid discussion ID for this board",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "discussion",
                                                    "example": "{\n  \"member\": {\n    \"id\": 100,\n    \"name\": \"name\",\n    \"state\": 100,\n    \"photo\": {\n      \"thumb\": 100\n    },\n    \"country\": \"country\",\n    \"city\": \"city\"\n  },\n  \"id\": 100,\n  \"body\": \"body\",\n  \"discussion\": {\n    \"id\": 100\n  },\n  \"updated\": 100,\n  \"created\": 100,\n  \"subject\": \"subject\",\n  \"in_reply_to\": 100\n}\n",
                                                    "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"body\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"created\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"discussion\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        }\r\n      }\r\n    },\r\n    \"id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"in_reply_to\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"member\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"city\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"country\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"photo\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"thumb\": {\r\n              \"required\": false,\r\n              \"type\": \"integer\"\r\n            }\r\n          }\r\n        },\r\n        \"state\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        }\r\n      }\r\n    },\r\n    \"subject\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"updated\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    }\r\n  }\r\n}\r\n"
                                                }
                                            },
                                            "description": "|||\n|-|\n|body|content of the post|\n|created|Time post was created in milliseconds since the epoch|\n|discussion|The discussion this was posted in|\n|id|Numeric post ID|\n|in_reply_to|ID of the post this was in reply to|\n|member|The member that started this discussion|\n|subject|subject of the post|\n|updated|Time post was updated in milliseconds since the epoch|\n"
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0",
                                        "oauth_1_0",
                                        "api_key"
                                    ],
                                    "description": "Listing Group discussion posts",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/{did}",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "{did}"
                            ]
                        }
                    ],
                    "displayName": "/boards/{bid}/discussions",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "boards",
                        "{bid}",
                        "discussions"
                    ]
                },
                {
                    "relativeUri": "/venues",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "groupVenues",
                                            "example": "{\n  \"results\": [\n    {\n      \"id\": 0,\n      \"zip\": \"zip 0\",\n      \"phone\": 0,\n      \"lon\": 1.0,\n      \"address_3\": \"address_3 0\",\n      \"visibility\": \"visibility 0\",\n      \"name\": \"name 0\",\n      \"state\": 0,\n      \"address_1\": \"address_1 0\",\n      \"address_2\": \"address_2 0\",\n      \"lat\": 1.0,\n      \"country\": \"country 0\",\n      \"city\": \"city 0\"\n    },\n    {\n      \"id\": 1,\n      \"zip\": \"zip 1\",\n      \"phone\": 1,\n      \"lon\": 1.0,\n      \"address_3\": \"address_3 1\",\n      \"visibility\": \"visibility 1\",\n      \"name\": \"name 1\",\n      \"state\": 1,\n      \"address_1\": \"address_1 1\",\n      \"address_2\": \"address_2 1\",\n      \"lat\": 1.0,\n      \"country\": \"country 1\",\n      \"city\": \"city 1\"\n    }\n  ]\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"address_1\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"address_2\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"address_3\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"city\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"country\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"lat\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"lon\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"phone\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"state\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"visibility\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"zip\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
                                        }
                                    },
                                    "description": "Meetup venue data comes from varying sources and may not contain all documented parameters\n|||\n|-|\n|address_1|If available, the first address line of the venue|\n|address_2|If available, the second address line of the venue|\n|address_3|If available, the third address line of the venue|\n|city|If available, the name of the venue's city|\n|country|If available, the name of the venue's country code|\n|id|ID, of the venue|\n|lat|If available, the venue's latitude|\n|lon|If available, the venue's longitude|\n|name|If available, the venue's name|\n|phone|If available, the venue's photo number|\n|state|If available and the venue's country id within the US or Canada, the venue's state|\n|visibility|'private' if this venue is a private home, otherwise 'public'|\n|zip|If available, the venue's zipcode|\n"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0",
                                "api_key"
                            ],
                            "description": "Returns venues a group has previously hosted events at\n\n#Request Parameters\nThe :urlname path element may be any valid group urlname or domain name. All parameters are optional\n",
                            "method": "get",
                            "is": [
                                "list"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "description": "|||\n|-|\n|address_1|If available, the first address line of the venue|\n|address_2|If available, the second address line of the venue|\n|address_3|If available, the third address line of the venue|\n|city|If available, the name of the venue's city|\n|country|If available, the name of the venue's country code|\n|id|ID, of the venue|\n|lat|If available, the venue's latitude|\n|lon|If available, the venue's longitude|\n|name|If available, the venue's name|\n|phone|If available, the venue's photo number|\n|state|If available and the venue's country id within the US or Canada, the venue's state|\n|visibility|'private' if this venue is a private home, otherwise 'public'|\n|zip|If available, the venue's zipcode|\n"
                                },
                                "409": {
                                    "code": "409",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "groupVenue",
                                            "example": "{\n  \"id\": 100,\n  \"zip\": \"zip\",\n  \"phone\": 100,\n  \"lon\": 1.0,\n  \"address_3\": \"address_3\",\n  \"visibility\": \"visibility\",\n  \"name\": \"name\",\n  \"state\": 100,\n  \"address_1\": \"address_1\",\n  \"address_2\": \"address_2\",\n  \"lat\": 1.0,\n  \"country\": \"country\",\n  \"city\": \"city\"\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"address_1\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"address_2\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"address_3\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"city\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"country\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"lat\": {\r\n      \"required\": false,\r\n      \"type\": \"number\"\r\n    },\r\n    \"lon\": {\r\n      \"required\": false,\r\n      \"type\": \"number\"\r\n    },\r\n    \"name\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"phone\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"state\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"visibility\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"zip\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    }\r\n  }\r\n}\r\n"
                                        }
                                    },
                                    "description": "If potential matches are detected, this method will return a 409 Conflict response containing a list of potential matches"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0"
                            ],
                            "queryParameters": {
                                "address_1": {
                                    "name": "address_1",
                                    "displayName": "address_1",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Primary address of the venue",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "address_2": {
                                    "name": "address_2",
                                    "displayName": "address_2",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Secondary address info",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "hours": {
                                    "name": "hours",
                                    "displayName": "hours",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Open hours information about the venue",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "name": {
                                    "name": "name",
                                    "displayName": "name",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Unique name of the venue",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "phone": {
                                    "name": "phone",
                                    "displayName": "phone",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Optional phone number for the venue",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "state": {
                                    "name": "state",
                                    "displayName": "state",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "If in the US or CA, the state code for the venue",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "visibility": {
                                    "name": "visibility",
                                    "displayName": "visibility",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Optional value indicating the venues visibility to others. May be one of private or public. Defaults to 'public'",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "web_url": {
                                    "name": "web_url",
                                    "displayName": "web_url",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Optional web url for the venue",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Interface for creating new Meetup venues\n\n#Request Parameters\nThe :urlname path element may be any valid group urlname or domain name. The required parameters are highlighted below. To avoid creating duplicate Meetup venues, this endpoint will attempt to resolve potentially similar venues based on name and address before creating a new public venues. If potential matches are detected, this method will return a 409 Conflict response containing a list of potential matches\n",
                            "method": "post",
                            "is": [
                                "locationByCity"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/venues",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "venues"
                    ]
                },
                {
                    "relativeUri": "/events/{id}",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "uriParameters": {
                        "id": {
                            "name": "id",
                            "displayName": "id",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "description": "The :id path element must be a valid alphanumeric Meetup event identifier",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "resources": [
                        {
                            "relativeUri": "/attendance",
                            "type": "meetupResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "attendance",
                                                    "example": "{\n  \"results\": [\n    {\n      \"member\": {\n        \"id\": 0,\n        \"name\": \"name 0\",\n        \"photo\": {\n          \"thumb\": 0\n        }\n      },\n      \"status\": \"status 0\",\n      \"rsvp\": {\n        \"response\": \"response 0\",\n        \"guests\": \"guests 0\"\n      }\n    },\n    {\n      \"member\": {\n        \"id\": 1,\n        \"name\": \"name 1\",\n        \"photo\": {\n          \"thumb\": 1\n        }\n      },\n      \"status\": \"status 1\",\n      \"rsvp\": {\n        \"response\": \"response 1\",\n        \"guests\": \"guests 1\"\n      }\n    }\n  ]\n}\n",
                                                    "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"member\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"photo\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"thumb\": {\r\n                    \"required\": false,\r\n                    \"type\": \"integer\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"rsvp\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"guests\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"response\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"status\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
                                                }
                                            },
                                            "description": "|||\n|-|\n|member|Member in or not in attendance|\n|rsvp|RSVP, if member originally RSVP'd|\n|status|The member's attendance status. May be one of: noshow, absent, attended|\n"
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0",
                                        "oauth_1_0",
                                        "api_key"
                                    ],
                                    "queryParameters": {
                                        "filter": {
                                            "name": "filter",
                                            "displayName": "filter",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "A named filter to apply to the attendance list. These are roughly equivalent to the set of filters you will see in the attendance tool on the site. These filters correspond with attendance records as well as each member's original RSVP status. The filter value be one of: maybe, waitlist, yes, absent, all, attended, noshow, excused, no. The default is 'attended'. The 'absent' filter represents all members not in attendance including members with a 'noshow' status. An 'excused' absence is an absent member marked as such by an administrative member\n",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "member": {
                                            "name": "member",
                                            "displayName": "member",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "Raw text used to search for member by name. This may only be applied when the filter parameter is set to 'all'. The provided text must consist of at least 2 characters.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Lists attendance records for Meetup events. Limited for use by administrative members.",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "description": "If successful, this method returns a 200 response with a JSON-encoded success message"
                                        },
                                        "400": {
                                            "code": "400",
                                            "description": "Failures will result a 400 response"
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0",
                                        "oauth_1_0"
                                    ],
                                    "queryParameters": {
                                        "guests": {
                                            "name": "guests",
                                            "displayName": "guests",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "The number of guests accompanying member. Maximum of 99 is allowed.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "headcount": {
                                            "name": "headcount",
                                            "displayName": "headcount",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "Sets the overall headcount for the event. This may not necessarily correlate with the list of attendees in this group if the event is part of a joint Meetup event",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "member": {
                                            "name": "member",
                                            "displayName": "member",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "A valid ID of member in the group",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "status": {
                                            "name": "status",
                                            "displayName": "status",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "An attendance status for the member. Must be one of: noshow, absent, attended\n",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Takes Member attendance for an Event. Limted for use by administrative members.\n\n#Request Parameters\nThe :urlname path element may be any valid group urlname or domain name. The :id path element must be a valid alphanumeric Meetup event identifier. Highlighted fields are required\n",
                                    "method": "post",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/attendance",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "attendance"
                            ]
                        },
                        {
                            "relativeUri": "/watchlist",
                            "type": "binaryState",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "watching",
                                                    "example": "{\"status\":\"watching\"}\r\n",
                                                    "schemaContent": "{\r\n    \"$schema\" : \"http://json-schema.org/draft-03/schema\",\r\n    \"required\" : true,\r\n    \"type\" : \"object\",\r\n    \"properties\" : {\r\n        \"status\" : {\r\n            \"required\" : true,\r\n            \"type\" : \"string\"\r\n        }\r\n    }\r\n}\r\n"
                                                }
                                            },
                                            "description": "A successful add will result in the json message {\"status\":\"watching\"}"
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0",
                                        "oauth_1_0"
                                    ],
                                    "description": "Add yourself to an event watch list to get notified when a spot becomes available\n\n#Request Parameters\nNo parameters are required. You should only call this method if you request the fields parameter 'self' in any events methods and get back a self.actions field containing 'watch'\n",
                                    "method": "post",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "notWatching",
                                                    "example": "{\"status\":\"not_watching\"}\r\n",
                                                    "schemaContent": "{\r\n    \"$schema\" : \"http://json-schema.org/draft-03/schema\",\r\n    \"required\" : true,\r\n    \"type\" : \"object\",\r\n    \"properties\" : {\r\n        \"status\" : {\r\n            \"required\" : true,\r\n            \"type\" : \"string\"\r\n        }\r\n    }\r\n}\r\n"
                                                }
                                            },
                                            "description": "A successful watchlist removal will result in the json message {\"status\":\"not_watching\"}. You may optionally send a fields parameter with the value of \"self\" to fetch rsvp_actions for the authenticated member"
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0",
                                        "oauth_1_0"
                                    ],
                                    "description": "Remove yourself from an event watch list\n\n#Request Parameters\nNo parameters are required. You should only call this method if you request the fields parameter 'self' in any events methods and get back a self.actions field containing 'unwatch'\n",
                                    "method": "delete",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/watchlist",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "watchlist"
                            ]
                        },
                        {
                            "relativeUri": "/payments",
                            "type": "meetupResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "payments",
                                                    "example": "{\n  \"results\": [\n    {\n      \"id\": 0,\n      \"confirm_code\": \"confirm_code 0\"\n    },\n    {\n      \"id\": 1,\n      \"confirm_code\": \"confirm_code 1\"\n    }\n  ]\n}\n",
                                                    "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"confirm_code\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
                                                }
                                            },
                                            "description": "|||\n|-|\n|confirm_code|Confirmation code for the payment|\n|id|Unique identifier for the payment|\n"
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0",
                                        "oauth_1_0"
                                    ],
                                    "queryParameters": {
                                        "amount": {
                                            "name": "amount",
                                            "displayName": "amount",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "The monetary amount of money the member submited",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "member": {
                                            "name": "member",
                                            "displayName": "member",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "Member Id of member who made a payment",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "paid_on": {
                                            "name": "paid_on",
                                            "displayName": "paid_on",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "The time the payment was made in milliseconds from the epoc. Defaults to now",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "quantity": {
                                            "name": "quantity",
                                            "displayName": "quantity",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "The number of payments made. Defaults to 1",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Allows organizers of a group to note payments made by members for an event. This is the 'Mark Paid' feature seen in the RSVP listings on event details pages and affects the 'pay_status' response fields in 2/rsvps for paid events\n\n#Request Parameters\nOnly organizer may submit payment information for members and only one payment may be submitted for a member for a given event\n",
                                    "method": "post",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/payments",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "payments"
                            ]
                        }
                    ],
                    "displayName": "/events/{id}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "events",
                        "{id}"
                    ]
                }
            ],
            "displayName": "/{urlname}",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "{urlname}"
            ]
        },
        {
            "relativeUri": "/oembed",
            "type": "meetupResource",
            "securedBy": [
                "oauth_2_0"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "description": "Returns the rich type of ombed resources defined in section 2 of the oEmbed specification in json format."
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "queryParameters": {
                        "maxwidth": {
                            "name": "maxwidth",
                            "displayName": "maxwidth",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "maximum width to display",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "url": {
                            "name": "url",
                            "displayName": "url",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "url of resource to be embedded",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "oEmbed implementation\n\n#Request Parameters\nThis method does not require authentication. It requires only a url parameter and responds according to the OEmbed specification. Any of the following base URLs may refer to embeddable content:\n\nhttp://www.meetup.com/\nhttp://meetup.com/\nhttp://meetu.ps/\nAn optional maxwidth parameter may be provided.\n",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/oembed",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "oembed"
            ]
        },
        {
            "relativeUri": "/topics",
            "type": "meetupResource",
            "securedBy": [
                "oauth_2_0"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "topics",
                                    "example": "{\n  \"results\": [\n    {\n      \"id\": 0,\n      \"description\": \"description 0\",\n      \"urlkey\": \"urlkey 0\",\n      \"name\": \"name 0\",\n      \"link\": \"link 0\",\n      \"members\": \"members 0\"\n    },\n    {\n      \"id\": 1,\n      \"description\": \"description 1\",\n      \"urlkey\": \"urlkey 1\",\n      \"name\": \"name 1\",\n      \"link\": \"link 1\",\n      \"members\": \"members 1\"\n    }\n  ]\n}\n",
                                    "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"description\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"link\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"members\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"urlkey\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
                                }
                            },
                            "description": "|||\n|-|\n|description|A description of the topic|\n|id|The ID of the topic|\n|link|A URL of the topic's page on meetup.com updated The last date and time that this topic's information changed|\n|members|The number of members who belong to groups under this topic|\n|name|The name of the topic|\n|urlkey|The unique keyword used to identify this topic|\n"
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0",
                        "oauth_1_0",
                        "api_key"
                    ],
                    "queryParameters": {
                        "member_id": {
                            "name": "member_id",
                            "displayName": "member_id",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Return topics a target member is subscribed to",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "name": {
                            "name": "name",
                            "displayName": "name",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Return topics that match the specified name (e.g. 'Digital Photography', 'Classical Music')",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "search": {
                            "name": "search",
                            "displayName": "search",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Return topics related to a list of search terms [separate search keywords with +'s]",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "topic": {
                            "name": "topic",
                            "displayName": "topic",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Return members that RSVP'd to events with these ID numbers [separated by commas]",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "order": {
                            "name": "order",
                            "displayName": "order",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "|value|description|\n|-|\n|alertees|total alertees in the topic|\n|members|total members in the topic|\n|name|the topic name|\n|topic|the topic key|\n",
                            "enum": [
                                "alertees",
                                "members",
                                "name",
                                "topic"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "API method for accessing meetup topics\n\n#Request Parameters\nAt least one of the required parameter(s) must be supplied with the request.\n",
                    "method": "get",
                    "is": [
                        "list"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/topics",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "topics"
            ]
        },
        {
            "relativeUri": "/events",
            "type": "meetupResource",
            "securedBy": [
                "oauth_2_0"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "deprecatedEvents",
                                    "example": "{\n  \"results\": [\n    {\n      \"rsvpcount\": \"rsvpcount 0\",\n      \"venue_name\": \"venue_name 0\",\n      \"maybe_rsvpcount\": \"maybe_rsvpcount 0\",\n      \"my_waitlist_status\": \"my_waitlist_status 0\",\n      \"organizer_id\": 0,\n      \"allow_maybe_rsvp\": \"allow_maybe_rsvp 0\",\n      \"feelabel\": \"feelabel 0\",\n      \"member_status\": \"member_status 0\",\n      \"myrsvp\": \"myrsvp 0\",\n      \"id\": 0,\n      \"time\": \"time 0\",\n      \"venue_zip\": \"venue_zip 0\",\n      \"venue_visibility\": \"venue_visibility 0\",\n      \"ismeetup\": \"ismeetup 0\",\n      \"feedesc\": \"feedesc 0\",\n      \"venue_address1\": \"venue_address1 0\",\n      \"updated\": 0,\n      \"venue_city\": \"venue_city 0\",\n      \"venue_address2\": \"venue_address2 0\",\n      \"description\": \"description 0\",\n      \"name\": \"name 0\",\n      \"venue_id\": 0,\n      \"photo_album_id\": 0,\n      \"photo_count\": 0,\n      \"venue_state\": \"venue_state 0\",\n      \"lat\": 1.0,\n      \"lon\": 1.0,\n      \"no_rsvpcount\": \"no_rsvpcount 0\",\n      \"status\": \"status 0\",\n      \"photo_url\": \"photo_url 0\",\n      \"guest_limit\": \"guest_limit 0\",\n      \"waiting_rsvpcount\": \"waiting_rsvpcount 0\",\n      \"utc_time\": 0,\n      \"utc_rsvp_cutoff\": 0,\n      \"organizer_name\": \"organizer_name 0\",\n      \"short_link\": \"short_link 0\",\n      \"utc_rsvp_open_time\": 0,\n      \"feecurrency\": \"feecurrency 0\",\n      \"event_hosts\": {\n        \"member_name\": \"member_name 0\",\n        \"member_id\": 0\n      },\n      \"attendee_count\": 0,\n      \"venue_phone\": \"venue_phone 0\",\n      \"venue_lon\": \"venue_lon 0\",\n      \"fee\": \"fee 0\",\n      \"venue_map\": \"venue_map 0\",\n      \"rating_count\": 0,\n      \"how_to_find_us\": \"how_to_find_us 0\",\n      \"rating\": \"rating 0\",\n      \"venue_lat\": \"venue_lat 0\"\n    },\n    {\n      \"rsvpcount\": \"rsvpcount 1\",\n      \"venue_name\": \"venue_name 1\",\n      \"maybe_rsvpcount\": \"maybe_rsvpcount 1\",\n      \"my_waitlist_status\": \"my_waitlist_status 1\",\n      \"organizer_id\": 1,\n      \"allow_maybe_rsvp\": \"allow_maybe_rsvp 1\",\n      \"feelabel\": \"feelabel 1\",\n      \"member_status\": \"member_status 1\",\n      \"myrsvp\": \"myrsvp 1\",\n      \"id\": 1,\n      \"time\": \"time 1\",\n      \"venue_zip\": \"venue_zip 1\",\n      \"venue_visibility\": \"venue_visibility 1\",\n      \"ismeetup\": \"ismeetup 1\",\n      \"feedesc\": \"feedesc 1\",\n      \"venue_address1\": \"venue_address1 1\",\n      \"updated\": 1,\n      \"venue_city\": \"venue_city 1\",\n      \"venue_address2\": \"venue_address2 1\",\n      \"description\": \"description 1\",\n      \"name\": \"name 1\",\n      \"venue_id\": 1,\n      \"photo_album_id\": 1,\n      \"photo_count\": 1,\n      \"venue_state\": \"venue_state 1\",\n      \"lat\": 1.0,\n      \"lon\": 1.0,\n      \"no_rsvpcount\": \"no_rsvpcount 1\",\n      \"status\": \"status 1\",\n      \"photo_url\": \"photo_url 1\",\n      \"guest_limit\": \"guest_limit 1\",\n      \"waiting_rsvpcount\": \"waiting_rsvpcount 1\",\n      \"utc_time\": 1,\n      \"utc_rsvp_cutoff\": 1,\n      \"organizer_name\": \"organizer_name 1\",\n      \"short_link\": \"short_link 1\",\n      \"utc_rsvp_open_time\": 1,\n      \"feecurrency\": \"feecurrency 1\",\n      \"event_hosts\": {\n        \"member_name\": \"member_name 1\",\n        \"member_id\": 1\n      },\n      \"attendee_count\": 1,\n      \"venue_phone\": \"venue_phone 1\",\n      \"venue_lon\": \"venue_lon 1\",\n      \"fee\": \"fee 1\",\n      \"venue_map\": \"venue_map 1\",\n      \"rating_count\": 1,\n      \"how_to_find_us\": \"how_to_find_us 1\",\n      \"rating\": \"rating 1\",\n      \"venue_lat\": \"venue_lat 1\"\n    }\n  ]\n}\n",
                                    "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"allow_maybe_rsvp\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"attendee_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"description\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"event_hosts\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"member_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"member_name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"fee\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"feecurrency\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"feedesc\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"feelabel\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"guest_limit\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"how_to_find_us\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"ismeetup\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"lat\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"lon\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"maybe_rsvpcount\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"member_status\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"my_waitlist_status\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"myrsvp\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"no_rsvpcount\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"organizer_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"organizer_name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"photo_album_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"photo_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"photo_url\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"rating\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"rating_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"rsvpcount\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"short_link\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"status\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"time\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"updated\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"utc_rsvp_cutoff\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"utc_rsvp_open_time\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"utc_time\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"venue_address1\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"venue_address2\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"venue_city\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"venue_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"venue_lat\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"venue_lon\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"venue_map\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"venue_name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"venue_phone\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"venue_state\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"venue_visibility\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"venue_zip\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"waiting_rsvpcount\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
                                }
                            },
                            "description": "|||\n|-|\n|allow_maybe_rsvp|Set to \"1\" if this meetup allows members to rsvp \"Maybe\", or|\n|attendee_count|Number of attendees at the event|\n|description|Description of the event, see text_format above|\n|event_hosts|Members chosen to host this event, may include the organizer|\n|fee|Fee for this event (or 0.0 if this event has no fee)|\n|feecurrency|Currency of the fee for this event|\n|feedesc|Fee description, or blank if this event has no fee|\n|feelabel|Fee label, or blank if this event has no fee or fee label|\n|guest_limit|Maximum number of guests that a member can RSVP for|\n|how_to_find_us|The information provided by the event host for \"How will members find you there?\"|\n|id|The ID of the event|\n|ismeetup|Set to either a \"1\" or a \"0\" if this is a Meetup event or just a calendar note, respectively|\n|lat, lon|Latitude and longitude coordinates of group location|\n|maybe_rsvpcount|Number of \"maybe\" rsvps to this event, including guests|\n|member_status|Set to \"member\" or \"nonmember\" if member is member of the group hosting the event|\n|my_waitlist_status|The current waitlist status for this event of the user making the request (could be \"waitlist\" or blank)|\n|myrsvp|The current RSVP status for this event of the user making the request (could be \"yes\",\"no\",\"maybe\", or \"none\")|\n|name|The name (title) of the event|\n|no_rsvpcount|Number of \"no\" rsvps to this event|\n|organizer_id|Member ID of the organizer of this Meetup group|\n|organizer_name|Name of the organizer of this Meetup group|\n|photo_album_id|ID of photo album attached to this event, only supplied if fields contains \"photo_album_id\"|\n|photo_count|Number of photos in an album associated with this event, only supplied if fields contains \"photo_album_id\"|\n|photo_url|URL of the event photo|\n|rating|The event's rating. If the event hasn't happened yet or there are no ratings submitted, this field will default to 0|\n|rating_count|The number of ratings that have been submitted for the event. If the event hasn't happened yet or there are no ratings submitted, this field will default to 0|\n|rsvpcount|Number of \"yes\" or \"maybe\" rsvps to this event, including guests.|\n|short_link|Optional field. If hosting group is private, this will return the group's short_link|\n|status|Description of the event, see text_format above|\n|time|The date and time that the event will take place|\n|updated|The last date and time that the event's information was modified|\n|utc_rsvp_cutoff|The date and time that members can RSVP until, in milliseconds since the epoch|\n|utc_rsvp_open_time|The date and time that members can begin to RSVP, in milliseconds since the epoch|\n|utc_time|The date and time that the event will take place, in milliseconds since the epoch.|\n|venue_address1|line 1 of venue address|\n|venue_address2|line 2 of venue address|\n|venue_city|city of venue|\n|venue_id|ID of venue|\n|venue_lat, venue_lon|the latitude and longitude of the venue|\n|venue_map|URL of a map indicating the venue location|\n|venue_name|name of venue|\n|venue_phone|phone number of venue|\n|venue_state|state of venue|\n|venue_visibility|Set to \"members\" or \"public\". All other venue fields will be blank if the visibility is \"members\" and the current authenticated user is not a member of the group hosting the event.|\n|venue_zip|zipcode of venue|\n|waiting_rsvpcount|Number of waitlist rsvps to this event, including guests, only supplied if fields contains \"waiting_rsvpcount\"|\n"
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0",
                        "oauth_1_0",
                        "api_key"
                    ],
                    "queryParameters": {
                        "fields": {
                            "name": "fields",
                            "displayName": "fields",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Request that additional fields (separated by commas) be included in the output. \"photo_album_id\" will include photo album info, and \"waiting_rsvpcount\" will include waitlist rsvp info in response items",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "group_urlname": {
                            "name": "group_urlname",
                            "displayName": "group_urlname",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Return events for the group with this custom URL path",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "id": {
                            "name": "id",
                            "displayName": "id",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Return events with the specified IDs, separated by commas. When id is supplied, the date and status parameters are by default unlimited so that all events with matching IDs will be returned",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "rsvp_limit": {
                            "name": "rsvp_limit",
                            "displayName": "rsvp_limit",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "The number of \"yes\" rsvps an event can have before members will be added to the waiting list",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "status": {
                            "name": "status",
                            "displayName": "status",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Return events matching one of the given status values, separated by commas. Possible statuses are \"upcoming\", \"autoscheduled\", \"proposed\", \"suggested\", and \"past\". The default status parameter is \"upcoming\". If a date of today or earlier is specified for after, the default becomes \"past,upcoming\". Specifying a status of \"autoscheduled\" by itself, or in addition to others, will display events which have been created using the autoscheduling tool.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "text_format": {
                            "name": "text_format",
                            "displayName": "text_format",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Format of the description text, \"html\", \"plain\", or \"simplehtml\". Defaults to \"html\"",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "topic": {
                            "name": "topic",
                            "displayName": "topic",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Return events in the specified topic(s), one topic allowed",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "groupnum": {
                            "name": "groupnum",
                            "displayName": "groupnum",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "{topic, groupnum} - Return events for the group with given topic and number\n",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "order": {
                            "name": "order",
                            "displayName": "order",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "|value|description|\n|-|\n|group|the name of the group having the event|\n|location|group location, country, state [if present], city|\n|time|event time|\n|topic|the topic of the event|\n|updated|event updated field|\n",
                            "enum": [
                                "group",
                                "location",
                                "time",
                                "topic",
                                "updated"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Deprecated API method for accessing meetup events. Please see /2/events and /2/open_events for replacements.\n\n#Request Parameters\nAt least one of the required parameters must be supplied with the request. Location-based queries are deprecated. Use the /2/open_events API for location-based queries instead.\n",
                    "method": "get",
                    "is": [
                        "list",
                        "groupmember",
                        "hasTimeRange"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/events",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "events"
            ]
        },
        {
            "relativeUri": "/photos",
            "type": "meetupResource",
            "securedBy": [
                "oauth_2_0"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "deprecatedPhotos",
                                    "example": "{\n  \"results\": [\n    {\n      \"album_id\": 0,\n      \"member_url\": \"member_url 0\",\n      \"albumtitle\": \"albumtitle 0\",\n      \"captions\": \"captions 0\",\n      \"created\": 0,\n      \"link\": \"link 0\",\n      \"descr\": 0\n    },\n    {\n      \"album_id\": 1,\n      \"member_url\": \"member_url 1\",\n      \"albumtitle\": \"albumtitle 1\",\n      \"captions\": \"captions 1\",\n      \"created\": 1,\n      \"link\": \"link 1\",\n      \"descr\": 1\n    }\n  ]\n}\n",
                                    "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"album_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"albumtitle\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"captions\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"created\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"descr\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"link\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"member_url\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
                                }
                            },
                            "description": "|||\n|-|\n|album_id|Unique identifier of the photo album|\n|albumtitle|The name of the photo album that the photo belongs to|\n|captions|An array containing the captions of the photos in the album|\n|created|The time and date that the photo was created|\n|descr|A description of the photo|\n|link|URL where the photo can be viewed|\n|member_url|URL of the public profile of the member who posted the photo|\n"
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0",
                        "oauth_1_0",
                        "api_key"
                    ],
                    "queryParameters": {
                        "album_id": {
                            "name": "album_id",
                            "displayName": "album_id",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "return photos for the albums with the given id, separated by commas",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "topic_id": {
                            "name": "topic_id",
                            "displayName": "topic_id",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Return photos in topics with this ID number",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "order": {
                            "name": "order",
                            "displayName": "order",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "|value|description|\n|-|\n|photo_album_id|the id of the photo, (newer = higher)|\n",
                            "enum": [
                                "photo_album_id"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "API method for accessing meetup photos\n\n#Request Parameters\nAt least one of the required parameter(s) must be supplied with the request.\n",
                    "method": "get",
                    "is": [
                        "list",
                        {
                            "searchesByGroup": {
                                "name": "comments"
                            }
                        }
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/photos",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "photos"
            ]
        },
        {
            "relativeUri": "/cities",
            "type": "meetupResource",
            "securedBy": [
                "oauth_2_0"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "deprecatedCities",
                                    "example": "{\n  \"results\": [\n    {\n      \"zip\": \"zip 0\",\n      \"lon\": 1.0,\n      \"state\": 0,\n      \"members\": \"members 0\",\n      \"lat\": 1.0,\n      \"country\": \"country 0\",\n      \"city\": \"city 0\"\n    },\n    {\n      \"zip\": \"zip 1\",\n      \"lon\": 1.0,\n      \"state\": 1,\n      \"members\": \"members 1\",\n      \"lat\": 1.0,\n      \"country\": \"country 1\",\n      \"city\": \"city 1\"\n    }\n  ]\n}\n",
                                    "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"checker\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"member_city\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_country\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"member_state\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"checkin_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"comment\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"event_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"group_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"lat\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"lon\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"member_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"member_name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"time\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
                                }
                            },
                            "description": "|||\n|-|\n|city|The name of the city|\n|country, state, zip|The country that the city is in, plus state and zip for cities in the U.S|\n|lat,lon|The latitude and longitude of the city's location|\n|members|The number of members located in the city|\n"
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0",
                        "oauth_1_0",
                        "api_key"
                    ],
                    "queryParameters": {
                        "country": {
                            "name": "country",
                            "displayName": "country",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Return cities in these countries [separate countries with commas]",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "state": {
                            "name": "state",
                            "displayName": "state",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Return cities in these states [separate states with commas]",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "order": {
                            "name": "order",
                            "displayName": "order",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "|value|description|\n|-|\n|members|total members in the city|\n|name|the city name|\n",
                            "enum": [
                                "members",
                                "name"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "API method for accessing meetup cities",
                    "method": "get",
                    "is": [
                        "list"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/cities",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "cities"
            ]
        },
        {
            "relativeUri": "/members",
            "type": "meetupResource",
            "securedBy": [
                "oauth_2_0"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "deprecatedMembers",
                                    "example": "{\n  \"results\": [\n    {\n      \"lon\": 1.0,\n      \"photo_url\": \"photo_url 0\",\n      \"messaging_pref\": \"messaging_pref 0\",\n      \"link\": \"link 0\",\n      \"state\": 0,\n      \"lang\": \"lang 0\",\n      \"country\": \"country 0\",\n      \"city\": \"city 0\",\n      \"visited\": \"visited 0\",\n      \"id\": 0,\n      \"topics\": {\n        \"id\": 0,\n        \"urlkey\": \"urlkey 0\",\n        \"name\": \"name 0\"\n      },\n      \"joined\": \"joined 0\",\n      \"bio\": \"bio 0\",\n      \"email\": 0,\n      \"name\": \"name 0\",\n      \"other_services\": {\n        \"[service-name]\": {\n          \"identifier\": \"identifier 0\"\n        }\n      },\n      \"lat\": 1.0\n    },\n    {\n      \"lon\": 1.0,\n      \"photo_url\": \"photo_url 1\",\n      \"messaging_pref\": \"messaging_pref 1\",\n      \"link\": \"link 1\",\n      \"state\": 1,\n      \"lang\": \"lang 1\",\n      \"country\": \"country 1\",\n      \"city\": \"city 1\",\n      \"visited\": \"visited 1\",\n      \"id\": 1,\n      \"topics\": {\n        \"id\": 1,\n        \"urlkey\": \"urlkey 1\",\n        \"name\": \"name 1\"\n      },\n      \"joined\": \"joined 1\",\n      \"bio\": \"bio 1\",\n      \"email\": 1,\n      \"name\": \"name 1\",\n      \"other_services\": {\n        \"[service-name]\": {\n          \"identifier\": \"identifier 1\"\n        }\n      },\n      \"lat\": 1.0\n    }\n  ]\n}\n",
                                    "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"bio\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"country\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"city\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"state\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"email\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"joined\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"lang\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"lat\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"lon\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"link\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"messaging_pref\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"other_services\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"[service-name]\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"identifier\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"photo_url\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"topics\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"urlkey\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"visited\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
                                }
                            },
                            "description": "|||\n|-|\n|bio|A description of the member|\n|country, city, state|Country, City, (and for the US, State) the member has provided|\n|email|Member's email address, if requested in fields parameter. This item is only included if the currently authenticated user is the founder of a Meetup Everywhere in which the member has elected to share an email address.|\n|id|The member's id|\n|joined|Date and time a member joined|\n|lang|The member's current language preference|\n|lat, lon|Latitude and longitude coordinates of the members reported city|\n|link|URL to the member's profile page on meetup.com|\n|messaging_pref|returned when the \"fields\" parameter is set to \"messging_pref\". This specifies the members preference for being contacted from members on the site. Possible values are \"orgs_only\", \"groups_only\", \"all_members\"|\n|name||\n|other_services|Third-party services associated with the member account|\n|photo_url|Link to the profile photo of the member|\n|topics|A sampling of 50 topics this member has subscribed to. Only appears if the queried user has not hidden them, or if the authenticated and queried user are the same|\n|visited|Date and time of member's last activity|\n"
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0",
                        "oauth_1_0",
                        "api_key"
                    ],
                    "queryParameters": {
                        "fields": {
                            "name": "fields",
                            "displayName": "fields",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Request that additional fields (separated by commas) be included in the output.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "group_urlname": {
                            "name": "group_urlname",
                            "displayName": "group_urlname",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Return members for the group with the given custom URL path",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "relation": {
                            "name": "relation",
                            "displayName": "relation",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Supply the string \"self\" as the value for this parameter to get the information of the member linked to the API key making the request",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "service": {
                            "name": "service",
                            "displayName": "service",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Match users by the external services they've linked to their member account, specified as \"servicename:identifier\". For example, \"service=twitter:@MeetupAPI\" finds any member account that lists @MeetupAPI as its Twitter name (none, currently). You can query against several at a time by separating them with commas.\n",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "topic": {
                            "name": "topic",
                            "displayName": "topic",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "{topic, groupnum} - Return members for the group with given topic and number\n",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "groupnum": {
                            "name": "groupnum",
                            "displayName": "groupnum",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "{topic, groupnum} - Return members for the group with given topic and number\n",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "order": {
                            "name": "order",
                            "displayName": "order",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "|value|description|\n|-|\n|name|the name of the member|\n|visited|member's most recent activity|\n",
                            "enum": [
                                "name",
                                "visited"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "API method for accessing members of Meetup Groups\n\n#Request Parameters\nAt least one of the required parameter(s) must be supplied with the request. If any of the groups you specify are private, you will not see its members listed in the result set unless you are a member of that group.\n",
                    "method": "get",
                    "is": [
                        "list",
                        "groupmember"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/members",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "members"
            ]
        },
        {
            "relativeUri": "/rsvps",
            "type": "meetupResource",
            "securedBy": [
                "oauth_2_0"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "deprecatedRsvps",
                                    "example": "{\n  \"results\": [\n    {\n      \"lon\": 1.0,\n      \"link\": \"link 0\",\n      \"state\": 0,\n      \"answers\": \"answers 0\",\n      \"updated:\": \"updated: 0\",\n      \"event_id\": 0,\n      \"city\": \"city 0\",\n      \"country\": \"country 0\",\n      \"member_id\": 0,\n      \"response\": \"response 0\",\n      \"id\": 0,\n      \"created\": 0,\n      \"name\": \"name 0\",\n      \"comment\": \"comment 0\",\n      \"lat\": 1.0\n    },\n    {\n      \"lon\": 1.0,\n      \"link\": \"link 1\",\n      \"state\": 1,\n      \"answers\": \"answers 1\",\n      \"updated:\": \"updated: 1\",\n      \"event_id\": 1,\n      \"city\": \"city 1\",\n      \"country\": \"country 1\",\n      \"member_id\": 1,\n      \"response\": \"response 1\",\n      \"id\": 1,\n      \"created\": 1,\n      \"name\": \"name 1\",\n      \"comment\": \"comment 1\",\n      \"lat\": 1.0\n    }\n  ]\n}\n",
                                    "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"answers\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"city\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"comment\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"country\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"created\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"event_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"lat\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"link\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"lon\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"member_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"response\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"state\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"updated:\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
                                }
                            },
                            "description": "|||\n|-|\n|answers|Answers to event survey questions provided when the member RSVP'd, only available to organizers and assistant organizers|\n|city|City the member has provided|\n|comment|The message that the member provided when RSVP was made|\n|country|Country the member has provided|\n|created|Timestamps indicating when the RSVP was first set|\n|event_id|The Event id|\n|id|RSVP id|\n|lat|Latitude coordinates of the members reported city|\n|link|URL to the member's profile page on meetup.com|\n|lon|Longitude coordinates of the members reported city|\n|member_id|The member's id|\n|name|The member's name|\n|response|\"yes\", \"no\", \"maybe\", or \"waitlist\"|\n|state|US State the member has provided|\n|updated:|Timestamps indicating when the RSVP was last updated|\n"
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0",
                        "oauth_1_0",
                        "api_key"
                    ],
                    "queryParameters": {
                        "event_id": {
                            "name": "event_id",
                            "displayName": "event_id",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Return members that RSVP'd to events with these ID numbers [separated by commas]",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "order": {
                            "name": "order",
                            "displayName": "order",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "|value|description|\n|-|\n|name|the name of the attendee|\n",
                            "enum": [
                                "name"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "API method for accessing meetup rsvps\n\n#Request Parameters\nAt least one of the required parameter(s) must be supplied with the request.\n",
                    "method": "get",
                    "is": [
                        "list"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/rsvps",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "rsvps"
            ]
        },
        {
            "relativeUri": "/rsvp",
            "type": "meetupResource",
            "securedBy": [
                "oauth_2_0"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "deprecatedRsvp",
                                    "example": "{\n  \"lon\": 1.0,\n  \"link\": \"link\",\n  \"state\": 100,\n  \"answers\": \"answers\",\n  \"updated:\": \"updated:\",\n  \"event_id\": 100,\n  \"city\": \"city\",\n  \"country\": \"country\",\n  \"member_id\": 100,\n  \"response\": \"response\",\n  \"id\": 100,\n  \"created\": 100,\n  \"name\": \"name\",\n  \"comment\": \"comment\",\n  \"lat\": 1.0\n}\n",
                                    "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"answers\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"city\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"comment\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"country\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"created\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"event_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"lat\": {\r\n      \"required\": false,\r\n      \"type\": \"number\"\r\n    },\r\n    \"link\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"lon\": {\r\n      \"required\": false,\r\n      \"type\": \"number\"\r\n    },\r\n    \"member_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"name\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"response\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"state\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"updated:\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    }\r\n  }\r\n}\r\n"
                                }
                            },
                            "description": "For this method, response data will only consist of either a success or failure message. If the RSVP was successful, the success message will also contain the event_id of the event that was just RSVP'd to"
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0",
                        "oauth_1_0"
                    ],
                    "queryParameters": {
                        "answer_{qid}": {
                            "name": "answer_{qid}",
                            "displayName": "answer_{qid}",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Answers to event survey questions. Organizers and hosts my not edit or create answers on behalf of members",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "comments": {
                            "name": "comments",
                            "displayName": "comments",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "A comment to post along with the RSVP",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "event_id": {
                            "name": "event_id",
                            "displayName": "event_id",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "The event that you are RSVP'ing to",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "guests": {
                            "name": "guests",
                            "displayName": "guests",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Number of guests also coming to the event.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "member_id": {
                            "name": "member_id",
                            "displayName": "member_id",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Organizers and event hosts may RSVP on behalf of a member by specifying an ID here. As when editing RSVPs on the site, organizers may enter a \"yes\" for a member even if the event requires payment.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "rsvp": {
                            "name": "rsvp",
                            "displayName": "rsvp",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "The RSVP setting - value must be either \"yes\". \"no\", \"waitlist\" or \"maybe\"",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Creates a new Rsvp\n\n#Request Parameters\nAt least one of the required parameter(s) must be supplied with the request. The rsvp is recorded for the currently authenticated member account, unless a member_id is supplied. Member's RSVP'ing as themselves may supply answers to a Meetup event's survey questions by supplying answers as request parameters corresponding to question ids in the format answer_{question_id}. To discover available Meetup event survey questions, supply the Events 2 method with the 'fields' parameter set to 'survey_questions'\n",
                    "method": "post",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/rsvp",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "rsvp"
            ]
        },
        {
            "relativeUri": "/groups",
            "type": "meetupResource",
            "securedBy": [
                "oauth_2_0"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "deprecatedGroups",
                                    "example": "{\n  \"results\": [\n    {\n      \"zip\": \"zip 0\",\n      \"lon\": 1.0,\n      \"join_info\": {\n        \"questions\": {\n          \"id\": 0,\n          \"question\": \"question 0\"\n        },\n        \"questions_required\": \"questions_required 0\",\n        \"intro_required\": \"intro_required 0\"\n      },\n      \"visibility\": \"visibility 0\",\n      \"photo_url\": \"photo_url 0\",\n      \"organizerName\": \"organizerName 0\",\n      \"group_urlname\": \"group_urlname 0\",\n      \"link\": \"link 0\",\n      \"state\": 0,\n      \"short_link\": \"short_link 0\",\n      \"who\": \"who 0\",\n      \"country\": \"country 0\",\n      \"city\": \"city 0\",\n      \"id\": 0,\n      \"topics\": {\n        \"id\": 0,\n        \"urlkey\": \"urlkey 0\",\n        \"name\": \"name 0\"\n      },\n      \"organizerProfileURL\": \"organizerProfileURL 0\",\n      \"updated\": 0,\n      \"created\": 0,\n      \"description\": \"description 0\",\n      \"name\": \"name 0\",\n      \"rating\": \"rating 0\",\n      \"members\": \"members 0\",\n      \"daysleft\": \"daysleft 0\",\n      \"lat\": 1.0\n    },\n    {\n      \"zip\": \"zip 1\",\n      \"lon\": 1.0,\n      \"join_info\": {\n        \"questions\": {\n          \"id\": 1,\n          \"question\": \"question 1\"\n        },\n        \"questions_required\": \"questions_required 1\",\n        \"intro_required\": \"intro_required 1\"\n      },\n      \"visibility\": \"visibility 1\",\n      \"photo_url\": \"photo_url 1\",\n      \"organizerName\": \"organizerName 1\",\n      \"group_urlname\": \"group_urlname 1\",\n      \"link\": \"link 1\",\n      \"state\": 1,\n      \"short_link\": \"short_link 1\",\n      \"who\": \"who 1\",\n      \"country\": \"country 1\",\n      \"city\": \"city 1\",\n      \"id\": 1,\n      \"topics\": {\n        \"id\": 1,\n        \"urlkey\": \"urlkey 1\",\n        \"name\": \"name 1\"\n      },\n      \"organizerProfileURL\": \"organizerProfileURL 1\",\n      \"updated\": 1,\n      \"created\": 1,\n      \"description\": \"description 1\",\n      \"name\": \"name 1\",\n      \"rating\": \"rating 1\",\n      \"members\": \"members 1\",\n      \"daysleft\": \"daysleft 1\",\n      \"lat\": 1.0\n    }\n  ]\n}\n",
                                    "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"country\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"city\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"state\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"created\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"daysleft\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"description\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"group_urlname\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"join_info\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"intro_required\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"questions\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"id\": {\r\n                    \"required\": false,\r\n                    \"type\": \"integer\"\r\n                  },\r\n                  \"question\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              },\r\n              \"questions_required\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"lat\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"link\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"lon\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"members\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"organizerName\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"organizerProfileURL\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"photo_url\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"rating\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"short_link\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"topics\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"urlkey\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"updated\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"visibility\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"who\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"zip\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
                                }
                            },
                            "description": "|||\n|-|\n|country, city, state|Country, City, (and for the US, State) where this group is located|\n|created|The date the group was created|\n|daysleft|If this group is in need of an organizer, number of days until it expires (otherwise blank)|\n|description|Description of the group|\n|group_urlname|The group's url name|\n|id|The groups's id|\n|join_info|Optional field, lists any questions requested when joining and required fields|\n|lat|Latitude coordinates of group location|\n|link|Link to the groups page|\n|lon|Longitude coordinates of group location|\n|members|The number of members in the group|\n|name|The groups's name|\n|organizerName|Name of the group's organizer|\n|organizerProfileURL|Profile url of group organizer|\n|photo_url|Url of the group's photo|\n|rating|Group rating|\n|short_link|short version of the group's link|\n|topics|Topics related to this group|\n|updated|The last date and time that the group was updated|\n|visibility|Set to \"members\" or \"public\". Only authenticated group members can retrieve event and membership details for private groups|\n|who|what the group calls its members|\n|zip|The zip code where this group is located|\n"
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0",
                        "oauth_1_0",
                        "api_key"
                    ],
                    "queryParameters": {
                        "state": {
                            "name": "state",
                            "displayName": "state",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "{country, city, state} - A valid country code, city and for the US, State. limits the returned groups to those within radius miles\n",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "fields": {
                            "name": "fields",
                            "displayName": "fields",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Set to \"short_link\" to include shortened group URLs in response items. Set to \"join_info\" to get a list of questions and requirements used when joining the group.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "group_urlname": {
                            "name": "group_urlname",
                            "displayName": "group_urlname",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Return the group with this custom url path (e.g., the string \"teaneck-archaeologists\" would refer to the group located at http://www.meetup.com/teaneck-archaeologists)\n",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "id": {
                            "name": "id",
                            "displayName": "id",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Only return groups with the specified ID's [separate ID numbers with commas]",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "member_id": {
                            "name": "member_id",
                            "displayName": "member_id",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "A member id number, limits results set to only those groups that the member specified by this id is currently a member of (excludes private groups, unless the member_id is the same as that of the member making the request)",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "radius": {
                            "name": "radius",
                            "displayName": "radius",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Radius, in miles for geographic requests, default 25 -- maximum 100",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "topic": {
                            "name": "topic",
                            "displayName": "topic",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Only return groups in the specified topic [one topic allowed]",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "groupnum": {
                            "name": "groupnum",
                            "displayName": "groupnum",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "{topic, groupnum} - Return the group with this topic and number\n",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "visibility": {
                            "name": "visibility",
                            "displayName": "visibility",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Set to \"members\" or \"public\" to restrict to groups of a particular visibility",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "zip": {
                            "name": "zip",
                            "displayName": "zip",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "A valid US zip code, limits the returned groups to those within radius miles.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "order": {
                            "name": "order",
                            "displayName": "order",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "|value|description|\n|-|\n|ctime|group creation time [newest first]|\n|location|group location, country, state [if present], city|\n|members|number of members [largest first]|\n|name|the name of the group|\n",
                            "enum": [
                                "ctime",
                                "location",
                                "members",
                                "name"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "API method for accessing meetup groups\n\n#Request Parameters\nAt least one of the required parameter(s) must be supplied with the request. Answers to questions are expected to follow the naming convention: answer_{question_id}=myanswer when joining.\n",
                    "method": "get",
                    "is": [
                        "list",
                        "locatable",
                        "locationByCity"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/groups",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "groups"
            ]
        },
        {
            "relativeUri": "/photo",
            "type": "meetupResource",
            "securedBy": [
                "oauth_2_0"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "deprecatedPhotoUploadResult",
                                    "example": "{\n  \"album_id\": 100,\n  \"title\": 100,\n  \"details\": \"details\",\n  \"photo_id\": 100\n}\n",
                                    "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"album_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"details\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"photo_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"title\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    }\r\n  }\r\n}\r\n"
                                }
                            },
                            "description": "For this method, response data will only consist of either a success or failure message. If the upload was successful, the following properties will be returned\n|||\n|-|\n|album_id|Id of the album posted to|\n|details|photo id: and the Id of the photo|\n|photo_id|Id of the photo created|\n|title|completed message|\n"
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0",
                        "oauth_1_0"
                    ],
                    "queryParameters": {
                        "caption": {
                            "name": "caption",
                            "displayName": "caption",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Caption for the photo",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "event_id": {
                            "name": "event_id",
                            "displayName": "event_id",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Identifier of an event. If there is no album for this event, one will be created.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "photo": {
                            "name": "photo",
                            "displayName": "photo",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "The photo, encoded as multipart/form-data. The maxiumum file size allowed is __10MB__",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "photo_album_id": {
                            "name": "photo_album_id",
                            "displayName": "photo_album_id",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Identifier of an existing photo album, which may be an event or group album",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Uploads a new Event photo\n\n#Request Parameters\nA photo album or event ID must be supplied with the request, which must be a POST of content-type multipart/form-data. The currently authenticated user must be a member of the group that is hosting the event. Parameters other than photo may be passed in as a query string or within the posted content. If authenticating with OAuth, no parameters in the multipart form data should be included in the signature base string\n",
                    "method": "post",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/photo",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "photo"
            ]
        },
        {
            "relativeUri": "/2",
            "securedBy": [
                "oauth_2_0"
            ],
            "resources": [
                {
                    "relativeUri": "/event_comment_flag",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "202": {
                                    "code": "202",
                                    "description": "If successful, this method returns a 202 Accepted response."
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0"
                            ],
                            "queryParameters": {
                                "comment_id": {
                                    "name": "comment_id",
                                    "displayName": "comment_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The id of the comment",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "reason": {
                                    "name": "reason",
                                    "displayName": "reason",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Reason for flagging the comment. May be one of inappropriate, spam",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "This method creates a spam report for comment content\n\n#Request Parameters\nAll required parameters must be supplied.\n",
                            "method": "post",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/event_comment_flag",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "event_comment_flag"
                    ]
                },
                {
                    "relativeUri": "/event_rating",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "eventRating",
                                            "example": "{\n  \"time\": \"time\",\n  \"rating_count\": 100,\n  \"group_id\": 100,\n  \"event_id\": 100,\n  \"rating\": \"rating\"\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"event_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"group_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"rating\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"rating_count\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"time\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    }\r\n  }\r\n}\r\n"
                                        }
                                    },
                                    "description": "|||\n|-|\n|event_id|The string ID of the event|\n|group_id|The ID of the group|\n|rating|The overall average rating of the event|\n|rating_count|The number of reviews posted for the event|\n|time|The time that the event was created|\n"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0"
                            ],
                            "queryParameters": {
                                "attendee_count": {
                                    "name": "attendee_count",
                                    "displayName": "attendee_count",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The number of attendees for the event (organizers/assistant organizers/co-organizers/event organizers/event hosts only)",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "event_id": {
                                    "name": "event_id",
                                    "displayName": "event_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The ID of the event to fetch ratings data for",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "rating": {
                                    "name": "rating",
                                    "displayName": "rating",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The member's rating (either 1, 2, 3, 4, or 5)",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "This method allows members to posts rating for an event after it's occurred. Only permitted for members who rsvp'd \"yes\" or \"maybe\" to the event\n",
                            "method": "post",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/event_rating",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "event_rating"
                    ]
                },
                {
                    "relativeUri": "/event_ratings",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "eventRatings",
                                            "example": "{\n  \"results\": [\n    {\n      \"time\": \"time 0\",\n      \"group_id\": 0,\n      \"event_id\": 0,\n      \"rating\": \"rating 0\",\n      \"member_name\": \"member_name 0\",\n      \"member_id\": 0\n    },\n    {\n      \"time\": \"time 1\",\n      \"group_id\": 1,\n      \"event_id\": 1,\n      \"rating\": \"rating 1\",\n      \"member_name\": \"member_name 1\",\n      \"member_id\": 1\n    }\n  ]\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"event_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"group_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"member_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"member_name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"rating\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"time\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
                                        }
                                    },
                                    "description": "|||\n|-|\n|event_id|The string ID of the event|\n|group_id|The ID of the group that the event belongs to|\n|member_id|id of the member leaving the review|\n|member_name|name of member leaving th review|\n|rating|Only present if the authenticated member is the reviewer; number of stars given|\n|time|The date/time that the review was created|\n"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0",
                                "api_key"
                            ],
                            "queryParameters": {
                                "event_id": {
                                    "name": "event_id",
                                    "displayName": "event_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The ID of the event to fetch ratings data for",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "member_id": {
                                    "name": "member_id",
                                    "displayName": "member_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The ID of a member to filter ratings on",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "order": {
                                    "name": "order",
                                    "displayName": "order",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "|value|description|\n|-|\n|rating|Order by the value for each rating posted|\n|time|Order by the time that each rating was posted|\n",
                                    "enum": [
                                        "rating",
                                        "time"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "API method for accessing Meetup comments\n\n#Request Parameters\nAt least one of the required parameters must be supplied with the request.\n",
                            "method": "get",
                            "is": [
                                "list"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/event_ratings",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "event_ratings"
                    ]
                },
                {
                    "relativeUri": "/event",
                    "type": "collection",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "event",
                                            "example": "{\n  \"visibility\": \"visibility\",\n  \"is_simplehtml\": \"is_simplehtml\",\n  \"self\": {\n    \"checked_in\": \"checked_in\",\n    \"watching\": \"watching\",\n    \"rsvp\": {\n      \"response\": \"response\",\n      \"guests\": \"guests\",\n      \"answers\": \"answers\"\n    },\n    \"role\": \"role\",\n    \"rated\": 100,\n    \"actions\": \"actions\",\n    \"pay_status\": \"pay_status\"\n  },\n  \"featured\": \"featured\",\n  \"rsvpable\": \"rsvpable\",\n  \"publish_status\": \"publish_status\",\n  \"email_reminders\": \"email_reminders\",\n  \"rsvp_rules\": {\n    \"open_time\": \"open_time\",\n    \"waitlisting\": \"waitlisting\",\n    \"close_time\": \"close_time\",\n    \"guest_limit\": \"guest_limit\",\n    \"closed\": \"closed\",\n    \"refund_policy\": {\n      \"days\": \"days\",\n      \"notes\": 100,\n      \"policies\": \"policies\"\n    }\n  },\n  \"id\": 100,\n  \"timezone\": \"timezone\",\n  \"time\": 100,\n  \"distance\": 1.0,\n  \"venue_visibility\": \"venue_visibility\",\n  \"yes_rsvp_count\": 100,\n  \"updated\": 100,\n  \"created\": 100,\n  \"description\": \"description\",\n  \"survey_questions\": {\n    \"id\": 100,\n    \"question\": \"question\",\n    \"required\": \"required\"\n  },\n  \"headcount\": \"headcount\",\n  \"name\": \"name\",\n  \"photo_album_id\": 100,\n  \"rsvp_alerts\": \"rsvp_alerts\",\n  \"photo_count\": 100,\n  \"comment_count\": 100,\n  \"rsvp_limit\": \"rsvp_limit\",\n  \"trending_rank\": \"trending_rank\",\n  \"status\": \"status\",\n  \"maybe_rsvp_count\": 100,\n  \"photo_url\": \"photo_url\",\n  \"venue\": {\n    \"id\": 100,\n    \"zip\": \"zip\",\n    \"phone\": 100,\n    \"lon\": 1.0,\n    \"repinned\": \"repinned\",\n    \"address_3\": \"address_3\",\n    \"name\": \"name\",\n    \"state\": 100,\n    \"address_1\": \"address_1\",\n    \"address_2\": \"address_2\",\n    \"lat\": 1.0,\n    \"country\": \"country\",\n    \"city\": \"city\"\n  },\n  \"short_link\": \"short_link\",\n  \"event_hosts\": {\n    \"member_name\": \"member_name\",\n    \"member_id\": 100\n  },\n  \"utc_offset\": 100,\n  \"fee\": {\n    \"amount\": \"amount\",\n    \"description\": \"description\",\n    \"label\": 100,\n    \"required\": \"required\",\n    \"accepts\": \"accepts\",\n    \"currency\": \"currency\"\n  },\n  \"duration\": 100,\n  \"announced\": \"announced\",\n  \"event_url\": \"event_url\",\n  \"how_to_find_us\": \"how_to_find_us\",\n  \"rating\": {\n    \"count\": 100,\n    \"average\": \"average\"\n  },\n  \"group\": {\n    \"id\": 100,\n    \"topics\": {\n      \"id\": 100,\n      \"urlkey\": \"urlkey\",\n      \"name\": \"name\"\n    },\n    \"category\": {\n      \"id\": 100,\n      \"name\": \"name\",\n      \"shortname\": \"shortname\"\n    },\n    \"group_photo\": {\n      \"photo_link\": \"photo_link\",\n      \"highres_link\": \"highres_link\",\n      \"thumb_link\": \"thumb_link\",\n      \"photo_id\": 100\n    },\n    \"group_lat\": \"group_lat\",\n    \"name\": \"name\",\n    \"group_lon\": \"group_lon\",\n    \"membership_dues\": {\n      \"methods\": \"methods\",\n      \"fee\": \"fee\",\n      \"required\": \"required\",\n      \"fee_desc\": \"fee_desc\",\n      \"refund_policy\": \"refund_policy\",\n      \"currency\": \"currency\"\n    },\n    \"join_mode\": \"join_mode\",\n    \"urlname\": \"urlname\",\n    \"who\": \"who\"\n  },\n  \"simple_html_description\": \"simple_html_description\",\n  \"why\": \"why\"\n}\n",
                                            "schemaContent": "event"
                                        }
                                    },
                                    "description": "|||\n|-|\n"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0"
                            ],
                            "queryParameters": {
                                "duration": {
                                    "name": "duration",
                                    "displayName": "duration",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Event duration in milliseconds. When not specified, a default of 3 hours may be assumed by applications. To clear event duration, set this to 0",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "group_urlname": {
                                    "name": "group_urlname",
                                    "displayName": "group_urlname",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "URL name of the Group hosting the event",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Event Create\n\n#Request Parameters\nAll required parameters must be supplied. This method requires an HTTP POST.\n\nSurvey questions may be submitted in the format \"question_{index}=questiontext\" where \"index\" is an integer representing the order the questions should be presented in. e.g. question_0=question1&question_1=question2.\n\nOrganizers of the hosting group may optionally save this event as a draft by setting \"publish_status\" to \"draft\". Drafts are then queryable using the /2/events API setting the \"status\" request parameter to \"draft\"\n",
                            "method": "post",
                            "is": [
                                "hasEventProperties"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/{id}",
                            "type": "collectionElement",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "uriParameters": {
                                "id": {
                                    "name": "id",
                                    "displayName": "id",
                                    "type": "string",
                                    "required": true,
                                    "repeat": false,
                                    "description": ":id is the event identifier",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "event",
                                                    "example": "{\n  \"visibility\": \"visibility\",\n  \"is_simplehtml\": \"is_simplehtml\",\n  \"self\": {\n    \"checked_in\": \"checked_in\",\n    \"watching\": \"watching\",\n    \"rsvp\": {\n      \"response\": \"response\",\n      \"guests\": \"guests\",\n      \"answers\": \"answers\"\n    },\n    \"role\": \"role\",\n    \"rated\": 100,\n    \"actions\": \"actions\",\n    \"pay_status\": \"pay_status\"\n  },\n  \"featured\": \"featured\",\n  \"rsvpable\": \"rsvpable\",\n  \"publish_status\": \"publish_status\",\n  \"email_reminders\": \"email_reminders\",\n  \"rsvp_rules\": {\n    \"open_time\": \"open_time\",\n    \"waitlisting\": \"waitlisting\",\n    \"close_time\": \"close_time\",\n    \"guest_limit\": \"guest_limit\",\n    \"closed\": \"closed\",\n    \"refund_policy\": {\n      \"days\": \"days\",\n      \"notes\": 100,\n      \"policies\": \"policies\"\n    }\n  },\n  \"id\": 100,\n  \"timezone\": \"timezone\",\n  \"time\": 100,\n  \"distance\": 1.0,\n  \"venue_visibility\": \"venue_visibility\",\n  \"yes_rsvp_count\": 100,\n  \"updated\": 100,\n  \"created\": 100,\n  \"description\": \"description\",\n  \"survey_questions\": {\n    \"id\": 100,\n    \"question\": \"question\",\n    \"required\": \"required\"\n  },\n  \"headcount\": \"headcount\",\n  \"name\": \"name\",\n  \"photo_album_id\": 100,\n  \"rsvp_alerts\": \"rsvp_alerts\",\n  \"photo_count\": 100,\n  \"comment_count\": 100,\n  \"rsvp_limit\": \"rsvp_limit\",\n  \"trending_rank\": \"trending_rank\",\n  \"status\": \"status\",\n  \"maybe_rsvp_count\": 100,\n  \"photo_url\": \"photo_url\",\n  \"venue\": {\n    \"id\": 100,\n    \"zip\": \"zip\",\n    \"phone\": 100,\n    \"lon\": 1.0,\n    \"repinned\": \"repinned\",\n    \"address_3\": \"address_3\",\n    \"name\": \"name\",\n    \"state\": 100,\n    \"address_1\": \"address_1\",\n    \"address_2\": \"address_2\",\n    \"lat\": 1.0,\n    \"country\": \"country\",\n    \"city\": \"city\"\n  },\n  \"short_link\": \"short_link\",\n  \"event_hosts\": {\n    \"member_name\": \"member_name\",\n    \"member_id\": 100\n  },\n  \"utc_offset\": 100,\n  \"fee\": {\n    \"amount\": \"amount\",\n    \"description\": \"description\",\n    \"label\": 100,\n    \"required\": \"required\",\n    \"accepts\": \"accepts\",\n    \"currency\": \"currency\"\n  },\n  \"duration\": 100,\n  \"announced\": \"announced\",\n  \"event_url\": \"event_url\",\n  \"how_to_find_us\": \"how_to_find_us\",\n  \"rating\": {\n    \"count\": 100,\n    \"average\": \"average\"\n  },\n  \"group\": {\n    \"id\": 100,\n    \"topics\": {\n      \"id\": 100,\n      \"urlkey\": \"urlkey\",\n      \"name\": \"name\"\n    },\n    \"category\": {\n      \"id\": 100,\n      \"name\": \"name\",\n      \"shortname\": \"shortname\"\n    },\n    \"group_photo\": {\n      \"photo_link\": \"photo_link\",\n      \"highres_link\": \"highres_link\",\n      \"thumb_link\": \"thumb_link\",\n      \"photo_id\": 100\n    },\n    \"group_lat\": \"group_lat\",\n    \"name\": \"name\",\n    \"group_lon\": \"group_lon\",\n    \"membership_dues\": {\n      \"methods\": \"methods\",\n      \"fee\": \"fee\",\n      \"required\": \"required\",\n      \"fee_desc\": \"fee_desc\",\n      \"refund_policy\": \"refund_policy\",\n      \"currency\": \"currency\"\n    },\n    \"join_mode\": \"join_mode\",\n    \"urlname\": \"urlname\",\n    \"who\": \"who\"\n  },\n  \"simple_html_description\": \"simple_html_description\",\n  \"why\": \"why\"\n}\n",
                                                    "schemaContent": "event"
                                                }
                                            },
                                            "description": "|||\n|-|\n"
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0",
                                        "oauth_1_0"
                                    ],
                                    "queryParameters": {
                                        "announce": {
                                            "name": "announce",
                                            "displayName": "announce",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "Organizers and hosts may set this to true to announce a Meetup.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "announce_message": {
                                            "name": "announce_message",
                                            "displayName": "announce_message",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "Organizers and hosts may provide an optional message in this field when announcing a Meetup",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "question_edit_{id}": {
                                            "name": "question_edit_{id}",
                                            "displayName": "question_edit_{id}",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "Those with permission may include up to 6 survey questions, including new questions. To delete a question submit this parameter with an empty value",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Update an existing Meetup.\n\n#Request Parameters\nAll parameters are optional. This method requires an HTTP POST.\n\nIf a lat & lon are provided, the event's venue will be updated accordingly.\n\nSurvey questions may be submitted in the format \"question_{index}=questiontext\" where \"index\" is an integer representing the order the questions should be presented in. e.g. question_0=question1&question_1=question2.\n\nTo view existing survey questions supply the request parameter fields=survey_questions with the Event Get To edit questions you may submit questions in the format \"question_edit_{id}=updatedquestion\" where id is the id of the question. To clear an existing question for the event survey, just submit question_edit_{id} with an empty value.\n\nOrganizers may publish a draft event by posting with the \"publish_status\" request parameter set to \"published\". Organizers and hosts of the event may also optionally announce an unannounced event by posting with the \"announce\" request parameter set to \"true\"\n",
                                    "method": "post",
                                    "is": [
                                        "locatable",
                                        "hasEventProperties"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "event",
                                                    "example": "{\n  \"visibility\": \"visibility\",\n  \"is_simplehtml\": \"is_simplehtml\",\n  \"self\": {\n    \"checked_in\": \"checked_in\",\n    \"watching\": \"watching\",\n    \"rsvp\": {\n      \"response\": \"response\",\n      \"guests\": \"guests\",\n      \"answers\": \"answers\"\n    },\n    \"role\": \"role\",\n    \"rated\": 100,\n    \"actions\": \"actions\",\n    \"pay_status\": \"pay_status\"\n  },\n  \"featured\": \"featured\",\n  \"rsvpable\": \"rsvpable\",\n  \"publish_status\": \"publish_status\",\n  \"email_reminders\": \"email_reminders\",\n  \"rsvp_rules\": {\n    \"open_time\": \"open_time\",\n    \"waitlisting\": \"waitlisting\",\n    \"close_time\": \"close_time\",\n    \"guest_limit\": \"guest_limit\",\n    \"closed\": \"closed\",\n    \"refund_policy\": {\n      \"days\": \"days\",\n      \"notes\": 100,\n      \"policies\": \"policies\"\n    }\n  },\n  \"id\": 100,\n  \"timezone\": \"timezone\",\n  \"time\": 100,\n  \"distance\": 1.0,\n  \"venue_visibility\": \"venue_visibility\",\n  \"yes_rsvp_count\": 100,\n  \"updated\": 100,\n  \"created\": 100,\n  \"description\": \"description\",\n  \"survey_questions\": {\n    \"id\": 100,\n    \"question\": \"question\",\n    \"required\": \"required\"\n  },\n  \"headcount\": \"headcount\",\n  \"name\": \"name\",\n  \"photo_album_id\": 100,\n  \"rsvp_alerts\": \"rsvp_alerts\",\n  \"photo_count\": 100,\n  \"comment_count\": 100,\n  \"rsvp_limit\": \"rsvp_limit\",\n  \"trending_rank\": \"trending_rank\",\n  \"status\": \"status\",\n  \"maybe_rsvp_count\": 100,\n  \"photo_url\": \"photo_url\",\n  \"venue\": {\n    \"id\": 100,\n    \"zip\": \"zip\",\n    \"phone\": 100,\n    \"lon\": 1.0,\n    \"repinned\": \"repinned\",\n    \"address_3\": \"address_3\",\n    \"name\": \"name\",\n    \"state\": 100,\n    \"address_1\": \"address_1\",\n    \"address_2\": \"address_2\",\n    \"lat\": 1.0,\n    \"country\": \"country\",\n    \"city\": \"city\"\n  },\n  \"short_link\": \"short_link\",\n  \"event_hosts\": {\n    \"member_name\": \"member_name\",\n    \"member_id\": 100\n  },\n  \"utc_offset\": 100,\n  \"fee\": {\n    \"amount\": \"amount\",\n    \"description\": \"description\",\n    \"label\": 100,\n    \"required\": \"required\",\n    \"accepts\": \"accepts\",\n    \"currency\": \"currency\"\n  },\n  \"duration\": 100,\n  \"announced\": \"announced\",\n  \"event_url\": \"event_url\",\n  \"how_to_find_us\": \"how_to_find_us\",\n  \"rating\": {\n    \"count\": 100,\n    \"average\": \"average\"\n  },\n  \"group\": {\n    \"id\": 100,\n    \"topics\": {\n      \"id\": 100,\n      \"urlkey\": \"urlkey\",\n      \"name\": \"name\"\n    },\n    \"category\": {\n      \"id\": 100,\n      \"name\": \"name\",\n      \"shortname\": \"shortname\"\n    },\n    \"group_photo\": {\n      \"photo_link\": \"photo_link\",\n      \"highres_link\": \"highres_link\",\n      \"thumb_link\": \"thumb_link\",\n      \"photo_id\": 100\n    },\n    \"group_lat\": \"group_lat\",\n    \"name\": \"name\",\n    \"group_lon\": \"group_lon\",\n    \"membership_dues\": {\n      \"methods\": \"methods\",\n      \"fee\": \"fee\",\n      \"required\": \"required\",\n      \"fee_desc\": \"fee_desc\",\n      \"refund_policy\": \"refund_policy\",\n      \"currency\": \"currency\"\n    },\n    \"join_mode\": \"join_mode\",\n    \"urlname\": \"urlname\",\n    \"who\": \"who\"\n  },\n  \"simple_html_description\": \"simple_html_description\",\n  \"why\": \"why\"\n}\n",
                                                    "schemaContent": "event"
                                                }
                                            },
                                            "description": "|||\n|-|\n|announced|Organizers and hosts can see if the event was announced|\n|comment_count|Optional field, number of comments posted to the event|\n|created|UTC creation time of the event, in milliseconds since the epoch|\n|description|Description of the event|\n|distance|Distance in miles from the search location, if one was specified|\n|duration|Event duration in milliseconds, if an end time is specified by the organizer. When not present, a default of 3 hours may be assumed by applications.|\n|email_reminders|Optional fields parameter limited to organizers and event hosts, if false, event reminders are disabled|\n|event_hosts|List of members hosting the event, only returned if requested in the fields parameter.|\n|event_url|URL of the event's page on meetup.com|\n|featured|Optional fields parameter which returns \"true\" if the event is featured and \"false\" otherwise|\n|fee|Fee info returned when payment is defined|\n|group|Group that is hosting the event|\n|headcount|The number of members in attendance according to the attendance taker. This may be 0 if attendance has not yet been taken|\n|how_to_find_us|The information provided by the event host for \"How will members find you there?\"|\n|id|The event id. May be numeric or alphanumeric, always served as a string|\n|is_simplehtml|Optional field, \"true\" when the event has been saved in a simplified HTML format, \"false\" otherwise.|\n|maybe_rsvp_count|Number of maybe RSVPs including guests|\n|name|The name of the event|\n|photo_album_id|optional fields parameter which returns the ID of the photo album for this event, if one exists|\n|photo_count|Optional field, number of photos posted to the event|\n|photo_url|URL of the event photo, if one exists|\n|publish_status|\"published\" or \"draft\" only visible to organizers|\n|rating|Only past events have this field, an aggregate of anonymous ratings|\n|rsvp_alerts|Optional fields parameter limited to organizers and event hosts, if false, member RSVP alerts are disabled|\n|rsvp_limit|The number of \"yes\" RSVPs an event can have before members will be added to the waiting list|\n|rsvp_rules|Conditions set by the organizer, only returned if requested in the fields parameter.|\n|rsvpable|Indicates if the currently authenticated member can RSVP or not, only returned if requested in the fields parameter|\n|self|Optional field with details particular to the authorized user, only present if requested and user is a member of the hosting group|\n|short_link|Optional field. If hosting group is private, this will return the group's short_link|\n|simple_html_description|Optional field, description of the event in simple HTML format.|\n|status|\"cancelled\", \"upcoming\", \"past\", \"proposed\", \"suggested\" or \"draft\"|\n|survey_questions|Optional \"fields\" response property for event with surveys|\n|time|UTC start time of the event, in milliseconds since the epoch|\n|timezone|Returned when \"timezone\" is provided in fields parameter. This represents the universal timezone identifier for the host group|\n|trending_rank|Indicates the trending rank within the current result set. The best rank is zero, increasing rank values are less \"trending\". This value is only returned if requested in the fields parameter|\n|updated|UTC last modified time of the event, in milliseconds since the epoch|\n|utc_offset|The local offset from UTC time, in milliseconds|\n|venue|Venue, if selected and not hidden|\n|venue_visibility|Set to \"members\" or \"public\". The \"venue\" element will not be present if the visibility is \"members\" and the current authenticated user is not a member of the group hosting the event. This value is only returned if requested in the fields parameter|\n|visibility|Event visibility: \"public\", \"members\" or \"public_limited\". Events in private groups that do not expose limited information are visible only to that group's members and should not be made public.|\n|why|We should do this because...|\n|yes_rsvp_count|Number of yes RSVPs including guests|\n"
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0",
                                        "oauth_1_0",
                                        "api_key"
                                    ],
                                    "queryParameters": {
                                        "fields": {
                                            "name": "fields",
                                            "displayName": "fields",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "Request that additional fields (separated by commas) be included in the output.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "limited_events": {
                                            "name": "limited_events",
                                            "displayName": "limited_events",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "Include limited event information for private groups that wish to expose only a small amount of information about their events. This includes just: id, name, utc_offset, time, duration, yes_rsvp_count, waitlist_count, group, visibility. Value must be true or false.\n",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Retrieve a single meetup\n\n#Request Parameters\nOnly authorization parameters are needed. Some groups, while remaining private, still wish to show some information about their events. You can include these events in results using the limited_events request parameter.\n",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "description": "Returns an HTTP 200 response if delete was successful."
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "Returns an HTTP 401 response if unauthorized."
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0",
                                        "oauth_1_0"
                                    ],
                                    "description": "Deletes a specified meetup\n\n#Request Parameters\nOnly authorization parameters are needed.\n",
                                    "method": "delete",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/{id}",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "{id}"
                            ]
                        }
                    ],
                    "displayName": "/event",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "event"
                    ]
                },
                {
                    "relativeUri": "/open_events",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "events",
                                            "example": "{\n  \"results\": [\n    {\n      \"visibility\": \"visibility 0\",\n      \"is_simplehtml\": \"is_simplehtml 0\",\n      \"self\": {\n        \"checked_in\": \"checked_in 0\",\n        \"watching\": \"watching 0\",\n        \"rsvp\": {\n          \"response\": \"response 0\",\n          \"guests\": \"guests 0\",\n          \"answers\": \"answers 0\"\n        },\n        \"role\": \"role 0\",\n        \"rated\": 0,\n        \"actions\": \"actions 0\",\n        \"pay_status\": \"pay_status 0\"\n      },\n      \"featured\": \"featured 0\",\n      \"rsvpable\": \"rsvpable 0\",\n      \"publish_status\": \"publish_status 0\",\n      \"email_reminders\": \"email_reminders 0\",\n      \"rsvp_rules\": {\n        \"open_time\": \"open_time 0\",\n        \"waitlisting\": \"waitlisting 0\",\n        \"close_time\": \"close_time 0\",\n        \"guest_limit\": \"guest_limit 0\",\n        \"closed\": \"closed 0\",\n        \"refund_policy\": {\n          \"days\": \"days 0\",\n          \"notes\": 0,\n          \"policies\": \"policies 0\"\n        }\n      },\n      \"id\": 0,\n      \"timezone\": \"timezone 0\",\n      \"time\": 0,\n      \"distance\": 1.0,\n      \"venue_visibility\": \"venue_visibility 0\",\n      \"yes_rsvp_count\": 0,\n      \"updated\": 0,\n      \"created\": 0,\n      \"description\": \"description 0\",\n      \"survey_questions\": {\n        \"id\": 0,\n        \"question\": \"question 0\",\n        \"required\": \"required 0\"\n      },\n      \"headcount\": \"headcount 0\",\n      \"name\": \"name 0\",\n      \"photo_album_id\": 0,\n      \"rsvp_alerts\": \"rsvp_alerts 0\",\n      \"photo_count\": 0,\n      \"comment_count\": 0,\n      \"rsvp_limit\": \"rsvp_limit 0\",\n      \"trending_rank\": \"trending_rank 0\",\n      \"status\": \"status 0\",\n      \"maybe_rsvp_count\": 0,\n      \"photo_url\": \"photo_url 0\",\n      \"venue\": {\n        \"id\": 0,\n        \"zip\": \"zip 0\",\n        \"phone\": 0,\n        \"lon\": 1.0,\n        \"repinned\": \"repinned 0\",\n        \"address_3\": \"address_3 0\",\n        \"name\": \"name 0\",\n        \"state\": 0,\n        \"address_1\": \"address_1 0\",\n        \"address_2\": \"address_2 0\",\n        \"lat\": 1.0,\n        \"country\": \"country 0\",\n        \"city\": \"city 0\"\n      },\n      \"short_link\": \"short_link 0\",\n      \"event_hosts\": {\n        \"member_name\": \"member_name 0\",\n        \"member_id\": 0\n      },\n      \"utc_offset\": 0,\n      \"fee\": {\n        \"amount\": \"amount 0\",\n        \"description\": \"description 0\",\n        \"label\": 0,\n        \"required\": \"required 0\",\n        \"accepts\": \"accepts 0\",\n        \"currency\": \"currency 0\"\n      },\n      \"duration\": 0,\n      \"announced\": \"announced 0\",\n      \"event_url\": \"event_url 0\",\n      \"how_to_find_us\": \"how_to_find_us 0\",\n      \"rating\": {\n        \"count\": 0,\n        \"average\": \"average 0\"\n      },\n      \"group\": {\n        \"id\": 0,\n        \"topics\": {\n          \"id\": 0,\n          \"urlkey\": \"urlkey 0\",\n          \"name\": \"name 0\"\n        },\n        \"category\": {\n          \"id\": 0,\n          \"name\": \"name 0\",\n          \"shortname\": \"shortname 0\"\n        },\n        \"group_photo\": {\n          \"photo_link\": \"photo_link 0\",\n          \"highres_link\": \"highres_link 0\",\n          \"thumb_link\": \"thumb_link 0\",\n          \"photo_id\": 0\n        },\n        \"group_lat\": \"group_lat 0\",\n        \"name\": \"name 0\",\n        \"group_lon\": \"group_lon 0\",\n        \"membership_dues\": {\n          \"methods\": \"methods 0\",\n          \"fee\": \"fee 0\",\n          \"required\": \"required 0\",\n          \"fee_desc\": \"fee_desc 0\",\n          \"refund_policy\": \"refund_policy 0\",\n          \"currency\": \"currency 0\"\n        },\n        \"join_mode\": \"join_mode 0\",\n        \"urlname\": \"urlname 0\",\n        \"who\": \"who 0\"\n      },\n      \"simple_html_description\": \"simple_html_description 0\",\n      \"why\": \"why 0\"\n    },\n    {\n      \"visibility\": \"visibility 1\",\n      \"is_simplehtml\": \"is_simplehtml 1\",\n      \"self\": {\n        \"checked_in\": \"checked_in 1\",\n        \"watching\": \"watching 1\",\n        \"rsvp\": {\n          \"response\": \"response 1\",\n          \"guests\": \"guests 1\",\n          \"answers\": \"answers 1\"\n        },\n        \"role\": \"role 1\",\n        \"rated\": 1,\n        \"actions\": \"actions 1\",\n        \"pay_status\": \"pay_status 1\"\n      },\n      \"featured\": \"featured 1\",\n      \"rsvpable\": \"rsvpable 1\",\n      \"publish_status\": \"publish_status 1\",\n      \"email_reminders\": \"email_reminders 1\",\n      \"rsvp_rules\": {\n        \"open_time\": \"open_time 1\",\n        \"waitlisting\": \"waitlisting 1\",\n        \"close_time\": \"close_time 1\",\n        \"guest_limit\": \"guest_limit 1\",\n        \"closed\": \"closed 1\",\n        \"refund_policy\": {\n          \"days\": \"days 1\",\n          \"notes\": 1,\n          \"policies\": \"policies 1\"\n        }\n      },\n      \"id\": 1,\n      \"timezone\": \"timezone 1\",\n      \"time\": 1,\n      \"distance\": 1.0,\n      \"venue_visibility\": \"venue_visibility 1\",\n      \"yes_rsvp_count\": 1,\n      \"updated\": 1,\n      \"created\": 1,\n      \"description\": \"description 1\",\n      \"survey_questions\": {\n        \"id\": 1,\n        \"question\": \"question 1\",\n        \"required\": \"required 1\"\n      },\n      \"headcount\": \"headcount 1\",\n      \"name\": \"name 1\",\n      \"photo_album_id\": 1,\n      \"rsvp_alerts\": \"rsvp_alerts 1\",\n      \"photo_count\": 1,\n      \"comment_count\": 1,\n      \"rsvp_limit\": \"rsvp_limit 1\",\n      \"trending_rank\": \"trending_rank 1\",\n      \"status\": \"status 1\",\n      \"maybe_rsvp_count\": 1,\n      \"photo_url\": \"photo_url 1\",\n      \"venue\": {\n        \"id\": 1,\n        \"zip\": \"zip 1\",\n        \"phone\": 1,\n        \"lon\": 1.0,\n        \"repinned\": \"repinned 1\",\n        \"address_3\": \"address_3 1\",\n        \"name\": \"name 1\",\n        \"state\": 1,\n        \"address_1\": \"address_1 1\",\n        \"address_2\": \"address_2 1\",\n        \"lat\": 1.0,\n        \"country\": \"country 1\",\n        \"city\": \"city 1\"\n      },\n      \"short_link\": \"short_link 1\",\n      \"event_hosts\": {\n        \"member_name\": \"member_name 1\",\n        \"member_id\": 1\n      },\n      \"utc_offset\": 1,\n      \"fee\": {\n        \"amount\": \"amount 1\",\n        \"description\": \"description 1\",\n        \"label\": 1,\n        \"required\": \"required 1\",\n        \"accepts\": \"accepts 1\",\n        \"currency\": \"currency 1\"\n      },\n      \"duration\": 1,\n      \"announced\": \"announced 1\",\n      \"event_url\": \"event_url 1\",\n      \"how_to_find_us\": \"how_to_find_us 1\",\n      \"rating\": {\n        \"count\": 1,\n        \"average\": \"average 1\"\n      },\n      \"group\": {\n        \"id\": 1,\n        \"topics\": {\n          \"id\": 1,\n          \"urlkey\": \"urlkey 1\",\n          \"name\": \"name 1\"\n        },\n        \"category\": {\n          \"id\": 1,\n          \"name\": \"name 1\",\n          \"shortname\": \"shortname 1\"\n        },\n        \"group_photo\": {\n          \"photo_link\": \"photo_link 1\",\n          \"highres_link\": \"highres_link 1\",\n          \"thumb_link\": \"thumb_link 1\",\n          \"photo_id\": 1\n        },\n        \"group_lat\": \"group_lat 1\",\n        \"name\": \"name 1\",\n        \"group_lon\": \"group_lon 1\",\n        \"membership_dues\": {\n          \"methods\": \"methods 1\",\n          \"fee\": \"fee 1\",\n          \"required\": \"required 1\",\n          \"fee_desc\": \"fee_desc 1\",\n          \"refund_policy\": \"refund_policy 1\",\n          \"currency\": \"currency 1\"\n        },\n        \"join_mode\": \"join_mode 1\",\n        \"urlname\": \"urlname 1\",\n        \"who\": \"who 1\"\n      },\n      \"simple_html_description\": \"simple_html_description 1\",\n      \"why\": \"why 1\"\n    }\n  ]\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"announced\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"comment_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"created\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"description\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"distance\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"duration\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"email_reminders\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"event_hosts\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"member_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"member_name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"event_url\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"featured\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"fee\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"accepts\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"amount\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"currency\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"description\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"label\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"required\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"group\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"category\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"id\": {\r\n                    \"required\": false,\r\n                    \"type\": \"integer\"\r\n                  },\r\n                  \"name\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"shortname\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              },\r\n              \"group_lat\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"group_lon\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"group_photo\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"highres_link\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"photo_id\": {\r\n                    \"required\": false,\r\n                    \"type\": \"integer\"\r\n                  },\r\n                  \"photo_link\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"thumb_link\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              },\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"join_mode\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"membership_dues\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"currency\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"fee\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"fee_desc\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"methods\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"refund_policy\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"required\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"topics\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"id\": {\r\n                    \"required\": false,\r\n                    \"type\": \"integer\"\r\n                  },\r\n                  \"name\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"urlkey\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              },\r\n              \"urlname\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"who\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"headcount\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"how_to_find_us\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"is_simplehtml\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"maybe_rsvp_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"photo_album_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"photo_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"photo_url\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"publish_status\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"rating\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"average\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"count\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              }\r\n            }\r\n          },\r\n          \"rsvp_alerts\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"rsvp_limit\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"rsvp_rules\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"close_time\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"closed\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"guest_limit\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"open_time\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"refund_policy\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"days\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"notes\": {\r\n                    \"required\": false,\r\n                    \"type\": \"integer\"\r\n                  },\r\n                  \"policies\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              },\r\n              \"waitlisting\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"rsvpable\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"self\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"actions\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"checked_in\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"pay_status\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"rated\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"role\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"rsvp\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"answers\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"guests\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"response\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              },\r\n              \"watching\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"short_link\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"simple_html_description\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"status\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"survey_questions\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"question\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"required\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"time\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"timezone\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"trending_rank\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"updated\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"utc_offset\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"venue\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"address_1\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"address_2\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"address_3\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"city\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"state\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"country\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"lat\": {\r\n                \"required\": false,\r\n                \"type\": \"number\"\r\n              },\r\n              \"lon\": {\r\n                \"required\": false,\r\n                \"type\": \"number\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"phone\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"repinned\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"zip\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"venue_visibility\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"visibility\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"why\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"yes_rsvp_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
                                        }
                                    },
                                    "description": "|||\n|-|\n|announced|Organizers and hosts can see if the event was announced|\n|comment_count|Optional field, number of comments posted to the event|\n|created|UTC creation time of the event, in milliseconds since the epoch|\n|description|Description of the event|\n|distance|Distance in miles from the search location, if one was specified|\n|duration|Event duration in milliseconds, if an end time is specified by the organizer. When not present, a default of 3 hours may be assumed by applications.|\n|email_reminders|Optional fields parameter limited to organizers and event hosts, if false, event reminders are disabled|\n|event_hosts|List of members hosting the event, only returned if requested in the fields parameter.|\n|event_url|URL of the event's page on meetup.com|\n|featured|Optional fields parameter which returns \"true\" if the event is featured and \"false\" otherwise|\n|fee|Fee info returned when payment is defined|\n|group|Group that is hosting the event|\n|headcount|The number of members in attendance according to the attendance taker. This may be 0 if attendance has not yet been taken|\n|how_to_find_us|The information provided by the event host for \"How will members find you there?\"|\n|id|The event id. May be numeric or alphanumeric, always served as a string|\n|is_simplehtml|Optional field, \"true\" when the event has been saved in a simplified HTML format, \"false\" otherwise.|\n|maybe_rsvp_count|Number of maybe RSVPs including guests|\n|name|The name of the event|\n|photo_album_id|optional fields parameter which returns the ID of the photo album for this event, if one exists|\n|photo_count|Optional field, number of photos posted to the event|\n|photo_url|URL of the event photo, if one exists|\n|publish_status|\"published\" or \"draft\" only visible to organizers|\n|rating|Only past events have this field, an aggregate of anonymous ratings|\n|rsvp_alerts|Optional fields parameter limited to organizers and event hosts, if false, member RSVP alerts are disabled|\n|rsvp_limit|The number of \"yes\" RSVPs an event can have before members will be added to the waiting list|\n|rsvp_rules|Conditions set by the organizer, only returned if requested in the fields parameter.|\n|rsvpable|Indicates if the currently authenticated member can RSVP or not, only returned if requested in the fields parameter|\n|self|Optional field with details particular to the authorized user, only present if requested and user is a member of the hosting group|\n|short_link|Optional field. If hosting group is private, this will return the group's short_link|\n|simple_html_description|Optional field, description of the event in simple HTML format.|\n|status|\"cancelled\", \"upcoming\", \"past\", \"proposed\", \"suggested\" or \"draft\"|\n|survey_questions|Optional \"fields\" response property for event with surveys|\n|time|UTC start time of the event, in milliseconds since the epoch|\n|timezone|Returned when \"timezone\" is provided in fields parameter. This represents the universal timezone identifier for the host group|\n|trending_rank|Indicates the trending rank within the current result set. The best rank is zero, increasing rank values are less \"trending\". This value is only returned if requested in the fields parameter|\n|updated|UTC last modified time of the event, in milliseconds since the epoch|\n|utc_offset|The local offset from UTC time, in milliseconds|\n|venue|Venue, if selected and not hidden|\n|venue_visibility|Set to \"members\" or \"public\". The \"venue\" element will not be present if the visibility is \"members\" and the current authenticated user is not a member of the group hosting the event. This value is only returned if requested in the fields parameter|\n|visibility|Event visibility: \"public\", \"members\" or \"public_limited\". Events in private groups that do not expose limited information are visible only to that group's members and should not be made public.|\n|why|We should do this because...|\n|yes_rsvp_count|Number of yes RSVPs including guests|\n"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0",
                                "api_key"
                            ],
                            "queryParameters": {
                                "and_text": {
                                    "name": "and_text",
                                    "displayName": "and_text",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Changes the interpretation of the \"text\" field from OR'd terms to AND'd terms\n",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "category": {
                                    "name": "category",
                                    "displayName": "category",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Return events in the specified category or categories specified by commas. This is the category id returned by the Categories method.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "fields": {
                                    "name": "fields",
                                    "displayName": "fields",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Request that additional fields (separated by commas) be included in the output",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "limited_events": {
                                    "name": "limited_events",
                                    "displayName": "limited_events",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Include limited event information for private groups that wish to expose only a small amount of information about their events. This includes just: id, name, utc_offset, time, duration, yes_rsvp_count, waitlist_count, group, visibility. Value must be true or false.\n",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "radius": {
                                    "name": "radius",
                                    "displayName": "radius",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Radius, in miles for geographic requests, default 25.0 -- maximum 100. May also be specified as \"smart\", a dynamic radius based on the number of active groups in the area",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "state": {
                                    "name": "state",
                                    "displayName": "state",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "If searching in a country with states, a valid 2 character state code",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "status": {
                                    "name": "status",
                                    "displayName": "status",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Status may be \"upcoming\", \"past\" or both separated by a comma. The default is \"upcoming\" only",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "text": {
                                    "name": "text",
                                    "displayName": "text",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Events that contain the given term or terms somewhere in their content. The terms are OR'd by default. Separate terms with \" AND \" for events that have combined terms. To have terms automatically AND'd, set the \"and_text\" to true\n",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "text_format": {
                                    "name": "text_format",
                                    "displayName": "text_format",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Format of the description text, \"html\" or \"plain\". Defaults to \"html\"",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "time": {
                                    "name": "time",
                                    "displayName": "time",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Return events scheduled within the given time range, defined by two times separated with a single comma. Each end of the range may be specified with relative dates, such as \"1m\" for one month from now, or by absolute time in milliseconds since the epoch. If an endpoint is omitted, the range is unbounded on that end. The default value is unbounded on both ends (though restricted to the search window described above). Note: to retrieve past events you must also update status value\n",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "topic": {
                                    "name": "topic",
                                    "displayName": "topic",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Return events in the specified topic or topics specified by commas. This is the topic \"urlkey\" returned by the Topics method. If all supplied topics are unknown, a 400 error response is returned with the code \"badtopic\".",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "zip": {
                                    "name": "zip",
                                    "displayName": "zip",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "A valid US zip code, limits the returned groups to those within radius miles",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "order": {
                                    "name": "order",
                                    "displayName": "order",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "|value|description|\n|-|\n|distance|ordering is approximate and will not exactly match the values in the \"distance\" field.|\n|time|(default order) ascending|\n|trending|you will likely want to specify \"desc=true\" to get the best trending results first.|\n",
                                    "enum": [
                                        "distance",
                                        "time",
                                        "trending"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Searches for recent and upcoming public events hosted by Meetup groups. Its search window is the past one month through the next three months, and is subject to change. Open Events is optimized to search for current events by location, category, topic, or text, and only lists Meetups that have 3 or more RSVPs. The number or results returned with each request is not guaranteed to be the same as the page size due to secondary filtering.\n\n#Request Parameters\nAt least one of the required parameter(s) must be supplied with the request.\n\nFor geo-based requests, you may provide a location in one of three ways. By lat and lon, by zip, or by country, city, and optionally a state, if the provided country has states.\n\nSome groups, while remaining private, still wish to show some information about their events. You can include these events in results using the limited_events request parameter.\n",
                            "method": "get",
                            "is": [
                                "list",
                                "locatable",
                                "locationByCity"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/open_events",
                    "description": "OpenEvents",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "open_events"
                    ]
                },
                {
                    "relativeUri": "/rsvps",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "rsvps",
                                            "example": "{\n  \"results\": [\n    {\n      \"member\": {\n        \"member_state\": \"member_state 0\",\n        \"member_city\": \"member_city 0\",\n        \"bio\": \"bio 0\",\n        \"name\": \"name 0\",\n        \"member_country\": \"member_country 0\",\n        \"other_services\": {\n          \"[service-name]\": \"[service-name] 0\"\n        },\n        \"member_id\": 0\n      },\n      \"host\": \"host 0\",\n      \"answers\": \"answers 0\",\n      \"guests\": \"guests 0\",\n      \"mtime\": 0,\n      \"venue\": {\n        \"id\": 0,\n        \"zip\": \"zip 0\",\n        \"phone\": 0,\n        \"lon\": 1.0,\n        \"repinned\": \"repinned 0\",\n        \"address_3\": \"address_3 0\",\n        \"name\": \"name 0\",\n        \"state\": 0,\n        \"address_1\": \"address_1 0\",\n        \"address_2\": \"address_2 0\",\n        \"lat\": 1.0,\n        \"country\": \"country 0\",\n        \"city\": \"city 0\"\n      },\n      \"pay_status\": \"pay_status 0\",\n      \"response\": \"response 0\",\n      \"member_photo\": {\n        \"photo_link\": \"photo_link 0\",\n        \"highres_link\": \"highres_link 0\",\n        \"thumb_link\": \"thumb_link 0\",\n        \"photo_id\": 0\n      },\n      \"watching\": \"watching 0\",\n      \"created\": 0,\n      \"event\": {\n        \"id\": 0,\n        \"time\": 0,\n        \"event_url\": \"event_url 0\",\n        \"name\": \"name 0\"\n      },\n      \"rsvp_id\": 0,\n      \"group\": {\n        \"id\": 0,\n        \"group_lat\": \"group_lat 0\",\n        \"name\": \"name 0\",\n        \"group_lon\": \"group_lon 0\",\n        \"join_mode\": \"join_mode 0\",\n        \"urlname\": \"urlname 0\",\n        \"who\": \"who 0\"\n      },\n      \"comments\": \"comments 0\"\n    },\n    {\n      \"member\": {\n        \"member_state\": \"member_state 1\",\n        \"member_city\": \"member_city 1\",\n        \"bio\": \"bio 1\",\n        \"name\": \"name 1\",\n        \"member_country\": \"member_country 1\",\n        \"other_services\": {\n          \"[service-name]\": \"[service-name] 1\"\n        },\n        \"member_id\": 1\n      },\n      \"host\": \"host 1\",\n      \"answers\": \"answers 1\",\n      \"guests\": \"guests 1\",\n      \"mtime\": 1,\n      \"venue\": {\n        \"id\": 1,\n        \"zip\": \"zip 1\",\n        \"phone\": 1,\n        \"lon\": 1.0,\n        \"repinned\": \"repinned 1\",\n        \"address_3\": \"address_3 1\",\n        \"name\": \"name 1\",\n        \"state\": 1,\n        \"address_1\": \"address_1 1\",\n        \"address_2\": \"address_2 1\",\n        \"lat\": 1.0,\n        \"country\": \"country 1\",\n        \"city\": \"city 1\"\n      },\n      \"pay_status\": \"pay_status 1\",\n      \"response\": \"response 1\",\n      \"member_photo\": {\n        \"photo_link\": \"photo_link 1\",\n        \"highres_link\": \"highres_link 1\",\n        \"thumb_link\": \"thumb_link 1\",\n        \"photo_id\": 1\n      },\n      \"watching\": \"watching 1\",\n      \"created\": 1,\n      \"event\": {\n        \"id\": 1,\n        \"time\": 1,\n        \"event_url\": \"event_url 1\",\n        \"name\": \"name 1\"\n      },\n      \"rsvp_id\": 1,\n      \"group\": {\n        \"id\": 1,\n        \"group_lat\": \"group_lat 1\",\n        \"name\": \"name 1\",\n        \"group_lon\": \"group_lon 1\",\n        \"join_mode\": \"join_mode 1\",\n        \"urlname\": \"urlname 1\",\n        \"who\": \"who 1\"\n      },\n      \"comments\": \"comments 1\"\n    }\n  ]\n}\n",
                                            "schemaContent": "rsvps"
                                        }
                                    },
                                    "description": "If the RSVP is for a host of a repeating event that hasn't been RSVP'd to by others, the id in the response will be -1 and the mtime will be that of the recurring event\n|||\n|-|\n|answers|Answers to event survey questions provided when the member RSVP'd, only available to organizers and assistant organizers|\n|comments|The message that the member provided when RSVP was made|\n|created|Creation time of the RSVP, in milliseconds since the epoch.|\n|event|The event associated with the RSVP|\n|group|Group hosting the event|\n|guests|Number of guests the RSVP'd member will be bringing|\n|host|Optional field, `true` if RSVP is for an event host|\n|member|Member who RSVP'd|\n|member_photo|The RSVPing member's photo if available|\n|mtime|Last modified time of the RSVP, in milliseconds since the epoch.|\n|pay_status|The RSVPer's payment status if the event has an associated fee. Returned only for organizers when 'pay_status' is requested with the fields parameter. This may be one of 'none', 'paid', 'partially_paid', 'payment_pending', 'echeck_pending', 'refund_pending', 'partially_refunded', 'refunded'.|\n|response|\"yes\", \"no\", \"waitlist\" or \"yes_pending_payment\" which is the response returned after RSVPing \"yes\" to an event that requires payment.|\n|rsvp_id|The RSVP id|\n|venue|Venue, if selected and not hidden|\n|watching|if the current member choose to watch and event for open spot notifications, their response will be waitlist and watching will be true|\n"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0",
                                "api_key"
                            ],
                            "queryParameters": {
                                "event_id": {
                                    "name": "event_id",
                                    "displayName": "event_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Multiple alphanumeric ids may be separated with commas",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "fields": {
                                    "name": "fields",
                                    "displayName": "fields",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Parameter for requesting optional response properties, set to other_services for a list of third party services",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "rsvp": {
                                    "name": "rsvp",
                                    "displayName": "rsvp",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Filters response on RSVP status. \"yes\" if member RSVP'd yes otherwise \"no\"\n",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "order": {
                                    "name": "order",
                                    "displayName": "order",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "|value|description|\n|-|\n|event|the id or time of the event|\n|name|the name of the attendee|\n|social|social connections of the authenticated member|\n",
                                    "enum": [
                                        "event",
                                        "name",
                                        "social"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Query for Event RSVPs by event\n\n#Request Parameters\nAt least one of the required parameter(s) must be supplied with the request.\n",
                            "method": "get",
                            "is": [
                                "list"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/rsvps",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "rsvps"
                    ]
                },
                {
                    "relativeUri": "/categories",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "categories",
                                            "example": "{\n  \"results\": [\n    {\n      \"id\": 0,\n      \"name\": \"name 0\",\n      \"shortname\": \"shortname 0\"\n    },\n    {\n      \"id\": 1,\n      \"name\": \"name 1\",\n      \"shortname\": \"shortname 1\"\n    }\n  ]\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"shortname\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
                                        }
                                    },
                                    "description": "|||\n|-|\n|id|Numeric identifier of the category|\n|name|Display name of the category|\n|shortname|String identifier of the category|\n"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0",
                                "api_key"
                            ],
                            "queryParameters": {
                                "fields": {
                                    "name": "fields",
                                    "displayName": "fields",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Parameter for requesting optional response properties",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "order": {
                                    "name": "order",
                                    "displayName": "order",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "|value|description|\n|-|\n|member|order by recommendations for authorized member (deprecated)|\n|shortname|(default order) ascending|\n",
                                    "enum": [
                                        "member",
                                        "shortname"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Returns a list of Meetup group categories. No required parameters",
                            "method": "get",
                            "is": [
                                "list"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/categories",
                    "description": "Categories",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "categories"
                    ]
                },
                {
                    "relativeUri": "/message",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "202": {
                                    "code": "202",
                                    "description": "If successful, this method returns a 202 Accepted response."
                                },
                                "400": {
                                    "code": "400",
                                    "description": "400 Bad requests may be returned under certain conditions along with a response object containing information about the failure. The code property of this may be one of\n|||\n|-|\n|bad_member|the sender or the receiver was not an active member|\n|bad_group|the provided group_id was invalid|\n|limit|limit of 12 messages a day exceeded|\n|msg_too_long|message was longer than 5000 characters|\n|pref_conflict|the recipient's preferences disallow the sender from sending message|\n|recip_not_affiliated|request was made with a group_id the recipient is not a member of|\n|self_send|attempt made to send a message the sender|\n|sender_not_affiliated|request made with group_id the sender is not a member of|\n|sender_not_member|sender is not a member of any groups|\n|subject_too_long|subject was too long|\n|blocked|this member blocked you|\n|spam|message was flagged as spam|\n|ransport|error sending message|\n"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0"
                            ],
                            "queryParameters": {
                                "cc_sender": {
                                    "name": "cc_sender",
                                    "displayName": "cc_sender",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Sends a copy of the message to the sender, defaults to true.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "dryrun": {
                                    "name": "dryrun",
                                    "displayName": "dryrun",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Performs request without sending message. Useful for pre-testing error conditions.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "hide_email": {
                                    "name": "hide_email",
                                    "displayName": "hide_email",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Hides sender's email from receiving member, defaults to false",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "message": {
                                    "name": "message",
                                    "displayName": "message",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Text of message to body",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "subject": {
                                    "name": "subject",
                                    "displayName": "subject",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Text of message subject",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "This method allows messaging-authorized requests to send messages between members\n\n#Request Parameters\nThis method requires an HTTP POST and OAuth authorization in combination with the messaging permission scope. All required parameters must be supplied. You can call this method with dryrun set to true if you wish to test the validation logic before sending the actual request\n",
                            "method": "post",
                            "is": [
                                "groupmember"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/message",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "message"
                    ]
                },
                {
                    "relativeUri": "/member_photo",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "201": {
                                    "code": "201",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "memberPhotoUploadResult",
                                            "example": "{\n  \"title\": 100,\n  \"photo_url\": \"photo_url\",\n  \"member_photo_id\": 100\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"member_photo_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"photo_url\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"title\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    }\r\n  }\r\n}\r\n"
                                        }
                                    },
                                    "description": "When successful, this method responds with a status of \"201 Created\" and a Location header with the uploaded photo's URL. The response body contains the following elements in JSON or XML. Upon recieving the response, some photos may not be immediately accesible. If this is desirable, use the \"await\" request parameter\n|||\n|-|\n|member_photo_id|Unique identifier of this photo|\n|photo_url|Link to the uploaded member photo (same as in the Location header).|\n|title|Request Completed|\n"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0"
                            ],
                            "queryParameters": {
                                "await": {
                                    "name": "await",
                                    "displayName": "await",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "If true, this ensures a response will not be returned until the upload is accessible",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "main": {
                                    "name": "main",
                                    "displayName": "main",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Set to \"true\" to have this photo become the member's main profile photo. Otherwise, it will become the main photo only when none other is selected\n",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "photo": {
                                    "name": "photo",
                                    "displayName": "photo",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The photo, encoded as multipart/form-data. The maximum file size allowed is 10MB",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "sync_photo": {
                                    "name": "sync_photo",
                                    "displayName": "sync_photo",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "When set to true, this parameter will sync all of the group profile photos for the member with the provided photo_id",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Uploads a photo to be assocated with a Member\n\n#Request Parameters\nThe request must be a POST of content-type multipart/form-data. The supplied photo will be added to the currently authenticated user's member profile. If authenticating with OAuth, no parameters in the multipart form data should be included in the signature base string.\n",
                            "method": "post",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/member_photo",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "member_photo"
                    ]
                },
                {
                    "relativeUri": "/rsvp",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "201": {
                                    "code": "201",
                                    "description": "|||\n|-|\n|answers|Answers to event survey questions provided when the member RSVP'd, only available to organizers and assistant organizers|\n|comments|The message that the member provided when RSVP was made|\n|created|Creation time of the RSVP, in milliseconds since the epoch.|\n|event|The event associated with the RSVP|\n|group|Group hosting the event|\n|guests|Number of guests the RSVP'd member will be bringing|\n|host|Optional field, `true` if RSVP is for an event host|\n|member|Member who RSVP'd|\n|member_photo|Rsvping Member's photo|\n|mtime|Last modified time of the RSVP, in milliseconds since the epoch.|\n|pay_status|The RSVPer's payment status if the event has an associated fee. Returned only for organizers when 'pay_status' is requested with the fields parameter. This may be one of 'none', 'paid', 'partially_paid', 'payment_pending', 'echeck_pending', 'refund_pending', 'partially_refunded', 'refunded'.|\n|payment_redirect|If the event RSVP'd to requires online payment and a yes response was accepted, this field will contain a payment url you should redirect the authenticated member to in order to complete the online payment|\n|response|\"yes\", \"no\", \"waitlist\" or \"yes_pending_payment\" which is the response returned after RSVPing \"yes\" to an event that requires payment.|\n|rsvp_id|The RSVP id|\n|tallies|The current set of counts for RSVPs|\n|venue|Venue, if selected and not hidden|\n|watching|if the current member choose to watch and event for open spot notifications, their response will be waitlist and watching will be true|\n"
                                },
                                "202": {
                                    "code": "202",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "rsvp",
                                            "example": "{\n  \"member\": {\n    \"member_state\": \"member_state\",\n    \"member_city\": \"member_city\",\n    \"bio\": \"bio\",\n    \"name\": \"name\",\n    \"member_country\": \"member_country\",\n    \"other_services\": {\n      \"[service-name]\": \"[service-name]\"\n    },\n    \"member_id\": 100\n  },\n  \"host\": \"host\",\n  \"answers\": \"answers\",\n  \"guests\": \"guests\",\n  \"mtime\": 100,\n  \"venue\": {\n    \"id\": 100,\n    \"zip\": \"zip\",\n    \"phone\": 100,\n    \"lon\": 1.0,\n    \"repinned\": \"repinned\",\n    \"address_3\": \"address_3\",\n    \"name\": \"name\",\n    \"state\": 100,\n    \"address_1\": \"address_1\",\n    \"address_2\": \"address_2\",\n    \"lat\": 1.0,\n    \"country\": \"country\",\n    \"city\": \"city\"\n  },\n  \"pay_status\": \"pay_status\",\n  \"response\": \"response\",\n  \"member_photo\": {\n    \"photo_link\": \"photo_link\",\n    \"highres_link\": \"highres_link\",\n    \"thumb_link\": \"thumb_link\",\n    \"photo_id\": 100\n  },\n  \"watching\": \"watching\",\n  \"created\": 100,\n  \"event\": {\n    \"id\": 100,\n    \"time\": 100,\n    \"event_url\": \"event_url\",\n    \"name\": \"name\"\n  },\n  \"rsvp_id\": 100,\n  \"group\": {\n    \"id\": 100,\n    \"group_lat\": \"group_lat\",\n    \"name\": \"name\",\n    \"group_lon\": \"group_lon\",\n    \"join_mode\": \"join_mode\",\n    \"urlname\": \"urlname\",\n    \"who\": \"who\"\n  },\n  \"comments\": \"comments\"\n}\n",
                                            "schemaContent": "rsvp"
                                        }
                                    },
                                    "description": "In cases where a member succesfully RSVP's yes to one of these events, the response will be returned as an HTTP 202 Accepted status, representing that the payment processing has not yet been completed. A payment_redirect property will be append to the response containing the value of the step you should take to submit the payment online for the event.\n\nIf a validation of Event and RSVP state occurs you may wish to inspect the response body for one of these the following error \"codes\".\n|||\n|-|\n|dues_required|You must pay the group's member dues on the full site before you can RSVP for this event|\n|event_past|This event has already passed|\n|invalid_event|Invalid event|\n|invalid_guest_num|Invalid number or guests|\n|invalid_response|Invalid RSVP response|\n|payment_required|Payment required to RSVP|\n|refund_agreement|Member must agree to refund policy|\n|rsvp_error|Error RSVPing to event|\n|rsvper_not_authorized|You need to be an organizer or an event host to RSVP this member|\n|too_few_spots|There are not enough spots for your rsvp|\n|too_many_guests|You have specified too many guests|\n"
                                },
                                "401": {
                                    "code": "401",
                                    "description": "401 Unauthorized is returned if the currently authenticated member can not create Meetups in the specified group."
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0"
                            ],
                            "queryParameters": {
                                "agree_to_refund": {
                                    "name": "agree_to_refund",
                                    "displayName": "agree_to_refund",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "For events with fees, the authorized member must agree to the event's refund policy. This must be set to either true or false",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "answer_{qid}": {
                                    "name": "answer_{qid}",
                                    "displayName": "answer_{qid}",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Answers to event survey questions. Organizers and hosts my not edit or create answers on behalf of members",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "comments": {
                                    "name": "comments",
                                    "displayName": "comments",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "A comment to post along with the RSVP",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "event_id": {
                                    "name": "event_id",
                                    "displayName": "event_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The event that you are RSVP'ing to",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "guests": {
                                    "name": "guests",
                                    "displayName": "guests",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Number of guests also coming to the event.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "member_id": {
                                    "name": "member_id",
                                    "displayName": "member_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Organizers and event hosts may RSVP on behalf of a member by specifying an ID here. As when editing RSVPs on the site, organizers may enter a \"yes\" for a member even if the event requires payment.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "opt_to_pay": {
                                    "name": "opt_to_pay",
                                    "displayName": "opt_to_pay",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "For events with fees, the authorized member may opt to pay as part of the RSVP request. This may be set to true or false",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "rsvp": {
                                    "name": "rsvp",
                                    "displayName": "rsvp",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The RSVP setting - value must be either \"yes\". \"no\", \"waitlist\" or \"maybe\"",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Creates a new Rsvp\n\n#Request Parameters\nAt least one of the required parameter(s) must be supplied with the request. The rsvp is recorded for the currently authenticated member account, unless a member_id is supplied. Member's RSVP'ing as themselves may supply answers to a Meetup event's survey questions by supplying answers as request parameters corresponding to question ids in the format answer_{question_id}. To discover available Meetup event survey questions, supply the Events 2 method with the 'fields' parameter set to 'survey_questions'\n\nIf the event requires payment you are required to send an \"agree_to_refund\" parameter set to the true or false. This represents the authorized members agreement to understanding the event's refund policy.\n",
                            "method": "post",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/{id}",
                            "type": "meetupResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "uriParameters": {
                                "id": {
                                    "name": "id",
                                    "displayName": "id",
                                    "type": "string",
                                    "required": true,
                                    "repeat": false,
                                    "description": ":id is a RSVP identifier",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "rsvp",
                                                    "example": "{\n  \"member\": {\n    \"member_state\": \"member_state\",\n    \"member_city\": \"member_city\",\n    \"bio\": \"bio\",\n    \"name\": \"name\",\n    \"member_country\": \"member_country\",\n    \"other_services\": {\n      \"[service-name]\": \"[service-name]\"\n    },\n    \"member_id\": 100\n  },\n  \"host\": \"host\",\n  \"answers\": \"answers\",\n  \"guests\": \"guests\",\n  \"mtime\": 100,\n  \"venue\": {\n    \"id\": 100,\n    \"zip\": \"zip\",\n    \"phone\": 100,\n    \"lon\": 1.0,\n    \"repinned\": \"repinned\",\n    \"address_3\": \"address_3\",\n    \"name\": \"name\",\n    \"state\": 100,\n    \"address_1\": \"address_1\",\n    \"address_2\": \"address_2\",\n    \"lat\": 1.0,\n    \"country\": \"country\",\n    \"city\": \"city\"\n  },\n  \"pay_status\": \"pay_status\",\n  \"response\": \"response\",\n  \"member_photo\": {\n    \"photo_link\": \"photo_link\",\n    \"highres_link\": \"highres_link\",\n    \"thumb_link\": \"thumb_link\",\n    \"photo_id\": 100\n  },\n  \"watching\": \"watching\",\n  \"created\": 100,\n  \"event\": {\n    \"id\": 100,\n    \"time\": 100,\n    \"event_url\": \"event_url\",\n    \"name\": \"name\"\n  },\n  \"rsvp_id\": 100,\n  \"group\": {\n    \"id\": 100,\n    \"group_lat\": \"group_lat\",\n    \"name\": \"name\",\n    \"group_lon\": \"group_lon\",\n    \"join_mode\": \"join_mode\",\n    \"urlname\": \"urlname\",\n    \"who\": \"who\"\n  },\n  \"comments\": \"comments\"\n}\n",
                                                    "schemaContent": "rsvp"
                                                }
                                            },
                                            "description": "|||\n|-|\n|answers|Answers to event survey questions provided when the member RSVP'd, only available to organizers and assistant organizers|\n|comments|The message that the member provided when RSVP was made|\n|created|Creation time of the RSVP, in milliseconds since the epoch.|\n|event|The event associated with the RSVP|\n|group|Group hosting the event|\n|guests|Number of guests the RSVP'd member will be bringing|\n|host|Optional field, `true` if RSVP is for an event host|\n|member|Member who RSVP'd|\n|member_photo|The RSVPing member's photo if available|\n|mtime|Last modified time of the RSVP, in milliseconds since the epoch.|\n|pay_status|The RSVPer's payment status if the event has an associated fee. Returned only for organizers when 'pay_status' is requested with the fields parameter. This may be one of 'none', 'paid', 'partially_paid', 'payment_pending', 'echeck_pending', 'refund_pending', 'partially_refunded', 'refunded'.|\n|response|\"yes\", \"no\", \"waitlist\" or \"yes_pending_payment\" which is the response returned after RSVPing \"yes\" to an event that requires payment.|\n|rsvp_id|The RSVP id|\n|venue|Venue, if selected and not hidden|\n|watching|if the current member choose to watch and event for open spot notifications, their response will be waitlist and watching will be true|\n"
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0",
                                        "oauth_1_0",
                                        "api_key"
                                    ],
                                    "queryParameters": {
                                        "fields": {
                                            "name": "fields",
                                            "displayName": "fields",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "Request that additional fields (separated by commas) be included in the output",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Retrieve a single RSVP\n\n#Request Parameters\nOnly authorization parameters are needed.\n",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/{id}",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "{id}"
                            ]
                        }
                    ],
                    "displayName": "/rsvp",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "rsvp"
                    ]
                },
                {
                    "relativeUri": "/member/{id}",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "uriParameters": {
                        "id": {
                            "name": "id",
                            "displayName": "id",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "description": ":id in the path should be the id of a member",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "member",
                                            "example": "{\n  \"birthday\": {\n    \"month\": 100,\n    \"year\": \"year\",\n    \"day\": \"day\"\n  },\n  \"messaging_pref\": \"messaging_pref\",\n  \"link\": \"link\",\n  \"state\": 100,\n  \"self\": {\n    \"common\": {\n      \"friends\": \"friends\",\n      \"groups\": \"groups\"\n    }\n  },\n  \"lang\": \"lang\",\n  \"city\": \"city\",\n  \"visited\": 100,\n  \"id\": 100,\n  \"joined\": 100,\n  \"reachable\": \"reachable\",\n  \"name\": \"name\",\n  \"gender\": \"gender\",\n  \"other_services\": {\n    \"[service-name]\": {\n      \"identifier\": \"identifier\"\n    }\n  },\n  \"lat\": 1.0,\n  \"lon\": 1.0,\n  \"hometown\": \"hometown\",\n  \"membership_count\": 100,\n  \"photo_url\": \"photo_url\",\n  \"privacy\": {\n    \"photos\": \"photos\",\n    \"topics\": \"topics\",\n    \"bio\": \"bio\",\n    \"facebook\": \"facebook\",\n    \"groups\": \"groups\"\n  },\n  \"photo\": {\n    \"photo_link\": \"photo_link\",\n    \"highres_link\": \"highres_link\",\n    \"thumb_link\": \"thumb_link\",\n    \"photo_id\": 100\n  },\n  \"country\": \"country\",\n  \"photos\": \"photos\",\n  \"topics\": {\n    \"id\": 100,\n    \"urlkey\": \"urlkey\",\n    \"name\": \"name\"\n  },\n  \"bio\": \"bio\",\n  \"email\": 100,\n  \"messagable\": \"messagable\"\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"bio\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"birthday\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"day\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"month\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"year\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"country\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"city\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"state\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"email\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"gender\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"hometown\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"joined\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"lang\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"lat\": {\r\n      \"required\": false,\r\n      \"type\": \"number\"\r\n    },\r\n    \"lon\": {\r\n      \"required\": false,\r\n      \"type\": \"number\"\r\n    },\r\n    \"link\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"membership_count\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"messagable\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"messaging_pref\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"name\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"other_services\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"[service-name]\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"identifier\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"photo\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"highres_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"photo_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"photo_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"thumb_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"photo_url\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"photos\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"privacy\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"bio\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"facebook\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"groups\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"photos\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"topics\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"reachable\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"self\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"common\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"friends\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"groups\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"topics\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"urlkey\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"visited\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    }\r\n  }\r\n}\r\n"
                                        }
                                    },
                                    "description": "|||\n|-|\n|bio|A description of the member|\n|birthday|If the authorized is the current member, the member's birthday based on provided information|\n|country, city, state|Country, City, (and for the US, State) the member has provided|\n|email|Member's email address, if requested in fields parameter. This item is only included if the currently authenticated user is the founder of a Meetup Everywhere in which the member has elected to share an email address.|\n|gender|Optional fields parameter. Members can only see their own gender. May be one of none, other, female, male|\n|hometown|Hometown of member|\n|id|The member's id|\n|joined|Date and time a member joined in milliseconds since the epoch|\n|lang|The member's current language preference|\n|lat, lon|Latitude and longitude coordinates of the members reported city|\n|link|URL to the member's profile page on meetup.com|\n|membership_count|Optional field indicating the number of active memberships this member has. If the member has a hidden group preference, this will return 0.|\n|messagable|Returned when the \"fields\" parameter is set to \"messaging_pref\". Returns \"true\" if the authenticated member can message them, \"false\" otherwise.|\n|messaging_pref|Returned when the \"fields\" parameter is set to \"messaging_pref\". This specifies the members preference for being contacted from members on the site. Possible values are \"orgs_only\", \"groups_only\", \"all_members\"|\n|name|The member's name|\n|other_services|Third-party services associated with the member account|\n|photo|The member's photo if available|\n|photo_url|Link to the profile photo of the member|\n|photos|List of all the member's photos returned as an array of the representation of the photo property|\n|privacy|Optional fields parameter. Defines preferences for visibility of certain attributes only returned for the authenticated member|\n|reachable|Optional fields parameter. If querying by group and the authorized member is an organizer the member's group, this will return false when the member's email address is known to bounce and true otherwise|\n|self|Optional field, details particular to the authorized user.|\n|topics|A sampling of 50 topics this member has subscribed to. Only appears if the queried user has not hidden them, or if the authenticated and queried user are the same|\n|visited|Date and time of member's last activity in milliseconds since the epoch|\n"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0",
                                "api_key"
                            ],
                            "queryParameters": {
                                "fields": {
                                    "name": "fields",
                                    "displayName": "fields",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "comma-separate list of optional fields",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Retrieve a single member\n\n#Request Parameters\nOnly authorization parameters are needed.\n",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "member",
                                            "example": "{\n  \"birthday\": {\n    \"month\": 100,\n    \"year\": \"year\",\n    \"day\": \"day\"\n  },\n  \"messaging_pref\": \"messaging_pref\",\n  \"link\": \"link\",\n  \"state\": 100,\n  \"self\": {\n    \"common\": {\n      \"friends\": \"friends\",\n      \"groups\": \"groups\"\n    }\n  },\n  \"lang\": \"lang\",\n  \"city\": \"city\",\n  \"visited\": 100,\n  \"id\": 100,\n  \"joined\": 100,\n  \"reachable\": \"reachable\",\n  \"name\": \"name\",\n  \"gender\": \"gender\",\n  \"other_services\": {\n    \"[service-name]\": {\n      \"identifier\": \"identifier\"\n    }\n  },\n  \"lat\": 1.0,\n  \"lon\": 1.0,\n  \"hometown\": \"hometown\",\n  \"membership_count\": 100,\n  \"photo_url\": \"photo_url\",\n  \"privacy\": {\n    \"photos\": \"photos\",\n    \"topics\": \"topics\",\n    \"bio\": \"bio\",\n    \"facebook\": \"facebook\",\n    \"groups\": \"groups\"\n  },\n  \"photo\": {\n    \"photo_link\": \"photo_link\",\n    \"highres_link\": \"highres_link\",\n    \"thumb_link\": \"thumb_link\",\n    \"photo_id\": 100\n  },\n  \"country\": \"country\",\n  \"photos\": \"photos\",\n  \"topics\": {\n    \"id\": 100,\n    \"urlkey\": \"urlkey\",\n    \"name\": \"name\"\n  },\n  \"bio\": \"bio\",\n  \"email\": 100,\n  \"messagable\": \"messagable\"\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"bio\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"birthday\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"day\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"month\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"year\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"country\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"city\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"state\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"email\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"gender\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"hometown\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"joined\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"lang\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"lat\": {\r\n      \"required\": false,\r\n      \"type\": \"number\"\r\n    },\r\n    \"lon\": {\r\n      \"required\": false,\r\n      \"type\": \"number\"\r\n    },\r\n    \"link\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"membership_count\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"messagable\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"messaging_pref\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"name\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"other_services\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"[service-name]\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"identifier\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"photo\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"highres_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"photo_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"photo_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"thumb_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"photo_url\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"photos\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"privacy\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"bio\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"facebook\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"groups\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"photos\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"topics\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"reachable\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"self\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"common\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"friends\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            },\r\n            \"groups\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"topics\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"urlkey\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"visited\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    }\r\n  }\r\n}\r\n"
                                        }
                                    },
                                    "description": "|||\n|-|\n|bio|A description of the member|\n|birthday|If the authorized is the current member, the member's birthday based on provided information|\n|country, city, state|Country, City, (and for the US, State) the member has provided|\n|email|Member's email address, if requested in fields parameter. This item is only included if the currently authenticated user is the founder of a Meetup Everywhere in which the member has elected to share an email address.|\n|gender|Optional fields parameter. Members can only see their own gender. May be one of none, other, female, male|\n|hometown|Hometown of member|\n|id|The member's id|\n|joined|Date and time a member joined in milliseconds since the epoch|\n|lang|The member's current language preference|\n|lat, lon|Latitude and longitude coordinates of the members reported city|\n|link|URL to the member's profile page on meetup.com|\n|membership_count|Optional field indicating the number of active memberships this member has. If the member has a hidden group preference, this will return 0.|\n|messagable|Returned when the \"fields\" parameter is set to \"messaging_pref\". Returns \"true\" if the authenticated member can message them, \"false\" otherwise.|\n|messaging_pref|Returned when the \"fields\" parameter is set to \"messaging_pref\". This specifies the members preference for being contacted from members on the site. Possible values are \"orgs_only\", \"groups_only\", \"all_members\"|\n|name|The member's name|\n|other_services|Third-party services associated with the member account|\n|photo|The member's photo if available|\n|photo_url|Link to the profile photo of the member|\n|photos|List of all the member's photos returned as an array of the representation of the photo property|\n|privacy|Optional fields parameter. Defines preferences for visibility of certain attributes only returned for the authenticated member|\n|reachable|Optional fields parameter. If querying by group and the authorized member is an organizer the member's group, this will return false when the member's email address is known to bounce and true otherwise|\n|self|Optional field, details particular to the authorized user.|\n|topics|A sampling of 50 topics this member has subscribed to. Only appears if the queried user has not hidden them, or if the authenticated and queried user are the same|\n|visited|Date and time of member's last activity in milliseconds since the epoch|\n"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0"
                            ],
                            "queryParameters": {
                                "add_topics": {
                                    "name": "add_topics",
                                    "displayName": "add_topics",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Comma-delimited list of topics ids to add to your alert list",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "bio": {
                                    "name": "bio",
                                    "displayName": "bio",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Free form text passage about you. must be less than 250 characters",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "bio_privacy": {
                                    "name": "bio_privacy",
                                    "displayName": "bio_privacy",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Controls the visibility of the member's bio. May be one of hidden, visible",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "birthday": {
                                    "name": "birthday",
                                    "displayName": "birthday",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Day you were born. Format should be in the form of yyyy or mmddyyyy. A value of -1 indicates that birthday data should be cleared.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "city_id": {
                                    "name": "city_id",
                                    "displayName": "city_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Valid city id from /2/cities method",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "facebook_privacy": {
                                    "name": "facebook_privacy",
                                    "displayName": "facebook_privacy",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Controls the visibility of the member's facebook connection. May be one of hidden, visible. If the member has not connected their Facebook account, attempts to set this preference will do nothing.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "gender": {
                                    "name": "gender",
                                    "displayName": "gender",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Your gender (used for better recommendations). Valid values are be one of none, other, female, male",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "groups_privacy": {
                                    "name": "groups_privacy",
                                    "displayName": "groups_privacy",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Controls the visibility of the member's groups. May be one of hidden, visible",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "hometown": {
                                    "name": "hometown",
                                    "displayName": "hometown",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Hometown of member. Can not be longer than 64 characters",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "lang": {
                                    "name": "lang",
                                    "displayName": "lang",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Language preference used on the site. Valid values are en_us, de, es, fr, it, pt",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "name": {
                                    "name": "name",
                                    "displayName": "name",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The name of the current member",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "photo_id": {
                                    "name": "photo_id",
                                    "displayName": "photo_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "A valid photo_id from the member's photos to set as the main profile photo",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "photos_privacy": {
                                    "name": "photos_privacy",
                                    "displayName": "photos_privacy",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Controls the visibility of the member's photos. May be one of hidden, visible",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "radius": {
                                    "name": "radius",
                                    "displayName": "radius",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "radius, in miles to search for city given a lat and lon. default 25.0, max 100.0",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "remove_topics": {
                                    "name": "remove_topics",
                                    "displayName": "remove_topics",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Comma-delimited list of topic ids to remove from your alert list",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "sync_photo": {
                                    "name": "sync_photo",
                                    "displayName": "sync_photo",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "When set to true, this parameter will sync all of the group profile photos for the member with the provided photo_id",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "topics_privacy": {
                                    "name": "topics_privacy",
                                    "displayName": "topics_privacy",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Controls the visibility of the member's topics. May be one of hidden, visible",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "zip": {
                                    "name": "zip",
                                    "displayName": "zip",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Valid zip code for city",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Edit the authorized member's attributes\n\n#Request Parameters\nThis method requires tls. Only the authorized user may edit their own propertries. A city may be provided by either a city_id or a combination of lat and lon\n",
                            "method": "post",
                            "is": [
                                "locatable",
                                "locationByCity"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/member/{id}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "member",
                        "{id}"
                    ]
                },
                {
                    "relativeUri": "/photo_album",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "201": {
                                    "code": "201",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "photoAlbum",
                                            "example": "{\n  \"title\": 100,\n  \"album_photo\": {\n    \"photo_link\": \"photo_link\",\n    \"highres_link\": \"highres_link\",\n    \"thumb_link\": \"thumb_link\",\n    \"photo_id\": 100\n  },\n  \"updated\": 100,\n  \"created\": 100,\n  \"group_id\": 100,\n  \"photo_album_id\": 100,\n  \"ordering\": 100,\n  \"event_id\": 100,\n  \"photo_count\": 100\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"album_photo\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"highres_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"photo_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"photo_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"thumb_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"created\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"event_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"group_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"ordering\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"photo_album_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"photo_count\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"title\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"updated\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    }\r\n  }\r\n}\r\n"
                                        }
                                    },
                                    "description": "If successful, this method responds with a \"201 Created\" status and a json or XML body consisting of the album data in the same fields as the response items of the Photo Albums method."
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0"
                            ],
                            "queryParameters": {
                                "group_id": {
                                    "name": "group_id",
                                    "displayName": "group_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Group to create the album in",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "title": {
                                    "name": "title",
                                    "displayName": "title",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Title of the new album",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "This method creates photo albums within a Meetup group\n\n#Request Parameters\nAll of the required parameters must be supplied with the request, which must be an HTTP POST. The currently authenticated user must be an organizer (main, assistant, or co-) of the specified group\n",
                            "method": "post",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/photo_album",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "photo_album"
                    ]
                },
                {
                    "relativeUri": "/event_comment",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "201": {
                                    "code": "201",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "eventComment",
                                            "example": "{\n  \"event_diff_id\": 100,\n  \"comment_url\": \"comment_url\",\n  \"group_id\": 100,\n  \"event_id\": 100,\n  \"self\": {\n    \"actions\": \"actions\"\n  },\n  \"in_reply_to\": 100,\n  \"member_id\": 100,\n  \"member_photo\": {\n    \"photo_link\": \"photo_link\",\n    \"hires_link\": \"hires_link\",\n    \"thumb_link\": \"thumb_link\",\n    \"photo_id\": 100\n  },\n  \"notifications\": \"notifications\",\n  \"replies\": \"replies\",\n  \"event\": {\n    \"id\": 100,\n    \"time\": 100,\n    \"event_url\": \"event_url\",\n    \"name\": \"name\"\n  },\n  \"like_count\": 100,\n  \"comment\": \"comment\",\n  \"member_name\": \"member_name\",\n  \"event_comment_id\": 100\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"comment\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"comment_url\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"event\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"event_url\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"time\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        }\r\n      }\r\n    },\r\n    \"event_comment_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"event_diff_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"event_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"group_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"in_reply_to\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"like_count\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"member_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"member_name\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"member_photo\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"hires_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"photo_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"photo_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"thumb_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"notifications\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"replies\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"self\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"actions\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
                                        }
                                    },
                                    "description": "If successful, this method responds with a \"201 Created\" status and a JSON or XML body consisting of the posted comment in the same fields as the response items of the Event Comment Get (\"/2/event_comment/:id\") method."
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0"
                            ],
                            "queryParameters": {
                                "comment": {
                                    "name": "comment",
                                    "displayName": "comment",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The comment text",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "event_id": {
                                    "name": "event_id",
                                    "displayName": "event_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The event related to this comment.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "in_reply_to": {
                                    "name": "in_reply_to",
                                    "displayName": "in_reply_to",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "If this comment is a reply, the ID of the comment being replied to",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "notifications": {
                                    "name": "notifications",
                                    "displayName": "notifications",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Notification control for authorized member on this comment thread. \"on\" will result in notifications being sent. \"off\" will opt the member out of notifications for this comment thread. Defaults to \"on\" unless the member previous opted out of notifications on the thread.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "This method posts messages that appear under \"Talk about this Meetup\".\n\n#Request Parameters\nAll of the required parameters must be supplied with the request, which must be an HTTP POST. The currently authenticated user must be a member of the group hosting the event\n",
                            "method": "post",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/{id}",
                            "type": "meetupResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "uriParameters": {
                                "id": {
                                    "name": "id",
                                    "displayName": "id",
                                    "type": "string",
                                    "required": true,
                                    "repeat": false,
                                    "description": ":id is a comment identifier",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "eventComment",
                                                    "example": "{\n  \"event_diff_id\": 100,\n  \"comment_url\": \"comment_url\",\n  \"group_id\": 100,\n  \"event_id\": 100,\n  \"self\": {\n    \"actions\": \"actions\"\n  },\n  \"in_reply_to\": 100,\n  \"member_id\": 100,\n  \"member_photo\": {\n    \"photo_link\": \"photo_link\",\n    \"hires_link\": \"hires_link\",\n    \"thumb_link\": \"thumb_link\",\n    \"photo_id\": 100\n  },\n  \"notifications\": \"notifications\",\n  \"replies\": \"replies\",\n  \"event\": {\n    \"id\": 100,\n    \"time\": 100,\n    \"event_url\": \"event_url\",\n    \"name\": \"name\"\n  },\n  \"like_count\": 100,\n  \"comment\": \"comment\",\n  \"member_name\": \"member_name\",\n  \"event_comment_id\": 100\n}\n",
                                                    "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"comment\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"comment_url\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"event\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"event_url\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"time\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        }\r\n      }\r\n    },\r\n    \"event_comment_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"event_diff_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"event_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"group_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"in_reply_to\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"like_count\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"member_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"member_name\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"member_photo\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"hires_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"photo_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"photo_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"thumb_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"notifications\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"replies\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"self\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"actions\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
                                                }
                                            },
                                            "description": "|||\n|-|\n|comment|The comment the member left for the event|\n|comment_url|URL for the event comment on meetup.com|\n|event|Optional field, basic info on event associated with comment|\n|event_comment_id|The ID of this comment|\n|event_diff_id|The ID of this comment if it is an auto-generated event change comment|\n|event_id|The string ID of the event the comment belongs to|\n|group_id|The ID of the group that the event belongs to|\n|in_reply_to|If this is a reply, the ID of the comment replied to|\n|like_count|optional fields parameter which adds the number of likes this comment has received|\n|member_id|The ID of the member that posted the comment. May be 0 for former members|\n|member_name|The name of the member that posted the comment. May be \"Former Member\" for former members|\n|member_photo|If the optional \"fields\" parameter contains \"member_photo\", the member photo associated with the comment|\n|notifications|optional fields parameter to append the authorized member's current notification preference for the given comment|\n|replies|Optional fields parameter returning array of the last 20 replies to comment|\n|self|Optional field with details particular to the authorized user, only present if requested and user is a member of the hosting group|\n"
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0",
                                        "oauth_1_0",
                                        "api_key"
                                    ],
                                    "queryParameters": {
                                        "fields": {
                                            "name": "fields",
                                            "displayName": "fields",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "comma-separate list of optional fields",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Retrieve a single event comment or reply\n\n#Request Parameters\nOnly authorization parameters are needed.\n",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "description": "Returns an HTTP 200 response if delete was successful."
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "Returns an HTTP 401 response if unauthorized."
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0",
                                        "oauth_1_0"
                                    ],
                                    "queryParameters": {
                                        "fields": {
                                            "name": "fields",
                                            "displayName": "fields",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "comma-separate list of optional fields",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Delete a single event comment or reply\n\n#Request Parameters\nOnly authorization parameters are needed.\n",
                                    "method": "delete",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/{id}",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "{id}"
                            ]
                        }
                    ],
                    "displayName": "/event_comment",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "event_comment"
                    ]
                },
                {
                    "relativeUri": "/event_comments",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "eventComments",
                                            "example": "{\n  \"results\": [\n    {\n      \"event_diff_id\": 0,\n      \"member_photo\": {\n        \"photo_link\": \"photo_link 0\",\n        \"hires_link\": \"hires_link 0\",\n        \"thumb_link\": \"thumb_link 0\",\n        \"photo_id\": 0\n      },\n      \"notifications\": \"notifications 0\",\n      \"like_count\": 0,\n      \"event\": {\n        \"id\": 0,\n        \"time\": 0,\n        \"event_url\": \"event_url 0\",\n        \"name\": \"name 0\"\n      },\n      \"comment_url\": \"comment_url 0\",\n      \"group_id\": 0,\n      \"event_id\": 0,\n      \"self\": {\n        \"actions\": \"actions 0\"\n      },\n      \"member_name\": \"member_name 0\",\n      \"in_reply_to\": 0,\n      \"comment\": \"comment 0\",\n      \"event_comment_id\": 0,\n      \"member_id\": 0\n    },\n    {\n      \"event_diff_id\": 1,\n      \"member_photo\": {\n        \"photo_link\": \"photo_link 1\",\n        \"hires_link\": \"hires_link 1\",\n        \"thumb_link\": \"thumb_link 1\",\n        \"photo_id\": 1\n      },\n      \"notifications\": \"notifications 1\",\n      \"like_count\": 1,\n      \"event\": {\n        \"id\": 1,\n        \"time\": 1,\n        \"event_url\": \"event_url 1\",\n        \"name\": \"name 1\"\n      },\n      \"comment_url\": \"comment_url 1\",\n      \"group_id\": 1,\n      \"event_id\": 1,\n      \"self\": {\n        \"actions\": \"actions 1\"\n      },\n      \"member_name\": \"member_name 1\",\n      \"in_reply_to\": 1,\n      \"comment\": \"comment 1\",\n      \"event_comment_id\": 1,\n      \"member_id\": 1\n    }\n  ]\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"comment\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"comment_url\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"event\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"event_url\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"time\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              }\r\n            }\r\n          },\r\n          \"event_comment_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"event_diff_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"event_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"group_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"in_reply_to\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"like_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"member_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"member_name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"member_photo\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"hires_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"photo_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"photo_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"thumb_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"notifications\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"self\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"actions\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
                                        }
                                    },
                                    "description": "|||\n|-|\n|comment|The comment the member left for the event|\n|comment_url|URL for the event comment on meetup.com|\n|event|Optional field, basic info on event associated with comment|\n|event_comment_id|The ID of this comment|\n|event_diff_id|The ID of this comment if it is an auto-generated event change comment|\n|event_id|The string ID of the event the comment belongs to|\n|group_id|The ID of the group that the event belongs to|\n|in_reply_to|If this is a reply, the ID of the comment replied to|\n|like_count|optional fields parameter which adds the number of likes this comment has received|\n|member_id|The ID of the member that posted the comment. May be 0 for former members|\n|member_name|The name of the member that posted the comment. May be \"Former Member\" for former members|\n|member_photo|If the optional \"fields\" parameter contains \"member_photo\", the member photo associated with the comment|\n|notifications|optional fields parameter to append the authorized member's current notification preference for the given comment|\n|self|Optional field with details particular to the authorized user, only present if requested and user is a member of the hosting group|\n"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0",
                                "api_key"
                            ],
                            "queryParameters": {
                                "comment_id": {
                                    "name": "comment_id",
                                    "displayName": "comment_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Return comments for a given set of comment IDs, separated by commas",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "event_id": {
                                    "name": "event_id",
                                    "displayName": "event_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Return comments on these events, separated by commas.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "fields": {
                                    "name": "fields",
                                    "displayName": "fields",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Optionally accepts the value \"member_photo\" or \"notifications\"",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "show_diffs": {
                                    "name": "show_diffs",
                                    "displayName": "show_diffs",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Return auto-generated event change comments. Default value is true, turn off by specifying \"show_diffs=false\".",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "order": {
                                    "name": "order",
                                    "displayName": "order",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "|value|description|\n|-|\n|name|Order by the name of the member|\n|thread|Order by comment threads, those with the most recent activity are listed first. Only one event may be provided and desc not supported. Also note that with this ordering, *replies* are excluded from pagination accounting. Only top-level comments will be capped at the page size.|\n|time|Order by the time that each rating was posted (default: descending)|\n",
                                    "enum": [
                                        "name",
                                        "thread",
                                        "time"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "This method returns messages that appear under \"Talk about this Meetup\". To post messages, see the corresponding write method.\n\n#Request Parameters\nAt least one of the required parameters must be supplied with the request.\n",
                            "method": "get",
                            "is": [
                                "list",
                                "groupmember"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/event_comments",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "event_comments"
                    ]
                },
                {
                    "relativeUri": "/group_photo",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "201": {
                                    "code": "201",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "groupPhotoUploadResult",
                                            "example": "{\n  \"title\": 100,\n  \"group_photo_id\": 100,\n  \"photo_url\": \"photo_url\"\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"group_photo_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"photo_url\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"title\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    }\r\n  }\r\n}\r\n"
                                        }
                                    },
                                    "description": "When successful, this method responds with a status of \"201 Created\" and a Location header with the uploaded photo's URL. The response body contains the following elements in JSON or XML. Upon recieving the response, some photos may not be immediately accesible. If this is desirable, use the \"await\" request parameter\n|||\n|-|\n|group_photo_id|Unique identifier of this photo|\n|photo_url|Link to the uploaded group photo (same as in the Location header).|\n|title|Request Completed|\n"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0"
                            ],
                            "queryParameters": {
                                "await": {
                                    "name": "await",
                                    "displayName": "await",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "If true, this ensures a response will not be returned until the upload is accessible",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "group_id": {
                                    "name": "group_id",
                                    "displayName": "group_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Group ID for the target group. This may be used as an alternative to group_urlname",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "group_urlname": {
                                    "name": "group_urlname",
                                    "displayName": "group_urlname",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Group urlname. This may be used as an alternative to group_id",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "main": {
                                    "name": "main",
                                    "displayName": "main",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Set to 'true' to have this photo become the group's main photo. Set it to 'false' otherwise. Defaults to true",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "photo": {
                                    "name": "photo",
                                    "displayName": "photo",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The photo, encoded as multipart/form-data. The maximum file size allowed is 10MB",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Uploads a new Meetup Group photo. To change other Group settings use the Group Edit endpoint\n\n#Request Parameters\nThe request must be a POST of content-type multipart/form-data. The supplied photo will be added to the provided groups general photo album. If authenticating with OAuth, no parameters in the multipart form data should be included in the signature base string. You must be an organizer of the group in order to load a photo.\n",
                            "method": "post",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/group_photo",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "group_photo"
                    ]
                },
                {
                    "relativeUri": "/photo/{id}",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "uriParameters": {
                        "id": {
                            "name": "id",
                            "displayName": "id",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "description": ":id is the photo identifier",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "description": "Returns an HTTP 200 response if delete was successful."
                                },
                                "401": {
                                    "code": "401",
                                    "description": "Returns an HTTP 401 response if unauthorized."
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0"
                            ],
                            "description": "Delete specified event photo\n\n#Request Parameters\nOnly authorization parameters are needed. Authorized user must be the original poster of the photo or the organizer of the group the photo was posted in\n",
                            "method": "delete",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/photo/{id}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "photo",
                        "{id}"
                    ]
                },
                {
                    "relativeUri": "/event_comment_like/{id}",
                    "type": "binaryState",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "uriParameters": {
                        "id": {
                            "name": "id",
                            "displayName": "id",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "description": ":id in the path should be the id of a comment",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "description": "Returns an HTTP 200 response if delete was successful."
                                },
                                "401": {
                                    "code": "401",
                                    "description": "Returns an HTTP 401 response if unauthorized."
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0"
                            ],
                            "description": "Like a given Event comment\n\n#Request Parameters\nOnly authorization parameters are needed. :id in the path should be the id of the comment you are liking\n",
                            "method": "post",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "description": "Returns an HTTP 200 response if delete was successful."
                                },
                                "401": {
                                    "code": "401",
                                    "description": "Returns an HTTP 401 response if unauthorized."
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0"
                            ],
                            "description": "Unlike a given Event comment\n\n#Request Parameters\nOnly authorization parameters are needed. :id in the path should be the id of the comment you are unliking\n",
                            "method": "delete",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/event_comment_like/{id}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "event_comment_like",
                        "{id}"
                    ]
                },
                {
                    "relativeUri": "/event_comment_subscribe/{id}",
                    "type": "binaryState",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "uriParameters": {
                        "id": {
                            "name": "id",
                            "displayName": "id",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "description": ":id in the path should be the id of a comment",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "description": "Returns an HTTP 200 response if delete was successful."
                                },
                                "401": {
                                    "code": "401",
                                    "description": "Returns an HTTP 401 response if unauthorized."
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0"
                            ],
                            "description": "Unsubscribe to notifications for updates to a given comment thread\n\n#Request Parameters\nOnly authorization parameters are needed. :id in the path should be the id of comment being replied to which you are unsubscribing to notifications from\n",
                            "method": "delete",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "description": "Returns an HTTP 200 response if delete was successful."
                                },
                                "401": {
                                    "code": "401",
                                    "description": "Returns an HTTP 401 response if unauthorized."
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0"
                            ],
                            "description": "Subscribe to notifications on updates to a given comment thread\n\n#Request Parameters\nOnly authorization parameters are needed. :id in the path should be id of comment being replied to which you are subscribing to notifications for\n",
                            "method": "post",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/event_comment_subscribe/{id}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "event_comment_subscribe",
                        "{id}"
                    ]
                },
                {
                    "relativeUri": "/photo_comment",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "photoComment",
                                            "example": "{\n  \"member\": {\n    \"member_state\": \"member_state\",\n    \"member_city\": \"member_city\",\n    \"name\": \"name\",\n    \"member_country\": \"member_country\",\n    \"member_id\": 100\n  },\n  \"member_photo\": {\n    \"photo_link\": \"photo_link\",\n    \"hires_link\": \"hires_link\",\n    \"thumb_link\": \"thumb_link\",\n    \"photo_id\": 100\n  },\n  \"created\": 100,\n  \"photo_comment_id\": 100,\n  \"comment\": \"comment\",\n  \"photo_id\": 100\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"comment\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"created\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"member\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"member_city\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"member_country\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"member_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"member_state\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"member_photo\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"hires_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"photo_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"photo_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"thumb_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"photo_comment_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"photo_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    }\r\n  }\r\n}\r\n"
                                        }
                                    },
                                    "description": "If successful, this method responds with a \"201 Created\" status and a JSON or XML body consisting of the posted comment in the same fields as the response items of the Photo Comments method."
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0"
                            ],
                            "queryParameters": {
                                "comment": {
                                    "name": "comment",
                                    "displayName": "comment",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The comment text",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "photo_id": {
                                    "name": "photo_id",
                                    "displayName": "photo_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The photo related to this comment.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "This method posts comments that appear below photos\n\n#Request Parameters\nAll of the required parameters must be supplied with the request, which must be an HTTP POST. The currently authenticated user must be a member of the group hosting the photo\n",
                            "method": "post",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/photo_comment",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "photo_comment"
                    ]
                },
                {
                    "relativeUri": "/checkins",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "deprecatedCheckins",
                                            "example": "{\n  \"results\": [\n    {\n      \"checkin_id\": 0,\n      \"time\": 0,\n      \"lon\": 1.0,\n      \"group_id\": 0,\n      \"event_id\": 0,\n      \"member_name\": \"member_name 0\",\n      \"comment\": \"comment 0\",\n      \"lat\": 1.0,\n      \"checker\": {\n        \"member_state\": \"member_state 0\",\n        \"member_city\": \"member_city 0\",\n        \"name\": \"name 0\",\n        \"member_country\": \"member_country 0\",\n        \"member_id\": 0\n      },\n      \"member_id\": 0\n    },\n    {\n      \"checkin_id\": 1,\n      \"time\": 1,\n      \"lon\": 1.0,\n      \"group_id\": 1,\n      \"event_id\": 1,\n      \"member_name\": \"member_name 1\",\n      \"comment\": \"comment 1\",\n      \"lat\": 1.0,\n      \"checker\": {\n        \"member_state\": \"member_state 1\",\n        \"member_city\": \"member_city 1\",\n        \"name\": \"name 1\",\n        \"member_country\": \"member_country 1\",\n        \"member_id\": 1\n      },\n      \"member_id\": 1\n    }\n  ]\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"checker\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"member_city\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_country\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"member_state\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"checkin_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"comment\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"event_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"group_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"lat\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"lon\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"member_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"member_name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"time\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
                                        }
                                    },
                                    "description": "|||\n|-|\n|checker|Member who performed the checkin, if not the same as the one who checked in|\n|checkin_id|ID of the checkin|\n|event_id|event checked into|\n|lat|Latitude, if provided|\n|lon|Longitude, if provided|\n|member|Member who is checked in|\n|time|checkin time in milliseconds since the epoch|\n\n#3\nErrors:\n|||\n|-|\n|connection_limit|the client IP has exceeded its maximum number of connections|\n  \n#2\nErrors:\n|||\n|-|\n|connection_limit|the client IP has exceeded its maximum number of connections|\n  \n#3\n|||\n|-|\n|checker|Member who performed the checkin, if not the same as the one who checked in|\n|checkin_id|Unique identifier for this checkin|\n|comment|Text of the checkin comment if one was supplied|\n|event_id|String ID of the event checked into|\n|group_id|Group ID of the event|\n|lat|Latitude reported, if any. Hidden from non-members of the group if the venue is hidden from non-members.|\n|lon|Longitude reported, if any. Hidden from non-members of the group if the venue is hidden from non-members.|\n|member_id|Member who checked in|\n|member_name|Name of the member who checked in|\n|time|The time and date of the checkin, in milliseconds since the epoch|\n"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "queryParameters": {
                                "event_id": {
                                    "name": "event_id",
                                    "displayName": "event_id",
                                    "type": "string",
                                    "required": true,
                                    "repeat": false,
                                    "description": "Limit notifications to a specific event id. Use alphanumeric ids for repeating events. USED IN ALL THREE WAYS TO MAKE THIS REQUEST.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "callback": {
                                    "name": "callback",
                                    "displayName": "callback",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Name of a function to be called with an array of notification objects. If this parameter is not supplied, the chunked stream is joined instead.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "since_count": {
                                    "name": "since_count",
                                    "displayName": "since_count",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Request that some number of recent messages be sent immediately, if available. May not be specified in the same request as since_mtime.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "since_mtime": {
                                    "name": "since_mtime",
                                    "displayName": "since_mtime",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Should be supplied for all but the first polling request, so that any missed notifications are can be sent in an immediate response. IF YOU USE THE 'callback' QUERY PARAMETER, then... Return recent messages with an mtime greater then the supplied time, in millisends since the epoch",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "order": {
                                    "name": "order",
                                    "displayName": "order",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "|value|description|\n|-|\n|name|the name of the member|\n|time|the date and time of the checkin|\n",
                                    "enum": [
                                        "name",
                                        "time"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "There are three ways to use this method. In all cases you should use the 'event_id' parameter:\n1. Use 'since_count' with 'callback' or 'since_mtime' with 'callback'.\n2. Use 'since_count' or 'since_mtime'.\n3. Use 'group_id' or 'member_id' with or without 'order'.\n\n#1\nThis long-polling stream can be easily consumed using JavaScript in any modern browser. Checkin notifications are received when they happen, or as soon as your script finishes handling its last notification.\nCheckin notification objects include these properties. This method's response is an array of zero or more of these, while Meetup's JS client calls your callback function with exactly one object.\n#2\nThis method serves checkin notifications using chunked encoding to maintian a persistent connection with a client. The connection will only be terminiated for server maintenance or a connection error. It is suitable for low-level HTTP clients rather than web browsers.\nThis stream includes the same JSON notification objects as its long-polling counterpart. These are served one per HTTP chunk and terminated by newlines.\n#3\nThis method returns checkins for an event. To post checkins, see /2/checkin.\nFor private groups, the authenticated user must be a member to see checkins.\n",
                            "method": "get",
                            "is": [
                                "list",
                                "groupmember"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/checkins",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "checkins"
                    ]
                },
                {
                    "relativeUri": "/profile",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "201": {
                                    "code": "201",
                                    "description": "If successful, this method returns a 201 Created response with a Location header containing the Profile Get URI to access this profile."
                                },
                                "400": {
                                    "code": "400",
                                    "description": "400 Bad requests may be returned under certain conditions along with a response object containing information about the failure. The code property of this may be one of\n\n|||\n|-|\n|bad_group|invalid group was provided|\n|bad_member|invalid member was provided|\n|invalid_photo|invalid photo_id was provided|\n|missing_photo|photo was required to join but one could not be resolved|\n|member_exists|member has already joined the group|\n|member_banned|member has been banned from the group|\n|join_closed|this group is not allowing new members|\n|join_viaweb|this join is not supported in the API, try joining via the website|\n|membership_pending|awaiting organizer approval|\n|missing_intro|request required a valid intro|\n|missing_answer|request was missing an answer to a required question|\n|invalid_answer|request contained invalid question answer|\n|invalid_url|invalid site_url|\n|invalid_site_name|site name was too long|\n|unknown_error|a generic error|\nThe details property of this object will contain additional information. The content body of a successful request is the same of that returned by the Profile Get query method.\n"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0"
                            ],
                            "queryParameters": {
                                "group_id": {
                                    "name": "group_id",
                                    "displayName": "group_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Id of group to join",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "group_urlname": {
                                    "name": "group_urlname",
                                    "displayName": "group_urlname",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Urlname of group to join",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "This method allows an authenticated member to join a group by creating a profile\n\n#Request Parameters\nThis method requires an HTTP POST. All required parameters must be supplied. An intro and answers may be required based on the group the member is joining. To find out if a group requires an intro or answers to questions, query for the group through one of the Groups methods providing setting the fields parameter to join_info and inspecting the join_info in the results. Answers to the questions must be named using the convention answer_{question_id}\n",
                            "method": "post",
                            "is": [
                                "hasProfileProperties"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/{gid}/{mid}",
                            "type": "meetupResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "uriParameters": {
                                "gid": {
                                    "name": "gid",
                                    "displayName": "gid",
                                    "type": "string",
                                    "required": true,
                                    "repeat": false,
                                    "description": "The gid is a group ID",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "mid": {
                                    "name": "mid",
                                    "displayName": "mid",
                                    "type": "string",
                                    "required": true,
                                    "repeat": false,
                                    "description": "The mid is a member IDs",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "description": "If successful, this method responds with 200 OK. The content body is the same as that returned by the Profile Get query method."
                                        },
                                        "400": {
                                            "code": "400",
                                            "description": "400 responses may also contain the error codes listed in the Profile Create method with the addition of invalid_role which is returned when the role adjustment was failed to be applied."
                                        },
                                        "401": {
                                            "code": "401",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "profile",
                                                    "example": "{\n  \"profile_url\": \"profile_url\",\n  \"status\": \"status\",\n  \"photo_url\": \"photo_url\",\n  \"answers\": {\n    \"answer\": \"answer\",\n    \"question\": \"question\",\n    \"question_id\": 100\n  },\n  \"member_country\": \"member_country\",\n  \"membership_dues\": {\n    \"total_amount\": \"total_amount\",\n    \"transaction_time\": 100,\n    \"period_status\": \"period_status\"\n  },\n  \"site_name\": \"site_name\",\n  \"photo\": {\n    \"photo_link\": \"photo_link\",\n    \"highres_link\": \"highres_link\",\n    \"thumb_link\": \"thumb_link\",\n    \"photo_id\": 100\n  },\n  \"attendance_count\": 100,\n  \"member_id\": 100,\n  \"visited\": 100,\n  \"title\": 100,\n  \"member_city\": \"member_city\",\n  \"member_state\": \"member_state\",\n  \"bio\": \"bio\",\n  \"additional\": \"additional\",\n  \"created\": 100,\n  \"updated\": 100,\n  \"name\": \"name\",\n  \"role\": \"role\",\n  \"comment\": \"comment\",\n  \"group\": {\n    \"id\": 100,\n    \"group_lat\": \"group_lat\",\n    \"name\": \"name\",\n    \"group_lon\": \"group_lon\",\n    \"join_mode\": \"join_mode\",\n    \"urlname\": \"urlname\",\n    \"who\": \"who\"\n  },\n  \"other_services\": {\n    \"[service-name]\": {\n      \"identifier\": \"identifier\"\n    }\n  },\n  \"site_url\": \"site_url\"\n}\n",
                                                    "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"additional\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"answers\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"answer\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"question\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"question_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        }\r\n      }\r\n    },\r\n    \"attendance_count\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"bio\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"comment\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"created\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"updated\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"group\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"group_lat\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"group_lon\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"join_mode\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"urlname\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"who\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"member_city\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"member_country\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"member_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"member_state\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"membership_dues\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"period_status\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"total_amount\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"transaction_time\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        }\r\n      }\r\n    },\r\n    \"name\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"other_services\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"[service-name]\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"identifier\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"photo\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"highres_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"photo_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"photo_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"thumb_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"photo_url\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"profile_url\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"role\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"site_url\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"site_name\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"status\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"title\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"visited\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    }\r\n  }\r\n}\r\n"
                                                }
                                            },
                                            "description": "401 Unauthorized is returned if the currently authenticated member can not edit the specified profile."
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0",
                                        "oauth_1_0"
                                    ],
                                    "queryParameters": {
                                        "add_role": {
                                            "name": "add_role",
                                            "displayName": "add_role",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "Allows those with permission to assign one of the following roles: event_organizer, coorganizer, assistant_organizer\n",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "remove_role": {
                                            "name": "remove_role",
                                            "displayName": "remove_role",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "Allows those with permission to remove one of the following roles: event_organizer, coorganizer, assistant_organizer\n",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "title": {
                                            "name": "title",
                                            "displayName": "title",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "An organizer-defined member title.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Update a member's group profile\n\n#Request Parameters\nThe gid and mid in this method's path are group and member IDs, both needed to uniquely identify the member profile to be edited. An authenticated user may update their own profile by substituting \"self\" for the mid. All POST parameters are optional unless required by the group. Only the organizer of the group may edit the member's title and role within the group. Those are the only things the organizer may edit. When requesting to set a role with add_role the member's previous role will be cleared. Members may edit all other fields of their own profiles with the exception of title, add_role, and remove_role. This method requires an HTTP POST.\n",
                                    "method": "post",
                                    "is": [
                                        "hasProfileProperties"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "profile",
                                                    "example": "{\n  \"profile_url\": \"profile_url\",\n  \"status\": \"status\",\n  \"photo_url\": \"photo_url\",\n  \"answers\": {\n    \"answer\": \"answer\",\n    \"question\": \"question\",\n    \"question_id\": 100\n  },\n  \"member_country\": \"member_country\",\n  \"membership_dues\": {\n    \"total_amount\": \"total_amount\",\n    \"transaction_time\": 100,\n    \"period_status\": \"period_status\"\n  },\n  \"site_name\": \"site_name\",\n  \"photo\": {\n    \"photo_link\": \"photo_link\",\n    \"highres_link\": \"highres_link\",\n    \"thumb_link\": \"thumb_link\",\n    \"photo_id\": 100\n  },\n  \"attendance_count\": 100,\n  \"member_id\": 100,\n  \"visited\": 100,\n  \"title\": 100,\n  \"member_city\": \"member_city\",\n  \"member_state\": \"member_state\",\n  \"bio\": \"bio\",\n  \"additional\": \"additional\",\n  \"created\": 100,\n  \"updated\": 100,\n  \"name\": \"name\",\n  \"role\": \"role\",\n  \"comment\": \"comment\",\n  \"group\": {\n    \"id\": 100,\n    \"group_lat\": \"group_lat\",\n    \"name\": \"name\",\n    \"group_lon\": \"group_lon\",\n    \"join_mode\": \"join_mode\",\n    \"urlname\": \"urlname\",\n    \"who\": \"who\"\n  },\n  \"other_services\": {\n    \"[service-name]\": {\n      \"identifier\": \"identifier\"\n    }\n  },\n  \"site_url\": \"site_url\"\n}\n",
                                                    "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"additional\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"answers\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"answer\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"question\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"question_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        }\r\n      }\r\n    },\r\n    \"attendance_count\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"bio\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"comment\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"created\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"updated\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"group\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"group_lat\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"group_lon\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"join_mode\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"urlname\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"who\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"member_city\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"member_country\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"member_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"member_state\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"membership_dues\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"period_status\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"total_amount\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"transaction_time\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        }\r\n      }\r\n    },\r\n    \"name\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"other_services\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"[service-name]\": {\r\n          \"required\": false,\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"identifier\": {\r\n              \"required\": false,\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"photo\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"highres_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"photo_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"photo_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"thumb_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"photo_url\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"profile_url\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"role\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"site_url\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"site_name\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"status\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"title\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"visited\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    }\r\n  }\r\n}\r\n"
                                                }
                                            },
                                            "description": "|||\n|-|\n|additional|Additional information supplied by the member|\n|answers|Answers to group profile questions. Unanswered questions will be returned without an answer property if \"empty_answers\" is provided as a \"fields\" property value|\n|attendance_count|Optional fields property representing number of times the member has attended a Meetup in the associated group.|\n|bio|Member's 'introduction' to the group|\n|comment|What this member says about this group|\n|created, updated|When this member profile was created and last updated, in milliseconds since the epoch.|\n|group|The group this profile belongs to|\n|member_city|Optional fields parameter for the Member's city|\n|member_country|Optional fields parameter for the Member's country code|\n|member_id|The member's id|\n|member_state|Optional fields parameter for the Member's state (when country is us)|\n|membership_dues|Optional fields parameter for the last payment received for the Group's membership dues and optionally, the status of the member's dues for the current billing period if the group has set up recurring membership dues payments. This field is only visible only to the organizer of the group and to the member themselves. Members can not see other member's membership dues|\n|name|The member's name|\n|other_services|Third-party services associated with the member account|\n|photo|The member's photo if available|\n|photo_url|Link to the group profile photo of the member|\n|profile_url|Link to the member's group profile page|\n|role|If applicable, the member's role in the group (Organizer, Assistant Organizer, Co-organizer, or Event Organizer)|\n|site_url, site_name|External site listed by the member|\n|status|Value may be one of pending_payment, blocked, active, pending|\n|title|Title assigned to the member in this group|\n|visited|Member's last visit to the group site, in milliseconds since the epoch|\n"
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0",
                                        "oauth_1_0",
                                        "api_key"
                                    ],
                                    "queryParameters": {
                                        "fields": {
                                            "name": "fields",
                                            "displayName": "fields",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "Request that additional fields (separated by commas) be included in the output",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Retrieves a single group profile\n\n#Request Parameters\nOnly authorization parameters are needed.\n",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "description": "If successful, this method responds with 200 OK."
                                        },
                                        "400": {
                                            "code": "400",
                                            "description": "400 Bad request is returned."
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "If the profile being deleted does not belong to the authorized member."
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0",
                                        "oauth_1_0"
                                    ],
                                    "queryParameters": {
                                        "exit_comment": {
                                            "name": "exit_comment",
                                            "displayName": "exit_comment",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "Optional message to the organizer when leaving",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Deletes a member's group profile (Leave Group)\n\n#Request Parameters\nAll parameters are optional. Only the authorized member is permitted leave groups they do not organize. This method may not be used by organizers to remove members.\n",
                                    "method": "delete",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/{gid}/{mid}",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "{gid}",
                                "{mid}"
                            ]
                        }
                    ],
                    "displayName": "/profile",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "profile"
                    ]
                },
                {
                    "relativeUri": "/event_comment_likes",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "eventCommentLikes",
                                            "example": "{\n  \"results\": [\n    {\n      \"member\": {\n        \"member_state\": \"member_state 0\",\n        \"member_city\": \"member_city 0\",\n        \"name\": \"name 0\",\n        \"member_country\": \"member_country 0\",\n        \"photo\": {\n          \"photo_link\": \"photo_link 0\",\n          \"highres_link\": \"highres_link 0\",\n          \"thumb_link\": \"thumb_link 0\",\n          \"photo_id\": 0\n        },\n        \"member_id\": 0\n      },\n      \"created\": 0,\n      \"event_comment_id\": 0\n    },\n    {\n      \"member\": {\n        \"member_state\": \"member_state 1\",\n        \"member_city\": \"member_city 1\",\n        \"name\": \"name 1\",\n        \"member_country\": \"member_country 1\",\n        \"photo\": {\n          \"photo_link\": \"photo_link 1\",\n          \"highres_link\": \"highres_link 1\",\n          \"thumb_link\": \"thumb_link 1\",\n          \"photo_id\": 1\n        },\n        \"member_id\": 1\n      },\n      \"created\": 1,\n      \"event_comment_id\": 1\n    }\n  ]\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"created\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"event_comment_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"member\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"member_city\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_country\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"member_state\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"photo\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"highres_link\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"photo_id\": {\r\n                    \"required\": false,\r\n                    \"type\": \"integer\"\r\n                  },\r\n                  \"photo_link\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"thumb_link\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
                                        }
                                    },
                                    "description": "|||\n|-|\n|created|UTC creation time of the event, in milliseconds since the epoch|\n|event_comment_id|ID of the comment liked|\n|member|member who liked the comment|\n"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0",
                                "api_key"
                            ],
                            "queryParameters": {
                                "comment_id": {
                                    "name": "comment_id",
                                    "displayName": "comment_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Return likes for a given comment_id",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "order": {
                                    "name": "order",
                                    "displayName": "order",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "|value|description|\n|-|\n|created|Order by the time the member liked like comment (default: descending)|\n",
                                    "enum": [
                                        "created"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Api for listing likes of a given event comment\n\n#Request Parameters\nAt least one of the required parameters must be supplied with the request.\n",
                            "method": "get",
                            "is": [
                                "list"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/event_comment_likes",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "event_comment_likes"
                    ]
                },
                {
                    "relativeUri": "/photos",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "photos",
                                            "example": "{\n  \"results\": [\n    {\n      \"member\": {\n        \"member_state\": \"member_state 0\",\n        \"member_city\": \"member_city 0\",\n        \"name\": \"name 0\",\n        \"member_country\": \"member_country 0\",\n        \"member_id\": 0\n      },\n      \"site_link\": \"site_link 0\",\n      \"photo_link\": \"photo_link 0\",\n      \"member_photo\": {\n        \"photo_link\": \"photo_link 0\",\n        \"highres_link\": \"highres_link 0\",\n        \"thumb_link\": \"thumb_link 0\",\n        \"photo_id\": 0\n      },\n      \"updated\": 0,\n      \"created\": 0,\n      \"highres_link\": \"highres_link 0\",\n      \"thumb_link\": \"thumb_link 0\",\n      \"photo_album\": {\n        \"event\": {\n          \"id\": 0,\n          \"time\": 0,\n          \"event_url\": \"event_url 0\",\n          \"name\": \"name 0\"\n        },\n        \"group_id\": 0,\n        \"photo_album_id\": 0,\n        \"event_id\": 0\n      },\n      \"self\": {\n        \"role\": \"role 0\",\n        \"actions\": \"actions 0\"\n      },\n      \"caption\": \"caption 0\",\n      \"photo_id\": 0\n    },\n    {\n      \"member\": {\n        \"member_state\": \"member_state 1\",\n        \"member_city\": \"member_city 1\",\n        \"name\": \"name 1\",\n        \"member_country\": \"member_country 1\",\n        \"member_id\": 1\n      },\n      \"site_link\": \"site_link 1\",\n      \"photo_link\": \"photo_link 1\",\n      \"member_photo\": {\n        \"photo_link\": \"photo_link 1\",\n        \"highres_link\": \"highres_link 1\",\n        \"thumb_link\": \"thumb_link 1\",\n        \"photo_id\": 1\n      },\n      \"updated\": 1,\n      \"created\": 1,\n      \"highres_link\": \"highres_link 1\",\n      \"thumb_link\": \"thumb_link 1\",\n      \"photo_album\": {\n        \"event\": {\n          \"id\": 1,\n          \"time\": 1,\n          \"event_url\": \"event_url 1\",\n          \"name\": \"name 1\"\n        },\n        \"group_id\": 1,\n        \"photo_album_id\": 1,\n        \"event_id\": 1\n      },\n      \"self\": {\n        \"role\": \"role 1\",\n        \"actions\": \"actions 1\"\n      },\n      \"caption\": \"caption 1\",\n      \"photo_id\": 1\n    }\n  ]\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"caption\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"created\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"highres_link\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"member\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"member_city\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_country\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"member_state\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"member_photo\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"highres_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"photo_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"photo_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"thumb_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"photo_album\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"event\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"event_url\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"id\": {\r\n                    \"required\": false,\r\n                    \"type\": \"integer\"\r\n                  },\r\n                  \"name\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"time\": {\r\n                    \"required\": false,\r\n                    \"type\": \"integer\"\r\n                  }\r\n                }\r\n              },\r\n              \"event_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"group_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"photo_album_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              }\r\n            }\r\n          },\r\n          \"photo_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"photo_link\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"self\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"actions\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"role\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"site_link\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"thumb_link\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"updated\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
                                        }
                                    },
                                    "description": "|||\n|-|\n|caption|Photo caption|\n|created|Created time in milliseconds since the epoch|\n|highres_link|URL for the photo at its maximum size|\n|member|Member that uploaded the photo|\n|member_photo|Optional member photo of the uploading member|\n|photo_album|-|\n|photo_id|Unique identifier of the photo|\n|photo_link|URL for a standard size of the photo|\n|self|Optional field, contains details specific to the authorized user|\n|site_link|URL for photo in photo album on meetup.com, available when requested in the fields parameter|\n|thumb_link|URL for a thumbnail the photo|\n|updated|Last updated time in milliseconds since the epoch|\n"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0",
                                "api_key"
                            ],
                            "queryParameters": {
                                "event_id": {
                                    "name": "event_id",
                                    "displayName": "event_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Event ids, separated by commas. These may contain alphanumeric autoscheduled event ids, only photos of reified events will be returned",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "fields": {
                                    "name": "fields",
                                    "displayName": "fields",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "comma-delimited optional response properties such as member_country, member_city, member_state, and self",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "group_urlname": {
                                    "name": "group_urlname",
                                    "displayName": "group_urlname",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Group urlnames, separated by commas",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "photo_album_id": {
                                    "name": "photo_album_id",
                                    "displayName": "photo_album_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Photo Album IDs, separated by commas",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "photo_id": {
                                    "name": "photo_id",
                                    "displayName": "photo_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Photo IDs, separated by commas",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "tagged": {
                                    "name": "tagged",
                                    "displayName": "tagged",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Tagged with members with these IDs, separated by commas",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "time": {
                                    "name": "time",
                                    "displayName": "time",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Return photos uploaded within the given time range, defined by two times separated with a single comma. Each end of the range may be specified with relative dates, such as \"1m\" for one month from now, or by absolute time in milliseconds since the epoch. If an endpoint is omitted, the range is unbounded on that end. The default value is unbounded on both ends (though restricted to the search window described above).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "order": {
                                    "name": "order",
                                    "displayName": "order",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "|value|description|\n|-|\n|time|creation date and time|\n",
                                    "enum": [
                                        "time"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "This method returns photos by member, group, album, event, photo ID, or tagged member.\n\n#Request Parameters\nAt least one of the required parameter(s) must be supplied with the request.\n",
                            "method": "get",
                            "is": [
                                "list",
                                "groupmember"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/photos",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "photos"
                    ]
                },
                {
                    "relativeUri": "/photo_comments",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "photoComments",
                                            "example": "{\n  \"results\": [\n    {\n      \"member\": {\n        \"member_state\": \"member_state 0\",\n        \"member_city\": \"member_city 0\",\n        \"name\": \"name 0\",\n        \"member_country\": \"member_country 0\",\n        \"member_id\": 0\n      },\n      \"member_photo\": {\n        \"photo_link\": \"photo_link 0\",\n        \"hires_link\": \"hires_link 0\",\n        \"thumb_link\": \"thumb_link 0\",\n        \"photo_id\": 0\n      },\n      \"created\": 0,\n      \"photo_comment_id\": 0,\n      \"comment\": \"comment 0\",\n      \"photo_id\": 0\n    },\n    {\n      \"member\": {\n        \"member_state\": \"member_state 1\",\n        \"member_city\": \"member_city 1\",\n        \"name\": \"name 1\",\n        \"member_country\": \"member_country 1\",\n        \"member_id\": 1\n      },\n      \"member_photo\": {\n        \"photo_link\": \"photo_link 1\",\n        \"hires_link\": \"hires_link 1\",\n        \"thumb_link\": \"thumb_link 1\",\n        \"photo_id\": 1\n      },\n      \"created\": 1,\n      \"photo_comment_id\": 1,\n      \"comment\": \"comment 1\",\n      \"photo_id\": 1\n    }\n  ]\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"comment\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"created\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"member\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"member_city\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_country\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"member_state\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"member_photo\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"hires_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"photo_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"photo_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"thumb_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"photo_comment_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"photo_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
                                        }
                                    },
                                    "description": "|||\n|-|\n|comment|Text of the comment that was posted|\n|created|The time and date that the comment was posted, in milliseconds since the epoch|\n|member|Author of comment|\n|member_photo|If the optional \"fields\" parameter contains \"member_photo\", the member photo associated with the comment|\n|photo_comment_id|Unique identifier for this comment|\n|photo_id|Photo ID where the comment was posted|\n"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0",
                                "api_key"
                            ],
                            "queryParameters": {
                                "fields": {
                                    "name": "fields",
                                    "displayName": "fields",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Request that additional fields (separated by commas) be included in the output.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "member_id": {
                                    "name": "member_id",
                                    "displayName": "member_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Return comments for the given member_ids, separated by commas. The member ids must match up with one of the provided photo ids",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "photo_id": {
                                    "name": "photo_id",
                                    "displayName": "photo_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Return comments on these photos, separated by commas",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "order": {
                                    "name": "order",
                                    "displayName": "order",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "|value|description|\n|-|\n|name|the name of the member|\n|time|Order by the time that each comment was posted|\n",
                                    "enum": [
                                        "name",
                                        "time"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "This method returns comments on meetup photos. To post messages, see the corresponding write method\n\n#Request Parameters\nAt least one of the required parameters must be supplied by the request.\n",
                            "method": "get",
                            "is": [
                                "list"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/photo_comments",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "photo_comments"
                    ]
                },
                {
                    "relativeUri": "/concierge",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "concierge",
                                            "example": "{\n  \"results\": [\n    {\n      \"visibility\": \"visibility 0\",\n      \"is_simplehtml\": \"is_simplehtml 0\",\n      \"self\": {\n        \"checked_in\": \"checked_in 0\",\n        \"watching\": \"watching 0\",\n        \"rsvp\": {\n          \"response\": \"response 0\",\n          \"guests\": \"guests 0\",\n          \"answers\": \"answers 0\"\n        },\n        \"role\": \"role 0\",\n        \"rated\": 0,\n        \"actions\": \"actions 0\",\n        \"pay_status\": \"pay_status 0\"\n      },\n      \"featured\": \"featured 0\",\n      \"rsvpable\": \"rsvpable 0\",\n      \"publish_status\": \"publish_status 0\",\n      \"email_reminders\": \"email_reminders 0\",\n      \"rsvp_rules\": {\n        \"open_time\": \"open_time 0\",\n        \"waitlisting\": \"waitlisting 0\",\n        \"close_time\": \"close_time 0\",\n        \"guest_limit\": \"guest_limit 0\",\n        \"closed\": \"closed 0\",\n        \"refund_policy\": {\n          \"days\": \"days 0\",\n          \"notes\": 0,\n          \"policies\": \"policies 0\"\n        }\n      },\n      \"id\": 0,\n      \"timezone\": \"timezone 0\",\n      \"time\": 0,\n      \"distance\": 1.0,\n      \"venue_visibility\": \"venue_visibility 0\",\n      \"yes_rsvp_count\": 0,\n      \"updated\": 0,\n      \"created\": 0,\n      \"description\": \"description 0\",\n      \"survey_questions\": {\n        \"id\": 0,\n        \"question\": \"question 0\",\n        \"required\": \"required 0\"\n      },\n      \"headcount\": \"headcount 0\",\n      \"name\": \"name 0\",\n      \"photo_album_id\": 0,\n      \"rsvp_alerts\": \"rsvp_alerts 0\",\n      \"photo_count\": 0,\n      \"comment_count\": 0,\n      \"rsvp_limit\": \"rsvp_limit 0\",\n      \"trending_rank\": \"trending_rank 0\",\n      \"status\": \"status 0\",\n      \"maybe_rsvp_count\": 0,\n      \"photo_url\": \"photo_url 0\",\n      \"venue\": {\n        \"id\": 0,\n        \"zip\": \"zip 0\",\n        \"phone\": 0,\n        \"lon\": 1.0,\n        \"repinned\": \"repinned 0\",\n        \"address_3\": \"address_3 0\",\n        \"name\": \"name 0\",\n        \"state\": 0,\n        \"address_1\": \"address_1 0\",\n        \"address_2\": \"address_2 0\",\n        \"lat\": 1.0,\n        \"country\": \"country 0\",\n        \"city\": \"city 0\"\n      },\n      \"short_link\": \"short_link 0\",\n      \"event_hosts\": {\n        \"member_name\": \"member_name 0\",\n        \"member_id\": 0\n      },\n      \"utc_offset\": 0,\n      \"fee\": {\n        \"amount\": \"amount 0\",\n        \"description\": \"description 0\",\n        \"label\": 0,\n        \"required\": \"required 0\",\n        \"accepts\": \"accepts 0\",\n        \"currency\": \"currency 0\"\n      },\n      \"duration\": 0,\n      \"announced\": \"announced 0\",\n      \"event_url\": \"event_url 0\",\n      \"how_to_find_us\": \"how_to_find_us 0\",\n      \"rating\": {\n        \"count\": 0,\n        \"average\": \"average 0\"\n      },\n      \"group\": {\n        \"id\": 0,\n        \"topics\": {\n          \"id\": 0,\n          \"urlkey\": \"urlkey 0\",\n          \"name\": \"name 0\"\n        },\n        \"category\": {\n          \"id\": 0,\n          \"name\": \"name 0\",\n          \"shortname\": \"shortname 0\"\n        },\n        \"group_photo\": {\n          \"photo_link\": \"photo_link 0\",\n          \"highres_link\": \"highres_link 0\",\n          \"thumb_link\": \"thumb_link 0\",\n          \"photo_id\": 0\n        },\n        \"group_lat\": \"group_lat 0\",\n        \"name\": \"name 0\",\n        \"group_lon\": \"group_lon 0\",\n        \"membership_dues\": {\n          \"methods\": \"methods 0\",\n          \"fee\": \"fee 0\",\n          \"required\": \"required 0\",\n          \"fee_desc\": \"fee_desc 0\",\n          \"refund_policy\": \"refund_policy 0\",\n          \"currency\": \"currency 0\"\n        },\n        \"join_mode\": \"join_mode 0\",\n        \"urlname\": \"urlname 0\",\n        \"who\": \"who 0\"\n      },\n      \"simple_html_description\": \"simple_html_description 0\",\n      \"why\": \"why 0\"\n    },\n    {\n      \"visibility\": \"visibility 1\",\n      \"is_simplehtml\": \"is_simplehtml 1\",\n      \"self\": {\n        \"checked_in\": \"checked_in 1\",\n        \"watching\": \"watching 1\",\n        \"rsvp\": {\n          \"response\": \"response 1\",\n          \"guests\": \"guests 1\",\n          \"answers\": \"answers 1\"\n        },\n        \"role\": \"role 1\",\n        \"rated\": 1,\n        \"actions\": \"actions 1\",\n        \"pay_status\": \"pay_status 1\"\n      },\n      \"featured\": \"featured 1\",\n      \"rsvpable\": \"rsvpable 1\",\n      \"publish_status\": \"publish_status 1\",\n      \"email_reminders\": \"email_reminders 1\",\n      \"rsvp_rules\": {\n        \"open_time\": \"open_time 1\",\n        \"waitlisting\": \"waitlisting 1\",\n        \"close_time\": \"close_time 1\",\n        \"guest_limit\": \"guest_limit 1\",\n        \"closed\": \"closed 1\",\n        \"refund_policy\": {\n          \"days\": \"days 1\",\n          \"notes\": 1,\n          \"policies\": \"policies 1\"\n        }\n      },\n      \"id\": 1,\n      \"timezone\": \"timezone 1\",\n      \"time\": 1,\n      \"distance\": 1.0,\n      \"venue_visibility\": \"venue_visibility 1\",\n      \"yes_rsvp_count\": 1,\n      \"updated\": 1,\n      \"created\": 1,\n      \"description\": \"description 1\",\n      \"survey_questions\": {\n        \"id\": 1,\n        \"question\": \"question 1\",\n        \"required\": \"required 1\"\n      },\n      \"headcount\": \"headcount 1\",\n      \"name\": \"name 1\",\n      \"photo_album_id\": 1,\n      \"rsvp_alerts\": \"rsvp_alerts 1\",\n      \"photo_count\": 1,\n      \"comment_count\": 1,\n      \"rsvp_limit\": \"rsvp_limit 1\",\n      \"trending_rank\": \"trending_rank 1\",\n      \"status\": \"status 1\",\n      \"maybe_rsvp_count\": 1,\n      \"photo_url\": \"photo_url 1\",\n      \"venue\": {\n        \"id\": 1,\n        \"zip\": \"zip 1\",\n        \"phone\": 1,\n        \"lon\": 1.0,\n        \"repinned\": \"repinned 1\",\n        \"address_3\": \"address_3 1\",\n        \"name\": \"name 1\",\n        \"state\": 1,\n        \"address_1\": \"address_1 1\",\n        \"address_2\": \"address_2 1\",\n        \"lat\": 1.0,\n        \"country\": \"country 1\",\n        \"city\": \"city 1\"\n      },\n      \"short_link\": \"short_link 1\",\n      \"event_hosts\": {\n        \"member_name\": \"member_name 1\",\n        \"member_id\": 1\n      },\n      \"utc_offset\": 1,\n      \"fee\": {\n        \"amount\": \"amount 1\",\n        \"description\": \"description 1\",\n        \"label\": 1,\n        \"required\": \"required 1\",\n        \"accepts\": \"accepts 1\",\n        \"currency\": \"currency 1\"\n      },\n      \"duration\": 1,\n      \"announced\": \"announced 1\",\n      \"event_url\": \"event_url 1\",\n      \"how_to_find_us\": \"how_to_find_us 1\",\n      \"rating\": {\n        \"count\": 1,\n        \"average\": \"average 1\"\n      },\n      \"group\": {\n        \"id\": 1,\n        \"topics\": {\n          \"id\": 1,\n          \"urlkey\": \"urlkey 1\",\n          \"name\": \"name 1\"\n        },\n        \"category\": {\n          \"id\": 1,\n          \"name\": \"name 1\",\n          \"shortname\": \"shortname 1\"\n        },\n        \"group_photo\": {\n          \"photo_link\": \"photo_link 1\",\n          \"highres_link\": \"highres_link 1\",\n          \"thumb_link\": \"thumb_link 1\",\n          \"photo_id\": 1\n        },\n        \"group_lat\": \"group_lat 1\",\n        \"name\": \"name 1\",\n        \"group_lon\": \"group_lon 1\",\n        \"membership_dues\": {\n          \"methods\": \"methods 1\",\n          \"fee\": \"fee 1\",\n          \"required\": \"required 1\",\n          \"fee_desc\": \"fee_desc 1\",\n          \"refund_policy\": \"refund_policy 1\",\n          \"currency\": \"currency 1\"\n        },\n        \"join_mode\": \"join_mode 1\",\n        \"urlname\": \"urlname 1\",\n        \"who\": \"who 1\"\n      },\n      \"simple_html_description\": \"simple_html_description 1\",\n      \"why\": \"why 1\"\n    }\n  ]\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"announced\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"comment_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"created\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"description\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"distance\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"duration\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"email_reminders\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"event_hosts\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"member_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"member_name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"event_url\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"featured\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"fee\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"accepts\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"amount\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"currency\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"description\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"label\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"required\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"group\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"category\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"id\": {\r\n                    \"required\": false,\r\n                    \"type\": \"integer\"\r\n                  },\r\n                  \"name\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"shortname\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              },\r\n              \"group_lat\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"group_lon\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"group_photo\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"highres_link\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"photo_id\": {\r\n                    \"required\": false,\r\n                    \"type\": \"integer\"\r\n                  },\r\n                  \"photo_link\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"thumb_link\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              },\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"join_mode\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"membership_dues\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"currency\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"fee\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"fee_desc\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"methods\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"refund_policy\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"required\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"topics\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"id\": {\r\n                    \"required\": false,\r\n                    \"type\": \"integer\"\r\n                  },\r\n                  \"name\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"urlkey\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              },\r\n              \"urlname\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"who\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"headcount\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"how_to_find_us\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"is_simplehtml\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"maybe_rsvp_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"photo_album_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"photo_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"photo_url\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"publish_status\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"rating\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"average\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"count\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              }\r\n            }\r\n          },\r\n          \"rsvp_alerts\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"rsvp_limit\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"rsvp_rules\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"close_time\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"closed\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"guest_limit\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"open_time\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"refund_policy\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"days\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"notes\": {\r\n                    \"required\": false,\r\n                    \"type\": \"integer\"\r\n                  },\r\n                  \"policies\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              },\r\n              \"waitlisting\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"rsvpable\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"self\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"actions\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"checked_in\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"pay_status\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"rated\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"role\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"rsvp\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"answers\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"guests\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"response\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              },\r\n              \"watching\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"short_link\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"simple_html_description\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"status\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"survey_questions\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"question\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"required\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"time\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"timezone\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"trending_rank\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"updated\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"utc_offset\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"venue\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"address_1\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"address_2\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"address_3\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"city\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"state\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"country\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"lat\": {\r\n                \"required\": false,\r\n                \"type\": \"number\"\r\n              },\r\n              \"lon\": {\r\n                \"required\": false,\r\n                \"type\": \"number\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"phone\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"repinned\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"zip\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"venue_visibility\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"visibility\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"why\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"yes_rsvp_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
                                        }
                                    },
                                    "description": "|||\n|-|\n|announced|Organizers and hosts can see if the event was announced|\n|comment_count|Optional field, number of comments posted to the event|\n|created|UTC creation time of the event, in milliseconds since the epoch|\n|description|Description of the event|\n|distance|Distance in miles from the search location, if one was specified|\n|duration|Event duration in milliseconds, if an end time is specified by the organizer. When not present, a default of 3 hours may be assumed by applications.|\n|email_reminders|Optional fields parameter limited to organizers and event hosts, if false, event reminders are disabled|\n|event_hosts|List of members hosting the event, only returned if requested in the fields parameter.|\n|event_url|URL of the event's page on meetup.com|\n|featured|Optional fields parameter which returns \"true\" if the event is featured and \"false\" otherwise|\n|fee|Fee info returned when payment is defined|\n|group|Group that is hosting the event|\n|headcount|The number of members in attendance according to the attendance taker. This may be 0 if attendance has not yet been taken|\n|how_to_find_us|The information provided by the event host for \"How will members find you there?\"|\n|id|The event id. May be numeric or alphanumeric, always served as a string|\n|is_simplehtml|Optional field, \"true\" when the event has been saved in a simplified HTML format, \"false\" otherwise.|\n|maybe_rsvp_count|Number of maybe RSVPs including guests|\n|name|The name of the event|\n|photo_album_id|optional fields parameter which returns the ID of the photo album for this event, if one exists|\n|photo_count|Optional field, number of photos posted to the event|\n|photo_url|URL of the event photo, if one exists|\n|publish_status|\"published\" or \"draft\" only visible to organizers|\n|rating|Only past events have this field, an aggregate of anonymous ratings|\n|rsvp_alerts|Optional fields parameter limited to organizers and event hosts, if false, member RSVP alerts are disabled|\n|rsvp_limit|The number of \"yes\" RSVPs an event can have before members will be added to the waiting list|\n|rsvp_rules|Conditions set by the organizer, only returned if requested in the fields parameter.|\n|rsvpable|Indicates if the currently authenticated member can RSVP or not, only returned if requested in the fields parameter|\n|self|Optional field with details particular to the authorized user, only present if requested and user is a member of the hosting group|\n|short_link|Optional field. If hosting group is private, this will return the group's short_link|\n|simple_html_description|Optional field, description of the event in simple HTML format.|\n|status|\"cancelled\", \"upcoming\", \"past\", \"proposed\", \"suggested\" or \"draft\"|\n|survey_questions|Optional \"fields\" response property for event with surveys|\n|time|UTC start time of the event, in milliseconds since the epoch|\n|timezone|Returned when \"timezone\" is provided in fields parameter. This represents the universal timezone identifier for the host group|\n|trending_rank|Indicates the trending rank within the current result set. The best rank is zero, increasing rank values are less \"trending\". This value is only returned if requested in the fields parameter|\n|updated|UTC last modified time of the event, in milliseconds since the epoch|\n|utc_offset|The local offset from UTC time, in milliseconds|\n|venue|Venue, if selected and not hidden|\n|venue_visibility|Set to \"members\" or \"public\". The \"venue\" element will not be present if the visibility is \"members\" and the current authenticated user is not a member of the group hosting the event. This value is only returned if requested in the fields parameter|\n|visibility|Event visibility: \"public\", \"members\" or \"public_limited\". Events in private groups that do not expose limited information are visible only to that group's members and should not be made public.|\n|why|We should do this because...|\n|yes_rsvp_count|Number of yes RSVPs including guests|\n"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0",
                                "api_key"
                            ],
                            "queryParameters": {
                                "category_id": {
                                    "name": "category_id",
                                    "displayName": "category_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Comma delimited list of category ids to limit recommendations to",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "fields": {
                                    "name": "fields",
                                    "displayName": "fields",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Request that additional fields (separated by commas) be included in the output",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "page_token": {
                                    "name": "page_token",
                                    "displayName": "page_token",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "An opaque string used to page through results. This can be found appended to the 'next' link in the meta section of the response.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "radius": {
                                    "name": "radius",
                                    "displayName": "radius",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Radius, in miles for geographic requests, defaults to the member's preferred radius or 0.5 -- maximum 100. May also be specified as \"smart\", a dynamic radius based on the number of active groups in the area\n",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "self_groups": {
                                    "name": "self_groups",
                                    "displayName": "self_groups",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "set to \"include\" or \"exclude\" meetups the authorized member belongs to; default is \"include\"",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "state": {
                                    "name": "state",
                                    "displayName": "state",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "If searching in a country with states, a valid 2 character state code",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "text_format": {
                                    "name": "text_format",
                                    "displayName": "text_format",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Format of the description text, \"html\", \"plain\", or \"simplehtml\". Defaults to \"html\"",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "time": {
                                    "name": "time",
                                    "displayName": "time",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Return events scheduled within the given time range, defined by two times separated with a single comma. Each end of the range may be specified with relative dates, such as \"1m\" for one month from now, or by absolute time in milliseconds since the epoch. If an endpoint is omitted, the range is unbounded on that end. The default value is unbounded on both ends (though restricted to the search window described above). Note: to retrieve past events you must also update status value\n",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "topic_id": {
                                    "name": "topic_id",
                                    "displayName": "topic_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Comma delimited list of topics to help inform recommendation",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "zip": {
                                    "name": "zip",
                                    "displayName": "zip",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "A valid US zip code, limits the returned groups to those within radius miles",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "order": {
                                    "name": "order",
                                    "displayName": "order",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "|value|description|\n|-|\n|time|ascending time is the default and only ordering|\n",
                                    "enum": [
                                        "time"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Recommends upcoming meetups for the authorized member.\n\n#Request Parameters\nFor geo-based requests, you may provide a location in one of three ways. By lat and lon, by zip, or by country, city, and optionally a state, if the provided country has states.\n\nIf the server is unable to produce recommendations in a suitable amount of time, a 503 error will be returned. If no parameters are specified, Meetups are recommended for the upcoming week in the member's default location.\n\nPagination works a little differently in this method than in others. Rather than using \"offset\" and \"page\" request parameters, this method uses an opaque \"page_token\" request parameter to determine the page of results returned. If there are more results, the \"next\" property of the meta section of the response will contain the next page's page_token. The number of results returned is not deterministic but a best-effort attempt will be made to return at least some.\n",
                            "method": "get",
                            "is": [
                                "locatable",
                                "locationByCity"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/concierge",
                    "description": "Concierge",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "concierge"
                    ]
                },
                {
                    "relativeUri": "/topic_categories",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "topicCategories",
                                            "example": "{\n  \"results\": [\n    {\n      \"topic\": {\n        \"id\": 0,\n        \"urlkey\": \"urlkey 0\",\n        \"name\": \"name 0\"\n      },\n      \"best_topics\": {\n        \"id\": 0,\n        \"urlkey\": \"urlkey 0\",\n        \"name\": \"name 0\"\n      },\n      \"name\": \"name 0\",\n      \"shortname\": \"shortname 0\",\n      \"photo\": {\n        \"photo_link\": \"photo_link 0\",\n        \"highres_link\": \"highres_link 0\",\n        \"thumb_link\": \"thumb_link 0\",\n        \"photo_id\": 0\n      },\n      \"category_ids\": \"category_ids 0\"\n    },\n    {\n      \"topic\": {\n        \"id\": 1,\n        \"urlkey\": \"urlkey 1\",\n        \"name\": \"name 1\"\n      },\n      \"best_topics\": {\n        \"id\": 1,\n        \"urlkey\": \"urlkey 1\",\n        \"name\": \"name 1\"\n      },\n      \"name\": \"name 1\",\n      \"shortname\": \"shortname 1\",\n      \"photo\": {\n        \"photo_link\": \"photo_link 1\",\n        \"highres_link\": \"highres_link 1\",\n        \"thumb_link\": \"thumb_link 1\",\n        \"photo_id\": 1\n      },\n      \"category_ids\": \"category_ids 1\"\n    }\n  ]\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"best_topics\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"urlkey\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"category_ids\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"photo\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"highres_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"photo_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"photo_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"thumb_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"shortname\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"topic\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"urlkey\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
                                        }
                                    },
                                    "description": "|||\n|-|\n|best_topics|Optional fields parameter representing the best topic matches for the category|\n|category_ids|list of category ids associated with this topic category|\n|name|Display name of the category|\n|photo|A photo representing the category|\n|shortname|String identifier of the category|\n|topic|A topic linked to the category|\n"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0",
                                "api_key"
                            ],
                            "queryParameters": {
                                "fields": {
                                    "name": "fields",
                                    "displayName": "fields",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Parameter for requesting optional response properties",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "radius": {
                                    "name": "radius",
                                    "displayName": "radius",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "{lat,lon,radius} - Use a given lat/lon/radius (miles) to search best_topics for instead of using the member's lat/lon. When present, all three are required.\n",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "order": {
                                    "name": "order",
                                    "displayName": "order",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "|value|description|\n|-|\n|shortname|(default order) ascending|\n",
                                    "enum": [
                                        "shortname"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Returns a list of Meetup topic categories\n\n#Request Parameters\nNo parameters required parameters\n",
                            "method": "get",
                            "is": [
                                "list",
                                "locatable"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/topic_categories",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "topic_categories"
                    ]
                },
                {
                    "relativeUri": "/photo",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "photo",
                                            "example": "{\n  \"member\": {\n    \"name\": \"name\",\n    \"member_id\": 100\n  },\n  \"album_id\": 100,\n  \"title\": 100,\n  \"site_link\": \"site_link\",\n  \"event_photo_id\": 100,\n  \"updated\": 100,\n  \"created\": 100,\n  \"photo_url\": \"photo_url\"\n}\n",
                                            "schemaContent": "photo"
                                        }
                                    },
                                    "description": "When successful, this method responds with a status of \"201 Created\" and a Location header with the uploaded photo's URL. The response body contains the following elements in JSON or XML. Upon recieving the response, some photos may not be immediately accesible. If this is desirable, use the \"await\" request parameter\n|||\n|-|\n|album_id|Identifier of the photo's album|\n|created|Created time in milliseconds since the epoch|\n|event_photo_id|Unique identifier of this photo|\n|member|Member that uploaded the photo|\n|photo_url|Link to the uploaded event photo (same as in the Location header).|\n|site_link|URL for photo in photo album on meetup.com|\n|title|Request Completed|\n|updated|Last updated time in milliseconds since the epoch|\n"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0"
                            ],
                            "queryParameters": {
                                "await": {
                                    "name": "await",
                                    "displayName": "await",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "If true, this ensures a response will not be returned until the upload is accessible",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "caption": {
                                    "name": "caption",
                                    "displayName": "caption",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Caption for the photo",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "event_id": {
                                    "name": "event_id",
                                    "displayName": "event_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Identifier of an event. If there is no album for this event, one will be created.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "photo": {
                                    "name": "photo",
                                    "displayName": "photo",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The photo, encoded as multipart/form-data. The maximum file size allowed is 10MB",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "photo_album_id": {
                                    "name": "photo_album_id",
                                    "displayName": "photo_album_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Identifier of an existing photo album, which may be an event or group album",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Uploads a photo for a given event\n\n#Request Parameters\nA photo album or event ID must be supplied with the request, which must be a POST of content-type multipart/form-data. The currently authenticated user must be a member of the group that is hosting the event. Parameters other than photo may be passed in as a query string or within the posted content. If authenticating with OAuth, no parameters in the multipart form data should be included in the signature base string\n",
                            "method": "post",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/photo",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "photo"
                    ]
                },
                {
                    "relativeUri": "/venues",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "venues",
                                            "example": "{\n  \"results\": [\n    {\n      \"zip\": \"zip 0\",\n      \"phone\": 0,\n      \"lon\": 1.0,\n      \"fax\": \"fax 0\",\n      \"address_3\": \"address_3 0\",\n      \"state\": 0,\n      \"address_1\": \"address_1 0\",\n      \"address_2\": \"address_2 0\",\n      \"venue_url\": \"venue_url 0\",\n      \"city\": \"city 0\",\n      \"country\": \"country 0\",\n      \"id\": 0,\n      \"taglist\": \"taglist 0\",\n      \"distance\": 1.0,\n      \"rating_count\": 0,\n      \"email\": 0,\n      \"name\": \"name 0\",\n      \"rating\": \"rating 0\",\n      \"lat\": 1.0\n    },\n    {\n      \"zip\": \"zip 1\",\n      \"phone\": 1,\n      \"lon\": 1.0,\n      \"fax\": \"fax 1\",\n      \"address_3\": \"address_3 1\",\n      \"state\": 1,\n      \"address_1\": \"address_1 1\",\n      \"address_2\": \"address_2 1\",\n      \"venue_url\": \"venue_url 1\",\n      \"city\": \"city 1\",\n      \"country\": \"country 1\",\n      \"id\": 1,\n      \"taglist\": \"taglist 1\",\n      \"distance\": 1.0,\n      \"rating_count\": 1,\n      \"email\": 1,\n      \"name\": \"name 1\",\n      \"rating\": \"rating 1\",\n      \"lat\": 1.0\n    }\n  ]\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"address_1\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"address_2\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"address_3\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"city\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"state\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"country\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"distance\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"email\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"fax\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"lat\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"lon\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"phone\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"rating\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"rating_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"taglist\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"venue_url\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"zip\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
                                        }
                                    },
                                    "description": "|||\n|-|\n|address_1|line 1 of venue address|\n|address_2|line 2 of venue address|\n|address_3|line 3 of venue address|\n|city, state, country|City, County and if in US state of venue|\n|distance|Distance in miles from the search location, if one was specified|\n|email|email address of venue|\n|fax|fax number of venue|\n|id|ID of the venue|\n|lat, lon|coordinates of venue|\n|name|Name of the venue|\n|phone|phone number of venue|\n|rating|The average member rating|\n|rating_count|The number of member ratings|\n|taglist|Optional array of associated tagnames provided when a value of \"taglist\" is supplied with the \"fields\" request parameter|\n|venue_url|URL of the venues's page on meetup.com|\n|zip|if US or Canada|\n"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0",
                                "api_key"
                            ],
                            "queryParameters": {
                                "event_id": {
                                    "name": "event_id",
                                    "displayName": "event_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "multiple ids may be separated with commas",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "fields": {
                                    "name": "fields",
                                    "displayName": "fields",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Request that additional fields (separated by commas) be included in the output",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "group_id": {
                                    "name": "group_id",
                                    "displayName": "group_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "multiple ids may be separated with commas",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "group_urlname": {
                                    "name": "group_urlname",
                                    "displayName": "group_urlname",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "path to group from meetup.com, no slashes",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "venue_id": {
                                    "name": "venue_id",
                                    "displayName": "venue_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "multiple ids may be separated with commas",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "order": {
                                    "name": "order",
                                    "displayName": "order",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "|value|description|\n|-|\n|distance|(default order) ordering is approximate and will not exactly match the values in the \"distance\" field.|\n|rating|average member rating|\n|rating_count|number of member ratings.|\n",
                                    "enum": [
                                        "distance",
                                        "rating",
                                        "rating_count"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Search for Meetup venues by one of your groups, events, or venue identifiers. For a full text search on public venues use OpenVenues.\n\n#Request Parameters\nAt least one of the required parameter(s) must be supplied with the request. You can use either group_urlname or group_id to filter by groups but not both.\n",
                            "method": "get",
                            "is": [
                                "list"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/venues",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "venues"
                    ]
                },
                {
                    "relativeUri": "/checkin",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "201": {
                                    "code": "201",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "deprecatedCheckin",
                                            "example": "{\n  \"checkin_id\": 100,\n  \"time\": 100,\n  \"lon\": 1.0,\n  \"group_id\": 100,\n  \"event_id\": 100,\n  \"member_name\": \"member_name\",\n  \"comment\": \"comment\",\n  \"lat\": 1.0,\n  \"checker\": {\n    \"member_state\": \"member_state\",\n    \"member_city\": \"member_city\",\n    \"name\": \"name\",\n    \"member_country\": \"member_country\",\n    \"member_id\": 100\n  },\n  \"member_id\": 100\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"checker\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"member_city\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"member_country\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"member_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"member_state\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"checkin_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"comment\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"event_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"group_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"lat\": {\r\n      \"required\": false,\r\n      \"type\": \"number\"\r\n    },\r\n    \"lon\": {\r\n      \"required\": false,\r\n      \"type\": \"number\"\r\n    },\r\n    \"member_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"member_name\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"time\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    }\r\n  }\r\n}\r\n"
                                        }
                                    },
                                    "description": "If successful, this method responds with a \"201 Created\" status and a json or XML body consisting of the posted checkin in the same fields as the response items of the Checkins method.\nErrors:\n|||\n|-|\n|badevent|The event id does not match a valid event|\n|nonmember|The authenticated member is not a member of the group hosting the event|\n"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0"
                            ],
                            "queryParameters": {
                                "attendee_member_id": {
                                    "name": "attendee_member_id",
                                    "displayName": "attendee_member_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Supply this parameter only when the user is checking in someone else. The currently authenticated member will be recorded as the checker while the member referenced by this parameter will appear in the member_id and member_name response fields of the checkins method",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "comment": {
                                    "name": "comment",
                                    "displayName": "comment",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Comment to attach to the checkin. When checking in someone else, this request parameter is ignored.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "event_id": {
                                    "name": "event_id",
                                    "displayName": "event_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Event we're checking in to",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "This method posts event checkins that can be retrieved by /2/checkins. Event attendees may check in themselves and others in the group.\n\n#Request Parameters\nAll of the required parameters must be supplied with the request, which must be a standard POST\n",
                            "method": "post",
                            "is": [
                                "locatable"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/checkin",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "checkin"
                    ]
                },
                {
                    "relativeUri": "/member_photo/{id}",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "uriParameters": {
                        "id": {
                            "name": "id",
                            "displayName": "id",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "description": ":id is a photo identifier",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "description": "Returns an HTTP 200 response if delete was successful."
                                },
                                "401": {
                                    "code": "401",
                                    "description": "Returns an HTTP 401 response if unauthorized."
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0"
                            ],
                            "description": "Delete the specified member photo\n\n#Request Parameters\nOnly authorization parameters are needed. Authorized user must be the member owning the photo\n",
                            "method": "delete",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/member_photo/{id}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "member_photo",
                        "{id}"
                    ]
                },
                {
                    "relativeUri": "/members",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "members",
                                            "example": "{\n  \"results\": [\n    {\n      \"birthday\": {\n        \"month\": 0,\n        \"year\": \"year 0\",\n        \"day\": \"day 0\"\n      },\n      \"messaging_pref\": \"messaging_pref 0\",\n      \"link\": \"link 0\",\n      \"state\": 0,\n      \"self\": {\n        \"common\": {\n          \"friends\": \"friends 0\",\n          \"groups\": \"groups 0\"\n        }\n      },\n      \"lang\": \"lang 0\",\n      \"city\": \"city 0\",\n      \"visited\": 0,\n      \"id\": 0,\n      \"joined\": 0,\n      \"reachable\": \"reachable 0\",\n      \"name\": \"name 0\",\n      \"gender\": \"gender 0\",\n      \"other_services\": {\n        \"[service-name]\": {\n          \"identifier\": \"identifier 0\"\n        }\n      },\n      \"lat\": 1.0,\n      \"lon\": 1.0,\n      \"hometown\": \"hometown 0\",\n      \"membership_count\": 0,\n      \"photo_url\": \"photo_url 0\",\n      \"privacy\": {\n        \"photos\": \"photos 0\",\n        \"topics\": \"topics 0\",\n        \"bio\": \"bio 0\",\n        \"facebook\": \"facebook 0\",\n        \"groups\": \"groups 0\"\n      },\n      \"photo\": {\n        \"photo_link\": \"photo_link 0\",\n        \"highres_link\": \"highres_link 0\",\n        \"thumb_link\": \"thumb_link 0\",\n        \"photo_id\": 0\n      },\n      \"country\": \"country 0\",\n      \"photos\": \"photos 0\",\n      \"topics\": {\n        \"id\": 0,\n        \"urlkey\": \"urlkey 0\",\n        \"name\": \"name 0\"\n      },\n      \"bio\": \"bio 0\",\n      \"email\": 0,\n      \"messagable\": \"messagable 0\"\n    },\n    {\n      \"birthday\": {\n        \"month\": 1,\n        \"year\": \"year 1\",\n        \"day\": \"day 1\"\n      },\n      \"messaging_pref\": \"messaging_pref 1\",\n      \"link\": \"link 1\",\n      \"state\": 1,\n      \"self\": {\n        \"common\": {\n          \"friends\": \"friends 1\",\n          \"groups\": \"groups 1\"\n        }\n      },\n      \"lang\": \"lang 1\",\n      \"city\": \"city 1\",\n      \"visited\": 1,\n      \"id\": 1,\n      \"joined\": 1,\n      \"reachable\": \"reachable 1\",\n      \"name\": \"name 1\",\n      \"gender\": \"gender 1\",\n      \"other_services\": {\n        \"[service-name]\": {\n          \"identifier\": \"identifier 1\"\n        }\n      },\n      \"lat\": 1.0,\n      \"lon\": 1.0,\n      \"hometown\": \"hometown 1\",\n      \"membership_count\": 1,\n      \"photo_url\": \"photo_url 1\",\n      \"privacy\": {\n        \"photos\": \"photos 1\",\n        \"topics\": \"topics 1\",\n        \"bio\": \"bio 1\",\n        \"facebook\": \"facebook 1\",\n        \"groups\": \"groups 1\"\n      },\n      \"photo\": {\n        \"photo_link\": \"photo_link 1\",\n        \"highres_link\": \"highres_link 1\",\n        \"thumb_link\": \"thumb_link 1\",\n        \"photo_id\": 1\n      },\n      \"country\": \"country 1\",\n      \"photos\": \"photos 1\",\n      \"topics\": {\n        \"id\": 1,\n        \"urlkey\": \"urlkey 1\",\n        \"name\": \"name 1\"\n      },\n      \"bio\": \"bio 1\",\n      \"email\": 1,\n      \"messagable\": \"messagable 1\"\n    }\n  ]\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"bio\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"birthday\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"day\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"month\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"year\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"country\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"city\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"state\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"email\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"gender\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"hometown\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"joined\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"lang\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"lat\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"lon\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"link\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"membership_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"messagable\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"messaging_pref\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"other_services\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"[service-name]\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"identifier\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"photo\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"highres_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"photo_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"photo_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"thumb_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"photo_url\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"photos\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"privacy\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"bio\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"facebook\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"groups\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"photos\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"topics\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"reachable\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"self\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"common\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"friends\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"groups\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"topics\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"urlkey\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"visited\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
                                        }
                                    },
                                    "description": "|||\n|-|\n|bio|A description of the member|\n|birthday|If the authorized is the current member, the member's birthday based on provided information|\n|country, city, state|Country, City, (and for the US, State) the member has provided|\n|email|Member's email address, if requested in fields parameter. This item is only included if the currently authenticated user is the founder of a Meetup Everywhere in which the member has elected to share an email address.|\n|gender|Optional fields parameter. Members can only see their own gender. May be one of none, other, female, male|\n|hometown|Hometown of member|\n|id|The member's id|\n|joined|Date and time a member joined in milliseconds since the epoch|\n|lang|The member's current language preference|\n|lat, lon|Latitude and longitude coordinates of the members reported city|\n|link|URL to the member's profile page on meetup.com|\n|membership_count|Optional field indicating the number of active memberships this member has. If the member has a hidden group preference, this will return 0.|\n|messagable|Returned when the \"fields\" parameter is set to \"messaging_pref\". Returns \"true\" if the authenticated member can message them, \"false\" otherwise.|\n|messaging_pref|Returned when the \"fields\" parameter is set to \"messaging_pref\". This specifies the members preference for being contacted from members on the site. Possible values are \"orgs_only\", \"groups_only\", \"all_members\"|\n|name|The member's name|\n|other_services|Third-party services associated with the member account|\n|photo|The member's photo if available|\n|photo_url|Link to the profile photo of the member|\n|photos|List of all the member's photos returned as an array of the representation of the photo property|\n|privacy|Optional fields parameter. Defines preferences for visibility of certain attributes only returned for the authenticated member|\n|reachable|Optional fields parameter. If querying by group and the authorized member is an organizer the member's group, this will return false when the member's email address is known to bounce and true otherwise|\n|self|Optional field, details particular to the authorized user.|\n|topics|A sampling of 50 topics this member has subscribed to. Only appears if the queried user has not hidden them, or if the authenticated and queried user are the same|\n|visited|Date and time of member's last activity in milliseconds since the epoch|\n"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0",
                                "api_key"
                            ],
                            "queryParameters": {
                                "fields": {
                                    "name": "fields",
                                    "displayName": "fields",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Request that additional fields (separated by commas) be included in the output.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "group_urlname": {
                                    "name": "group_urlname",
                                    "displayName": "group_urlname",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Return members for the group with the given custom URL path",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "service": {
                                    "name": "service",
                                    "displayName": "service",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Match users by the external services they've linked to their member account, specified as \"servicename:identifier\". For example, \"service=twitter:@MeetupAPI\" finds any member account that lists @MeetupAPI as its Twitter name (none, currently). You can query against several at a time by separating them with commas.\n",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "topic": {
                                    "name": "topic",
                                    "displayName": "topic",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "{topic,groupnum} - Return members for the group with given topic and number\n",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "groupnum": {
                                    "name": "groupnum",
                                    "displayName": "groupnum",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "{topic,groupnum} - Return members for the group with given topic and number\n",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "order": {
                                    "name": "order",
                                    "displayName": "order",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "|value|description|\n|-|\n|joined|time member joined Meetup|\n|name|the name of the member (default order)|\n|visited|member's most recent activity|\n",
                                    "enum": [
                                        "joined",
                                        "name",
                                        "visited"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "API method for accessing members of Meetup Groups\n\n#Request Parameters\nAt least one of the required parameter(s) must be supplied with the request. If any of the groups you specify are private, you will not see its members listed in the result set unless you are a member of that group.\n",
                            "method": "get",
                            "is": [
                                "list",
                                "groupmember"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/members",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "members"
                    ]
                },
                {
                    "relativeUri": "/cities",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "cities",
                                            "example": "{\n  \"results\": [\n    {\n      \"id\": 0,\n      \"zip\": \"zip 0\",\n      \"lon\": 1.0,\n      \"distance\": 1.0,\n      \"member_count\": 0,\n      \"name_string\": \"name_string 0\",\n      \"state\": 0,\n      \"ranking\": \"ranking 0\",\n      \"lat\": 1.0,\n      \"country\": \"country 0\",\n      \"city\": \"city 0\"\n    },\n    {\n      \"id\": 1,\n      \"zip\": \"zip 1\",\n      \"lon\": 1.0,\n      \"distance\": 1.0,\n      \"member_count\": 1,\n      \"name_string\": \"name_string 1\",\n      \"state\": 1,\n      \"ranking\": \"ranking 1\",\n      \"lat\": 1.0,\n      \"country\": \"country 1\",\n      \"city\": \"city 1\"\n    }\n  ]\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"city\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"country\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"distance\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"lat\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"lon\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"member_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"name_string\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"ranking\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"state\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"zip\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n} \r\n"
                                        }
                                    },
                                    "description": "|||\n|-|\n|city|The name of the city|\n|country|The ISO_3166-1 country code for the country which contains the city|\n|distance|The distance away from the provided coordinates, if applicable|\n|id|Numeric identifier of the city|\n|lat|The latitude of the city|\n|lon|The longitude of the city|\n|member_count|The number of Meetup members in the city|\n|name_string|The full name of the city, as returned by query search, if applicable|\n|ranking|Indicates the best-match ranking of this result|\n|state|The state which contains the city, if applicable|\n|zip|The zip code of the city. For cities in countries without zipcodes, a placeholder will be returned|\n"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "queryParameters": {
                                "query": {
                                    "name": "query",
                                    "displayName": "query",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Search term and/or zip to look for (if this is specified, max result size limited to 10)",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "radius": {
                                    "name": "radius",
                                    "displayName": "radius",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "When searching by lat/lon only, specify a radius to search (default 50 miles)",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "order": {
                                    "name": "order",
                                    "displayName": "order",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "|value|description|\n|-|\n|distance|When lat/lon/query provided, sort matches by distance to coordinates|\n|size|(default order) number of members in the city: descending|\n|smart|Sort by size, but if a match is close to given lat/lon, float to top. Only works when query provided|\n",
                                    "enum": [
                                        "distance",
                                        "size",
                                        "smart"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Returns Meetup cities. Can search by location, by query term/zip, or by both. Location-only searches return all cities within a radius of the provided coordinates. Searches with a query return up to 10 cities matching the term, and can be sorted by size or distance to a given coordinate. 'smart' ordering can be used to return the match(es) with the highest member_count, unless a smaller size match exists nearby the given coordinates.\n\n#Request Parameters\nThis method requires no authentication but is subject to request limiting based on client IP . This search is location based. A lat and lon must be supplied together or a query or the search will be based on your geolocated ip\n",
                            "method": "get",
                            "is": [
                                "list",
                                "locatable"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/cities",
                    "description": "Cities",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "cities"
                    ]
                },
                {
                    "relativeUri": "/profiles",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "profiles",
                                            "example": "{\n  \"results\": [\n    {\n      \"profile_url\": \"profile_url 0\",\n      \"status\": \"status 0\",\n      \"photo_url\": \"photo_url 0\",\n      \"answers\": {\n        \"answer\": \"answer 0\",\n        \"question\": \"question 0\",\n        \"question_id\": 0\n      },\n      \"member_country\": \"member_country 0\",\n      \"membership_dues\": {\n        \"total_amount\": \"total_amount 0\",\n        \"transaction_time\": 0,\n        \"period_status\": \"period_status 0\"\n      },\n      \"site_name\": \"site_name 0\",\n      \"photo\": {\n        \"photo_link\": \"photo_link 0\",\n        \"highres_link\": \"highres_link 0\",\n        \"thumb_link\": \"thumb_link 0\",\n        \"photo_id\": 0\n      },\n      \"attendance_count\": 0,\n      \"member_id\": 0,\n      \"visited\": 0,\n      \"title\": 0,\n      \"member_city\": \"member_city 0\",\n      \"member_state\": \"member_state 0\",\n      \"bio\": \"bio 0\",\n      \"additional\": \"additional 0\",\n      \"created\": 0,\n      \"updated\": 0,\n      \"name\": \"name 0\",\n      \"role\": \"role 0\",\n      \"comment\": \"comment 0\",\n      \"group\": {\n        \"id\": 0,\n        \"group_lat\": \"group_lat 0\",\n        \"name\": \"name 0\",\n        \"group_lon\": \"group_lon 0\",\n        \"join_mode\": \"join_mode 0\",\n        \"urlname\": \"urlname 0\",\n        \"who\": \"who 0\"\n      },\n      \"other_services\": {\n        \"[service-name]\": {\n          \"identifier\": \"identifier 0\"\n        }\n      },\n      \"site_url\": \"site_url 0\"\n    },\n    {\n      \"profile_url\": \"profile_url 1\",\n      \"status\": \"status 1\",\n      \"photo_url\": \"photo_url 1\",\n      \"answers\": {\n        \"answer\": \"answer 1\",\n        \"question\": \"question 1\",\n        \"question_id\": 1\n      },\n      \"member_country\": \"member_country 1\",\n      \"membership_dues\": {\n        \"total_amount\": \"total_amount 1\",\n        \"transaction_time\": 1,\n        \"period_status\": \"period_status 1\"\n      },\n      \"site_name\": \"site_name 1\",\n      \"photo\": {\n        \"photo_link\": \"photo_link 1\",\n        \"highres_link\": \"highres_link 1\",\n        \"thumb_link\": \"thumb_link 1\",\n        \"photo_id\": 1\n      },\n      \"attendance_count\": 1,\n      \"member_id\": 1,\n      \"visited\": 1,\n      \"title\": 1,\n      \"member_city\": \"member_city 1\",\n      \"member_state\": \"member_state 1\",\n      \"bio\": \"bio 1\",\n      \"additional\": \"additional 1\",\n      \"created\": 1,\n      \"updated\": 1,\n      \"name\": \"name 1\",\n      \"role\": \"role 1\",\n      \"comment\": \"comment 1\",\n      \"group\": {\n        \"id\": 1,\n        \"group_lat\": \"group_lat 1\",\n        \"name\": \"name 1\",\n        \"group_lon\": \"group_lon 1\",\n        \"join_mode\": \"join_mode 1\",\n        \"urlname\": \"urlname 1\",\n        \"who\": \"who 1\"\n      },\n      \"other_services\": {\n        \"[service-name]\": {\n          \"identifier\": \"identifier 1\"\n        }\n      },\n      \"site_url\": \"site_url 1\"\n    }\n  ]\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"additional\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"answers\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"answer\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"question\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"question_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              }\r\n            }\r\n          },\r\n          \"attendance_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"bio\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"comment\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"created\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"updated\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"group\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"group_lat\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"group_lon\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"join_mode\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"urlname\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"who\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"member_city\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"member_country\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"member_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"member_state\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"membership_dues\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"period_status\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"total_amount\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"transaction_time\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              }\r\n            }\r\n          },\r\n          \"name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"other_services\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"[service-name]\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"identifier\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"photo\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"highres_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"photo_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"photo_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"thumb_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"photo_url\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"profile_url\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"role\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"site_url\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"site_name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"status\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"title\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"visited\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
                                        }
                                    },
                                    "description": "|||\n|-|\n|additional|Additional information supplied by the member|\n|answers|Answers to group profile questions. Unanswered questions will be returned without an answer property if \"empty_answers\" is provided as a \"fields\" property value|\n|attendance_count|Optional fields property representing number of times the member has attended a Meetup in the associated group.|\n|bio|Member's 'introduction' to the group|\n|comment|What this member says about this group|\n|created, updated|When this member profile was created and last updated, in milliseconds since the epoch.|\n|group|The group this profile belongs to|\n|member_city|Optional fields parameter for the Member's city|\n|member_country|Optional fields parameter for the Member's country code|\n|member_id|The member's id|\n|member_state|Optional fields parameter for the Member's state (when country is us)|\n|membership_dues|Optional fields parameter for the last payment received for the Group's membership dues and optionally, the status of the member's dues for the current billing period if the group has set up recurring membership dues payments. This field is only visible only to the organizer of the group and to the member themselves. Members can not see other member's membership dues|\n|name|The member's name|\n|other_services|Third-party services associated with the member account|\n|photo|The member's photo if available|\n|photo_url|Link to the group profile photo of the member|\n|profile_url|Link to the member's group profile page|\n|role|If applicable, the member's role in the group (Organizer, Assistant Organizer, Co-organizer, or Event Organizer)|\n|site_url, site_name|External site listed by the member|\n|status|Value may be one of pending_payment, blocked, active, pending|\n|title|Title assigned to the member in this group|\n|visited|Member's last visit to the group site, in milliseconds since the epoch|\n"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0",
                                "api_key"
                            ],
                            "queryParameters": {
                                "fields": {
                                    "name": "fields",
                                    "displayName": "fields",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "comma delimited list of optional response properties. A value of \"membership_dues\" will populate membership dues for the authorized user or members of the groups the authorized user organizes",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "group_urlname": {
                                    "name": "group_urlname",
                                    "displayName": "group_urlname",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Return profiles for the group with the given custom URL path",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "role": {
                                    "name": "role",
                                    "displayName": "role",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "if \"leads\", only profiles for members of the leadership team are included",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "status": {
                                    "name": "status",
                                    "displayName": "status",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Status filter for members. Only organizers may see pending. Request must also contain a `group_id` or `group_urlname`. Status may be one of active, pending",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "topic": {
                                    "name": "topic",
                                    "displayName": "topic",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "{topic, groupnum} - Group identification by topic, deprecated\n",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "groupnum": {
                                    "name": "groupnum",
                                    "displayName": "groupnum",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "{topic, groupnum} - Group identification by topic, deprecated\n",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "order": {
                                    "name": "order",
                                    "displayName": "order",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "|value|description|\n|-|\n|interesting|Order which may be interesting to the authorized member|\n|joined|time member joined this group|\n|member_id|the id of the member|\n|name|the name of the member|\n|updated|profile updated field|\n|visited|last visit to group pages (default order)|\n",
                                    "enum": [
                                        "interesting",
                                        "joined",
                                        "member_id",
                                        "name",
                                        "updated",
                                        "visited"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "This method returns member profiles associated with a particular group. Meetup members have separate profiles for each group they join.\n\n#Request Parameters\nAt least one of the required parameter(s) must be supplied with the request. If any of the groups you specify are private, you will not see its members listed in the result set unless you are a member of that group. If querying for member_id alone, the member's 'hide groups' preference will be honored. 'Interesting' ordered searches only support searching by group_urlname or group_id. Only one of those may be supplied.\n",
                            "method": "get",
                            "is": [
                                "list",
                                "groupmember"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/profiles",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "profiles"
                    ]
                },
                {
                    "relativeUri": "/groups",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "groupsFull",
                                            "example": "{\n  \"results\": [\n    {\n      \"visibility\": \"visibility 0\",\n      \"is_simplehtml\": \"is_simplehtml 0\",\n      \"link\": \"link 0\",\n      \"state\": 0,\n      \"next_event\": {\n        \"id\": 0,\n        \"time\": 0,\n        \"name\": \"name 0\"\n      },\n      \"similar_groups\": {\n        \"photos\": \"photos 0\",\n        \"id\": 0,\n        \"group_lat\": \"group_lat 0\",\n        \"name\": \"name 0\",\n        \"group_lon\": \"group_lon 0\",\n        \"join_mode\": \"join_mode 0\",\n        \"urlname\": \"urlname 0\",\n        \"who\": \"who 0\"\n      },\n      \"self\": {\n        \"visited\": 0,\n        \"status\": \"status 0\",\n        \"role\": \"role 0\",\n        \"actions\": \"actions 0\"\n      },\n      \"join_mode\": \"join_mode 0\",\n      \"membership_dues\": {\n        \"methods\": \"methods 0\",\n        \"fee\": \"fee 0\",\n        \"required\": \"required 0\",\n        \"fee_desc\": \"fee_desc 0\",\n        \"refund_policy\": \"refund_policy 0\",\n        \"currency\": \"currency 0\"\n      },\n      \"who\": \"who 0\",\n      \"city\": \"city 0\",\n      \"id\": 0,\n      \"timezone\": \"timezone 0\",\n      \"created\": 0,\n      \"list_addr\": \"list_addr 0\",\n      \"primary_topic\": \"primary_topic 0\",\n      \"description\": \"description 0\",\n      \"ga_code\": \"ga_code 0\",\n      \"name\": \"name 0\",\n      \"urlname\": \"urlname 0\",\n      \"other_services\": {\n        \"[service-name]\": {\n          \"identifier\": \"identifier 0\"\n        }\n      },\n      \"lat\": 1.0,\n      \"members\": \"members 0\",\n      \"list_mode\": \"list_mode 0\",\n      \"pending_members\": \"pending_members 0\",\n      \"lon\": 1.0,\n      \"join_info\": {\n        \"photo_req\": \"photo_req 0\",\n        \"questions\": {\n          \"id\": 0,\n          \"question\": \"question 0\"\n        },\n        \"questions_req\": \"questions_req 0\",\n        \"intro_req\": \"intro_req 0\"\n      },\n      \"organizer\": {\n        \"member_state\": \"member_state 0\",\n        \"member_city\": \"member_city 0\",\n        \"name\": \"name 0\",\n        \"member_country\": \"member_country 0\",\n        \"member_id\": 0\n      },\n      \"short_link\": \"short_link 0\",\n      \"country\": \"country 0\",\n      \"photos\": {\n        \"photo_link\": \"photo_link 0\",\n        \"highres_link\": \"highres_link 0\",\n        \"thumb_link\": \"thumb_link 0\",\n        \"photo_id\": 0\n      },\n      \"topics\": {\n        \"id\": 0,\n        \"urlkey\": \"urlkey 0\",\n        \"name\": \"name 0\"\n      },\n      \"category\": {\n        \"id\": 0,\n        \"name\": \"name 0\",\n        \"shortname\": \"shortname 0\"\n      },\n      \"welcome_message\": \"welcome_message 0\",\n      \"group_photo\": {\n        \"photo_link\": \"photo_link 0\",\n        \"highres_link\": \"highres_link 0\",\n        \"thumb_link\": \"thumb_link 0\",\n        \"photo_id\": 0\n      },\n      \"sponsors\": {\n        \"details\": \"details 0\",\n        \"image_url\": \"image_url 0\",\n        \"redeem\": \"redeem 0\",\n        \"name\": \"name 0\",\n        \"perk_url\": \"perk_url 0\",\n        \"url\": \"url 0\",\n        \"info\": \"info 0\"\n      },\n      \"rating\": \"rating 0\",\n      \"simple_html_description\": \"simple_html_description 0\"\n    },\n    {\n      \"visibility\": \"visibility 1\",\n      \"is_simplehtml\": \"is_simplehtml 1\",\n      \"link\": \"link 1\",\n      \"state\": 1,\n      \"next_event\": {\n        \"id\": 1,\n        \"time\": 1,\n        \"name\": \"name 1\"\n      },\n      \"similar_groups\": {\n        \"photos\": \"photos 1\",\n        \"id\": 1,\n        \"group_lat\": \"group_lat 1\",\n        \"name\": \"name 1\",\n        \"group_lon\": \"group_lon 1\",\n        \"join_mode\": \"join_mode 1\",\n        \"urlname\": \"urlname 1\",\n        \"who\": \"who 1\"\n      },\n      \"self\": {\n        \"visited\": 1,\n        \"status\": \"status 1\",\n        \"role\": \"role 1\",\n        \"actions\": \"actions 1\"\n      },\n      \"join_mode\": \"join_mode 1\",\n      \"membership_dues\": {\n        \"methods\": \"methods 1\",\n        \"fee\": \"fee 1\",\n        \"required\": \"required 1\",\n        \"fee_desc\": \"fee_desc 1\",\n        \"refund_policy\": \"refund_policy 1\",\n        \"currency\": \"currency 1\"\n      },\n      \"who\": \"who 1\",\n      \"city\": \"city 1\",\n      \"id\": 1,\n      \"timezone\": \"timezone 1\",\n      \"created\": 1,\n      \"list_addr\": \"list_addr 1\",\n      \"primary_topic\": \"primary_topic 1\",\n      \"description\": \"description 1\",\n      \"ga_code\": \"ga_code 1\",\n      \"name\": \"name 1\",\n      \"urlname\": \"urlname 1\",\n      \"other_services\": {\n        \"[service-name]\": {\n          \"identifier\": \"identifier 1\"\n        }\n      },\n      \"lat\": 1.0,\n      \"members\": \"members 1\",\n      \"list_mode\": \"list_mode 1\",\n      \"pending_members\": \"pending_members 1\",\n      \"lon\": 1.0,\n      \"join_info\": {\n        \"photo_req\": \"photo_req 1\",\n        \"questions\": {\n          \"id\": 1,\n          \"question\": \"question 1\"\n        },\n        \"questions_req\": \"questions_req 1\",\n        \"intro_req\": \"intro_req 1\"\n      },\n      \"organizer\": {\n        \"member_state\": \"member_state 1\",\n        \"member_city\": \"member_city 1\",\n        \"name\": \"name 1\",\n        \"member_country\": \"member_country 1\",\n        \"member_id\": 1\n      },\n      \"short_link\": \"short_link 1\",\n      \"country\": \"country 1\",\n      \"photos\": {\n        \"photo_link\": \"photo_link 1\",\n        \"highres_link\": \"highres_link 1\",\n        \"thumb_link\": \"thumb_link 1\",\n        \"photo_id\": 1\n      },\n      \"topics\": {\n        \"id\": 1,\n        \"urlkey\": \"urlkey 1\",\n        \"name\": \"name 1\"\n      },\n      \"category\": {\n        \"id\": 1,\n        \"name\": \"name 1\",\n        \"shortname\": \"shortname 1\"\n      },\n      \"welcome_message\": \"welcome_message 1\",\n      \"group_photo\": {\n        \"photo_link\": \"photo_link 1\",\n        \"highres_link\": \"highres_link 1\",\n        \"thumb_link\": \"thumb_link 1\",\n        \"photo_id\": 1\n      },\n      \"sponsors\": {\n        \"details\": \"details 1\",\n        \"image_url\": \"image_url 1\",\n        \"redeem\": \"redeem 1\",\n        \"name\": \"name 1\",\n        \"perk_url\": \"perk_url 1\",\n        \"url\": \"url 1\",\n        \"info\": \"info 1\"\n      },\n      \"rating\": \"rating 1\",\n      \"simple_html_description\": \"simple_html_description 1\"\n    }\n  ]\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"category\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"shortname\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"city\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"country\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"created\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"description\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"ga_code\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"group_photo\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"highres_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"photo_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"photo_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"thumb_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"is_simplehtml\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"join_info\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"intro_req\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"photo_req\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"questions\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"id\": {\r\n                    \"required\": false,\r\n                    \"type\": \"integer\"\r\n                  },\r\n                  \"question\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              },\r\n              \"questions_req\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"join_mode\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"lat\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"link\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"list_addr\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"list_mode\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"lon\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"members\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"membership_dues\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"currency\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"fee\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"fee_desc\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"methods\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"refund_policy\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"required\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"next_event\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"time\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              }\r\n            }\r\n          },\r\n          \"organizer\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"member_city\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_country\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"member_state\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"other_services\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"[service-name]\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"identifier\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"pending_members\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"photos\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"highres_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"photo_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"photo_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"thumb_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"primary_topic\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"rating\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"self\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"actions\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"role\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"status\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"visited\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              }\r\n            }\r\n          },\r\n          \"short_link\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"similar_groups\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"group_lat\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"group_lon\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"join_mode\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"photos\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"urlname\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"who\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"simple_html_description\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"sponsors\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"details\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"image_url\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"info\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"perk_url\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"redeem\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"url\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"state\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"timezone\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"topics\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"urlkey\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"urlname\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"visibility\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"welcome_message\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"who\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
                                        }
                                    },
                                    "description": "|||\n|-|\n|category|Category associated with this group|\n|city|City of the group|\n|country|Country of the group|\n|created|Date and time that the group was founded, in milliseconds since the epoch|\n|description|Group description|\n|ga_code|Optional field return the google analytics code for the group. Only members that can edit group settings can see this|\n|group_photo|Main photo associated with the group|\n|id|Group ID|\n|is_simplehtml|Optional field, \"true\" when the group description has been saved in a simplified HTML format, \"false\" otherwise.|\n|join_info|Optional field, lists any questions requested when joining and required fields|\n|join_mode|\"open\", \"closed\", or \"approval\"|\n|lat|Latitude|\n|link|URL of group home|\n|list_addr|Optional field returning list address prefix. List mail will be {list_addr}-list@meetup.com. Announce email will be {list_addr}-announce@meetup.com. You must be a member of the group to see this|\n|list_mode|Defines policy for who can post to the group mailing list. May be one of 'open' meaning any Member can post, 'off' meaning no one can post, 'moderated' meaning messages must be approved, or 'orgs_only' meaning only organizers may post to the list|\n|lon|Longitude|\n|members|Current number of members in the group|\n|membership_dues|Optional fields parameter. Returns the Group's membership dues info|\n|name|Group name|\n|next_event|Optional fields parameter. the next upcoming event, if the group has one|\n|organizer|Group's primary organizer|\n|other_services|Optional fields parameter for linked services|\n|pending_members|Optional fields parameter, visible only to the organizers, that represents the number of pending members for groups that require membership approval|\n|photos|Optional field, a small set of photos from the group|\n|primary_topic|The groups primary topic|\n|rating|0 to 5, average of group reviews|\n|self|Optional field, contains details specific to the authorized user if an active member of this group|\n|short_link|Optional field, a shorted URL for the group|\n|similar_groups|List of similar groups, adjusted for the authorized member|\n|simple_html_description|Description of the group, in simple HTML format. This value is translated to HTML to update the description.|\n|sponsors|Optional field, sponsors of this group|\n|state|State of the group, if in US or Canada|\n|timezone|This represents the universal timezone identifier for the group|\n|topics|Topics related to this group|\n|urlname|Unique group name as it appears in the URL, no slashes|\n|visibility|\"public\", \"public_limited\", or \"members\" only|\n|welcome_message|Optional fields message. Returns the Group's default welcome message if the authenticated member is the organizer of the group|\n|who|what the group calls its members|\n"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0",
                                "api_key"
                            ],
                            "queryParameters": {
                                "category_id": {
                                    "name": "category_id",
                                    "displayName": "category_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Only return groups in the specified category. [one category allowed]",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "state": {
                                    "name": "state",
                                    "displayName": "state",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "{country, city, state} - A valid country code, city and for the US, State. limits the returned groups to those within radius miles\n",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "domain": {
                                    "name": "domain",
                                    "displayName": "domain",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "one or more custom group domains, separated by commas",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "fields": {
                                    "name": "fields",
                                    "displayName": "fields",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "optional result fields, separated by commas.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "group_urlname": {
                                    "name": "group_urlname",
                                    "displayName": "group_urlname",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "one or more separated by commas, includes no slashes",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "organizer_id": {
                                    "name": "organizer_id",
                                    "displayName": "organizer_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "one or more organizer IDs, separated by commas",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "radius": {
                                    "name": "radius",
                                    "displayName": "radius",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Radius, in miles for geographic requests, default 25 -- maximum 100",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "topic": {
                                    "name": "topic",
                                    "displayName": "topic",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Only return groups in the specified topic [one topic allowed]",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "groupnum": {
                                    "name": "groupnum",
                                    "displayName": "groupnum",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "{topic, groupnum} - Return the group with this topic and number\n",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "zip": {
                                    "name": "zip",
                                    "displayName": "zip",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "A valid US zip code, limits the returned groups to those within radius miles.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "order": {
                                    "name": "order",
                                    "displayName": "order",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "|value|description|\n|-|\n|id|group creation time [newest first]|\n|location|group location, country, state [if present], city|\n|members|number of members [largest first]|\n|name|the name of the group|\n",
                                    "enum": [
                                        "id",
                                        "location",
                                        "members",
                                        "name"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Fetch information about Meetup Groups.\n\n#Request Parameters\nAt least one of the required parameter(s) must be supplied with the request. Answers to questions are expected to follow the naming convention: answer_{question_id}=myanswer when joining with the Profile Create method.\n",
                            "method": "get",
                            "is": [
                                "list",
                                "locatable",
                                "groupmember",
                                "locationByCity"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/groups",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "groups"
                    ]
                },
                {
                    "relativeUri": "/open_venues",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "venues",
                                            "example": "{\n  \"results\": [\n    {\n      \"zip\": \"zip 0\",\n      \"phone\": 0,\n      \"lon\": 1.0,\n      \"fax\": \"fax 0\",\n      \"address_3\": \"address_3 0\",\n      \"state\": 0,\n      \"address_1\": \"address_1 0\",\n      \"address_2\": \"address_2 0\",\n      \"venue_url\": \"venue_url 0\",\n      \"city\": \"city 0\",\n      \"country\": \"country 0\",\n      \"id\": 0,\n      \"taglist\": \"taglist 0\",\n      \"distance\": 1.0,\n      \"rating_count\": 0,\n      \"email\": 0,\n      \"name\": \"name 0\",\n      \"rating\": \"rating 0\",\n      \"lat\": 1.0\n    },\n    {\n      \"zip\": \"zip 1\",\n      \"phone\": 1,\n      \"lon\": 1.0,\n      \"fax\": \"fax 1\",\n      \"address_3\": \"address_3 1\",\n      \"state\": 1,\n      \"address_1\": \"address_1 1\",\n      \"address_2\": \"address_2 1\",\n      \"venue_url\": \"venue_url 1\",\n      \"city\": \"city 1\",\n      \"country\": \"country 1\",\n      \"id\": 1,\n      \"taglist\": \"taglist 1\",\n      \"distance\": 1.0,\n      \"rating_count\": 1,\n      \"email\": 1,\n      \"name\": \"name 1\",\n      \"rating\": \"rating 1\",\n      \"lat\": 1.0\n    }\n  ]\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"address_1\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"address_2\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"address_3\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"city\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"state\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"country\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"distance\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"email\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"fax\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"lat\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"lon\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"phone\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"rating\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"rating_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"taglist\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"venue_url\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"zip\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
                                        }
                                    },
                                    "description": "|||\n|-|\n|address_1|line 1 of venue address|\n|address_2|line 2 of venue address|\n|address_3|line 3 of venue address|\n|city, state, country|City, County and if in US state of venue|\n|distance|Distance in miles from the search location, if one was specified|\n|email|email address of venue|\n|fax|fax number of venue|\n|id|ID of the venue|\n|lat, lon|coordinates of venue|\n|name|Name of the venue|\n|phone|phone number of venue|\n|rating|The average member rating|\n|rating_count|The number of member ratings|\n|taglist|Optional array of associated tagnames provided when a value of \"taglist\" is supplied with the \"fields\" request parameter|\n|venue_url|URL of the venues's page on meetup.com|\n|zip|if US or Canada|\n"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0",
                                "api_key"
                            ],
                            "queryParameters": {
                                "fields": {
                                    "name": "fields",
                                    "displayName": "fields",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Request that additional fields (separated by commas) be included in the output",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "group_urlname": {
                                    "name": "group_urlname",
                                    "displayName": "group_urlname",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Returns venues with location relative to the group associated with this urlname",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "radius": {
                                    "name": "radius",
                                    "displayName": "radius",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Radius, in miles for geographic requests, default 25.0 -- maximum 100.0",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "state": {
                                    "name": "state",
                                    "displayName": "state",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "For the US, a valid 2 character state code",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "text": {
                                    "name": "text",
                                    "displayName": "text",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Venues that contain the given term or terms somewhere in their content. Separate terms with \" AND \" for venues that have combined terms. Append a trailing * to treat this as a prefix search",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "zip": {
                                    "name": "zip",
                                    "displayName": "zip",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "A valid US zip code, limits the returned venues to those within radius miles",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "order": {
                                    "name": "order",
                                    "displayName": "order",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "|value|description|\n|-|\n|distance|(default order) ordering is approximate and will not exactly match the values in the \"distance\" field.|\n|rating|average member rating|\n|rating_count|number of member ratings.|\n",
                                    "enum": [
                                        "distance",
                                        "rating",
                                        "rating_count"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Searches for public venues within a given geo space. To search for specific venues that your group has used, use the Venues method\n\n#Request Parameters\nAt least one of the required parameter(s) must be supplied with the request. If you are not able to provide a relative location you may supply a group_urlname which this method will use to infer location from. You can perform prefix searching by appending a * character to your query\n",
                            "method": "get",
                            "is": [
                                "list",
                                "locatable",
                                "locationByCity"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/open_venues",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "open_venues"
                    ]
                },
                {
                    "relativeUri": "/events",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "events",
                                            "example": "{\n  \"results\": [\n    {\n      \"visibility\": \"visibility 0\",\n      \"is_simplehtml\": \"is_simplehtml 0\",\n      \"self\": {\n        \"checked_in\": \"checked_in 0\",\n        \"watching\": \"watching 0\",\n        \"rsvp\": {\n          \"response\": \"response 0\",\n          \"guests\": \"guests 0\",\n          \"answers\": \"answers 0\"\n        },\n        \"role\": \"role 0\",\n        \"rated\": 0,\n        \"actions\": \"actions 0\",\n        \"pay_status\": \"pay_status 0\"\n      },\n      \"featured\": \"featured 0\",\n      \"rsvpable\": \"rsvpable 0\",\n      \"publish_status\": \"publish_status 0\",\n      \"email_reminders\": \"email_reminders 0\",\n      \"rsvp_rules\": {\n        \"open_time\": \"open_time 0\",\n        \"waitlisting\": \"waitlisting 0\",\n        \"close_time\": \"close_time 0\",\n        \"guest_limit\": \"guest_limit 0\",\n        \"closed\": \"closed 0\",\n        \"refund_policy\": {\n          \"days\": \"days 0\",\n          \"notes\": 0,\n          \"policies\": \"policies 0\"\n        }\n      },\n      \"id\": 0,\n      \"timezone\": \"timezone 0\",\n      \"time\": 0,\n      \"distance\": 1.0,\n      \"venue_visibility\": \"venue_visibility 0\",\n      \"yes_rsvp_count\": 0,\n      \"updated\": 0,\n      \"created\": 0,\n      \"description\": \"description 0\",\n      \"survey_questions\": {\n        \"id\": 0,\n        \"question\": \"question 0\",\n        \"required\": \"required 0\"\n      },\n      \"headcount\": \"headcount 0\",\n      \"name\": \"name 0\",\n      \"photo_album_id\": 0,\n      \"rsvp_alerts\": \"rsvp_alerts 0\",\n      \"photo_count\": 0,\n      \"comment_count\": 0,\n      \"rsvp_limit\": \"rsvp_limit 0\",\n      \"trending_rank\": \"trending_rank 0\",\n      \"status\": \"status 0\",\n      \"maybe_rsvp_count\": 0,\n      \"photo_url\": \"photo_url 0\",\n      \"venue\": {\n        \"id\": 0,\n        \"zip\": \"zip 0\",\n        \"phone\": 0,\n        \"lon\": 1.0,\n        \"repinned\": \"repinned 0\",\n        \"address_3\": \"address_3 0\",\n        \"name\": \"name 0\",\n        \"state\": 0,\n        \"address_1\": \"address_1 0\",\n        \"address_2\": \"address_2 0\",\n        \"lat\": 1.0,\n        \"country\": \"country 0\",\n        \"city\": \"city 0\"\n      },\n      \"short_link\": \"short_link 0\",\n      \"event_hosts\": {\n        \"member_name\": \"member_name 0\",\n        \"member_id\": 0\n      },\n      \"utc_offset\": 0,\n      \"fee\": {\n        \"amount\": \"amount 0\",\n        \"description\": \"description 0\",\n        \"label\": 0,\n        \"required\": \"required 0\",\n        \"accepts\": \"accepts 0\",\n        \"currency\": \"currency 0\"\n      },\n      \"duration\": 0,\n      \"announced\": \"announced 0\",\n      \"event_url\": \"event_url 0\",\n      \"how_to_find_us\": \"how_to_find_us 0\",\n      \"rating\": {\n        \"count\": 0,\n        \"average\": \"average 0\"\n      },\n      \"group\": {\n        \"id\": 0,\n        \"topics\": {\n          \"id\": 0,\n          \"urlkey\": \"urlkey 0\",\n          \"name\": \"name 0\"\n        },\n        \"category\": {\n          \"id\": 0,\n          \"name\": \"name 0\",\n          \"shortname\": \"shortname 0\"\n        },\n        \"group_photo\": {\n          \"photo_link\": \"photo_link 0\",\n          \"highres_link\": \"highres_link 0\",\n          \"thumb_link\": \"thumb_link 0\",\n          \"photo_id\": 0\n        },\n        \"group_lat\": \"group_lat 0\",\n        \"name\": \"name 0\",\n        \"group_lon\": \"group_lon 0\",\n        \"membership_dues\": {\n          \"methods\": \"methods 0\",\n          \"fee\": \"fee 0\",\n          \"required\": \"required 0\",\n          \"fee_desc\": \"fee_desc 0\",\n          \"refund_policy\": \"refund_policy 0\",\n          \"currency\": \"currency 0\"\n        },\n        \"join_mode\": \"join_mode 0\",\n        \"urlname\": \"urlname 0\",\n        \"who\": \"who 0\"\n      },\n      \"simple_html_description\": \"simple_html_description 0\",\n      \"why\": \"why 0\"\n    },\n    {\n      \"visibility\": \"visibility 1\",\n      \"is_simplehtml\": \"is_simplehtml 1\",\n      \"self\": {\n        \"checked_in\": \"checked_in 1\",\n        \"watching\": \"watching 1\",\n        \"rsvp\": {\n          \"response\": \"response 1\",\n          \"guests\": \"guests 1\",\n          \"answers\": \"answers 1\"\n        },\n        \"role\": \"role 1\",\n        \"rated\": 1,\n        \"actions\": \"actions 1\",\n        \"pay_status\": \"pay_status 1\"\n      },\n      \"featured\": \"featured 1\",\n      \"rsvpable\": \"rsvpable 1\",\n      \"publish_status\": \"publish_status 1\",\n      \"email_reminders\": \"email_reminders 1\",\n      \"rsvp_rules\": {\n        \"open_time\": \"open_time 1\",\n        \"waitlisting\": \"waitlisting 1\",\n        \"close_time\": \"close_time 1\",\n        \"guest_limit\": \"guest_limit 1\",\n        \"closed\": \"closed 1\",\n        \"refund_policy\": {\n          \"days\": \"days 1\",\n          \"notes\": 1,\n          \"policies\": \"policies 1\"\n        }\n      },\n      \"id\": 1,\n      \"timezone\": \"timezone 1\",\n      \"time\": 1,\n      \"distance\": 1.0,\n      \"venue_visibility\": \"venue_visibility 1\",\n      \"yes_rsvp_count\": 1,\n      \"updated\": 1,\n      \"created\": 1,\n      \"description\": \"description 1\",\n      \"survey_questions\": {\n        \"id\": 1,\n        \"question\": \"question 1\",\n        \"required\": \"required 1\"\n      },\n      \"headcount\": \"headcount 1\",\n      \"name\": \"name 1\",\n      \"photo_album_id\": 1,\n      \"rsvp_alerts\": \"rsvp_alerts 1\",\n      \"photo_count\": 1,\n      \"comment_count\": 1,\n      \"rsvp_limit\": \"rsvp_limit 1\",\n      \"trending_rank\": \"trending_rank 1\",\n      \"status\": \"status 1\",\n      \"maybe_rsvp_count\": 1,\n      \"photo_url\": \"photo_url 1\",\n      \"venue\": {\n        \"id\": 1,\n        \"zip\": \"zip 1\",\n        \"phone\": 1,\n        \"lon\": 1.0,\n        \"repinned\": \"repinned 1\",\n        \"address_3\": \"address_3 1\",\n        \"name\": \"name 1\",\n        \"state\": 1,\n        \"address_1\": \"address_1 1\",\n        \"address_2\": \"address_2 1\",\n        \"lat\": 1.0,\n        \"country\": \"country 1\",\n        \"city\": \"city 1\"\n      },\n      \"short_link\": \"short_link 1\",\n      \"event_hosts\": {\n        \"member_name\": \"member_name 1\",\n        \"member_id\": 1\n      },\n      \"utc_offset\": 1,\n      \"fee\": {\n        \"amount\": \"amount 1\",\n        \"description\": \"description 1\",\n        \"label\": 1,\n        \"required\": \"required 1\",\n        \"accepts\": \"accepts 1\",\n        \"currency\": \"currency 1\"\n      },\n      \"duration\": 1,\n      \"announced\": \"announced 1\",\n      \"event_url\": \"event_url 1\",\n      \"how_to_find_us\": \"how_to_find_us 1\",\n      \"rating\": {\n        \"count\": 1,\n        \"average\": \"average 1\"\n      },\n      \"group\": {\n        \"id\": 1,\n        \"topics\": {\n          \"id\": 1,\n          \"urlkey\": \"urlkey 1\",\n          \"name\": \"name 1\"\n        },\n        \"category\": {\n          \"id\": 1,\n          \"name\": \"name 1\",\n          \"shortname\": \"shortname 1\"\n        },\n        \"group_photo\": {\n          \"photo_link\": \"photo_link 1\",\n          \"highres_link\": \"highres_link 1\",\n          \"thumb_link\": \"thumb_link 1\",\n          \"photo_id\": 1\n        },\n        \"group_lat\": \"group_lat 1\",\n        \"name\": \"name 1\",\n        \"group_lon\": \"group_lon 1\",\n        \"membership_dues\": {\n          \"methods\": \"methods 1\",\n          \"fee\": \"fee 1\",\n          \"required\": \"required 1\",\n          \"fee_desc\": \"fee_desc 1\",\n          \"refund_policy\": \"refund_policy 1\",\n          \"currency\": \"currency 1\"\n        },\n        \"join_mode\": \"join_mode 1\",\n        \"urlname\": \"urlname 1\",\n        \"who\": \"who 1\"\n      },\n      \"simple_html_description\": \"simple_html_description 1\",\n      \"why\": \"why 1\"\n    }\n  ]\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"announced\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"comment_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"created\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"description\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"distance\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"duration\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"email_reminders\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"event_hosts\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"member_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"member_name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"event_url\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"featured\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"fee\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"accepts\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"amount\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"currency\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"description\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"label\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"required\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"group\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"category\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"id\": {\r\n                    \"required\": false,\r\n                    \"type\": \"integer\"\r\n                  },\r\n                  \"name\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"shortname\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              },\r\n              \"group_lat\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"group_lon\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"group_photo\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"highres_link\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"photo_id\": {\r\n                    \"required\": false,\r\n                    \"type\": \"integer\"\r\n                  },\r\n                  \"photo_link\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"thumb_link\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              },\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"join_mode\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"membership_dues\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"currency\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"fee\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"fee_desc\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"methods\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"refund_policy\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"required\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"topics\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"id\": {\r\n                    \"required\": false,\r\n                    \"type\": \"integer\"\r\n                  },\r\n                  \"name\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"urlkey\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              },\r\n              \"urlname\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"who\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"headcount\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"how_to_find_us\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"is_simplehtml\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"maybe_rsvp_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"photo_album_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"photo_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"photo_url\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"publish_status\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"rating\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"average\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"count\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              }\r\n            }\r\n          },\r\n          \"rsvp_alerts\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"rsvp_limit\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"rsvp_rules\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"close_time\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"closed\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"guest_limit\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"open_time\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"refund_policy\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"days\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"notes\": {\r\n                    \"required\": false,\r\n                    \"type\": \"integer\"\r\n                  },\r\n                  \"policies\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              },\r\n              \"waitlisting\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"rsvpable\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"self\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"actions\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"checked_in\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"pay_status\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"rated\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"role\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"rsvp\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"answers\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"guests\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"response\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              },\r\n              \"watching\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"short_link\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"simple_html_description\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"status\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"survey_questions\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"question\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"required\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"time\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"timezone\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"trending_rank\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"updated\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"utc_offset\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"venue\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"address_1\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"address_2\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"address_3\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"city\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"state\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"country\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"lat\": {\r\n                \"required\": false,\r\n                \"type\": \"number\"\r\n              },\r\n              \"lon\": {\r\n                \"required\": false,\r\n                \"type\": \"number\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"phone\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"repinned\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"zip\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"venue_visibility\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"visibility\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"why\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"yes_rsvp_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
                                        }
                                    },
                                    "description": "|||\n|-|\n|announced|Organizers and hosts can see if the event was announced|\n|comment_count|Optional field, number of comments posted to the event|\n|created|UTC creation time of the event, in milliseconds since the epoch|\n|description|Description of the event|\n|distance|Distance in miles from the search location, if one was specified|\n|duration|Event duration in milliseconds, if an end time is specified by the organizer. When not present, a default of 3 hours may be assumed by applications.|\n|email_reminders|Optional fields parameter limited to organizers and event hosts, if false, event reminders are disabled|\n|event_hosts|List of members hosting the event, only returned if requested in the fields parameter.|\n|event_url|URL of the event's page on meetup.com|\n|featured|Optional fields parameter which returns \"true\" if the event is featured and \"false\" otherwise|\n|fee|Fee info returned when payment is defined|\n|group|Group that is hosting the event|\n|headcount|The number of members in attendance according to the attendance taker. This may be 0 if attendance has not yet been taken|\n|how_to_find_us|The information provided by the event host for \"How will members find you there?\"|\n|id|The event id. May be numeric or alphanumeric, always served as a string|\n|is_simplehtml|Optional field, \"true\" when the event has been saved in a simplified HTML format, \"false\" otherwise.|\n|maybe_rsvp_count|Number of maybe RSVPs including guests|\n|name|The name of the event|\n|photo_album_id|optional fields parameter which returns the ID of the photo album for this event, if one exists|\n|photo_count|Optional field, number of photos posted to the event|\n|photo_url|URL of the event photo, if one exists|\n|publish_status|\"published\" or \"draft\" only visible to organizers|\n|rating|Only past events have this field, an aggregate of anonymous ratings|\n|rsvp_alerts|Optional fields parameter limited to organizers and event hosts, if false, member RSVP alerts are disabled|\n|rsvp_limit|The number of \"yes\" RSVPs an event can have before members will be added to the waiting list|\n|rsvp_rules|Conditions set by the organizer, only returned if requested in the fields parameter.|\n|rsvpable|Indicates if the currently authenticated member can RSVP or not, only returned if requested in the fields parameter|\n|self|Optional field with details particular to the authorized user, only present if requested and user is a member of the hosting group|\n|short_link|Optional field. If hosting group is private, this will return the group's short_link|\n|simple_html_description|Optional field, description of the event in simple HTML format.|\n|status|\"cancelled\", \"upcoming\", \"past\", \"proposed\", \"suggested\" or \"draft\"|\n|survey_questions|Optional \"fields\" response property for event with surveys|\n|time|UTC start time of the event, in milliseconds since the epoch|\n|timezone|Returned when \"timezone\" is provided in fields parameter. This represents the universal timezone identifier for the host group|\n|trending_rank|Indicates the trending rank within the current result set. The best rank is zero, increasing rank values are less \"trending\". This value is only returned if requested in the fields parameter|\n|updated|UTC last modified time of the event, in milliseconds since the epoch|\n|utc_offset|The local offset from UTC time, in milliseconds|\n|venue|Venue, if selected and not hidden|\n|venue_visibility|Set to \"members\" or \"public\". The \"venue\" element will not be present if the visibility is \"members\" and the current authenticated user is not a member of the group hosting the event. This value is only returned if requested in the fields parameter|\n|visibility|Event visibility: \"public\", \"members\" or \"public_limited\". Events in private groups that do not expose limited information are visible only to that group's members and should not be made public.|\n|why|We should do this because...|\n|yes_rsvp_count|Number of yes RSVPs including guests|\n"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0",
                                "api_key"
                            ],
                            "queryParameters": {
                                "event_id": {
                                    "name": "event_id",
                                    "displayName": "event_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Multiple ids may be separated with commas",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "fields": {
                                    "name": "fields",
                                    "displayName": "fields",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Request that additional fields (separated by commas) be included in the output",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "group_domain": {
                                    "name": "group_domain",
                                    "displayName": "group_domain",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Group custom domain",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "group_urlname": {
                                    "name": "group_urlname",
                                    "displayName": "group_urlname",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Path to group from meetup.com, no slashes",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "limited_events": {
                                    "name": "limited_events",
                                    "displayName": "limited_events",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Include limited event information for private groups that wish to expose only a small amount of information about their events. This includes just: id, name, utc_offset, time, duration, yes_rsvp_count, waitlist_count, group, visibility. Value must be true or false.\n",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "rsvp": {
                                    "name": "rsvp",
                                    "displayName": "rsvp",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Filters events by the currently authenticated member's RSVP status. May be a comma delimited list of \"yes\", \"no\", \"waitlist\", \"maybe\" or \"none\"\n",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "status": {
                                    "name": "status",
                                    "displayName": "status",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Status may be \"upcoming\", \"past\", \"proposed\", \"suggested\", \"cancelled\", \"draft\" or multiple separated by a comma. The default is \"upcoming\", which includes Meetups that are happening now according to their **duration**. Meetups that are \"proposed\" or \"suggested\" do not have a date assigned; the former are listed on the site as official while the latter appear as in the making. Drafts are only visible to organizers of groups hosting the events.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "text_format": {
                                    "name": "text_format",
                                    "displayName": "text_format",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Format of the description text, \"html\" or \"plain\". Defaults to \"html\"",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "time": {
                                    "name": "time",
                                    "displayName": "time",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Return events scheduled within the given time range, defined by two times separated with a single comma. Each end of the range may be specified with relative dates, such as \"1m\" for one month from now, or by absolute time in milliseconds since the epoch. If an endpoint is omitted, the range is unbounded on that end. The default value is unbounded on both ends (though restricted to the search window described above). Note: to retrieve past events you must also update status value\n",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "venue_id": {
                                    "name": "venue_id",
                                    "displayName": "venue_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Multiple ids may be separated with commas",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "order": {
                                    "name": "order",
                                    "displayName": "order",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "|value|description|\n|-|\n|time|(default order) ascending|\n",
                                    "enum": [
                                        "time"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Access Meetup events using a group, member, or event id. Events in private groups are available only to authenticated members of those groups. To search events by topic or location, see Open Events.\n\n#Request Parameters\nAt least one of the required parameter(s) must be supplied with the request. Some groups, while remaining private, still wish to show some information about their events. You can include these events in results using the limited_events request parameter.\n",
                            "method": "get",
                            "is": [
                                "list",
                                "groupmember"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/events",
                    "description": "Events",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "events"
                    ]
                },
                {
                    "relativeUri": "/photo_albums",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "photoAlbums",
                                            "example": "{\n  \"results\": [\n    {\n      \"title\": 0,\n      \"album_photo\": {\n        \"photo_link\": \"photo_link 0\",\n        \"highres_link\": \"highres_link 0\",\n        \"thumb_link\": \"thumb_link 0\",\n        \"photo_id\": 0\n      },\n      \"updated\": 0,\n      \"created\": 0,\n      \"group_id\": 0,\n      \"photo_album_id\": 0,\n      \"ordering\": 0,\n      \"event_id\": 0,\n      \"photo_count\": 0\n    },\n    {\n      \"title\": 1,\n      \"album_photo\": {\n        \"photo_link\": \"photo_link 1\",\n        \"highres_link\": \"highres_link 1\",\n        \"thumb_link\": \"thumb_link 1\",\n        \"photo_id\": 1\n      },\n      \"updated\": 1,\n      \"created\": 1,\n      \"group_id\": 1,\n      \"photo_album_id\": 1,\n      \"ordering\": 1,\n      \"event_id\": 1,\n      \"photo_count\": 1\n    }\n  ]\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"album_photo\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"highres_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"photo_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"photo_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"thumb_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"created\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"event_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"group_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"ordering\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"photo_album_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"photo_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"title\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"updated\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
                                        }
                                    },
                                    "description": "|||\n|-|\n|album_photo|Selected photo from the album to display in listings|\n|created|Created time in milliseconds since the epoch|\n|event_id|Event ID if this is an event photo album|\n|group_id|ID of the group that created the album|\n|ordering|If a custom ordering is defined, a list of photo IDs|\n|photo_album_id|Unique identifier of the album|\n|photo_count|Number of photos in the album|\n|title|Photo album title|\n|updated|Last updated time in milliseconds since the epoch|\n"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0",
                                "api_key"
                            ],
                            "queryParameters": {
                                "event_id": {
                                    "name": "event_id",
                                    "displayName": "event_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Return photo albums for these event ids, separated by commas",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "group_id": {
                                    "name": "group_id",
                                    "displayName": "group_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Return albums in groups with these ID, separated by commas",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "photo_album_id": {
                                    "name": "photo_album_id",
                                    "displayName": "photo_album_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Return albums with these IDs, separated by commas",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "order": {
                                    "name": "order",
                                    "displayName": "order",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "|value|description|\n|-|\n|time|creation date and time|\n|title|title of the album|\n|updated|album updated field|\n",
                                    "enum": [
                                        "time",
                                        "title",
                                        "updated"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "This method returns photo albums associated with Meetup groups. To create albums, see the corresponding write method.\n \n #Request Parameters\n At least one of the required parameter(s) must be supplied with the request.\n",
                            "method": "get",
                            "is": [
                                "list"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/photo_albums",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "photo_albums"
                    ]
                }
            ],
            "displayName": "/2",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "2"
            ]
        },
        {
            "relativeUri": "/ew",
            "securedBy": [
                "oauth_2_0"
            ],
            "resources": [
                {
                    "relativeUri": "/follows",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "everywhereFollows",
                                            "example": "{\n  \"results\": [\n    {\n      \"member\": {\n        \"member_state\": \"member_state 0\",\n        \"member_city\": \"member_city 0\",\n        \"name\": \"name 0\",\n        \"member_country\": \"member_country 0\",\n        \"member_id\": 0\n      },\n      \"id\": 0,\n      \"udf_{varname}\": \"udf_{varname} 0\",\n      \"status\": \"status 0\",\n      \"created\": 0,\n      \"container\": {\n        \"id\": 0,\n        \"name\": \"name 0\",\n        \"urlname\": \"urlname 0\"\n      },\n      \"community\": {\n        \"id\": 0,\n        \"name\": \"name 0\",\n        \"urlname\": \"urlname 0\"\n      }\n    },\n    {\n      \"member\": {\n        \"member_state\": \"member_state 1\",\n        \"member_city\": \"member_city 1\",\n        \"name\": \"name 1\",\n        \"member_country\": \"member_country 1\",\n        \"member_id\": 1\n      },\n      \"id\": 1,\n      \"udf_{varname}\": \"udf_{varname} 1\",\n      \"status\": \"status 1\",\n      \"created\": 1,\n      \"container\": {\n        \"id\": 1,\n        \"name\": \"name 1\",\n        \"urlname\": \"urlname 1\"\n      },\n      \"community\": {\n        \"id\": 1,\n        \"name\": \"name 1\",\n        \"urlname\": \"urlname 1\"\n      }\n    }\n  ]\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"community\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"urlname\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"container\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"urlname\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"created\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"member\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"member_city\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_country\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"member_state\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"status\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"udf_{varname}\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
                                        }
                                    },
                                    "description": "Each item in the results list for a JSON or XML request will contain the fields listed in Community Follow Get"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0",
                                "api_key"
                            ],
                            "queryParameters": {
                                "community_id": {
                                    "name": "community_id",
                                    "displayName": "community_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "One or more IDs, separated by commas",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "container_id": {
                                    "name": "container_id",
                                    "displayName": "container_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "One or more IDs, separated by commas",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "urlname": {
                                    "name": "urlname",
                                    "displayName": "urlname",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Up to five URL paths, separated by commas",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Community Follows Query\n\n#Request Parameters\nNo parameters are required. If no parameters are provided, then all communities followed by the authenticated user will be included in the response.\n",
                            "method": "get",
                            "is": [
                                "hasUserDefinedFields"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/follows",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "follows"
                    ]
                },
                {
                    "relativeUri": "/seeds",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "everywhereEventSeeds",
                                            "example": "{\n  \"results\": [\n    {\n      \"local_time\": 0,\n      \"id\": 0,\n      \"short_description\": \"short_description 0\",\n      \"updated\": 0,\n      \"udf_{varname}\": \"udf_{varname} 0\",\n      \"status\": \"status 0\",\n      \"created\": 0,\n      \"description\": \"description 0\",\n      \"container\": {\n        \"id\": 0,\n        \"name\": \"name 0\",\n        \"urlname\": \"urlname 0\"\n      }\n    },\n    {\n      \"local_time\": 1,\n      \"id\": 1,\n      \"short_description\": \"short_description 1\",\n      \"updated\": 1,\n      \"udf_{varname}\": \"udf_{varname} 1\",\n      \"status\": \"status 1\",\n      \"created\": 1,\n      \"description\": \"description 1\",\n      \"container\": {\n        \"id\": 1,\n        \"name\": \"name 1\",\n        \"urlname\": \"urlname 1\"\n      }\n    }\n  ]\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"container\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"urlname\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"created\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"description\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"local_time\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"short_description\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"status\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"udf_{varname}\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"updated\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
                                        }
                                    },
                                    "description": "Each item in the results list for a JSON or XML request will contain the fields listed in Event Seed Get."
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0",
                                "api_key"
                            ],
                            "queryParameters": {
                                "community_urlname": {
                                    "name": "community_urlname",
                                    "displayName": "community_urlname",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Up to fine urlpaths, separated by commas.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "container_id": {
                                    "name": "container_id",
                                    "displayName": "container_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "One or more IDs, separated by commas",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "seed_id": {
                                    "name": "seed_id",
                                    "displayName": "seed_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "ID of an event",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "status": {
                                    "name": "status",
                                    "displayName": "status",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Return event seeds matching one of the given status values, separated by commas. Possible statuses are \"pending\", \"active\", or \"archived\". The default status parameter is \"active,archived\".",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "urlname": {
                                    "name": "urlname",
                                    "displayName": "urlname",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Up to five URL paths, separated by commas",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "order": {
                                    "name": "order",
                                    "displayName": "order",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "|value|description|\n|-|\n|short_description|Event seed short description|\n",
                                    "enum": [
                                        "short_description"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Event Seeds Query\nFor container owners. API method for accessing events seeded to communities.\n\n#Request Parameters\nAt least one of the required parameter(s) must be supplied with the request.\n",
                            "method": "get",
                            "is": [
                                "list",
                                "hasUserDefinedFields"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/seeds",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "seeds"
                    ]
                },
                {
                    "relativeUri": "/event",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "201": {
                                    "code": "201",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "everywhereEvent",
                                            "example": "{\n  \"zip\": \"zip\",\n  \"lon\": 1.0,\n  \"venue_name\": \"venue_name\",\n  \"status\": \"status\",\n  \"link\": \"link\",\n  \"state\": 100,\n  \"community\": {\n    \"id\": 100,\n    \"name\": \"name\",\n    \"urlname\": \"urlname\"\n  },\n  \"address1\": \"address1\",\n  \"city\": \"city\",\n  \"country\": \"country\",\n  \"helpers\": {\n    \"member_state\": \"member_state\",\n    \"member_city\": \"member_city\",\n    \"name\": \"name\",\n    \"member_country\": \"member_country\",\n    \"member_id\": 100\n  },\n  \"id\": 100,\n  \"time\": 100,\n  \"short_description\": \"short_description\",\n  \"updated\": 100,\n  \"udf_{varname}\": \"udf_{varname}\",\n  \"created\": 100,\n  \"container\": {\n    \"id\": 100,\n    \"name\": \"name\",\n    \"urlname\": \"urlname\"\n  },\n  \"description\": \"description\",\n  \"rsvp_count\": 100,\n  \"meetup_url\": \"meetup_url\",\n  \"lat\": 1.0\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"address1\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"city\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"community\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"urlname\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"container\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"urlname\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"country\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"created\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"description\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"helpers\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"member_city\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"member_country\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"member_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"member_state\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"lat\": {\r\n      \"required\": false,\r\n      \"type\": \"number\"\r\n    },\r\n    \"lon\": {\r\n      \"required\": false,\r\n      \"type\": \"number\"\r\n    },\r\n    \"link\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"meetup_url\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"rsvp_count\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"short_description\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"state\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"status\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"time\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"udf_{varname}\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"updated\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"venue_name\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"zip\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    }\r\n  }\r\n}\r\n"
                                        }
                                    },
                                    "description": "If successful, this method returns a 201 Created response with a Location header containing the Event Get method for this event. The content body is the same as that returned by Event Get."
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0"
                            ],
                            "queryParameters": {
                                "urlname": {
                                    "name": "urlname",
                                    "displayName": "urlname",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "{urlname, community_urlname} Together, may serve as the required identifier of the event community\n",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Event Create\n\n#Request Parameters\nAn identifier for the community is required as well at least one location parameter set. Other location details may be filled out automatically. This method requires an HTTP POST. If you are not the founder of this container you will automatically be rsvp'd for the event\n",
                            "method": "post",
                            "is": [
                                "locatable",
                                "locationByCity",
                                "hasCommunity",
                                "hasEverywhereEventProperties",
                                "hasUserDefinedFields"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/{id}",
                            "type": "meetupResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "uriParameters": {
                                "id": {
                                    "name": "id",
                                    "displayName": "id",
                                    "type": "string",
                                    "required": true,
                                    "repeat": false,
                                    "description": ":id in the path should be the id of an event",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "everywhereEvent",
                                                    "example": "{\n  \"zip\": \"zip\",\n  \"lon\": 1.0,\n  \"venue_name\": \"venue_name\",\n  \"status\": \"status\",\n  \"link\": \"link\",\n  \"state\": 100,\n  \"community\": {\n    \"id\": 100,\n    \"name\": \"name\",\n    \"urlname\": \"urlname\"\n  },\n  \"address1\": \"address1\",\n  \"city\": \"city\",\n  \"country\": \"country\",\n  \"helpers\": {\n    \"member_state\": \"member_state\",\n    \"member_city\": \"member_city\",\n    \"name\": \"name\",\n    \"member_country\": \"member_country\",\n    \"member_id\": 100\n  },\n  \"id\": 100,\n  \"time\": 100,\n  \"short_description\": \"short_description\",\n  \"updated\": 100,\n  \"udf_{varname}\": \"udf_{varname}\",\n  \"created\": 100,\n  \"container\": {\n    \"id\": 100,\n    \"name\": \"name\",\n    \"urlname\": \"urlname\"\n  },\n  \"description\": \"description\",\n  \"rsvp_count\": 100,\n  \"meetup_url\": \"meetup_url\",\n  \"lat\": 1.0\n}\n",
                                                    "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"address1\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"city\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"community\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"urlname\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"container\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"urlname\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"country\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"created\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"description\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"helpers\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"member_city\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"member_country\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"member_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"member_state\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"lat\": {\r\n      \"required\": false,\r\n      \"type\": \"number\"\r\n    },\r\n    \"lon\": {\r\n      \"required\": false,\r\n      \"type\": \"number\"\r\n    },\r\n    \"link\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"meetup_url\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"rsvp_count\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"short_description\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"state\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"status\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"time\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"udf_{varname}\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"updated\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"venue_name\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"zip\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    }\r\n  }\r\n}\r\n"
                                                }
                                            },
                                            "description": "If successful, this method returns a 200 OK response. The content body is the same as that returned by Event Get."
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0",
                                        "oauth_1_0"
                                    ],
                                    "queryParameters": {
                                        "state": {
                                            "name": "state",
                                            "displayName": "state",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "location information",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Event Edit\n\n#Request Parameters\nAll parameters are optional, will update the event when provided. This method requires an HTTP POST.\n",
                                    "method": "post",
                                    "is": [
                                        "locatable",
                                        "locationByCity",
                                        "hasEverywhereEventProperties",
                                        "hasUserDefinedFields"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "everywhereEvent",
                                                    "example": "{\n  \"zip\": \"zip\",\n  \"lon\": 1.0,\n  \"venue_name\": \"venue_name\",\n  \"status\": \"status\",\n  \"link\": \"link\",\n  \"state\": 100,\n  \"community\": {\n    \"id\": 100,\n    \"name\": \"name\",\n    \"urlname\": \"urlname\"\n  },\n  \"address1\": \"address1\",\n  \"city\": \"city\",\n  \"country\": \"country\",\n  \"helpers\": {\n    \"member_state\": \"member_state\",\n    \"member_city\": \"member_city\",\n    \"name\": \"name\",\n    \"member_country\": \"member_country\",\n    \"member_id\": 100\n  },\n  \"id\": 100,\n  \"time\": 100,\n  \"short_description\": \"short_description\",\n  \"updated\": 100,\n  \"udf_{varname}\": \"udf_{varname}\",\n  \"created\": 100,\n  \"container\": {\n    \"id\": 100,\n    \"name\": \"name\",\n    \"urlname\": \"urlname\"\n  },\n  \"description\": \"description\",\n  \"rsvp_count\": 100,\n  \"meetup_url\": \"meetup_url\",\n  \"lat\": 1.0\n}\n",
                                                    "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"address1\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"city\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"community\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"urlname\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"container\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"urlname\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"country\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"created\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"description\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"helpers\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"member_city\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"member_country\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"member_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"member_state\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"lat\": {\r\n      \"required\": false,\r\n      \"type\": \"number\"\r\n    },\r\n    \"lon\": {\r\n      \"required\": false,\r\n      \"type\": \"number\"\r\n    },\r\n    \"link\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"meetup_url\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"rsvp_count\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"short_description\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"state\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"status\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"time\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"udf_{varname}\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"updated\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"venue_name\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"zip\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    }\r\n  }\r\n}\r\n"
                                                }
                                            },
                                            "description": "|||\n|-|\n|address1|The street address, if assigned|\n|city|Event city|\n|community|Community for this event|\n|container|Container for this event|\n|country|Event country|\n|created|Event created time, in milliseconds since the epoch|\n|description|Event description.|\n|helpers|Helpers who planned this event, if any|\n|id|The ID of the event|\n|lat, lon|Latitude and longitude coordinates of the event|\n|link|Link associated with the event. Displayed on the event page, and users are prompted to follow this link after indicating interest.|\n|meetup_url|User-facing URL for this event on Meetup|\n|rsvp_count|Current number of rsvps, included only if requested with the fields parameter.|\n|short_description|Event short description.|\n|state|State or province|\n|status|\"past\", \"pending\" (no date), or \"upcoming\"|\n|time|Start time of the event in milliseconds since the epoch, if set|\n|udf_{varname}|Any User defined fields specified in the fields parameter|\n|updated|Event updated time, in milliseconds since the epoch|\n|venue_name|Name of the place where the event will happen|\n|zip|Zip or postal code|\n"
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0",
                                        "oauth_1_0",
                                        "api_key"
                                    ],
                                    "queryParameters": {
                                        "fields": {
                                            "name": "fields",
                                            "displayName": "fields",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "Request that additional fields (separated by commas) be included in the output.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Event Get\n\n#Request Parameters\nNormal authorization parameters are required. The output may be adjusted as normal with format, as well as a fields specifier\n",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/{id}",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "{id}"
                            ]
                        }
                    ],
                    "displayName": "/event",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "event"
                    ]
                },
                {
                    "relativeUri": "/comments",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "everywhereComments",
                                            "example": "{\n  \"results\": [\n    {\n      \"member\": {\n        \"member_state\": \"member_state 0\",\n        \"member_city\": \"member_city 0\",\n        \"name\": \"name 0\",\n        \"member_country\": \"member_country 0\",\n        \"member_id\": 0\n      },\n      \"id\": 0,\n      \"udf_{varname}\": \"udf_{varname} 0\",\n      \"created\": 0,\n      \"event_id\": 0,\n      \"comment\": \"comment 0\",\n      \"parent_id\": 0\n    },\n    {\n      \"member\": {\n        \"member_state\": \"member_state 1\",\n        \"member_city\": \"member_city 1\",\n        \"name\": \"name 1\",\n        \"member_country\": \"member_country 1\",\n        \"member_id\": 1\n      },\n      \"id\": 1,\n      \"udf_{varname}\": \"udf_{varname} 1\",\n      \"created\": 1,\n      \"event_id\": 1,\n      \"comment\": \"comment 1\",\n      \"parent_id\": 1\n    }\n  ]\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"comment\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"created\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"event_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"member\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"member_city\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_country\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"member_state\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"parent_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"udf_{varname}\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
                                        }
                                    },
                                    "description": "Each item in the results list for a JSON or XML request will contain the fields listed in Comment Get."
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0",
                                "api_key"
                            ],
                            "queryParameters": {
                                "comment_id": {
                                    "name": "comment_id",
                                    "displayName": "comment_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "one or more comment IDs",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "container_id": {
                                    "name": "container_id",
                                    "displayName": "container_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "one or more container IDs",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "event_id": {
                                    "name": "event_id",
                                    "displayName": "event_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "one or more event IDs",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "event_status": {
                                    "name": "event_status",
                                    "displayName": "event_status",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Status may be \"upcoming\", \"past\" or both separated by a comma. The default is \"upcoming\" only",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "member_id": {
                                    "name": "member_id",
                                    "displayName": "member_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "one or more member IDs",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "parent_comment_id": {
                                    "name": "parent_comment_id",
                                    "displayName": "parent_comment_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "ID of a parent comment, to find its children",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "urlname": {
                                    "name": "urlname",
                                    "displayName": "urlname",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "one or more container urlnames",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "order": {
                                    "name": "order",
                                    "displayName": "order",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "|value|description|\n|-|\n|time|Comment date and time|\n",
                                    "enum": [
                                        "time"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Comment Query\n\n#Request Parameters\nAt least one of the required parameter(s) must be supplied with the request, and multiple query values may be separated with commas.\n",
                            "method": "get",
                            "is": [
                                "list",
                                "hasCommunity",
                                "hasUserDefinedFields"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/comments",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "comments"
                    ]
                },
                {
                    "relativeUri": "/communities",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "everywhereCommunities",
                                            "example": "{\n  \"results\": [\n    {\n      \"zip\": \"zip 0\",\n      \"lon\": 1.0,\n      \"meetup_count\": 0,\n      \"past_meetup_count\": 0,\n      \"state\": 0,\n      \"city\": \"city 0\",\n      \"country\": \"country 0\",\n      \"id\": 0,\n      \"updated\": 0,\n      \"udf_{varname}\": \"udf_{varname} 0\",\n      \"created\": 0,\n      \"container\": {\n        \"id\": 0,\n        \"name\": \"name 0\",\n        \"urlname\": \"urlname 0\"\n      },\n      \"name\": \"name 0\",\n      \"meetup_url\": \"meetup_url 0\",\n      \"urlname\": \"urlname 0\",\n      \"lat\": 1.0\n    },\n    {\n      \"zip\": \"zip 1\",\n      \"lon\": 1.0,\n      \"meetup_count\": 1,\n      \"past_meetup_count\": 1,\n      \"state\": 1,\n      \"city\": \"city 1\",\n      \"country\": \"country 1\",\n      \"id\": 1,\n      \"updated\": 1,\n      \"udf_{varname}\": \"udf_{varname} 1\",\n      \"created\": 1,\n      \"container\": {\n        \"id\": 1,\n        \"name\": \"name 1\",\n        \"urlname\": \"urlname 1\"\n      },\n      \"name\": \"name 1\",\n      \"meetup_url\": \"meetup_url 1\",\n      \"urlname\": \"urlname 1\",\n      \"lat\": 1.0\n    }\n  ]\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"city\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"container\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"urlname\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"country\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"created\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"lat\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"lon\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"meetup_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"meetup_url\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"past_meetup_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"state\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"udf_{varname}\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"updated\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"urlname\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"zip\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
                                        }
                                    },
                                    "description": "Each item in the results list for a JSON or XML request will contain the fields listed in Community Get (\"/ew/community/:id\")"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0",
                                "api_key"
                            ],
                            "queryParameters": {
                                "container_id": {
                                    "name": "container_id",
                                    "displayName": "container_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "One or more IDs, separated by commas",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "state": {
                                    "name": "state",
                                    "displayName": "state",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "For the US, state code is required",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "urlname": {
                                    "name": "urlname",
                                    "displayName": "urlname",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Up to five URL paths, separated by commas",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "zip": {
                                    "name": "zip",
                                    "displayName": "zip",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "A US zip or Canadian postal code",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Communities Query\n\n#Request Parameters\nat least one of the required parameter(s) must be supplied with the request.\ncountry, city and state are regarded as the one parameter.\nlat, lon are regarded as the one parameter.\n",
                            "method": "get",
                            "is": [
                                "list",
                                "locatable",
                                "locationByCity",
                                "hasCommunity",
                                "hasUserDefinedFields"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/communities",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "communities"
                    ]
                },
                {
                    "relativeUri": "/comment",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "201": {
                                    "code": "201",
                                    "description": "If successful, this method returns a 201 Created response with a Location header containing the Comment Get method for this event. The content body is the same as that returned by Comment Get."
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0"
                            ],
                            "queryParameters": {
                                "comment": {
                                    "name": "comment",
                                    "displayName": "comment",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "comment content",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "event_id": {
                                    "name": "event_id",
                                    "displayName": "event_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "ID of the event to comment on",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "parent_id": {
                                    "name": "parent_id",
                                    "displayName": "parent_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "ID of parent, if threaded",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "order": {
                                    "name": "order",
                                    "displayName": "order",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "|value|description|\n|-|\n|time|Comment date and time|\n",
                                    "enum": [
                                        "time"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Comment Create\n\n#Request Parameters\nAt least one of the required parameter(s) must be supplied with the request. The comment is always entered for the current authenticated member. This method requires an HTTP POST.\n",
                            "method": "post",
                            "is": [
                                "hasUserDefinedFields"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/{id}",
                            "type": "meetupResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "uriParameters": {
                                "id": {
                                    "name": "id",
                                    "displayName": "id",
                                    "type": "string",
                                    "required": true,
                                    "repeat": false,
                                    "description": ":id in the path should be the id of a comment",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "description": "If successful, this method returns a 200 OK response. The content body includes a success message."
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0",
                                        "oauth_1_0"
                                    ],
                                    "description": "Comment Delete\n\n#Request Parameters\nNo parameters are required or considered other than for authorization and format. This method requires an HTTP DELETE.\n",
                                    "method": "delete",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "everywhereComment",
                                                    "example": "{\n  \"member\": {\n    \"member_state\": \"member_state\",\n    \"member_city\": \"member_city\",\n    \"name\": \"name\",\n    \"member_country\": \"member_country\",\n    \"member_id\": 100\n  },\n  \"id\": 100,\n  \"udf_{varname}\": \"udf_{varname}\",\n  \"created\": 100,\n  \"event_id\": 100,\n  \"comment\": \"comment\",\n  \"parent_id\": 100\n}\n",
                                                    "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"comment\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"created\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"event_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"member\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"member_city\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"member_country\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"member_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"member_state\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"parent_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"udf_{varname}\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    }\r\n  }\r\n}\r\n"
                                                }
                                            },
                                            "description": "|||\n|-|\n|comment|content of the comment|\n|created|comment created time, in milliseconds since the epoch|\n|event_id|ID of the event|\n|id|ID of the comment|\n|member|Member that commented|\n|parent_id|ID of the partent comment, if threaded|\n|udf_{varname}|User defined fields specified in the fields parameter|\n"
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0",
                                        "oauth_1_0",
                                        "api_key"
                                    ],
                                    "queryParameters": {
                                        "fields": {
                                            "name": "fields",
                                            "displayName": "fields",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "Request that additional fields (separated by commas) be included in the output.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Comment Get\n\n#Request Parameters\nNo parameters are required other than for authorization and format.\n",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/{id}",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "{id}"
                            ]
                        }
                    ],
                    "displayName": "/comment",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "comment"
                    ]
                },
                {
                    "relativeUri": "/seed",
                    "type": "collection",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "201": {
                                    "code": "201",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "everywhereEventSeed",
                                            "example": "{\n  \"local_time\": 100,\n  \"id\": 100,\n  \"short_description\": \"short_description\",\n  \"updated\": 100,\n  \"udf_{varname}\": \"udf_{varname}\",\n  \"status\": \"status\",\n  \"created\": 100,\n  \"description\": \"description\",\n  \"container\": {\n    \"id\": 100,\n    \"name\": \"name\",\n    \"urlname\": \"urlname\"\n  }\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"container\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"urlname\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"created\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"description\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"local_time\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"short_description\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"status\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"udf_{varname}\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"updated\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    }\r\n  }\r\n}\r\n"
                                        }
                                    },
                                    "description": "If successful, this method returns a 201 Created response with a Location header containing the Event Seed Get method for this event. The content body is the same as that returned by Event Seed Get."
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0"
                            ],
                            "queryParameters": {
                                "container_id": {
                                    "name": "container_id",
                                    "displayName": "container_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "May serve as the required identifier of the event seed container",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "description": {
                                    "name": "description",
                                    "displayName": "description",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "description of the event seed",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "local_time": {
                                    "name": "local_time",
                                    "displayName": "local_time",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "local time for event to happen globally in milliseconds since the epoch",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "short_description": {
                                    "name": "short_description",
                                    "displayName": "short_description",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "short description of the event seed",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "urlname": {
                                    "name": "urlname",
                                    "displayName": "urlname",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "May serve as the required identifier of the event seed container",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Event Seed Create\nFor container owners. API method for creating an event to seed to all communities.\n\n#Request Parameters\nAn identifier for the container is required as well as the short_description. This method requires an HTTP POST.\n",
                            "method": "post",
                            "is": [
                                "hasUserDefinedFields"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/{id}",
                            "type": "collectionElement",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "uriParameters": {
                                "id": {
                                    "name": "id",
                                    "displayName": "id",
                                    "type": "string",
                                    "required": true,
                                    "repeat": false,
                                    "description": ":id in the path should be the id of an event seed",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "everywhereEventSeed",
                                                    "example": "{\n  \"local_time\": 100,\n  \"id\": 100,\n  \"short_description\": \"short_description\",\n  \"updated\": 100,\n  \"udf_{varname}\": \"udf_{varname}\",\n  \"status\": \"status\",\n  \"created\": 100,\n  \"description\": \"description\",\n  \"container\": {\n    \"id\": 100,\n    \"name\": \"name\",\n    \"urlname\": \"urlname\"\n  }\n}\n",
                                                    "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"container\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"urlname\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"created\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"description\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"local_time\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"short_description\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"status\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"udf_{varname}\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"updated\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    }\r\n  }\r\n}\r\n"
                                                }
                                            },
                                            "description": "If successful, this method returns a 200 OK response. The content body is the same as that returned by Event Seed Get."
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0",
                                        "oauth_1_0"
                                    ],
                                    "queryParameters": {
                                        "description": {
                                            "name": "description",
                                            "displayName": "description",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "description of the event seed",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "short_description": {
                                            "name": "short_description",
                                            "displayName": "short_description",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "short description of the event seed",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Event Seed Edit\nFor container owners. API method for editing events seeded to communities.\n\n#Request Parameters\nAll parameters are optional, will update the event when provided. This method requires an HTTP POST.\n",
                                    "method": "post",
                                    "is": [
                                        "hasUserDefinedFields"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "everywhereEventSeed",
                                                    "example": "{\n  \"local_time\": 100,\n  \"id\": 100,\n  \"short_description\": \"short_description\",\n  \"updated\": 100,\n  \"udf_{varname}\": \"udf_{varname}\",\n  \"status\": \"status\",\n  \"created\": 100,\n  \"description\": \"description\",\n  \"container\": {\n    \"id\": 100,\n    \"name\": \"name\",\n    \"urlname\": \"urlname\"\n  }\n}\n",
                                                    "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"container\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"urlname\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"created\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"description\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"local_time\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"short_description\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"status\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"udf_{varname}\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"updated\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    }\r\n  }\r\n}\r\n"
                                                }
                                            },
                                            "description": "|||\n|-|\n|container|Container for this event seed|\n|created|Event created time, in milliseconds since the epoch|\n|description|description of the event seed|\n|id|The ID of the event seed|\n|local_time|local time for event to happen globally in milliseconds since the epoch|\n|short_description|short description of the event seed|\n|status|\"pending\", \"active\", or \"archived\"|\n|udf_{varname}|Any User defined fields specified in the fields parameter|\n|updated|Event updated time, in milliseconds since the epoch|\n"
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0",
                                        "oauth_1_0",
                                        "api_key"
                                    ],
                                    "queryParameters": {
                                        "fields": {
                                            "name": "fields",
                                            "displayName": "fields",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "Request that additional fields (separated by commas) be included in the output.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Event Seed Get\n\nFor container owners. API method for querying an event seeded to communities.\n\n#Request Parameters\nNormal authorization parameters are required. The output may be adjusted as normal with format, as well as a fields specifier\n",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "description": "If successful, this method returns a 200 OK response. The content body includes a success message."
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0",
                                        "oauth_1_0"
                                    ],
                                    "description": "Event Seed Delete\nFor container owners. API method for removing all events seeded to communities.\n\n#Request Parameters\nNo parameters are required or considered other than for authorization and format. This method requires an HTTP DELETE\n",
                                    "method": "delete",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/{id}",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "{id}"
                            ]
                        }
                    ],
                    "displayName": "/seed",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "seed"
                    ]
                },
                {
                    "relativeUri": "/containers",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "everywhereContainers",
                                            "example": "{\n  \"results\": [\n    {\n      \"twitter_urlname\": \"twitter_urlname 0\",\n      \"member_count\": 0,\n      \"link_name\": \"link_name 0\",\n      \"meetup_count\": 0,\n      \"theme\": {\n        \"pageback_color\": \"pageback_color 0\",\n        \"link_color\": \"link_color 0\",\n        \"banner_height\": \"banner_height 0\",\n        \"button_color\": \"button_color 0\",\n        \"boxback_color\": \"boxback_color 0\",\n        \"banner_link\": \"banner_link 0\"\n      },\n      \"link\": \"link 0\",\n      \"past_meetup_count\": 0,\n      \"countries\": \"countries 0\",\n      \"facebook_urlname\": \"facebook_urlname 0\",\n      \"id\": 0,\n      \"updated\": 0,\n      \"udf_{varname}\": \"udf_{varname} 0\",\n      \"created\": 0,\n      \"description\": \"description 0\",\n      \"name\": \"name 0\",\n      \"meetup_url\": \"meetup_url 0\",\n      \"urlname\": \"urlname 0\",\n      \"founder\": {\n        \"member_state\": \"member_state 0\",\n        \"member_city\": \"member_city 0\",\n        \"name\": \"name 0\",\n        \"member_country\": \"member_country 0\",\n        \"member_id\": 0\n      }\n    },\n    {\n      \"twitter_urlname\": \"twitter_urlname 1\",\n      \"member_count\": 1,\n      \"link_name\": \"link_name 1\",\n      \"meetup_count\": 1,\n      \"theme\": {\n        \"pageback_color\": \"pageback_color 1\",\n        \"link_color\": \"link_color 1\",\n        \"banner_height\": \"banner_height 1\",\n        \"button_color\": \"button_color 1\",\n        \"boxback_color\": \"boxback_color 1\",\n        \"banner_link\": \"banner_link 1\"\n      },\n      \"link\": \"link 1\",\n      \"past_meetup_count\": 1,\n      \"countries\": \"countries 1\",\n      \"facebook_urlname\": \"facebook_urlname 1\",\n      \"id\": 1,\n      \"updated\": 1,\n      \"udf_{varname}\": \"udf_{varname} 1\",\n      \"created\": 1,\n      \"description\": \"description 1\",\n      \"name\": \"name 1\",\n      \"meetup_url\": \"meetup_url 1\",\n      \"urlname\": \"urlname 1\",\n      \"founder\": {\n        \"member_state\": \"member_state 1\",\n        \"member_city\": \"member_city 1\",\n        \"name\": \"name 1\",\n        \"member_country\": \"member_country 1\",\n        \"member_id\": 1\n      }\n    }\n  ]\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"countries\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"created\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"description\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"facebook_urlname\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"founder\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"member_city\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_country\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"member_state\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"link\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"link_name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"meetup_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"meetup_url\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"member_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"past_meetup_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"theme\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"banner_height\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"banner_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"boxback_color\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"button_color\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"link_color\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"pageback_color\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"twitter_urlname\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"udf_{varname}\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"updated\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"urlname\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
                                        }
                                    },
                                    "description": "Each item in the results list for a JSON or XML request will contain the fields listed in Container Get."
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0",
                                "api_key"
                            ],
                            "queryParameters": {
                                "container_id": {
                                    "name": "container_id",
                                    "displayName": "container_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "ID of the container",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "link": {
                                    "name": "link",
                                    "displayName": "link",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "External URL associated with the container",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "urlname": {
                                    "name": "urlname",
                                    "displayName": "urlname",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "URL path to the container, as in http://www.meetup.com/ (no slashes)\n",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Container Query\n\n#Request Parameters\nAt least one of the required parameter(s) must be supplied with the request.\n",
                            "method": "get",
                            "is": [
                                "list",
                                "hasUserDefinedFields"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/containers",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "containers"
                    ]
                },
                {
                    "relativeUri": "/rsvp",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "201": {
                                    "code": "201",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "everywhereRsvp",
                                            "example": "{\n  \"member\": {\n    \"member_state\": \"member_state\",\n    \"member_city\": \"member_city\",\n    \"name\": \"name\",\n    \"member_country\": \"member_country\",\n    \"member_id\": 100\n  },\n  \"id\": 100,\n  \"member_photo\": {\n    \"photo_link\": \"photo_link\",\n    \"highres_link\": \"highres_link\",\n    \"thumb_link\": \"thumb_link\",\n    \"photo_id\": 100\n  },\n  \"udf_{varname}\": \"udf_{varname}\",\n  \"created\": 100,\n  \"event_id\": 100\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"created\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"event_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"member\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"member_city\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"member_country\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"member_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"member_state\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"member_photo\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"highres_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"photo_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"photo_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"thumb_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"udf_{varname}\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    }\r\n  }\r\n}\r\n"
                                        }
                                    },
                                    "description": "If successful, this method returns a 201 Created response with a Location header containing the RSVP Get method for this event. The content body is the same as that returned by RSVP Get."
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0"
                            ],
                            "queryParameters": {
                                "event_id": {
                                    "name": "event_id",
                                    "displayName": "event_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "ID of an event",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "RSVP Create\n\n#Request Parameters\nAt least one of the required parameter(s) must be supplied with the request. The RSVP is always applied for the current authenticated member. This method requires an HTTP POST.\n",
                            "method": "post",
                            "is": [
                                "hasUserDefinedFields"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/{id}",
                            "type": "meetupResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "uriParameters": {
                                "id": {
                                    "name": "id",
                                    "displayName": "id",
                                    "type": "string",
                                    "required": true,
                                    "repeat": false,
                                    "description": ":id in the path should be the id of a RSVP",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "description": "If successful, this method returns a 200 OK response. The content body includes a success message."
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0",
                                        "oauth_1_0"
                                    ],
                                    "description": "RSVP Delete\n\n#Request Parameters\nNo parameters are required or considered other than for authorization and format. This method requires an HTTP DELETE\n",
                                    "method": "delete",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "everywhereRsvp",
                                                    "example": "{\n  \"member\": {\n    \"member_state\": \"member_state\",\n    \"member_city\": \"member_city\",\n    \"name\": \"name\",\n    \"member_country\": \"member_country\",\n    \"member_id\": 100\n  },\n  \"id\": 100,\n  \"member_photo\": {\n    \"photo_link\": \"photo_link\",\n    \"highres_link\": \"highres_link\",\n    \"thumb_link\": \"thumb_link\",\n    \"photo_id\": 100\n  },\n  \"udf_{varname}\": \"udf_{varname}\",\n  \"created\": 100,\n  \"event_id\": 100\n}\n",
                                                    "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"created\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"event_id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"member\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"member_city\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"member_country\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"member_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"member_state\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"member_photo\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"highres_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"photo_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"photo_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"thumb_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"udf_{varname}\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    }\r\n  }\r\n}\r\n"
                                                }
                                            },
                                            "description": "|||\n|-|\n|created|rsvp created time, in milliseconds since the epoch|\n|event_id|The ID of the event|\n|id|The ID of the rsvp|\n|member|Member that rsvp'd|\n|member_photo|Photo info, if available, for the member|\n|udf_{varname}|User defined fields specified in the fields parameter|\n"
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0",
                                        "oauth_1_0",
                                        "api_key"
                                    ],
                                    "queryParameters": {
                                        "fields": {
                                            "name": "fields",
                                            "displayName": "fields",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "Request that additional fields (separated by commas) be included in the output.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "RSVP Get\n\n#Request Parameters\nNo parameters are required other than for authorization and format.\n",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/{id}",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "{id}"
                            ]
                        }
                    ],
                    "displayName": "/rsvp",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "rsvp"
                    ]
                },
                {
                    "relativeUri": "/events",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "everywhereEvents",
                                            "example": "{\n  \"results\": [\n    {\n      \"zip\": \"zip 0\",\n      \"lon\": 1.0,\n      \"venue_name\": \"venue_name 0\",\n      \"status\": \"status 0\",\n      \"link\": \"link 0\",\n      \"state\": 0,\n      \"community\": {\n        \"id\": 0,\n        \"name\": \"name 0\",\n        \"urlname\": \"urlname 0\"\n      },\n      \"address1\": \"address1 0\",\n      \"city\": \"city 0\",\n      \"country\": \"country 0\",\n      \"helpers\": {\n        \"member_state\": \"member_state 0\",\n        \"member_city\": \"member_city 0\",\n        \"name\": \"name 0\",\n        \"member_country\": \"member_country 0\",\n        \"member_id\": 0\n      },\n      \"id\": 0,\n      \"time\": 0,\n      \"short_description\": \"short_description 0\",\n      \"updated\": 0,\n      \"udf_{varname}\": \"udf_{varname} 0\",\n      \"created\": 0,\n      \"container\": {\n        \"id\": 0,\n        \"name\": \"name 0\",\n        \"urlname\": \"urlname 0\"\n      },\n      \"description\": \"description 0\",\n      \"rsvp_count\": 0,\n      \"meetup_url\": \"meetup_url 0\",\n      \"lat\": 1.0\n    },\n    {\n      \"zip\": \"zip 1\",\n      \"lon\": 1.0,\n      \"venue_name\": \"venue_name 1\",\n      \"status\": \"status 1\",\n      \"link\": \"link 1\",\n      \"state\": 1,\n      \"community\": {\n        \"id\": 1,\n        \"name\": \"name 1\",\n        \"urlname\": \"urlname 1\"\n      },\n      \"address1\": \"address1 1\",\n      \"city\": \"city 1\",\n      \"country\": \"country 1\",\n      \"helpers\": {\n        \"member_state\": \"member_state 1\",\n        \"member_city\": \"member_city 1\",\n        \"name\": \"name 1\",\n        \"member_country\": \"member_country 1\",\n        \"member_id\": 1\n      },\n      \"id\": 1,\n      \"time\": 1,\n      \"short_description\": \"short_description 1\",\n      \"updated\": 1,\n      \"udf_{varname}\": \"udf_{varname} 1\",\n      \"created\": 1,\n      \"container\": {\n        \"id\": 1,\n        \"name\": \"name 1\",\n        \"urlname\": \"urlname 1\"\n      },\n      \"description\": \"description 1\",\n      \"rsvp_count\": 1,\n      \"meetup_url\": \"meetup_url 1\",\n      \"lat\": 1.0\n    }\n  ]\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"address1\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"city\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"community\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"urlname\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"container\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"urlname\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"country\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"created\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"description\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"helpers\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"member_city\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_country\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"member_state\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"lat\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"lon\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"link\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"meetup_url\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"rsvp_count\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"short_description\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"state\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"status\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"time\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"udf_{varname}\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"updated\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"venue_name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"zip\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
                                        }
                                    },
                                    "description": "Each item in the results list for a JSON or XML request will contain the fields listed in Event Get."
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0",
                                "api_key"
                            ],
                            "queryParameters": {
                                "container_id": {
                                    "name": "container_id",
                                    "displayName": "container_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "One or more IDs, separated by commas",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "event_id": {
                                    "name": "event_id",
                                    "displayName": "event_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "ID of an event",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "status": {
                                    "name": "status",
                                    "displayName": "status",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Return events matching one of the given status values, separated by commas. Possible statuses are \"pending\", \"upcoming\", and \"past\". The default status parameter is \"past,pending,upcoming\".",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "urlname": {
                                    "name": "urlname",
                                    "displayName": "urlname",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Up to five URL paths, separated by commas",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "zip": {
                                    "name": "zip",
                                    "displayName": "zip",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "A US zip or Canadian postal code",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "order": {
                                    "name": "order",
                                    "displayName": "order",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "|value|description|\n|-|\n|time|Event date and time|\n",
                                    "enum": [
                                        "time"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Event Query\n\n#Request Parameters\nAt least one of the required parameter(s) must be supplied with the request.\n\nDate Formatting: Parameters for dates can be specified in absolute or relative terms. Absolute dates are specified in numbers only: MMDDYYYY. Relative dates are specified in days d, weeks w, or months m before or after today. Tomorrow is \"1d\", yesterday is \"-1d\"; three weeks from now is \"3w\", and six months ago is \"-6m\". These can be used with after and before to define a time window in a static request that advances with the actual date.\n",
                            "method": "get",
                            "is": [
                                "list",
                                "locatable",
                                "locationByCity",
                                "hasTimeRange",
                                "hasCommunity",
                                "hasUserDefinedFields"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/events",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "events"
                    ]
                },
                {
                    "relativeUri": "/rsvps",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "everywhereRsvps",
                                            "example": "{\n  \"results\": [\n    {\n      \"member\": {\n        \"member_state\": \"member_state 0\",\n        \"member_city\": \"member_city 0\",\n        \"name\": \"name 0\",\n        \"member_country\": \"member_country 0\",\n        \"member_id\": 0\n      },\n      \"id\": 0,\n      \"member_photo\": {\n        \"photo_link\": \"photo_link 0\",\n        \"highres_link\": \"highres_link 0\",\n        \"thumb_link\": \"thumb_link 0\",\n        \"photo_id\": 0\n      },\n      \"udf_{varname}\": \"udf_{varname} 0\",\n      \"created\": 0,\n      \"event_id\": 0\n    },\n    {\n      \"member\": {\n        \"member_state\": \"member_state 1\",\n        \"member_city\": \"member_city 1\",\n        \"name\": \"name 1\",\n        \"member_country\": \"member_country 1\",\n        \"member_id\": 1\n      },\n      \"id\": 1,\n      \"member_photo\": {\n        \"photo_link\": \"photo_link 1\",\n        \"highres_link\": \"highres_link 1\",\n        \"thumb_link\": \"thumb_link 1\",\n        \"photo_id\": 1\n      },\n      \"udf_{varname}\": \"udf_{varname} 1\",\n      \"created\": 1,\n      \"event_id\": 1\n    }\n  ]\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"created\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"event_id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"member\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"member_city\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_country\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"member_state\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"member_photo\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"highres_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"photo_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"photo_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"thumb_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"udf_{varname}\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
                                        }
                                    },
                                    "description": "Each item in the results list for a JSON or XML request will contain the fields listed in RSVP Get."
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0",
                                "api_key"
                            ],
                            "queryParameters": {
                                "event_id": {
                                    "name": "event_id",
                                    "displayName": "event_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "ID of an event",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "member_id": {
                                    "name": "member_id",
                                    "displayName": "member_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "ID of a member",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "RSVPs Query\n\n#Request Parameters\nAt least one of the required parameter(s) must be supplied with the request, and multiple query values may be separated with commas.\n",
                            "method": "get",
                            "is": [
                                "list",
                                "hasUserDefinedFields"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/rsvps",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "rsvps"
                    ]
                },
                {
                    "relativeUri": "/followers",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "everywhereFollowers",
                                            "example": "{\n  \"results\": [\n    {\n      \"member\": {\n        \"member_state\": \"member_state 0\",\n        \"member_city\": \"member_city 0\",\n        \"name\": \"name 0\",\n        \"member_country\": \"member_country 0\",\n        \"member_id\": 0\n      },\n      \"id\": 0,\n      \"udf_{varname}\": \"udf_{varname} 0\",\n      \"status\": \"status 0\",\n      \"created\": 0,\n      \"container\": {\n        \"id\": 0,\n        \"name\": \"name 0\",\n        \"urlname\": \"urlname 0\"\n      },\n      \"community\": {\n        \"id\": 0,\n        \"name\": \"name 0\",\n        \"urlname\": \"urlname 0\"\n      }\n    },\n    {\n      \"member\": {\n        \"member_state\": \"member_state 1\",\n        \"member_city\": \"member_city 1\",\n        \"name\": \"name 1\",\n        \"member_country\": \"member_country 1\",\n        \"member_id\": 1\n      },\n      \"id\": 1,\n      \"udf_{varname}\": \"udf_{varname} 1\",\n      \"status\": \"status 1\",\n      \"created\": 1,\n      \"container\": {\n        \"id\": 1,\n        \"name\": \"name 1\",\n        \"urlname\": \"urlname 1\"\n      },\n      \"community\": {\n        \"id\": 1,\n        \"name\": \"name 1\",\n        \"urlname\": \"urlname 1\"\n      }\n    }\n  ]\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"community\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"urlname\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"container\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"urlname\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"created\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"member\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"member_city\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_country\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"member_id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"member_state\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"status\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"udf_{varname}\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
                                        }
                                    },
                                    "description": "Each item in the results list for a JSON or XML request will contain the fields listed in Community Follow Get."
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0",
                                "api_key"
                            ],
                            "queryParameters": {
                                "container_id": {
                                    "name": "container_id",
                                    "displayName": "container_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "One or more container IDs, separated by commas",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "urlname": {
                                    "name": "urlname",
                                    "displayName": "urlname",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Up to five container URL names, separated by commas",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Community Followers\n\n#Request Parameters\nThis method requires at least one of the following parameters: \"container_id\", \"community_id\", \"urlname\" or \"community_urlname\"\n",
                            "method": "get",
                            "is": [
                                "list",
                                "hasCommunity",
                                "hasUserDefinedFields"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/followers",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "followers"
                    ]
                },
                {
                    "relativeUri": "/follow",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "201": {
                                    "code": "201",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "everywhereFollow",
                                            "example": "{\n  \"member\": {\n    \"member_state\": \"member_state\",\n    \"member_city\": \"member_city\",\n    \"name\": \"name\",\n    \"member_country\": \"member_country\",\n    \"member_id\": 100\n  },\n  \"id\": 100,\n  \"udf_{varname}\": \"udf_{varname}\",\n  \"status\": \"status\",\n  \"created\": 100,\n  \"container\": {\n    \"id\": 100,\n    \"name\": \"name\",\n    \"urlname\": \"urlname\"\n  },\n  \"community\": {\n    \"id\": 100,\n    \"name\": \"name\",\n    \"urlname\": \"urlname\"\n  }\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"community\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"urlname\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"container\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"urlname\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"created\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"member\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"member_city\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"member_country\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"member_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"member_state\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"status\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"udf_{varname}\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    }\r\n  }\r\n}\r\n"
                                        }
                                    },
                                    "description": "If successful, this method returns a 201 Created response with a Location header containing the Community Follow Get method for this event. The content body is the same as that returned by Community Follow Get"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0"
                            ],
                            "queryParameters": {
                                "community_id": {
                                    "name": "community_id",
                                    "displayName": "community_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "ID of the community to follow.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Community Follow Create\n\n#Request Parameters\nat least one of the required parameter(s) must be supplied with the request. The follow is always applied for the current authenticated member. This method requires an HTTP POST.\n",
                            "method": "post",
                            "is": [
                                "hasUserDefinedFields"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/{id}",
                            "type": "meetupResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "uriParameters": {
                                "id": {
                                    "name": "id",
                                    "displayName": "id",
                                    "type": "string",
                                    "required": true,
                                    "repeat": false,
                                    "description": ":id in the path should be the id of a community",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "everywhereFollow",
                                                    "example": "{\n  \"member\": {\n    \"member_state\": \"member_state\",\n    \"member_city\": \"member_city\",\n    \"name\": \"name\",\n    \"member_country\": \"member_country\",\n    \"member_id\": 100\n  },\n  \"id\": 100,\n  \"udf_{varname}\": \"udf_{varname}\",\n  \"status\": \"status\",\n  \"created\": 100,\n  \"container\": {\n    \"id\": 100,\n    \"name\": \"name\",\n    \"urlname\": \"urlname\"\n  },\n  \"community\": {\n    \"id\": 100,\n    \"name\": \"name\",\n    \"urlname\": \"urlname\"\n  }\n}\n",
                                                    "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"community\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"urlname\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"container\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"urlname\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"created\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"member\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"member_city\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"member_country\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"member_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"member_state\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"status\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"udf_{varname}\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    }\r\n  }\r\n}\r\n"
                                                }
                                            },
                                            "description": "|||\n|-|\n|community|Community for this follow|\n|container|Container for this follow|\n|created|created time, in milliseconds since the epoch|\n|id|The ID of the community follow|\n|member|Member following community|\n|status|\"member\" or \"helper\", if member has helped plan an event in the corresponding community|\n|udf_{varname}|User defined \"fields\" specified in the fields parameter|\n"
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0",
                                        "oauth_1_0",
                                        "api_key"
                                    ],
                                    "queryParameters": {
                                        "fields": {
                                            "name": "fields",
                                            "displayName": "fields",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "Request that additional fields (separated by commas) be included in the output.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Community Follow Get\n\n#Request Parameters\nNo parameters are required other than for authorization and format.\n",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "description": "If successful, this method returns a 200 OK response. The content body includes a success message."
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0",
                                        "oauth_1_0"
                                    ],
                                    "description": "Community Unfollow\n\n#Request Parameters\nNo parameters are required or considered other than for authorization and format. This method requires an HTTP DELETE.\n",
                                    "method": "delete",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/{id}",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "{id}"
                            ]
                        }
                    ],
                    "displayName": "/follow",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "follow"
                    ]
                },
                {
                    "relativeUri": "/community",
                    "type": "collection",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "201": {
                                    "code": "201",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "everywhereCommunity",
                                            "example": "{\n  \"zip\": \"zip\",\n  \"lon\": 1.0,\n  \"meetup_count\": 100,\n  \"past_meetup_count\": 100,\n  \"state\": 100,\n  \"city\": \"city\",\n  \"country\": \"country\",\n  \"id\": 100,\n  \"updated\": 100,\n  \"udf_{varname}\": \"udf_{varname}\",\n  \"created\": 100,\n  \"container\": {\n    \"id\": 100,\n    \"name\": \"name\",\n    \"urlname\": \"urlname\"\n  },\n  \"name\": \"name\",\n  \"meetup_url\": \"meetup_url\",\n  \"urlname\": \"urlname\",\n  \"lat\": 1.0\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"city\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"container\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"urlname\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"country\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"created\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"lat\": {\r\n      \"required\": false,\r\n      \"type\": \"number\"\r\n    },\r\n    \"lon\": {\r\n      \"required\": false,\r\n      \"type\": \"number\"\r\n    },\r\n    \"meetup_count\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"meetup_url\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"name\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"past_meetup_count\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"state\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"udf_{varname}\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"updated\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"urlname\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"zip\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    }\r\n  }\r\n}\r\n"
                                        }
                                    },
                                    "description": "If successful, this method returns a 201 Created response with a Location header containing the Community Get method for this community. The content body is the same as that returned by Community Get."
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0"
                            ],
                            "queryParameters": {
                                "container_id": {
                                    "name": "container_id",
                                    "displayName": "container_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "May serve as the required identifier of the container",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "state": {
                                    "name": "state",
                                    "displayName": "state",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "May serve as the required location parameter set. Country code and city name. For the US, a state code is also required",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "name": {
                                    "name": "name",
                                    "displayName": "name",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Name of the community",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "urlname": {
                                    "name": "urlname",
                                    "displayName": "urlname",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "May serve as the required identifier of the container",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "zip": {
                                    "name": "zip",
                                    "displayName": "zip",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "A US zip or Canadian postal code. May serve as the required location parameter set",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Community Create\n\n#Request Parameters\nAn identifier for the container is required as well at least one location parameter set. Other location details may be filled out automatically. This method requires an HTTP POST.\n\n|||\n|-|\n|country, city, state|May serve as the required location parameter set. Country code and city name. For the US, a state code is also required|\n|lat, lon|May serve as the required location parameter set.|\n",
                            "method": "post",
                            "is": [
                                "locatable",
                                "locationByCity"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/{id}",
                            "type": "collectionElement",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "uriParameters": {
                                "id": {
                                    "name": "id",
                                    "displayName": "id",
                                    "type": "string",
                                    "required": true,
                                    "repeat": false,
                                    "description": ":id in a community identifier",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "everywhereCommunity",
                                                    "example": "{\n  \"zip\": \"zip\",\n  \"lon\": 1.0,\n  \"meetup_count\": 100,\n  \"past_meetup_count\": 100,\n  \"state\": 100,\n  \"city\": \"city\",\n  \"country\": \"country\",\n  \"id\": 100,\n  \"updated\": 100,\n  \"udf_{varname}\": \"udf_{varname}\",\n  \"created\": 100,\n  \"container\": {\n    \"id\": 100,\n    \"name\": \"name\",\n    \"urlname\": \"urlname\"\n  },\n  \"name\": \"name\",\n  \"meetup_url\": \"meetup_url\",\n  \"urlname\": \"urlname\",\n  \"lat\": 1.0\n}\n",
                                                    "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"city\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"container\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"urlname\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"country\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"created\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"lat\": {\r\n      \"required\": false,\r\n      \"type\": \"number\"\r\n    },\r\n    \"lon\": {\r\n      \"required\": false,\r\n      \"type\": \"number\"\r\n    },\r\n    \"meetup_count\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"meetup_url\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"name\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"past_meetup_count\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"state\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"udf_{varname}\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"updated\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"urlname\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"zip\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    }\r\n  }\r\n}\r\n"
                                                }
                                            },
                                            "description": "If successful, this method returns a 200 OK response. The content body is the same as that returned by Community Get (\"/ew/community/:id\")."
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0",
                                        "oauth_1_0"
                                    ],
                                    "queryParameters": {
                                        "name": {
                                            "name": "name",
                                            "displayName": "name",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "Name of the community",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "state": {
                                            "name": "state",
                                            "displayName": "state",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "State or province code",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "zip": {
                                            "name": "zip",
                                            "displayName": "zip",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "Zip or postal code",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Community Edit\n\n#Request Parameters\nAll parameters are optional, will update the community when provided. This method requires an HTTP POST.\n",
                                    "method": "post",
                                    "is": [
                                        "locatable",
                                        "locationByCity"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "everywhereCommunity",
                                                    "example": "{\n  \"zip\": \"zip\",\n  \"lon\": 1.0,\n  \"meetup_count\": 100,\n  \"past_meetup_count\": 100,\n  \"state\": 100,\n  \"city\": \"city\",\n  \"country\": \"country\",\n  \"id\": 100,\n  \"updated\": 100,\n  \"udf_{varname}\": \"udf_{varname}\",\n  \"created\": 100,\n  \"container\": {\n    \"id\": 100,\n    \"name\": \"name\",\n    \"urlname\": \"urlname\"\n  },\n  \"name\": \"name\",\n  \"meetup_url\": \"meetup_url\",\n  \"urlname\": \"urlname\",\n  \"lat\": 1.0\n}\n",
                                                    "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"city\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"container\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"urlname\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"country\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"created\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"lat\": {\r\n      \"required\": false,\r\n      \"type\": \"number\"\r\n    },\r\n    \"lon\": {\r\n      \"required\": false,\r\n      \"type\": \"number\"\r\n    },\r\n    \"meetup_count\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"meetup_url\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"name\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"past_meetup_count\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"state\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"udf_{varname}\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"updated\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"urlname\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"zip\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    }\r\n  }\r\n}\r\n"
                                                }
                                            },
                                            "description": "|||\n|-|\n|city|Community city name|\n|container|Container for this community|\n|country|Community country code|\n|created|Community created time, in milliseconds since the epoch|\n|id|The ID of the community|\n|lat, lon|Latitude and longitude coordinates of the community|\n|meetup_count|Count of upcoming and pending Meetups in this community. Only included if requested in the fields parameter.|\n|meetup_url|User-facing URL for this community on Meetup|\n|name|Name of the community|\n|past_meetup_count|Count of past Meetups in this community. Only included if requested in the fields parameter.|\n|state|State or province code|\n|udf_{varname}|Any User defined fields specified in the fields parameter|\n|updated|Community updated time, in milliseconds since the epoch|\n|urlname|URL path to the community, as in http://www.meetup.com/{container_urlname}/{urlname} (no slashes)|\n|zip|Zip or postal code|\n"
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0",
                                        "oauth_1_0",
                                        "api_key"
                                    ],
                                    "queryParameters": {
                                        "fields": {
                                            "name": "fields",
                                            "displayName": "fields",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "Request that additional fields (separated by commas) be included in the output.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Community Get\n\n#Request Parameters\nNormal authorization parameters are required. The output may be adjusted as normal with format, as well as a fields specifier.\n",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "description": "If successful, this method returns a 200 OK response. The content body includes a success message."
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0",
                                        "oauth_1_0"
                                    ],
                                    "description": "Community Delete\nFor container owners. API method for removing a community. All events of the community will be removed as well.\n\n#Request Parameters\nNo parameters are required or considered other than for authorization and format. This method requires an HTTP DELETE\n",
                                    "method": "delete",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/{id}",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "{id}"
                            ]
                        }
                    ],
                    "displayName": "/community",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "community"
                    ]
                },
                {
                    "relativeUri": "/container",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "everywhereContainer",
                                            "example": "{\n  \"twitter_urlname\": \"twitter_urlname\",\n  \"member_count\": 100,\n  \"link_name\": \"link_name\",\n  \"meetup_count\": 100,\n  \"theme\": {\n    \"pageback_color\": \"pageback_color\",\n    \"link_color\": \"link_color\",\n    \"banner_height\": \"banner_height\",\n    \"button_color\": \"button_color\",\n    \"boxback_color\": \"boxback_color\",\n    \"banner_link\": \"banner_link\"\n  },\n  \"link\": \"link\",\n  \"past_meetup_count\": 100,\n  \"countries\": \"countries\",\n  \"facebook_urlname\": \"facebook_urlname\",\n  \"id\": 100,\n  \"updated\": 100,\n  \"udf_{varname}\": \"udf_{varname}\",\n  \"created\": 100,\n  \"description\": \"description\",\n  \"name\": \"name\",\n  \"meetup_url\": \"meetup_url\",\n  \"urlname\": \"urlname\",\n  \"founder\": {\n    \"member_state\": \"member_state\",\n    \"member_city\": \"member_city\",\n    \"name\": \"name\",\n    \"member_country\": \"member_country\",\n    \"member_id\": 100\n  }\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"countries\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"created\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"description\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"facebook_urlname\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"founder\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"member_city\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"member_country\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"member_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"member_state\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"link\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"link_name\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"meetup_count\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"meetup_url\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"member_count\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"name\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"past_meetup_count\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"theme\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"banner_height\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"banner_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"boxback_color\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"button_color\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"link_color\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"pageback_color\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"twitter_urlname\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"udf_{varname}\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"updated\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"urlname\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    }\r\n  }\r\n}\r\n"
                                        }
                                    },
                                    "description": "If successful, this method returns a 200 OK response. The content body is the same as that returned by Container Get."
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0"
                            ],
                            "description": "Container Create\n\n#Request Parameters\nThe required name parameter must be supplied with the request. This method requires an HTTP POST.\n",
                            "method": "post",
                            "is": [
                                "hasUserDefinedFields",
                                "hasContainerProperties"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/{id}",
                            "type": "meetupResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "uriParameters": {
                                "id": {
                                    "name": "id",
                                    "displayName": "id",
                                    "type": "string",
                                    "required": true,
                                    "repeat": false,
                                    "description": ":id in the path should be the id of a container",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "everywhereContainer",
                                                    "example": "{\n  \"twitter_urlname\": \"twitter_urlname\",\n  \"member_count\": 100,\n  \"link_name\": \"link_name\",\n  \"meetup_count\": 100,\n  \"theme\": {\n    \"pageback_color\": \"pageback_color\",\n    \"link_color\": \"link_color\",\n    \"banner_height\": \"banner_height\",\n    \"button_color\": \"button_color\",\n    \"boxback_color\": \"boxback_color\",\n    \"banner_link\": \"banner_link\"\n  },\n  \"link\": \"link\",\n  \"past_meetup_count\": 100,\n  \"countries\": \"countries\",\n  \"facebook_urlname\": \"facebook_urlname\",\n  \"id\": 100,\n  \"updated\": 100,\n  \"udf_{varname}\": \"udf_{varname}\",\n  \"created\": 100,\n  \"description\": \"description\",\n  \"name\": \"name\",\n  \"meetup_url\": \"meetup_url\",\n  \"urlname\": \"urlname\",\n  \"founder\": {\n    \"member_state\": \"member_state\",\n    \"member_city\": \"member_city\",\n    \"name\": \"name\",\n    \"member_country\": \"member_country\",\n    \"member_id\": 100\n  }\n}\n",
                                                    "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"countries\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"created\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"description\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"facebook_urlname\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"founder\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"member_city\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"member_country\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"member_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"member_state\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"link\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"link_name\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"meetup_count\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"meetup_url\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"member_count\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"name\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"past_meetup_count\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"theme\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"banner_height\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"banner_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"boxback_color\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"button_color\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"link_color\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"pageback_color\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"twitter_urlname\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"udf_{varname}\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"updated\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"urlname\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    }\r\n  }\r\n}\r\n"
                                                }
                                            },
                                            "description": "If successful, this method returns a 200 OK response. The content body is the same as that returned by Container Get."
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0",
                                        "oauth_1_0"
                                    ],
                                    "method": "post",
                                    "is": [
                                        "hasUserDefinedFields",
                                        "hasContainerProperties"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "everywhereContainer",
                                                    "example": "{\n  \"twitter_urlname\": \"twitter_urlname\",\n  \"member_count\": 100,\n  \"link_name\": \"link_name\",\n  \"meetup_count\": 100,\n  \"theme\": {\n    \"pageback_color\": \"pageback_color\",\n    \"link_color\": \"link_color\",\n    \"banner_height\": \"banner_height\",\n    \"button_color\": \"button_color\",\n    \"boxback_color\": \"boxback_color\",\n    \"banner_link\": \"banner_link\"\n  },\n  \"link\": \"link\",\n  \"past_meetup_count\": 100,\n  \"countries\": \"countries\",\n  \"facebook_urlname\": \"facebook_urlname\",\n  \"id\": 100,\n  \"updated\": 100,\n  \"udf_{varname}\": \"udf_{varname}\",\n  \"created\": 100,\n  \"description\": \"description\",\n  \"name\": \"name\",\n  \"meetup_url\": \"meetup_url\",\n  \"urlname\": \"urlname\",\n  \"founder\": {\n    \"member_state\": \"member_state\",\n    \"member_city\": \"member_city\",\n    \"name\": \"name\",\n    \"member_country\": \"member_country\",\n    \"member_id\": 100\n  }\n}\n",
                                                    "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"countries\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"created\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"description\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"facebook_urlname\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"founder\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"member_city\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"member_country\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"member_id\": {\r\n          \"required\": false,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"member_state\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"name\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"id\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"link\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"link_name\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"meetup_count\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"meetup_url\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"member_count\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"name\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"past_meetup_count\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"theme\": {\r\n      \"required\": false,\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"banner_height\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"banner_link\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"boxback_color\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"button_color\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"link_color\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        },\r\n        \"pageback_color\": {\r\n          \"required\": false,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"twitter_urlname\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"udf_{varname}\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    },\r\n    \"updated\": {\r\n      \"required\": false,\r\n      \"type\": \"integer\"\r\n    },\r\n    \"urlname\": {\r\n      \"required\": false,\r\n      \"type\": \"string\"\r\n    }\r\n  }\r\n}\r\n"
                                                }
                                            },
                                            "description": "|||\n|-|\n|countries|List of two-letter country codes where meetups have been scheduled in this container. Only included if requested in the fields parameter.|\n|created|Container created time, in milliseconds since the epoch|\n|description|Container description|\n|facebook_urlname|Facebook page associated with this container|\n|founder|Founder for this container|\n|id|The ID of the container|\n|link|URL associated with this container, usually off-site|\n|link_name|Name of the resource at link|\n|meetup_count|Count of upcoming and pending meetups in this container. Only included if requested in the fields parameter.|\n|meetup_url|User-facing URL for this container on Meetup|\n|member_count|Count of unique members who have rsvp'd to a meetup in this container. Only included if requested in the fields parameter.|\n|name|The name of the container|\n|past_meetup_count|Count of past meetups in this container. Only included if requested in the fields parameter.|\n|theme|Custom appearance for this container, if any|\n|twitter_urlname|Twitter account name associated with this container|\n|udf_{varname}|Any User defined fields specified in the fields parameter|\n|updated|Container updated time, in milliseconds since the epoch|\n|urlname|URL path to the container, as in http://www.meetup.com/ (no slashes)|\n"
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0",
                                        "oauth_1_0",
                                        "api_key"
                                    ],
                                    "queryParameters": {
                                        "fields": {
                                            "name": "fields",
                                            "displayName": "fields",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "Request that additional fields (separated by commas) be included in the output",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Container Get\n\n#Request Parameters\nNormal authorization parameters are required. The output may be adjusted as normal with format, as well as a fields specifier\n",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "resources": [
                                {
                                    "relativeUri": "/alerts",
                                    "type": "meetupResource",
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "methods": [
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "description": "Response item includes properties for the authenticated user's alerts by category. These are enabled at the container level, but sent only for events the user has rsvpd to."
                                                },
                                                "404": {
                                                    "code": "404",
                                                    "description": "If the authenticated user has not subscribed to alerts for the container, a 404 response is returned."
                                                }
                                            },
                                            "protocols": [
                                                "HTTPS"
                                            ],
                                            "securedBy": [
                                                "oauth_2_0",
                                                "oauth_1_0",
                                                "api_key"
                                            ],
                                            "description": "Alerts Get\n\n#Request Parameters\nNo parameters are required or considered other than for authorization and format.\n",
                                            "method": "get",
                                            "is": [
                                                "list",
                                                "hasEverywhereContainerAlertProperties"
                                            ],
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "description": "If successful, this method returns a 200 OK response. The content body is the same as that returned by Alerts Get."
                                                },
                                                "404": {
                                                    "code": "404",
                                                    "description": "If a 404 response is returned, the user has not subscribed to any alerts for this container and should rsvp to an event first."
                                                }
                                            },
                                            "protocols": [
                                                "HTTPS"
                                            ],
                                            "securedBy": [
                                                "oauth_2_0",
                                                "oauth_1_0"
                                            ],
                                            "description": "Alerts Edit\n\n#Request Parameters\nAll parameters are optional, updates alerts for the authenticated user. This method requires an HTTP POST.\n",
                                            "method": "post",
                                            "is": [
                                                "hasEverywhereContainerAlertProperties"
                                            ],
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/alerts",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "securedBy": {
                                                "calculated": true
                                            },
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "alerts"
                                    ]
                                }
                            ],
                            "displayName": "/{id}",
                            "description": "Container Edit\n\n#Request Parameters\nAll parameters are optional, will update the container when provided. You must be authenticated as the founder, and this method requires an HTTP POST.\n",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "{id}"
                            ]
                        }
                    ],
                    "displayName": "/container",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "container"
                    ]
                }
            ],
            "displayName": "/ew",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "ew"
            ]
        },
        {
            "relativeUri": "/recommended",
            "securedBy": [
                "oauth_2_0"
            ],
            "resources": [
                {
                    "relativeUri": "/groups",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "groups",
                                            "example": "{\n  \"results\": [\n    {\n      \"visibility\": \"visibility 0\",\n      \"is_simplehtml\": \"is_simplehtml 0\",\n      \"link\": \"link 0\",\n      \"next_event\": {\n        \"id\": 0,\n        \"time\": 0,\n        \"name\": \"name 0\"\n      },\n      \"state\": 0,\n      \"join_mode\": \"join_mode 0\",\n      \"who\": \"who 0\",\n      \"city\": \"city 0\",\n      \"id\": 0,\n      \"timezone\": \"timezone 0\",\n      \"created\": 0,\n      \"list_addr\": \"list_addr 0\",\n      \"description\": \"description 0\",\n      \"ga_code\": \"ga_code 0\",\n      \"name\": \"name 0\",\n      \"urlname\": \"urlname 0\",\n      \"lat\": 1.0,\n      \"members\": \"members 0\",\n      \"list_mode\": \"list_mode 0\",\n      \"lon\": 1.0,\n      \"join_info\": {\n        \"questions\": {\n          \"id\": 0,\n          \"question\": \"question 0\"\n        },\n        \"intro_required\": \"intro_required 0\",\n        \"questions_req\": \"questions_req 0\",\n        \"photo_required\": \"photo_required 0\"\n      },\n      \"organizer\": {\n        \"id\": 0,\n        \"bio\": \"bio 0\",\n        \"name\": \"name 0\"\n      },\n      \"country\": \"country 0\",\n      \"photos\": {\n        \"id\": 0,\n        \"photo_link\": \"photo_link 0\",\n        \"highres_link\": \"highres_link 0\",\n        \"thumb_link\": \"thumb_link 0\"\n      },\n      \"category\": {\n        \"id\": 0,\n        \"name\": \"name 0\",\n        \"shortname\": \"shortname 0\"\n      },\n      \"group_photo\": {\n        \"id\": 0,\n        \"photo_link\": \"photo_link 0\",\n        \"highres_link\": \"highres_link 0\",\n        \"thumb_link\": \"thumb_link 0\"\n      },\n      \"simple_html_description\": \"simple_html_description 0\"\n    },\n    {\n      \"visibility\": \"visibility 1\",\n      \"is_simplehtml\": \"is_simplehtml 1\",\n      \"link\": \"link 1\",\n      \"next_event\": {\n        \"id\": 1,\n        \"time\": 1,\n        \"name\": \"name 1\"\n      },\n      \"state\": 1,\n      \"join_mode\": \"join_mode 1\",\n      \"who\": \"who 1\",\n      \"city\": \"city 1\",\n      \"id\": 1,\n      \"timezone\": \"timezone 1\",\n      \"created\": 1,\n      \"list_addr\": \"list_addr 1\",\n      \"description\": \"description 1\",\n      \"ga_code\": \"ga_code 1\",\n      \"name\": \"name 1\",\n      \"urlname\": \"urlname 1\",\n      \"lat\": 1.0,\n      \"members\": \"members 1\",\n      \"list_mode\": \"list_mode 1\",\n      \"lon\": 1.0,\n      \"join_info\": {\n        \"questions\": {\n          \"id\": 1,\n          \"question\": \"question 1\"\n        },\n        \"intro_required\": \"intro_required 1\",\n        \"questions_req\": \"questions_req 1\",\n        \"photo_required\": \"photo_required 1\"\n      },\n      \"organizer\": {\n        \"id\": 1,\n        \"bio\": \"bio 1\",\n        \"name\": \"name 1\"\n      },\n      \"country\": \"country 1\",\n      \"photos\": {\n        \"id\": 1,\n        \"photo_link\": \"photo_link 1\",\n        \"highres_link\": \"highres_link 1\",\n        \"thumb_link\": \"thumb_link 1\"\n      },\n      \"category\": {\n        \"id\": 1,\n        \"name\": \"name 1\",\n        \"shortname\": \"shortname 1\"\n      },\n      \"group_photo\": {\n        \"id\": 1,\n        \"photo_link\": \"photo_link 1\",\n        \"highres_link\": \"highres_link 1\",\n        \"thumb_link\": \"thumb_link 1\"\n      },\n      \"simple_html_description\": \"simple_html_description 1\"\n    }\n  ]\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"category\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"shortname\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"city\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"country\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"created\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"description\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"ga_code\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"group_photo\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"highres_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"photo_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"thumb_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"is_simplehtml\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"join_info\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"intro_required\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"photo_required\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"questions\": {\r\n                \"required\": false,\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"id\": {\r\n                    \"required\": false,\r\n                    \"type\": \"integer\"\r\n                  },\r\n                  \"question\": {\r\n                    \"required\": false,\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              },\r\n              \"questions_req\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"join_mode\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"lat\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"link\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"list_addr\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"list_mode\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"lon\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"members\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"next_event\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"time\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              }\r\n            }\r\n          },\r\n          \"organizer\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"bio\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"name\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"photos\": {\r\n            \"required\": false,\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"highres_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"id\": {\r\n                \"required\": false,\r\n                \"type\": \"integer\"\r\n              },\r\n              \"photo_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              },\r\n              \"thumb_link\": {\r\n                \"required\": false,\r\n                \"type\": \"string\"\r\n              }\r\n            }\r\n          },\r\n          \"simple_html_description\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"state\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"timezone\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"urlname\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"visibility\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"who\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
                                        }
                                    },
                                    "description": "|||\n|-|\n|category|The primary category of the group, if the group has one|\n|city|City of the group|\n|country|Country of the group|\n|created|Time the group was created in milliseconds since the epoch|\n|description|Short description of group|\n|ga_code|Optional field return the google analytics code for the group. Only members that can edit group settings can see this|\n|group_photo|Group photo|\n|id|Numeric group ID|\n|is_simplehtml|Optional field, 'true' when the group description has been saved in a simplified HTML format, 'false' otherwise.|\n|join_info|Optional field, lists any questions requested when joining and required fields|\n|join_mode|Who can join this group and how. One of approval, closed, open|\n|lat|Latitude|\n|link|Link to group on meetup.com|\n|list_addr|Optional field returning list address prefix. List mail will be {list_addr}-list@meetup.com. Announce email will be {list_addr}-announce@meetup.com. You must be a member of the group to see this|\n|list_mode|Optional fields parameter representing the policy for who can post the the group mailing list. One of moderated, off, open, orgs_only|\n|lon|Longitude|\n|members|Number of Meetup members in this group|\n|name|Name of the group|\n|next_event|The next upcoming event, if the group has one|\n|organizer|Group's primary organizer|\n|photos|A small set of photos from the group|\n|simple_html_description|Description of the group, in simple HTML format. This value is translated to HTML to update the description.|\n|state|State of the group, if in US or Canada|\n|timezone|This represents the universal timezone identifier for the group|\n|urlname|Urlname used to identify the group on meetup.com|\n|visibility|Who can see this group. One of members, public or public_limited|\n|who|What the group calls its members|\n"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0",
                                "api_key"
                            ],
                            "queryParameters": {
                                "category": {
                                    "name": "category",
                                    "displayName": "category",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "A valid category id which limits recommended groups to a particular category",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "country": {
                                    "name": "country",
                                    "displayName": "country",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "A valid two character country code, defaults to US",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "fields": {
                                    "name": "fields",
                                    "displayName": "fields",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Request that additional fields (separated by commas) be included in the output.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "location": {
                                    "name": "location",
                                    "displayName": "location",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Raw text location query",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "radius": {
                                    "name": "radius",
                                    "displayName": "radius",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Radius in miles. May be 0.0-100.0, 'global' or 'smart', a dynamic radius based on the number of active groups in the area",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "topic_id": {
                                    "name": "topic_id",
                                    "displayName": "topic_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Comma delimited list of up to 100 topic ids to help inform recommendations",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "zip": {
                                    "name": "zip",
                                    "displayName": "zip",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Zip code you are searching for recommendations in",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Returns groups Meetup finds relevant to you\n\n#Request Parameters\nAll parameters are optional. You may change the 'location' and 'radius' for the request. If you do not supply a location your request will be based on your IP's geographic location. If the server is unable to produce recommendations in a suitable amount of time, a 503 error will be returned.\n",
                            "method": "get",
                            "is": [
                                "list",
                                "locatable"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/groups",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "groups"
                    ]
                },
                {
                    "relativeUri": "/venues",
                    "type": "meetupResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "groupVenues",
                                            "example": "{\n  \"results\": [\n    {\n      \"id\": 0,\n      \"zip\": \"zip 0\",\n      \"phone\": 0,\n      \"lon\": 1.0,\n      \"address_3\": \"address_3 0\",\n      \"visibility\": \"visibility 0\",\n      \"name\": \"name 0\",\n      \"state\": 0,\n      \"address_1\": \"address_1 0\",\n      \"address_2\": \"address_2 0\",\n      \"lat\": 1.0,\n      \"country\": \"country 0\",\n      \"city\": \"city 0\"\n    },\n    {\n      \"id\": 1,\n      \"zip\": \"zip 1\",\n      \"phone\": 1,\n      \"lon\": 1.0,\n      \"address_3\": \"address_3 1\",\n      \"visibility\": \"visibility 1\",\n      \"name\": \"name 1\",\n      \"state\": 1,\n      \"address_1\": \"address_1 1\",\n      \"address_2\": \"address_2 1\",\n      \"lat\": 1.0,\n      \"country\": \"country 1\",\n      \"city\": \"city 1\"\n    }\n  ]\n}\n",
                                            "schemaContent": "{\r\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\r\n  \"required\": true,\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"results\": {\r\n      \"required\": false,\r\n      \"type\": \"array\",\r\n      \"items\": {\r\n        \"required\": false,\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"address_1\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"address_2\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"address_3\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"city\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"country\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"id\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"lat\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"lon\": {\r\n            \"required\": false,\r\n            \"type\": \"number\"\r\n          },\r\n          \"name\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"phone\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"state\": {\r\n            \"required\": false,\r\n            \"type\": \"integer\"\r\n          },\r\n          \"visibility\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          \"zip\": {\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"
                                        }
                                    },
                                    "description": "|||\n|-|\n|address_1|If available, the first address line of the venue|\n|address_2|If available, the second address line of the venue|\n|address_3|If available, the third address line of the venue|\n|city|If available, the name of the venue's city|\n|country|If available, the name of the venue's country code|\n|id|ID, of the venue|\n|lat|If available, the venue's latitude|\n|lon|If available, the venue's longitude|\n|name|If available, the venue's name|\n|phone|If available, the venue's photo number|\n|state|If available and the venue's country id within the US or Canada, the venue's state|\n|visibility|'private' if this venue is a private home, otherwise 'public'|\n|zip|If available, the venue's zipcode|\n"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0",
                                "oauth_1_0",
                                "api_key"
                            ],
                            "queryParameters": {
                                "category": {
                                    "name": "category",
                                    "displayName": "category",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Comma-delimited list of up to 200 category ids to help inform recommendations",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "country": {
                                    "name": "country",
                                    "displayName": "country",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "A valid two character country code, defaults to US",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "group_id": {
                                    "name": "group_id",
                                    "displayName": "group_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Comma-delimited list of up to 200 group ids to help inform recommendations",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "group_urlname": {
                                    "name": "group_urlname",
                                    "displayName": "group_urlname",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Comma-delimited list of up to 200 group urlnames to help inform recommendations",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "location": {
                                    "name": "location",
                                    "displayName": "location",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Raw text location query",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "min_groups": {
                                    "name": "min_groups",
                                    "displayName": "min_groups",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The minimum number of groups that have hosted events at this venue",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "radius": {
                                    "name": "radius",
                                    "displayName": "radius",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Radius in miles",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "used_between": {
                                    "name": "used_between",
                                    "displayName": "used_between",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Return venues that have been used within the given time range, defined by two times separated with a single comma. Each end of the range may be specified with relative dates, such as \"1m\" for one month from now, or by absolute time in milliseconds since the epoch. If an endpoint is omitted, the range is unbounded on that end. The default value is unbounded on both ends (though restricted to the search window described above).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "zip": {
                                    "name": "zip",
                                    "displayName": "zip",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Zip code you are searching for recommendations in",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Returns venues Meetup finds relevant to you based on location and category. This method does not yet support sorting or pagination.\n\n#Request Parameters\nAll parameters are optional. If you do not supply a location your request will be based on your IP's geographic location. If the server is unable to produce recommendations in a suitable amount of time, a 503 error will be returned.\n",
                            "method": "get",
                            "is": [
                                "list",
                                "locatable"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/venues",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "venues"
                    ]
                }
            ],
            "displayName": "/recommended",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "recommended"
            ]
        }
    ],
    "documentation": [
        {
            "title": "Headline",
            "content": "Meetup is an online social networking portal that facilitates offline group meetings in various localities around the world. Meetup allows members to find and join groups unified by a common interest, such as politics, books, games, movies, health, pets, careers or hobbies."
        }
    ]
}