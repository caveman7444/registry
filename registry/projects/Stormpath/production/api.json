{
    "title": "StormPath",
    "version": "v1",
    "baseUri": "https://api.stormpath.com/{version}",
    "baseUriParameters": {
        "version": {
            "name": "version",
            "displayName": "version",
            "type": "string",
            "required": true,
            "repeat": false,
            "enum": [
                "v1"
            ],
            "__METADATA__": {
                "calculated": true,
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    },
                    "type": {
                        "insertedAsDefault": true
                    },
                    "required": {
                        "insertedAsDefault": true
                    },
                    "repeat": {
                        "insertedAsDefault": true
                    },
                    "enum": {
                        "calculated": true
                    }
                }
            }
        }
    },
    "protocols": [
        "HTTPS"
    ],
    "mediaType": "application/json",
    "schemas": [
        {
            "Group": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"status\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "GroupResponse": "{\r\n  \"required\" : true ,\r\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\r\n  \"type\" : \"object\" ,\r\n  \"properties\" : {\r\n    \"href\" : {\r\n      \"type\" : \"string\" ,\r\n      \"required\" : false\r\n    } ,\r\n    \"name\" : {\r\n      \"type\" : \"string\" ,\r\n      \"required\" : false\r\n    } ,\r\n    \"description\" : {\r\n      \"type\" : \"string\" ,\r\n      \"required\" : false\r\n    } ,\r\n    \"status\" : {\r\n      \"type\" : \"string\" ,\r\n      \"required\" : false\r\n    } ,\r\n    \"directory\" : {\r\n      \"type\" : \"object\" ,\r\n      \"required\" : false ,\r\n      \"properties\" : {\r\n        \"href\" : {\r\n          \"type\" : \"string\" ,\r\n          \"required\" : false\r\n        }\r\n      }\r\n    } ,\r\n    \"tenant\" : {\r\n      \"type\" : \"object\" ,\r\n      \"required\" : false ,\r\n      \"properties\" : {\r\n        \"href\" : {\r\n          \"type\" : \"string\" ,\r\n          \"required\" : false\r\n        }\r\n      }\r\n    } ,\r\n    \"accounts\" : {\r\n      \"type\" : \"object\" ,\r\n      \"required\" : false ,\r\n      \"properties\" : {\r\n        \"href\" : {\r\n          \"type\" : \"string\" ,\r\n          \"required\" : false\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
        },
        {
            "loginAttempt": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"type\" : {\n      \"type\" : \"string\" ,\n      \"required\" : true\n    } ,\n    \"value\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"accountStore\" : {\n      \"type\" : \"string\" ,\n      \"required\" : true\n    }\n  }\n}"
        },
        {
            "TenantAplications": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"offset\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"limit\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"items\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"href\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "RetrieveTenant": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"key\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"applications\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"directories\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
        },
        {
            "DirectoriesList": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"offset\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"limit\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"items\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"href\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "CreateAplicationresp": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"status\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"tenant\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"accounts\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"groups\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"passwordResetTokens\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
        },
        {
            "ReturnHrefAttribute": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"status\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"tenant\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"accounts\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"groups\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"passwordResetTokens\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
        },
        {
            "UpdateApplicationresp": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"status\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"tenant\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"accounts\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"groups\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"passwordResetTokens\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
        },
        {
            "LoginAttempt": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"account\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
        },
        {
            "LoginAttemptFailure": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"status\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"code\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"message\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"developerMessage\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"moreInfo\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "RegisterAccount": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"username\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"email\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"givenName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"middleName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"surname\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"password\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"status\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "RegisterAccountresp": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"username\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"email\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"fullName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"givenName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"middleName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"surname\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"status\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"customData\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"groups\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"groupMemberships\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"directory\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"tenant\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"emailVerificationToken\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "AccountsListresp": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"offset\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"limit\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"items\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"href\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "GroupsList": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"offset\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"limit\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"items\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"href\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "ResetEmail": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"email\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "ResetEmailresp": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"email\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"account\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
        },
        {
            "ResetEmailFailure": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"status\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"code\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"message\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"developerMessage\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"moreInfo\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "RetrievingTokenResource": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"email\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"account\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
        },
        {
            "RetrievingTokenResourceFailure": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"status\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"code\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"message\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"developerMessage\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"moreInfo\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "StoreMappingsList": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"offset\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"limit\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"items\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"href\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "UpdateApplication": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "CreateAplication": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"status\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "AccountStoreMapping": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"application\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"accountStore\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"isDefaultAccountStore\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"isDefaultGroupStore\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "RetrieveAccountStoreMappings": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"accountStore\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"application\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"listIndex\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"isDefaultAccountStore\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"isDefaultGroupStore\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "UpdateAccountStoreMapping": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"isDefaultAccountStore\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "UpdateAccountStoreMappingresp": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"accountStore\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"application\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"listIndex\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"isDefaultAccountStore\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"isDefaultGroupStore\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "AccountStoreMappingresp": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"accountStore\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"application\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"listIndex\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"isDefaultAccountStore\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"isDefaultGroupStore\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "CreateCloudDirectory": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "CreateCloudDirectoryresp": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"status\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"tenant\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"accounts\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"groups\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
        },
        {
            "RetrieveDirectory": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"status\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"accounts\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"groups\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"tenant\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
        },
        {
            "UpdateDirectory": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "UpdateDirectoryresp": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"status\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"tenant\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"accounts\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"groups\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
        },
        {
            "DirectoryAccountsList": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"offset\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"limit\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"items\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"href\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "CreateAccount": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"username\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"email\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"givenName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"surname\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"password\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "CreateAccountresp": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"username\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"email\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"fullName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"givenName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"middleName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"surname\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"status\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"customData\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"groups\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"groupMemberships\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"directory\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"tenant\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"emailVerificationToken\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
        },
        {
            "RetrieveGroup": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"status\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"directory\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"tenant\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"accounts\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
        },
        {
            "UpdateGroup": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "GroupMembershipsList": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"offset\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"limit\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"items\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"href\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"account\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"href\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"group\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"href\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "CreateGroupMembership": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"account\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"group\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
        },
        {
            "CreateGroupMembershipresp": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"account\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"group\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
        },
        {
            "RetrieveGroupMembership": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"account\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"group\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
        },
        {
            "RetrieveAccount": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"username\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"email\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"fullName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"givenName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"middleName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"surname\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"status\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"customData\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"groups\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"groupMemberships\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"directory\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"tenant\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"emailVerificationToken\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "UpdateAccount": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"username\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"givenName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"surname\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "AccountGroupsList": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"offset\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"limit\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"items\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"href\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"description\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"status\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"directory\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"href\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"tenant\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"href\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"accounts\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"href\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"accountMemberships\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"href\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "RetrieveAccountCustomData": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"createdAt\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"modifiedAt\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"birthDate\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"favoriteColor\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "UpdateAccountCustomData": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"favoriteColor\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"hobby\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "UpdateAccountCustomDataresp": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"createdAt\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"modifiedAt\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"birthDate\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"favoriteColor\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"hobby\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "EmailVerificationTokens": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "UpdateAccountresp": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"username\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"email\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"fullName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"givenName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"middleName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"surname\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"status\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"customData\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"groups\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"groupMemberships\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"directory\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"tenant\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"emailVerificationToken\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "LoginAttemp": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"account\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
        }
    ],
    "traits": [
        {
            "query": {
                "securedBy": [
                    "basic"
                ],
                "queryParameters": {
                    "limit": {
                        "name": "limit",
                        "displayName": "limit",
                        "type": "integer",
                        "required": false,
                        "default": 25,
                        "repeat": false,
                        "description": "The maximum number of collection items to return for a single request. Minimum value is 1. The maximum value is 100 and the default value is 25. This is a pagination-specific attribute.",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "orderBy": {
                        "name": "orderBy",
                        "displayName": "orderBy",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "A request for a Collection Resource can contain an optional orderBy query parameter. The query parameter value is a URL-encoded comma-delimited list of ordering statements.",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "q": {
                        "name": "q",
                        "displayName": "q",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "A filter search consists of specifying a q query parameter and a corresponding search value on a Collection",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "offset": {
                        "name": "offset",
                        "displayName": "offset",
                        "type": "integer",
                        "required": false,
                        "default": 0,
                        "repeat": false,
                        "description": "The zero-based starting index in the entire collection of the first item to return. The default value is 0. This is a pagination-specific attribute.",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "name": "query",
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                }
            }
        }
    ],
    "securedBy": [
        "basic"
    ],
    "securitySchemes": [
        {
            "basic": {
                "name": "basic",
                "type": "Basic Authentication"
            }
        },
        {
            "digest": {
                "name": "digest",
                "type": "x-digest-schema",
                "description": "Stormpath also supports a more secure authentication scheme known as digest authentication.\nThis approach computes a cryptographic digest of the request and sends the digest value\nalong with the request. If the transmitted digest matches what the Stormpath API server\ncomputes for the same request, the request is authenticated.\n\nThis technique is especially secure because the API key secret is never transmitted outside\nof the application, making it extremely difficult for anything (or anyone) outside of the\napplication to interfere with a request or see the secret.\n\nWe recommend using digest authentication whenever possible because it is inherently more\nsecure. However, due to its complexity, it might not be feasible for some projects.\n\nAll Stormpath SDKs (currently Java, Ruby, PHP, and Python) use this more secure digest\nauthentication so we recommend that you use the SDKs whenever possible. However, if we do not\nyet have an SDK for your programming language, you should use basic authentication over HTTPS.\n\nFinally, if you would like to use Stormpath digest authentication in a programming language\nthat Stormpath does not yet support, you can attempt to port the algorithm to that language.\nYou can try to replicate the algorithm and use Stormpath existing code as examples to help:\n\nJava: Sauthc1Signer (the sign method) https://github.com/stormpath/stormpath-sdk-java/blob/master/impl/src/main/java/com/stormpath/sdk/impl/http/authc/Sauthc1Signer.java\nRuby: Sauthc1Signer (the sign_request method) https://github.com/stormpath/stormpath-sdk-ruby/blob/master/lib/stormpath-sdk/http/authc/sauthc1_signer.rb\nPHP: Sauthc1Signer (the signRequest method) https://github.com/stormpath/stormpath-sdk-php/blob/master/src/Stormpath/Http/Authc/Sauthc1Signer.php\nPython: Sauthc1Signer (the call method) https://github.com/stormpath/stormpath-sdk-python/blob/master/stormpath/auth.py\n\nIf you port the algorithm to other languages, please let us know. We are happy to help.\nEmail us at support@stormpath.com and we will help as best as we can.\n",
                "describedBy": {
                    "securedBy": [
                        "basic"
                    ],
                    "headers": {
                        "Authorisation": {
                            "name": "Authorisation",
                            "displayName": "Authorisation",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            }
        }
    ],
    "resourceTypes": [
        {
            "stormpathResource": {
                "name": "stormpathResource",
                "securedBy": [
                    "basic",
                    "digest"
                ],
                "get": {
                    "responses": {
                        "200": {
                            "code": "200",
                            "description": "OK. The request was successful and the response body contains the representation requested."
                        },
                        "302": {
                            "code": "302",
                            "description": "FOUND. A common redirect response; you can GET the representation at the URI in the location response header."
                        },
                        "304": {
                            "code": "304",
                            "description": "NOT MODIFIED. Your clients cached version of the representation is still up to date."
                        },
                        "401": {
                            "code": "401",
                            "description": "UNAUTHORIZED. Authentication credentials are required to access the resource. All requests must be authenticated."
                        },
                        "403": {
                            "code": "403",
                            "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                        },
                        "404": {
                            "code": "404",
                            "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                        },
                        "429": {
                            "code": "429",
                            "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                        },
                        "500": {
                            "code": "500",
                            "description": "SERVER ERROR. We could not return the representation due to an internal server error."
                        },
                        "503": {
                            "code": "503",
                            "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                        }
                    },
                    "securedBy": [
                        "basic",
                        "digest"
                    ],
                    "method": "get",
                    "__METADATA__": {
                        "optional": true,
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                },
                "post": {
                    "responses": {
                        "201": {
                            "code": "201",
                            "description": "CREATED. The request was successful, we created a new resource, and the response body contains the representation. The Location header contains the new resources canonical URI."
                        },
                        "400": {
                            "code": "400",
                            "description": "BAD REQUEST. The data given in the POST or PUT failed validation. Inspect the response body for details."
                        },
                        "401": {
                            "code": "401",
                            "description": "UNAUTHORIZED. Authentication credentials are required to access the resource. All requests must be authenticated."
                        },
                        "403": {
                            "code": "403",
                            "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                        },
                        "404": {
                            "code": "404",
                            "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                        },
                        "405": {
                            "code": "405",
                            "description": "METHOD NOT ALLOWED. POST is not supported for the resource."
                        },
                        "409": {
                            "code": "409",
                            "description": "CONFLICT. You cannot create or update a resource because another resource already exists or conflicts with one you are submitting."
                        },
                        "415": {
                            "code": "415",
                            "description": "UNSUPPORTED MEDIA TYPE. You did not specify the request Content-Type header to have a value of application/json. Only application/json is currently supported."
                        },
                        "429": {
                            "code": "429",
                            "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                        },
                        "500": {
                            "code": "500",
                            "description": "SERVER ERROR. We could not create or update the resource. Please try again."
                        },
                        "503": {
                            "code": "503",
                            "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                        }
                    },
                    "securedBy": [
                        "basic",
                        "digest"
                    ],
                    "method": "post",
                    "__METADATA__": {
                        "optional": true,
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                },
                "delete": {
                    "responses": {
                        "204": {
                            "code": "204",
                            "description": "NO CONTENT. The request was successful; the resource was deleted. The deleted resource representation will not be returned."
                        },
                        "401": {
                            "code": "401",
                            "description": "UNAUTHORIZED. The supplied credentials, if any, are not sufficient to create or update the resource."
                        },
                        "403": {
                            "code": "403",
                            "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                        },
                        "404": {
                            "code": "404",
                            "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                        },
                        "405": {
                            "code": "405",
                            "description": "METHOD NOT ALLOWED. DELETE is not supported for the resource."
                        },
                        "429": {
                            "code": "429",
                            "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                        },
                        "500": {
                            "code": "500",
                            "description": "SERVER ERROR. We could not create or update the resource. Please try again."
                        },
                        "503": {
                            "code": "503",
                            "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                        }
                    },
                    "securedBy": [
                        "basic",
                        "digest"
                    ],
                    "method": "delete",
                    "__METADATA__": {
                        "optional": true,
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            }
        }
    ],
    "resources": [
        {
            "relativeUri": "/tenants",
            "type": "stormpathResource",
            "securedBy": [
                "basic",
                "digest"
            ],
            "resources": [
                {
                    "relativeUri": "/current",
                    "type": "stormpathResource",
                    "securedBy": [
                        "basic",
                        "digest"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "description": "OK. The request was successful and the response body contains the representation requested."
                                },
                                "302": {
                                    "code": "302",
                                    "description": "FOUND. A common redirect response; you can GET the representation at the URI in the location response header."
                                },
                                "304": {
                                    "code": "304",
                                    "description": "NOT MODIFIED. Your clients cached version of the representation is still up to date."
                                },
                                "401": {
                                    "code": "401",
                                    "description": "UNAUTHORIZED. Authentication credentials are required to access the resource. All requests must be authenticated."
                                },
                                "403": {
                                    "code": "403",
                                    "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                                },
                                "404": {
                                    "code": "404",
                                    "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                                },
                                "429": {
                                    "code": "429",
                                    "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                                },
                                "500": {
                                    "code": "500",
                                    "description": "SERVER ERROR. We could not return the representation due to an internal server error."
                                },
                                "503": {
                                    "code": "503",
                                    "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "basic",
                                "digest"
                            ],
                            "description": "Because a REST caller can retrieve one and only one Tenant resource, it is often more convenient not to be concerned with the Tenant-specific URL is when performing a request, and instead use a simpler permanent alias.\n\nYou can request the current Tenant resource, and the API server will automatically issue a 302 redirect to the Tenant resource corresponding to the currently executing API caller. In other words, this endpoint redirects the API caller to their own Tenantâ€™s URI.\n",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/current",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "current"
                    ]
                },
                {
                    "relativeUri": "/{tenantId}",
                    "type": "stormpathResource",
                    "securedBy": [
                        "basic",
                        "digest"
                    ],
                    "uriParameters": {
                        "tenantId": {
                            "name": "tenantId",
                            "displayName": "tenantId",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "RetrieveTenant",
                                            "example": "{\n  \"href\" : \"https://api.stormpath.com/v1/tenants/cJoiwcorTTmkDDBsf02AbA\" ,\n  \"name\" : \"My Tenant\" ,\n  \"key\" : \"myTenant\" ,\n  \"applications\" : {\n    \"href\" : \"https://api.stormpath.com/v1/tenants/cJoiwcorTTmkDDBsf02AbA/applications\"\n  } ,\n  \"directories\" : {\n    \"href\" : \"https://api.stormpath.com/v1/tenants/cJoiwcorTTmkDDBsf02AbA/directories\"\n  }\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"key\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"applications\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"directories\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
                                        }
                                    },
                                    "description": "OK. The request was successful and the response body contains the representation requested."
                                },
                                "302": {
                                    "code": "302",
                                    "description": "FOUND. A common redirect response; you can GET the representation at the URI in the location response header."
                                },
                                "304": {
                                    "code": "304",
                                    "description": "NOT MODIFIED. Your clients cached version of the representation is still up to date."
                                },
                                "401": {
                                    "code": "401",
                                    "description": "UNAUTHORIZED. Authentication credentials are required to access the resource. All requests must be authenticated."
                                },
                                "403": {
                                    "code": "403",
                                    "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                                },
                                "404": {
                                    "code": "404",
                                    "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                                },
                                "429": {
                                    "code": "429",
                                    "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                                },
                                "500": {
                                    "code": "500",
                                    "description": "SERVER ERROR. We could not return the representation due to an internal server error."
                                },
                                "503": {
                                    "code": "503",
                                    "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "basic",
                                "digest"
                            ],
                            "description": "Execute a GET request with the tenant URI to retrieve the Tenant resource. You may only retrieve your own Tenant: every API Key that executes REST requests is associated with a Tenant, and the request caller may only retrieve the Tenant corresponding to the API Key used.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/applications",
                            "type": "stormpathResource",
                            "securedBy": [
                                "basic",
                                "digest"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "TenantAplications",
                                                    "example": "{\n  \"href\" : \"https://api.stormpath.com/v1/tenants/cJoiwcorTTmkDDBsf02AbA/applications\" ,\n  \"offset\" : 0 ,\n  \"limit\" : 25 ,\n  \"items\" : [\n    {\n      \"href\" : \"https://api.stormpath.com/v1/applications/WpM9nyZ2TbaEzfbRvLk9KA\"\n    } , {\n      \"href\" : \"https://api.stormpath.com/v1/applications/aLlyOUrBAse34js9hjiH9j\"\n    } , {\n      \"href\" : \"https://api.stormpath.com/v1/applications/Xhf0a9HLA02djsdP90dsQ2\"\n    }\n  ]\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"offset\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"limit\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"items\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"href\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                                }
                                            },
                                            "description": "OK. The request was successful and the response body contains the representation requested."
                                        },
                                        "302": {
                                            "code": "302",
                                            "description": "FOUND. A common redirect response; you can GET the representation at the URI in the location response header."
                                        },
                                        "304": {
                                            "code": "304",
                                            "description": "NOT MODIFIED. Your clients cached version of the representation is still up to date."
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "UNAUTHORIZED. Authentication credentials are required to access the resource. All requests must be authenticated."
                                        },
                                        "403": {
                                            "code": "403",
                                            "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                                        },
                                        "429": {
                                            "code": "429",
                                            "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                                        },
                                        "500": {
                                            "code": "500",
                                            "description": "SERVER ERROR. We could not return the representation due to an internal server error."
                                        },
                                        "503": {
                                            "code": "503",
                                            "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "basic",
                                        "digest"
                                    ],
                                    "queryParameters": {
                                        "name": {
                                            "name": "name",
                                            "displayName": "name",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "The name of the application. Must be unique across all applications within a tenant.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "limit": {
                                            "name": "limit",
                                            "displayName": "limit",
                                            "type": "integer",
                                            "required": false,
                                            "default": 25,
                                            "repeat": false,
                                            "description": "The maximum number of collection items to return for a single request. Minimum value is 1. The maximum value is 100 and the default value is 25. This is a pagination-specific attribute.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "orderBy": {
                                            "name": "orderBy",
                                            "displayName": "orderBy",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "A request for a Collection Resource can contain an optional orderBy query parameter. The query parameter value is a URL-encoded comma-delimited list of ordering statements.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "q": {
                                            "name": "q",
                                            "displayName": "q",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "A filter search consists of specifying a q query parameter and a corresponding search value on a Collection",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "offset": {
                                            "name": "offset",
                                            "displayName": "offset",
                                            "type": "integer",
                                            "required": false,
                                            "default": 0,
                                            "repeat": false,
                                            "description": "The zero-based starting index in the entire collection of the first item to return. The default value is 0. This is a pagination-specific attribute.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "You can list your tenants applications by sending a GET request to your tenants applications Collection Resource href URL. The response is a paginated list of tenant applications.",
                                    "method": "get",
                                    "is": [
                                        "query"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/applications",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "applications"
                            ]
                        },
                        {
                            "relativeUri": "/directories",
                            "type": "stormpathResource",
                            "securedBy": [
                                "basic",
                                "digest"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "DirectoriesList",
                                                    "example": "{\n  \"href\" : \"https://api.stormpath.com/v1/tenants/Gh9238fksJlsieJkPkQuW/directories\" ,\n  \"offset\" : 0 ,\n  \"limit\" : 25 ,\n  \"items\" : [\n    {\n      \"href\" : \"https://api.stormpath.com/v1/directories/bckhcGMXQDujIXpbCDRb2Q\"\n    } , {\n      \"href\" : \"https://api.stormpath.com/v1/directories/lIKeabOss8w9fJf0fJfb34\"\n    } , {\n      \"href\" : \"https://api.stormpath.com/v1/directories/Hfjks7kj9sfKfh9fhsPifa\"\n    }\n  ]\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"offset\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"limit\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"items\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"href\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                                }
                                            },
                                            "description": "OK. The request was successful and the response body contains the representation requested."
                                        },
                                        "302": {
                                            "code": "302",
                                            "description": "FOUND. A common redirect response; you can GET the representation at the URI in the location response header."
                                        },
                                        "304": {
                                            "code": "304",
                                            "description": "NOT MODIFIED. Your clients cached version of the representation is still up to date."
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "UNAUTHORIZED. Authentication credentials are required to access the resource. All requests must be authenticated."
                                        },
                                        "403": {
                                            "code": "403",
                                            "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                                        },
                                        "429": {
                                            "code": "429",
                                            "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                                        },
                                        "500": {
                                            "code": "500",
                                            "description": "SERVER ERROR. We could not return the representation due to an internal server error."
                                        },
                                        "503": {
                                            "code": "503",
                                            "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "basic",
                                        "digest"
                                    ],
                                    "queryParameters": {
                                        "limit": {
                                            "name": "limit",
                                            "displayName": "limit",
                                            "type": "integer",
                                            "required": false,
                                            "default": 25,
                                            "repeat": false,
                                            "description": "The maximum number of collection items to return for a single request. Minimum value is 1. The maximum value is 100 and the default value is 25. This is a pagination-specific attribute.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "orderBy": {
                                            "name": "orderBy",
                                            "displayName": "orderBy",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "A request for a Collection Resource can contain an optional orderBy query parameter. The query parameter value is a URL-encoded comma-delimited list of ordering statements.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "q": {
                                            "name": "q",
                                            "displayName": "q",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "A filter search consists of specifying a q query parameter and a corresponding search value on a Collection",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "offset": {
                                            "name": "offset",
                                            "displayName": "offset",
                                            "type": "integer",
                                            "required": false,
                                            "default": 0,
                                            "repeat": false,
                                            "description": "The zero-based starting index in the entire collection of the first item to return. The default value is 0. This is a pagination-specific attribute.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "List your tenent's directories.",
                                    "method": "get",
                                    "is": [
                                        "query"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/directories",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "directories"
                            ]
                        }
                    ],
                    "displayName": "/{tenantId}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{tenantId}"
                    ]
                }
            ],
            "displayName": "/tenants",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "tenants"
            ]
        },
        {
            "relativeUri": "/applications",
            "type": "stormpathResource",
            "securedBy": [
                "basic",
                "digest"
            ],
            "methods": [
                {
                    "responses": {
                        "201": {
                            "code": "201",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "CreateAplicationresp",
                                    "example": "{\n  \"href\" : \"https://api.stormpath.com/v1/applications/WpM9nyZ2TbaEzfbRvLk9KA\" ,\n  \"name\" : \"Best application ever\" ,\n  \"description\" : \"Really. The best application ever.\" ,\n  \"status\" : \"ENABLED\" ,\n  \"tenant\" : {\n    \"href\" : \"https://api.stormpath.com/v1/tenants/cJoiwcorTTmkDDBsf02AbA\"\n  } ,\n  \"accounts\" : {\n    \"href\" : \"https://api.stormpath.com/v1/applications/WpM9nyZ2TbaEzfbRvLk9KA/accounts\"\n  } ,\n  \"groups\" : {\n    \"href\" : \"https://api.stormpath.com/v1/applications/WpM9nyZ2TbaEzfbRvLk9KA/groups\"\n  } ,\n  \"passwordResetTokens\" : {\n    \"href\" : \"http://api.stormpath.com/v1/applications/WpM9nyZ2TbaEzfbRvLk9KA/passwordResetTokens\"\n  }\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"status\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"tenant\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"accounts\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"groups\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"passwordResetTokens\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
                                }
                            },
                            "description": "CREATED. The request was successful, we created a new resource, and the response body contains the representation. The Location header contains the new resources canonical URI."
                        },
                        "400": {
                            "code": "400",
                            "description": "BAD REQUEST. The data given in the POST or PUT failed validation. Inspect the response body for details."
                        },
                        "401": {
                            "code": "401",
                            "description": "UNAUTHORIZED. Authentication credentials are required to access the resource. All requests must be authenticated."
                        },
                        "403": {
                            "code": "403",
                            "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                        },
                        "404": {
                            "code": "404",
                            "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                        },
                        "405": {
                            "code": "405",
                            "description": "METHOD NOT ALLOWED. POST is not supported for the resource."
                        },
                        "409": {
                            "code": "409",
                            "description": "CONFLICT. You cannot create or update a resource because another resource already exists or conflicts with one you are submitting."
                        },
                        "415": {
                            "code": "415",
                            "description": "UNSUPPORTED MEDIA TYPE. You did not specify the request Content-Type header to have a value of application/json. Only application/json is currently supported."
                        },
                        "429": {
                            "code": "429",
                            "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                        },
                        "500": {
                            "code": "500",
                            "description": "SERVER ERROR. We could not create or update the resource. Please try again."
                        },
                        "503": {
                            "code": "503",
                            "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json",
                            "schema": "CreateAplication",
                            "example": "{\n  \"name\" : \"Best application ever\" ,\n  \"description\" : \"Really. The best application ever.\" ,\n  \"status\" : \"enabled\"\n}",
                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"status\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "basic",
                        "digest"
                    ],
                    "queryParameters": {
                        "createDirectory": {
                            "name": "createDirectory",
                            "displayName": "createDirectory",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Create a brand new Directory and automatically name the directory based on the application. The generated name will reflect the new application's name as best as is possible, guaranteeing that it is unique compared to any of your existing directories.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Create an application",
                    "method": "post",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/{applicationId}",
                    "type": "stormpathResource",
                    "securedBy": [
                        "basic",
                        "digest"
                    ],
                    "uriParameters": {
                        "applicationId": {
                            "name": "applicationId",
                            "displayName": "applicationId",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "ReturnHrefAttribute",
                                            "example": "{\n  \"href\" : \"https://api.stormpath.com/v1/applications/WpM9nyZ2TbaEzfbRvLk9KA\" ,\n  \"name\" : \"Best application ever\" ,\n  \"description\" : \"Really. The best application ever.\" ,\n  \"status\" : \"ENABLED\" ,\n  \"tenant\" : {\n    \"href\" : \"https://api.stormpath.com/v1/tenants/cJoiwcorTTmkDDBsf02AbA\"\n  } ,\n  \"accounts\" : {\n    \"href\" : \"https://api.stormpath.com/v1/applications/WpM9nyZ2TbaEzfbRvLk9KA/accounts\"\n  } ,\n  \"groups\" : {\n    \"href\" : \"https://api.stormpath.com/v1/applications/WpM9nyZ2TbaEzfbRvLk9KA/groups\"\n  } ,\n  \"passwordResetTokens\" : {\n    \"href\" : \"http://api.stormpath.com/v1/applications/WpM9nyZ2TbaEzfbRvLk9KA/passwordResetTokens\"\n  }\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"status\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"tenant\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"accounts\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"groups\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"passwordResetTokens\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
                                        }
                                    },
                                    "description": "OK. The request was successful and the response body contains the representation requested."
                                },
                                "302": {
                                    "code": "302",
                                    "description": "FOUND. A common redirect response; you can GET the representation at the URI in the location response header."
                                },
                                "304": {
                                    "code": "304",
                                    "description": "NOT MODIFIED. Your clients cached version of the representation is still up to date."
                                },
                                "401": {
                                    "code": "401",
                                    "description": "UNAUTHORIZED. Authentication credentials are required to access the resource. All requests must be authenticated."
                                },
                                "403": {
                                    "code": "403",
                                    "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                                },
                                "404": {
                                    "code": "404",
                                    "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                                },
                                "429": {
                                    "code": "429",
                                    "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                                },
                                "500": {
                                    "code": "500",
                                    "description": "SERVER ERROR. We could not return the representation due to an internal server error."
                                },
                                "503": {
                                    "code": "503",
                                    "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "basic",
                                "digest"
                            ],
                            "queryParameters": {
                                "expand": {
                                    "name": "expand",
                                    "displayName": "expand",
                                    "type": "string",
                                    "required": false,
                                    "example": "GET https://api.stormpath.com/v1/applications/WpM9nyZ2TbaEzfbRvLk9KA?expand=tenant,accounts(offset:0,limit:50)",
                                    "repeat": false,
                                    "description": "The following Application attributes are expandable: tenant, accounts, groups. Also, because accounts and groups are Collection Resources themselves, you can additionally control pagination for either expanded collection.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Retrieve application contents.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "UpdateApplicationresp",
                                            "example": "{\n  \"href\" : \"https://api.stormpath.com/v1/applications/WpM9nyZ2TbaEzfbRvLk9KA\" ,\n  \"name\" : \"Best application ever\" ,\n  \"description\" : \"A new description.\" ,\n  \"status\" : \"enabled\" ,\n  \"tenant\" : {\n    \"href\" : \"https://api.stormpath.com/v1/tenants/cJoiwcorTTmkDDBsf02AbA\"\n  } ,\n  \"accounts\" : {\n    \"href\" : \"https://api.stormpath.com/v1/applications/WpM9nyZ2TbaEzfbRvLk9KA/accounts\"\n  } ,\n  \"groups\" : {\n    \"href\" : \"https://api.stormpath.com/v1/applications/WpM9nyZ2TbaEzfbRvLk9KA/groups\"\n  } ,\n  \"passwordResetTokens\" : {\n    \"href\" : \"http://api.stormpath.com/v1/applications/WpM9nyZ2TbaEzfbRvLk9KA/passwordResetTokens\"\n  }\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"status\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"tenant\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"accounts\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"groups\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"passwordResetTokens\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
                                        }
                                    }
                                },
                                "201": {
                                    "code": "201",
                                    "description": "CREATED. The request was successful, we created a new resource, and the response body contains the representation. The Location header contains the new resources canonical URI."
                                },
                                "400": {
                                    "code": "400",
                                    "description": "BAD REQUEST. The data given in the POST or PUT failed validation. Inspect the response body for details."
                                },
                                "401": {
                                    "code": "401",
                                    "description": "UNAUTHORIZED. Authentication credentials are required to access the resource. All requests must be authenticated."
                                },
                                "403": {
                                    "code": "403",
                                    "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                                },
                                "404": {
                                    "code": "404",
                                    "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                                },
                                "405": {
                                    "code": "405",
                                    "description": "METHOD NOT ALLOWED. POST is not supported for the resource."
                                },
                                "409": {
                                    "code": "409",
                                    "description": "CONFLICT. You cannot create or update a resource because another resource already exists or conflicts with one you are submitting."
                                },
                                "415": {
                                    "code": "415",
                                    "description": "UNSUPPORTED MEDIA TYPE. You did not specify the request Content-Type header to have a value of application/json. Only application/json is currently supported."
                                },
                                "429": {
                                    "code": "429",
                                    "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                                },
                                "500": {
                                    "code": "500",
                                    "description": "SERVER ERROR. We could not create or update the resource. Please try again."
                                },
                                "503": {
                                    "code": "503",
                                    "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "UpdateApplication",
                                    "example": "{\n  \"description\" : \"A new description.\"\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "basic",
                                "digest"
                            ],
                            "description": "Update an application. Unspecified attributes are not changed, but at least one attribute must be specified.\n",
                            "method": "post",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "204": {
                                    "code": "204",
                                    "description": "NO CONTENT. The request was successful; the resource was deleted. The deleted resource representation will not be returned."
                                },
                                "401": {
                                    "code": "401",
                                    "description": "UNAUTHORIZED. The supplied credentials, if any, are not sufficient to create or update the resource."
                                },
                                "403": {
                                    "code": "403",
                                    "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                                },
                                "404": {
                                    "code": "404",
                                    "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                                },
                                "405": {
                                    "code": "405",
                                    "description": "METHOD NOT ALLOWED. DELETE is not supported for the resource."
                                },
                                "429": {
                                    "code": "429",
                                    "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                                },
                                "500": {
                                    "code": "500",
                                    "description": "SERVER ERROR. We could not create or update the resource. Please try again."
                                },
                                "503": {
                                    "code": "503",
                                    "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "basic",
                                "digest"
                            ],
                            "description": "Delete an application",
                            "method": "delete",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/loginAttempts",
                            "type": "stormpathResource",
                            "securedBy": [
                                "basic",
                                "digest"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "LoginAttemp",
                                                    "example": "{\n  \"account\" : {\n    \"href\" : \"https://api.stormpath.com/v1/accounts/5BedLIvyfLjdKKEEXAMPLE\"\n  }\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"account\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        },
                                        "201": {
                                            "code": "201",
                                            "description": "CREATED. The request was successful, we created a new resource, and the response body contains the representation. The Location header contains the new resources canonical URI."
                                        },
                                        "400": {
                                            "code": "400",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "LoginAttemptFailure",
                                                    "example": "{\n  \"status\" : 400 ,\n  \"code\" : 400 ,\n  \"message\" : \"Invalid username or password.\" ,\n  \"developerMessage\" : \"Invalid username or password.\" ,\n  \"moreInfo\" : \"mailto:support@stormpath.com\"\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"status\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"code\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"message\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"developerMessage\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"moreInfo\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                                }
                                            },
                                            "description": "If the login attempt fails, a 400 Bad Request is returned with an error payload explaining why the attempt failed"
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "UNAUTHORIZED. Authentication credentials are required to access the resource. All requests must be authenticated."
                                        },
                                        "403": {
                                            "code": "403",
                                            "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                                        },
                                        "405": {
                                            "code": "405",
                                            "description": "METHOD NOT ALLOWED. POST is not supported for the resource."
                                        },
                                        "409": {
                                            "code": "409",
                                            "description": "CONFLICT. You cannot create or update a resource because another resource already exists or conflicts with one you are submitting."
                                        },
                                        "415": {
                                            "code": "415",
                                            "description": "UNSUPPORTED MEDIA TYPE. You did not specify the request Content-Type header to have a value of application/json. Only application/json is currently supported."
                                        },
                                        "429": {
                                            "code": "429",
                                            "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                                        },
                                        "500": {
                                            "code": "500",
                                            "description": "SERVER ERROR. We could not create or update the resource. Please try again."
                                        },
                                        "503": {
                                            "code": "503",
                                            "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                                        }
                                    },
                                    "body": {
                                        "application/josn": {
                                            "name": "application/josn",
                                            "schema": "loginAttempt",
                                            "example": "{\n  \"type\" : \"basic\" ,\n  \"value\" : \"RHVtbXlGc2VyOkH1bW15cGFzc19EdW1teTBhc3MxIQ==\" ,\n  \"accountStore\" : \"https://api.stormpath.com/v1/directories/dirId\"\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"type\" : {\n      \"type\" : \"string\" ,\n      \"required\" : true\n    } ,\n    \"value\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"accountStore\" : {\n      \"type\" : \"string\" ,\n      \"required\" : true\n    }\n  }\n}"
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "basic",
                                        "digest"
                                    ],
                                    "description": "Execute an account login attempt. An HTTP POST authenticates an associated application account. Only HTTP POST is supported.\n\n|Parameter|Required|Description|          \n|---|---|\n|type|true|The type of the login attempt. The only currently supported type is basic. Additional types will likely be supported in the future.|\n|value|true|The Base64 encoded username:plaintextPassword pair. For example, for username jsmith or email jsmith@email.com and plaintext password mySecretPassword this value attribute would be set to the following computed result: base64_encode(\"jsmith:mySecretPassword\"); The base64_encode method call is only an example. You will need to use the Base64 encoding method is available to you in your chosen programming language and/or software frameworks.|\n|accountStore|false|An optional link to the application's accountStore (directory or group) that you are certain contains the account attempting to login. Specifying this attribute can speed up logins if you know exactly which of the application's assigned account stores contains the account: Stormpath will not have to iterate over the assigned account stores to find the account to authenticate it. This can speed up logins significantly if you have many account stores (> 15) assigned to the application.|\n",
                                    "method": "post",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/loginAttempts",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "loginAttempts"
                            ]
                        },
                        {
                            "relativeUri": "/accounts",
                            "type": "stormpathResource",
                            "securedBy": [
                                "basic",
                                "digest"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "RegisterAccountresp",
                                                    "example": "{\n  \"href\" : \"https://api.stormpath.com/v1/accounts/cJoiwcorTTmkDDBsf02AbA\" ,\n  \"username\" : \"jlpicard\" ,\n  \"email\" : \"capt@enterprise.com\" ,\n  \"fullName\" : \"Jean-Luc Picard\" ,\n  \"givenName\" : \"Jean-Luc\" ,\n  \"middleName\" : \"\" ,\n  \"surname\" : \"Picard\" ,\n  \"status\" : \"ENABLED\" ,\n  \"customData\" : {\n    \"href\" : \"https://api.stormpath.com/v1/accounts/cJoiwcorTTmkDDBsf02AbA/customData\"\n  } ,\n  \"groups\" : {\n    \"href\" : \"https://api.stormpath.com/v1/accounts/cJoiwcorTTmkDDBsf02AbA/groups\"\n  } ,\n  \"groupMemberships\" : {\n    \"href\" : \"https://api.stormpath.com/v1/accounts/cJoiwcorTTmkDDBsf02AbA/groupMemberships\"\n  } ,\n  \"directory\" : {\n    \"href\" : \"https://api.stormpath.com/v1/directories/1FaQ6kZxTL4DVJXWeXtUh7\"\n  } ,\n  \"tenant\" : {\n    \"href\" : \"https://api.stormpath.com/v1/tenants/Ad8mIcavSty7XzD-xZdP3g\"\n  } ,\n  \"emailVerificationToken\" : null\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"username\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"email\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"fullName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"givenName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"middleName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"surname\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"status\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"customData\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"groups\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"groupMemberships\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"directory\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"tenant\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"emailVerificationToken\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false\n    }\n  }\n}"
                                                }
                                            }
                                        },
                                        "201": {
                                            "code": "201",
                                            "description": "CREATED. The request was successful, we created a new resource, and the response body contains the representation. The Location header contains the new resources canonical URI."
                                        },
                                        "400": {
                                            "code": "400",
                                            "description": "BAD REQUEST. The data given in the POST or PUT failed validation. Inspect the response body for details."
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "UNAUTHORIZED. Authentication credentials are required to access the resource. All requests must be authenticated."
                                        },
                                        "403": {
                                            "code": "403",
                                            "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                                        },
                                        "405": {
                                            "code": "405",
                                            "description": "METHOD NOT ALLOWED. POST is not supported for the resource."
                                        },
                                        "409": {
                                            "code": "409",
                                            "description": "CONFLICT. You cannot create or update a resource because another resource already exists or conflicts with one you are submitting."
                                        },
                                        "415": {
                                            "code": "415",
                                            "description": "UNSUPPORTED MEDIA TYPE. You did not specify the request Content-Type header to have a value of application/json. Only application/json is currently supported."
                                        },
                                        "429": {
                                            "code": "429",
                                            "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                                        },
                                        "500": {
                                            "code": "500",
                                            "description": "SERVER ERROR. We could not create or update the resource. Please try again."
                                        },
                                        "503": {
                                            "code": "503",
                                            "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "RegisterAccount",
                                            "example": "{\n  \"username\" : \"jlpicard\" ,\n  \"email\" : \"capt@enterprise.com\" ,\n  \"givenName\" : \"Jean-Luc\" ,\n  \"middleName\" : \"\" ,\n  \"surname\" : \"Picard\" ,\n  \"password\" : \"uGhd%a8Kl!\" ,\n  \"status\" : \"ENABLED\"\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"username\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"email\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"givenName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"middleName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"surname\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"password\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"status\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "basic",
                                        "digest"
                                    ],
                                    "description": "Register a new application account",
                                    "method": "post",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "AccountsListresp",
                                                    "example": "{\n  \"href\" : \"https://api.stormpath.com/v1/applications/cJoiwcorTTmkDDBsf02AbA/accounts\" ,\n  \"offset\" : 0 ,\n  \"limit\" : 25 ,\n  \"items\" : [\n    {\n      \"href\" : \"https://api.stormpath.com/v1/accounts/WpM9nyZ2TbaEzfbRvLk9KA\"\n    } , {\n      \"href\" : \"https://api.stormpath.com/v1/accounts/aLlyOUrBAse34js9hjiH9j\"\n    } , {\n      \"href\" : \"https://api.stormpath.com/v1/accounts/Xhf0a9HLA02djsdP90dsQ2\"\n    }\n  ]\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"offset\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"limit\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"items\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"href\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                                }
                                            },
                                            "description": "OK. The request was successful and the response body contains the representation requested."
                                        },
                                        "302": {
                                            "code": "302",
                                            "description": "FOUND. A common redirect response; you can GET the representation at the URI in the location response header."
                                        },
                                        "304": {
                                            "code": "304",
                                            "description": "NOT MODIFIED. Your clients cached version of the representation is still up to date."
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "UNAUTHORIZED. Authentication credentials are required to access the resource. All requests must be authenticated."
                                        },
                                        "403": {
                                            "code": "403",
                                            "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                                        },
                                        "429": {
                                            "code": "429",
                                            "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                                        },
                                        "500": {
                                            "code": "500",
                                            "description": "SERVER ERROR. We could not return the representation due to an internal server error."
                                        },
                                        "503": {
                                            "code": "503",
                                            "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "basic",
                                        "digest"
                                    ],
                                    "queryParameters": {
                                        "username": {
                                            "name": "username",
                                            "displayName": "username",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "The username for the account. Must be unique across the owning directory. If not specified, the username will default to the email field",
                                            "minLength": 1,
                                            "maxLength": 255,
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "limit": {
                                            "name": "limit",
                                            "displayName": "limit",
                                            "type": "integer",
                                            "required": false,
                                            "default": 25,
                                            "repeat": false,
                                            "description": "The maximum number of collection items to return for a single request. Minimum value is 1. The maximum value is 100 and the default value is 25. This is a pagination-specific attribute.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "orderBy": {
                                            "name": "orderBy",
                                            "displayName": "orderBy",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "A request for a Collection Resource can contain an optional orderBy query parameter. The query parameter value is a URL-encoded comma-delimited list of ordering statements.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "q": {
                                            "name": "q",
                                            "displayName": "q",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "A filter search consists of specifying a q query parameter and a corresponding search value on a Collection",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "offset": {
                                            "name": "offset",
                                            "displayName": "offset",
                                            "type": "integer",
                                            "required": false,
                                            "default": 0,
                                            "repeat": false,
                                            "description": "The zero-based starting index in the entire collection of the first item to return. The default value is 0. This is a pagination-specific attribute.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "You can list your applications accounts by sending a GET request to your applications accounts Collection Resource href URL. The response is a paginated list of application accounts.",
                                    "method": "get",
                                    "is": [
                                        "query"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/accounts",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "accounts"
                            ]
                        },
                        {
                            "relativeUri": "/groups",
                            "type": "stormpathResource",
                            "securedBy": [
                                "basic",
                                "digest"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "GroupsList",
                                                    "example": "{\n  \"href\" : \"https://api.stormpath.com/v1/applications/cJoiwcorTTmkDDBsf02AbA/groups\" ,\n  \"offset\" : 0 ,\n  \"limit\" : 25 ,\n  \"items\" : [\n    {\n      \"href\" : \"https://api.stormpath.com/v1/groups/WpM9nyZ2TbaEzfbRvLk9KA\"\n    } , {\n      \"href\" : \"https://api.stormpath.com/v1/groups/aLlyOUrBAse34js9hjiH9j\"\n    } , {\n      \"href\" : \"https://api.stormpath.com/v1/groups/Xhf0a9HLA02djsdP90dsQ2\"\n    }\n  ]\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"offset\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"limit\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"items\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"href\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                                }
                                            },
                                            "description": "OK. The request was successful and the response body contains the representation requested."
                                        },
                                        "302": {
                                            "code": "302",
                                            "description": "FOUND. A common redirect response; you can GET the representation at the URI in the location response header."
                                        },
                                        "304": {
                                            "code": "304",
                                            "description": "NOT MODIFIED. Your clients cached version of the representation is still up to date."
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "UNAUTHORIZED. Authentication credentials are required to access the resource. All requests must be authenticated."
                                        },
                                        "403": {
                                            "code": "403",
                                            "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                                        },
                                        "429": {
                                            "code": "429",
                                            "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                                        },
                                        "500": {
                                            "code": "500",
                                            "description": "SERVER ERROR. We could not return the representation due to an internal server error."
                                        },
                                        "503": {
                                            "code": "503",
                                            "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "basic",
                                        "digest"
                                    ],
                                    "queryParameters": {
                                        "limit": {
                                            "name": "limit",
                                            "displayName": "limit",
                                            "type": "integer",
                                            "required": false,
                                            "default": 25,
                                            "repeat": false,
                                            "description": "The maximum number of collection items to return for a single request. Minimum value is 1. The maximum value is 100 and the default value is 25. This is a pagination-specific attribute.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "orderBy": {
                                            "name": "orderBy",
                                            "displayName": "orderBy",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "A request for a Collection Resource can contain an optional orderBy query parameter. The query parameter value is a URL-encoded comma-delimited list of ordering statements.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "q": {
                                            "name": "q",
                                            "displayName": "q",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "A filter search consists of specifying a q query parameter and a corresponding search value on a Collection",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "offset": {
                                            "name": "offset",
                                            "displayName": "offset",
                                            "type": "integer",
                                            "required": false,
                                            "default": 0,
                                            "repeat": false,
                                            "description": "The zero-based starting index in the entire collection of the first item to return. The default value is 0. This is a pagination-specific attribute.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "You can list your applications groups by sending a GET request to your applications groups Collection Resource href URL. The response is a paginated list of application groups.",
                                    "method": "get",
                                    "is": [
                                        "query"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "201": {
                                            "code": "201",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "GroupResponse",
                                                    "example": "{\n  \"href\" : \"https://api.stormpath.com/v1/groups/ZgoHUG0oSoVNeU0K4GZeVQ\",\n  \"name\" : \"Jedi High Council\",\n  \"description\" : \"Elected leaders of the Jedi Order.\",\n  \"status\" : \"ENABLED\",\n  \"directory\" : {\n    \"href\" : \"https://api.stormpath.com/v1/directories/bckhcGMXQDujIXpbCDRb2Q\"\n  },\n  \"tenant\" : {\n    \"href\" : \"https://api.stormpath.com/v1/tenants/Gh9238fksJlsieJkPkQuW\"\n  },\n  \"accounts\" : {\n    \"href\" : \"https://api.stormpath.com/v1/groups/ZgoHUG0oSoVNeU0K4GZeVQ/accounts\"\n  }\n}",
                                                    "schemaContent": "{\r\n  \"required\" : true ,\r\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\r\n  \"type\" : \"object\" ,\r\n  \"properties\" : {\r\n    \"href\" : {\r\n      \"type\" : \"string\" ,\r\n      \"required\" : false\r\n    } ,\r\n    \"name\" : {\r\n      \"type\" : \"string\" ,\r\n      \"required\" : false\r\n    } ,\r\n    \"description\" : {\r\n      \"type\" : \"string\" ,\r\n      \"required\" : false\r\n    } ,\r\n    \"status\" : {\r\n      \"type\" : \"string\" ,\r\n      \"required\" : false\r\n    } ,\r\n    \"directory\" : {\r\n      \"type\" : \"object\" ,\r\n      \"required\" : false ,\r\n      \"properties\" : {\r\n        \"href\" : {\r\n          \"type\" : \"string\" ,\r\n          \"required\" : false\r\n        }\r\n      }\r\n    } ,\r\n    \"tenant\" : {\r\n      \"type\" : \"object\" ,\r\n      \"required\" : false ,\r\n      \"properties\" : {\r\n        \"href\" : {\r\n          \"type\" : \"string\" ,\r\n          \"required\" : false\r\n        }\r\n      }\r\n    } ,\r\n    \"accounts\" : {\r\n      \"type\" : \"object\" ,\r\n      \"required\" : false ,\r\n      \"properties\" : {\r\n        \"href\" : {\r\n          \"type\" : \"string\" ,\r\n          \"required\" : false\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
                                                }
                                            },
                                            "description": "CREATED. The request was successful, we created a new resource, and the response body contains the representation. The Location header contains the new resources canonical URI."
                                        },
                                        "400": {
                                            "code": "400",
                                            "description": "BAD REQUEST. The data given in the POST or PUT failed validation. Inspect the response body for details."
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "UNAUTHORIZED. Authentication credentials are required to access the resource. All requests must be authenticated."
                                        },
                                        "403": {
                                            "code": "403",
                                            "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                                        },
                                        "405": {
                                            "code": "405",
                                            "description": "METHOD NOT ALLOWED. POST is not supported for the resource."
                                        },
                                        "409": {
                                            "code": "409",
                                            "description": "CONFLICT. You cannot create or update a resource because another resource already exists or conflicts with one you are submitting."
                                        },
                                        "415": {
                                            "code": "415",
                                            "description": "UNSUPPORTED MEDIA TYPE. You did not specify the request Content-Type header to have a value of application/json. Only application/json is currently supported."
                                        },
                                        "429": {
                                            "code": "429",
                                            "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                                        },
                                        "500": {
                                            "code": "500",
                                            "description": "SERVER ERROR. We could not create or update the resource. Please try again."
                                        },
                                        "503": {
                                            "code": "503",
                                            "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "Group",
                                            "example": "{\n  \"name\" : \"Jedi High Council\",\n  \"description\" : \"Elected leaders of the Jedi Order.\",\n  \"status\" : \"ENABLED\"\n}",
                                            "schemaContent": "Group"
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "basic",
                                        "digest"
                                    ],
                                    "description": "Create an application group. In addition to Stormpath's group attributes, you may also specify your own custom data by including a customData JSON object",
                                    "method": "post",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/groups",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "groups"
                            ]
                        },
                        {
                            "relativeUri": "/passwordResetTokens",
                            "type": "stormpathResource",
                            "securedBy": [
                                "basic",
                                "digest"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "ResetEmailresp",
                                                    "example": "{\n  \"href\" : \"https://api.stormpath.com/v1/applications/WpM9nyZ2TbaEzfbRvLk9KA/passwordResetTokens/j6HqguWPSBSXM2xmcOUShw\" ,\n  \"email\" : \"john.smith@stormpath.com\" ,\n  \"account\" : {\n    \"href\" : \"https://api.stormpath.com/v1/accounts/cJoiwcorTTmkDDBsf02bAb\"\n  }\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"email\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"account\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        },
                                        "201": {
                                            "code": "201",
                                            "description": "CREATED. The request was successful, we created a new resource, and the response body contains the representation. The Location header contains the new resources canonical URI."
                                        },
                                        "400": {
                                            "code": "400",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "ResetEmailFailure",
                                                    "example": "{\n  \"status\" : 404 ,\n  \"code\" : 404 ,\n  \"message\" : \"The requested resource does not exist.\" ,\n  \"developerMessage\" : \"The requested resource does not exist.\" ,\n  \"moreInfo\" : \"mailto:support@stormpath.com\"\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"status\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"code\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"message\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"developerMessage\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"moreInfo\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                                }
                                            },
                                            "description": "If the password reset token creation fails, a 400 Bad Request is returned with an error payload explaining why the attempt failed."
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "UNAUTHORIZED. Authentication credentials are required to access the resource. All requests must be authenticated."
                                        },
                                        "403": {
                                            "code": "403",
                                            "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                                        },
                                        "405": {
                                            "code": "405",
                                            "description": "METHOD NOT ALLOWED. POST is not supported for the resource."
                                        },
                                        "409": {
                                            "code": "409",
                                            "description": "CONFLICT. You cannot create or update a resource because another resource already exists or conflicts with one you are submitting."
                                        },
                                        "415": {
                                            "code": "415",
                                            "description": "UNSUPPORTED MEDIA TYPE. You did not specify the request Content-Type header to have a value of application/json. Only application/json is currently supported."
                                        },
                                        "429": {
                                            "code": "429",
                                            "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                                        },
                                        "500": {
                                            "code": "500",
                                            "description": "SERVER ERROR. We could not create or update the resource. Please try again."
                                        },
                                        "503": {
                                            "code": "503",
                                            "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "ResetEmail",
                                            "example": "{\n  \"email\" : \"john.smith@stormpath.com\"\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"email\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "basic",
                                        "digest"
                                    ],
                                    "description": "A successful HTTP POST sends a password reset email to the first discovered account associated with the corresponding application. The email recipient can then click a password reset URL in the email to reset their password in a web form.",
                                    "method": "post",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "resources": [
                                {
                                    "relativeUri": "/{token}",
                                    "type": "stormpathResource",
                                    "securedBy": [
                                        "basic",
                                        "digest"
                                    ],
                                    "uriParameters": {
                                        "token": {
                                            "name": "token",
                                            "displayName": "token",
                                            "type": "string",
                                            "required": true,
                                            "repeat": false,
                                            "__METADATA__": {
                                                "calculated": true,
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "methods": [
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "RetrievingTokenResource",
                                                            "example": "{\n  \"href\" : \"https://api.stormpath.com/v1/applications/WpM9nyZ2TbaEzfbRvLk9KA/passwordResetTokens/j6HqguWPSBSXM2xmcOUShw\" ,\n  \"email\" : \"john.smith@stormpath.com\" ,\n  \"account\" : {\n    \"href\" : \"https://api.stormpath.com/v1/accounts/cJoiwcorTTmkDDBsf02bAb\"\n  }\n}",
                                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"email\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"account\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
                                                        }
                                                    },
                                                    "description": "OK. The request was successful and the response body contains the representation requested."
                                                },
                                                "302": {
                                                    "code": "302",
                                                    "description": "FOUND. A common redirect response; you can GET the representation at the URI in the location response header."
                                                },
                                                "304": {
                                                    "code": "304",
                                                    "description": "NOT MODIFIED. Your clients cached version of the representation is still up to date."
                                                },
                                                "401": {
                                                    "code": "401",
                                                    "description": "UNAUTHORIZED. Authentication credentials are required to access the resource. All requests must be authenticated."
                                                },
                                                "403": {
                                                    "code": "403",
                                                    "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                                                },
                                                "404": {
                                                    "code": "404",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "RetrievingTokenResourceFailure",
                                                            "example": "{\n  \"status\" : 404 ,\n  \"code\" : 404 ,\n  \"message\" : \"The requested resource does not exist.\" ,\n  \"developerMessage\" : \"The requested resource does not exist.\" ,\n  \"moreInfo\" : \"mailto:support@stormpath.com\"\n}",
                                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"status\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"code\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"message\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"developerMessage\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"moreInfo\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                                        }
                                                    },
                                                    "description": "If the password reset token is invalid - it never existed or has expired - a 404 Not Found response is returned."
                                                },
                                                "429": {
                                                    "code": "429",
                                                    "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                                                },
                                                "500": {
                                                    "code": "500",
                                                    "description": "SERVER ERROR. We could not return the representation due to an internal server error."
                                                },
                                                "503": {
                                                    "code": "503",
                                                    "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                                                }
                                            },
                                            "protocols": [
                                                "HTTPS"
                                            ],
                                            "securedBy": [
                                                "basic",
                                                "digest"
                                            ],
                                            "description": "Retrieving a token resource successfully using an HTTP GET indicates that the token is valid. Thus, to validate a token, you call to the passwordResetTokens end point and specify the token captured from the query string as the specific resource to request",
                                            "method": "get",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/{token}",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "{token}"
                                    ]
                                }
                            ],
                            "displayName": "/passwordResetTokens",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "passwordResetTokens"
                            ]
                        },
                        {
                            "relativeUri": "/accountStoreMappings",
                            "type": "stormpathResource",
                            "securedBy": [
                                "basic",
                                "digest"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "StoreMappingsList",
                                                    "example": "{\n  \"href\" : \"https://api.stormpath.com/v1/applications/5D26Bl8lHTct1FDCHrltc3/accountStoreMappings\" ,\n  \"offset\" : 0 ,\n  \"limit\" : 25 ,\n  \"items\" : [\n    {\n      \"href\" : \"https://api.stormpath.com/v1/accountStoreMappings/XpM9nyZ2TbaEzfbRvLk9KA\"\n    } , {\n      \"href\" : \"https://api.stormpath.com/v1/accountStoreMappings/aLlyOUrBAse34js9hjiH9j\"\n    } , {\n      \"href\" : \"https://api.stormpath.com/v1/accountStoreMappings/Xhf0a9HLA02djsdP90dsQ2\"\n    }\n  ]\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"offset\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"limit\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"items\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"href\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                                }
                                            },
                                            "description": "OK. The request was successful and the response body contains the representation requested."
                                        },
                                        "302": {
                                            "code": "302",
                                            "description": "FOUND. A common redirect response; you can GET the representation at the URI in the location response header."
                                        },
                                        "304": {
                                            "code": "304",
                                            "description": "NOT MODIFIED. Your clients cached version of the representation is still up to date."
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "UNAUTHORIZED. Authentication credentials are required to access the resource. All requests must be authenticated."
                                        },
                                        "403": {
                                            "code": "403",
                                            "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                                        },
                                        "429": {
                                            "code": "429",
                                            "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                                        },
                                        "500": {
                                            "code": "500",
                                            "description": "SERVER ERROR. We could not return the representation due to an internal server error."
                                        },
                                        "503": {
                                            "code": "503",
                                            "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "basic",
                                        "digest"
                                    ],
                                    "description": "List an applications assigned account stores.",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/accountStoreMappings",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "accountStoreMappings"
                            ]
                        }
                    ],
                    "displayName": "/{applicationId}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{applicationId}"
                    ]
                }
            ],
            "displayName": "/applications",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "applications"
            ]
        },
        {
            "relativeUri": "/accountStoreMappings",
            "type": "stormpathResource",
            "securedBy": [
                "basic",
                "digest"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "AccountStoreMappingresp",
                                    "example": "{\n  \"href\" : \"https://api.stormpath.com/v1/accountStoreMappings/7Ui2gpn9tV75y3TExAmPLe\" ,\n  \"accountStore\" : {\n    \"href\" : \"https://api.stormpath.com/v1/directories/bckhcGMXQDujIXpExAmPLe\"\n  } ,\n  \"application\" : {\n    \"href\" : \"https://api.stormpath.com/v1/applications/Uh8FzIouQ9C8EpcExAmPLe\"\n  } ,\n  \"listIndex\" : 0 ,\n  \"isDefaultAccountStore\" : true ,\n  \"isDefaultGroupStore\" : true\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"accountStore\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"application\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"listIndex\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"isDefaultAccountStore\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"isDefaultGroupStore\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
                                }
                            }
                        },
                        "201": {
                            "code": "201",
                            "description": "CREATED. The request was successful, we created a new resource, and the response body contains the representation. The Location header contains the new resources canonical URI."
                        },
                        "400": {
                            "code": "400",
                            "description": "BAD REQUEST. The data given in the POST or PUT failed validation. Inspect the response body for details."
                        },
                        "401": {
                            "code": "401",
                            "description": "UNAUTHORIZED. Authentication credentials are required to access the resource. All requests must be authenticated."
                        },
                        "403": {
                            "code": "403",
                            "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                        },
                        "404": {
                            "code": "404",
                            "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                        },
                        "405": {
                            "code": "405",
                            "description": "METHOD NOT ALLOWED. POST is not supported for the resource."
                        },
                        "409": {
                            "code": "409",
                            "description": "CONFLICT. You cannot create or update a resource because another resource already exists or conflicts with one you are submitting."
                        },
                        "415": {
                            "code": "415",
                            "description": "UNSUPPORTED MEDIA TYPE. You did not specify the request Content-Type header to have a value of application/json. Only application/json is currently supported."
                        },
                        "429": {
                            "code": "429",
                            "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                        },
                        "500": {
                            "code": "500",
                            "description": "SERVER ERROR. We could not create or update the resource. Please try again."
                        },
                        "503": {
                            "code": "503",
                            "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json",
                            "schema": "AccountStoreMapping",
                            "example": "{\n  \"application\" : {\n    \"href\" : \"https://api.stormpath.com/v1/applications/Uh8FzIouQ9C8EpcExAmPLe\"\n  } ,\n  \"accountStore\" : {\n    \"href\" : \"https://api.stormpath.com/v1/directories/bckhcGMXQDujIXpExAmPLe\"\n  } ,\n  \"isDefaultAccountStore\" : true ,\n  \"isDefaultGroupStore\" : true\n}",
                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"application\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"accountStore\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"isDefaultAccountStore\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"isDefaultGroupStore\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "basic",
                        "digest"
                    ],
                    "description": "Create an account store mapping",
                    "method": "post",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/{accountStoreMappingId}",
                    "type": "stormpathResource",
                    "securedBy": [
                        "basic",
                        "digest"
                    ],
                    "uriParameters": {
                        "accountStoreMappingId": {
                            "name": "accountStoreMappingId",
                            "displayName": "accountStoreMappingId",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "RetrieveAccountStoreMappings",
                                            "example": "{\n  \"href\" : \"https://api.stormpath.com/v1/accountStoreMappings/7Ui2gpn9tV75y3TExAmPLe\" ,\n  \"accountStore\" : {\n    \"href\" : \"https://api.stormpath.com/v1/directories/bckhcGMXQDujIXpExAmPLe\"\n  } ,\n  \"application\" : {\n    \"href\" : \"https://api.stormpath.com/v1/applications/Uh8FzIouQ9C8EpcExAmPLe\"\n  } ,\n  \"listIndex\" : 0 ,\n  \"isDefaultAccountStore\" : true ,\n  \"isDefaultGroupStore\" : true\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"accountStore\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"application\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"listIndex\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"isDefaultAccountStore\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"isDefaultGroupStore\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
                                        }
                                    },
                                    "description": "OK. The request was successful and the response body contains the representation requested."
                                },
                                "302": {
                                    "code": "302",
                                    "description": "FOUND. A common redirect response; you can GET the representation at the URI in the location response header."
                                },
                                "304": {
                                    "code": "304",
                                    "description": "NOT MODIFIED. Your clients cached version of the representation is still up to date."
                                },
                                "401": {
                                    "code": "401",
                                    "description": "UNAUTHORIZED. Authentication credentials are required to access the resource. All requests must be authenticated."
                                },
                                "403": {
                                    "code": "403",
                                    "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                                },
                                "404": {
                                    "code": "404",
                                    "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                                },
                                "429": {
                                    "code": "429",
                                    "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                                },
                                "500": {
                                    "code": "500",
                                    "description": "SERVER ERROR. We could not return the representation due to an internal server error."
                                },
                                "503": {
                                    "code": "503",
                                    "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "basic",
                                "digest"
                            ],
                            "description": "Retreive an account store mapping.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "UpdateAccountStoreMappingresp",
                                            "example": "{\n  \"href\" : \"https://api.stormpath.com/v1/accountStoreMappings/7Ui2gpn9tV75y3TExAmPLe\" ,\n  \"accountStore\" : {\n    \"href\" : \"https://api.stormpath.com/v1/directories/bckhcGMXQDujIXpExAmPLe\"\n  } ,\n  \"application\" : {\n    \"href\" : \"https://api.stormpath.com/v1/applications/Uh8FzIouQ9C8EpcExAmPLe\"\n  } ,\n  \"listIndex\" : 0 ,\n  \"isDefaultAccountStore\" : true ,\n  \"isDefaultGroupStore\" : true\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"accountStore\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"application\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"listIndex\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"isDefaultAccountStore\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"isDefaultGroupStore\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
                                        }
                                    }
                                },
                                "201": {
                                    "code": "201",
                                    "description": "CREATED. The request was successful, we created a new resource, and the response body contains the representation. The Location header contains the new resources canonical URI."
                                },
                                "400": {
                                    "code": "400",
                                    "description": "BAD REQUEST. The data given in the POST or PUT failed validation. Inspect the response body for details."
                                },
                                "401": {
                                    "code": "401",
                                    "description": "UNAUTHORIZED. Authentication credentials are required to access the resource. All requests must be authenticated."
                                },
                                "403": {
                                    "code": "403",
                                    "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                                },
                                "404": {
                                    "code": "404",
                                    "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                                },
                                "405": {
                                    "code": "405",
                                    "description": "METHOD NOT ALLOWED. POST is not supported for the resource."
                                },
                                "409": {
                                    "code": "409",
                                    "description": "CONFLICT. You cannot create or update a resource because another resource already exists or conflicts with one you are submitting."
                                },
                                "415": {
                                    "code": "415",
                                    "description": "UNSUPPORTED MEDIA TYPE. You did not specify the request Content-Type header to have a value of application/json. Only application/json is currently supported."
                                },
                                "429": {
                                    "code": "429",
                                    "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                                },
                                "500": {
                                    "code": "500",
                                    "description": "SERVER ERROR. We could not create or update the resource. Please try again."
                                },
                                "503": {
                                    "code": "503",
                                    "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "UpdateAccountStoreMapping",
                                    "example": "{\n  \"isDefaultAccountStore\" : true\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"isDefaultAccountStore\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "basic",
                                "digest"
                            ],
                            "description": "Update an account store mapping",
                            "method": "post",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "204": {
                                    "code": "204",
                                    "description": "NO CONTENT. The request was successful; the resource was deleted. The deleted resource representation will not be returned."
                                },
                                "401": {
                                    "code": "401",
                                    "description": "UNAUTHORIZED. The supplied credentials, if any, are not sufficient to create or update the resource."
                                },
                                "403": {
                                    "code": "403",
                                    "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                                },
                                "404": {
                                    "code": "404",
                                    "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                                },
                                "405": {
                                    "code": "405",
                                    "description": "METHOD NOT ALLOWED. DELETE is not supported for the resource."
                                },
                                "429": {
                                    "code": "429",
                                    "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                                },
                                "500": {
                                    "code": "500",
                                    "description": "SERVER ERROR. We could not create or update the resource. Please try again."
                                },
                                "503": {
                                    "code": "503",
                                    "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "basic",
                                "digest"
                            ],
                            "description": "Delete an account store mapping",
                            "method": "delete",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/{accountStoreMappingId}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{accountStoreMappingId}"
                    ]
                }
            ],
            "displayName": "/accountStoreMappings",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "accountStoreMappings"
            ]
        },
        {
            "relativeUri": "/directories",
            "type": "stormpathResource",
            "securedBy": [
                "basic",
                "digest"
            ],
            "methods": [
                {
                    "responses": {
                        "201": {
                            "code": "201",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "CreateCloudDirectoryresp",
                                    "example": "{\n  \"href\" : \"https://api.stormpath.com/v1/directories/bckhcGMXQDujIXpbCDRb2Q\" ,\n  \"name\" : \"Captains\" ,\n  \"description\" : \"Captains from a variety of stories\" ,\n  \"status\" : \"enabled\" ,\n  \"tenant\" : {\n    \"href\" : \"https://api.stormpath.com/v1/tenants/Gh9238fksJlsieJkPkQuW\"\n  } ,\n  \"accounts\" : {\n    \"href\" : \"https://api.stormpath.com/v1/directories/bckhcGMXQDujIXpbCDRb2Q/accounts\"\n  } ,\n  \"groups\" : {\n    \"href\" : \"https://api.stormpath.com/v1/directories/bckhcGMXQDujIXpbCDRb2Q/groups\"\n  }\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"status\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"tenant\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"accounts\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"groups\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
                                }
                            },
                            "description": "CREATED. The request was successful, we created a new resource, and the response body contains the representation. The Location header contains the new resources canonical URI."
                        },
                        "400": {
                            "code": "400",
                            "description": "BAD REQUEST. The data given in the POST or PUT failed validation. Inspect the response body for details."
                        },
                        "401": {
                            "code": "401",
                            "description": "UNAUTHORIZED. Authentication credentials are required to access the resource. All requests must be authenticated."
                        },
                        "403": {
                            "code": "403",
                            "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                        },
                        "404": {
                            "code": "404",
                            "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                        },
                        "405": {
                            "code": "405",
                            "description": "METHOD NOT ALLOWED. POST is not supported for the resource."
                        },
                        "409": {
                            "code": "409",
                            "description": "CONFLICT. You cannot create or update a resource because another resource already exists or conflicts with one you are submitting."
                        },
                        "415": {
                            "code": "415",
                            "description": "UNSUPPORTED MEDIA TYPE. You did not specify the request Content-Type header to have a value of application/json. Only application/json is currently supported."
                        },
                        "429": {
                            "code": "429",
                            "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                        },
                        "500": {
                            "code": "500",
                            "description": "SERVER ERROR. We could not create or update the resource. Please try again."
                        },
                        "503": {
                            "code": "503",
                            "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json",
                            "schema": "CreateCloudDirectory",
                            "example": "{\n  \"name\" : \"Captains\" ,\n  \"description\" : \"Captains from a variety of stories\"\n}",
                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "basic",
                        "digest"
                    ],
                    "description": "Create a cloud directory",
                    "method": "post",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/{directoryId}",
                    "type": "stormpathResource",
                    "securedBy": [
                        "basic",
                        "digest"
                    ],
                    "uriParameters": {
                        "directoryId": {
                            "name": "directoryId",
                            "displayName": "directoryId",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "RetrieveDirectory",
                                            "example": "{\n  \"href\" : \"https://api.stormpath.com/v1/directories/bckhcGMXQDujIXpbCDRb2Q\" ,\n  \"name\" : \"Captains\" ,\n  \"description\" : \"Captains from a variety of stories\" ,\n  \"status\" : \"enabled\" ,\n  \"accounts\" : {\n    \"href\" : \"https://api.stormpath.com/v1/directories/bckhcGMXQDujIXpbCDRb2Q/accounts\"\n  } ,\n  \"groups\" : {\n    \"href\" : \"https://api.stormpath.com/v1/directories/bckhcGMXQDujIXpbCDRb2Q/groups\"\n  } ,\n  \"tenant\" : {\n    \"href\" : \"https://api.stormpath.com/v1/tenants/Gh9238fksJlsieJkPkQuW\"\n  }\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"status\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"accounts\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"groups\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"tenant\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
                                        }
                                    },
                                    "description": "OK. The request was successful and the response body contains the representation requested."
                                },
                                "302": {
                                    "code": "302",
                                    "description": "FOUND. A common redirect response; you can GET the representation at the URI in the location response header."
                                },
                                "304": {
                                    "code": "304",
                                    "description": "NOT MODIFIED. Your clients cached version of the representation is still up to date."
                                },
                                "401": {
                                    "code": "401",
                                    "description": "UNAUTHORIZED. Authentication credentials are required to access the resource. All requests must be authenticated."
                                },
                                "403": {
                                    "code": "403",
                                    "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                                },
                                "404": {
                                    "code": "404",
                                    "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                                },
                                "429": {
                                    "code": "429",
                                    "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                                },
                                "500": {
                                    "code": "500",
                                    "description": "SERVER ERROR. We could not return the representation due to an internal server error."
                                },
                                "503": {
                                    "code": "503",
                                    "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "basic",
                                "digest"
                            ],
                            "description": "Retrieve a cloud directory",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "UpdateDirectoryresp",
                                            "example": "{\n  \"href\" : \"https://api.stormpath.com/v1/directories/bckhcGMXQDujIXpbCDRb2Q\" ,\n  \"name\" : \"Captains\" ,\n  \"description\" : \"Captains from a variety of stories\" ,\n  \"status\" : \"enabled\" ,\n  \"tenant\" : {\n    \"href\" : \"https://api.stormpath.com/v1/tenants/Gh9238fksJlsieJkPkQuW\"\n  } ,\n  \"accounts\" : {\n    \"href\" : \"https://api.stormpath.com/v1/directories/bckhcGMXQDujIXpbCDRb2Q/accounts\"\n  } ,\n  \"groups\" : {\n    \"href\" : \"https://api.stormpath.com/v1/directories/bckhcGMXQDujIXpbCDRb2Q/groups\"\n  }\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"status\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"tenant\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"accounts\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"groups\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
                                        }
                                    }
                                },
                                "201": {
                                    "code": "201",
                                    "description": "CREATED. The request was successful, we created a new resource, and the response body contains the representation. The Location header contains the new resources canonical URI."
                                },
                                "400": {
                                    "code": "400",
                                    "description": "BAD REQUEST. The data given in the POST or PUT failed validation. Inspect the response body for details."
                                },
                                "401": {
                                    "code": "401",
                                    "description": "UNAUTHORIZED. Authentication credentials are required to access the resource. All requests must be authenticated."
                                },
                                "403": {
                                    "code": "403",
                                    "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                                },
                                "404": {
                                    "code": "404",
                                    "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                                },
                                "405": {
                                    "code": "405",
                                    "description": "METHOD NOT ALLOWED. POST is not supported for the resource."
                                },
                                "409": {
                                    "code": "409",
                                    "description": "CONFLICT. You cannot create or update a resource because another resource already exists or conflicts with one you are submitting."
                                },
                                "415": {
                                    "code": "415",
                                    "description": "UNSUPPORTED MEDIA TYPE. You did not specify the request Content-Type header to have a value of application/json. Only application/json is currently supported."
                                },
                                "429": {
                                    "code": "429",
                                    "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                                },
                                "500": {
                                    "code": "500",
                                    "description": "SERVER ERROR. We could not create or update the resource. Please try again."
                                },
                                "503": {
                                    "code": "503",
                                    "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "UpdateDirectory",
                                    "example": "{\n  \"name\" : \"Captains\"\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "basic",
                                "digest"
                            ],
                            "description": "Update a cloud directory",
                            "method": "post",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "204": {
                                    "code": "204",
                                    "description": "NO CONTENT. The request was successful; the resource was deleted. The deleted resource representation will not be returned."
                                },
                                "401": {
                                    "code": "401",
                                    "description": "UNAUTHORIZED. The supplied credentials, if any, are not sufficient to create or update the resource."
                                },
                                "403": {
                                    "code": "403",
                                    "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                                },
                                "404": {
                                    "code": "404",
                                    "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                                },
                                "405": {
                                    "code": "405",
                                    "description": "METHOD NOT ALLOWED. DELETE is not supported for the resource."
                                },
                                "429": {
                                    "code": "429",
                                    "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                                },
                                "500": {
                                    "code": "500",
                                    "description": "SERVER ERROR. We could not create or update the resource. Please try again."
                                },
                                "503": {
                                    "code": "503",
                                    "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "basic",
                                "digest"
                            ],
                            "description": "Delete a cloud directory",
                            "method": "delete",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/accounts",
                            "type": "stormpathResource",
                            "securedBy": [
                                "basic",
                                "digest"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "DirectoryAccountsList",
                                                    "example": "{\n  \"href\" : \"https://api.stormpath.com/v1/directories/5D1bvO5To6KQBaGFh793Zz/groups\" ,\n  \"offset\" : 0 ,\n  \"limit\" : 25 ,\n  \"items\" : [\n    {\n      \"href\" : \"https://api.stormpath.com/v1/groups/WpM9nyZ2TbaEzfbRvLk9KA\"\n    } , {\n      \"href\" : \"https://api.stormpath.com/v1/groups/aLlyOUrBAse34js9hjiH9j\"\n    } , {\n      \"href\" : \"https://api.stormpath.com/v1/groups/Xhf0a9HLA02djsdP90dsQ2\"\n    }\n  ]\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"offset\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"limit\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"items\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"href\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                                }
                                            },
                                            "description": "OK. The request was successful and the response body contains the representation requested."
                                        },
                                        "302": {
                                            "code": "302",
                                            "description": "FOUND. A common redirect response; you can GET the representation at the URI in the location response header."
                                        },
                                        "304": {
                                            "code": "304",
                                            "description": "NOT MODIFIED. Your clients cached version of the representation is still up to date."
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "UNAUTHORIZED. Authentication credentials are required to access the resource. All requests must be authenticated."
                                        },
                                        "403": {
                                            "code": "403",
                                            "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                                        },
                                        "429": {
                                            "code": "429",
                                            "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                                        },
                                        "500": {
                                            "code": "500",
                                            "description": "SERVER ERROR. We could not return the representation due to an internal server error."
                                        },
                                        "503": {
                                            "code": "503",
                                            "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "basic",
                                        "digest"
                                    ],
                                    "queryParameters": {
                                        "limit": {
                                            "name": "limit",
                                            "displayName": "limit",
                                            "type": "integer",
                                            "required": false,
                                            "default": 25,
                                            "repeat": false,
                                            "description": "The maximum number of collection items to return for a single request. Minimum value is 1. The maximum value is 100 and the default value is 25. This is a pagination-specific attribute.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "orderBy": {
                                            "name": "orderBy",
                                            "displayName": "orderBy",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "A request for a Collection Resource can contain an optional orderBy query parameter. The query parameter value is a URL-encoded comma-delimited list of ordering statements.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "q": {
                                            "name": "q",
                                            "displayName": "q",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "A filter search consists of specifying a q query parameter and a corresponding search value on a Collection",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "offset": {
                                            "name": "offset",
                                            "displayName": "offset",
                                            "type": "integer",
                                            "required": false,
                                            "default": 0,
                                            "repeat": false,
                                            "description": "The zero-based starting index in the entire collection of the first item to return. The default value is 0. This is a pagination-specific attribute.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "You can list your directorys accounts by sending a GET request to your directorys accounts Collection Resource href URL. The response is a paginated list of directory accounts.",
                                    "method": "get",
                                    "is": [
                                        "query"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "201": {
                                            "code": "201",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "CreateAccountresp",
                                                    "example": "{\n  \"href\" : \"https://api.stormpath.com/v1/accounts/cJoiwcorTTmkDDBsf02AbA\" ,\n  \"username\" : \"jlpicard\" ,\n  \"email\" : \"capt@enterprise.com\" ,\n  \"fullName\" : \"Jean-Luc Picard\" ,\n  \"givenName\" : \"Jean-Luc\" ,\n  \"middleName\" : \"\" ,\n  \"surname\" : \"Picard\" ,\n  \"status\" : \"UNVERIFIED\" ,\n  \"customData\" : {\n    \"href\" : \"https://api.stormpath.com/v1/accounts/cJoiwcorTTmkDDBsf02AbA/customData\"\n  } ,\n  \"groups\" : {\n    \"href\" : \"https://api.stormpath.com/v1/accounts/cJoiwcorTTmkDDBsf02AbA/groups\"\n  } ,\n  \"groupMemberships\" : {\n    \"href\" : \"https://api.stormpath.com/v1/accounts/cJoiwcorTTmkDDBsf02AbA/groupMemberships\"\n  } ,\n  \"directory\" : {\n    \"href\" : \"https://api.stormpath.com/v1/directories/WpM9nyZ2TbaEzfbRvLk9KA\"\n  } ,\n  \"tenant\" : {\n    \"href\" : \"https://api.stormpath.com/v1/tenants/Ad8mIcavSty7XzD-xZdP3g\"\n  } ,\n  \"emailVerificationToken\" : {\n    \"href\" : \"https://api.stormpath.com/v1/accounts/emailVerificationTokens/4VQxTP5I7Xio03QJTOwQy1\"\n  }\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"username\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"email\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"fullName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"givenName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"middleName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"surname\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"status\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"customData\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"groups\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"groupMemberships\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"directory\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"tenant\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"emailVerificationToken\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
                                                }
                                            },
                                            "description": "CREATED. The request was successful, we created a new resource, and the response body contains the representation. The Location header contains the new resources canonical URI."
                                        },
                                        "400": {
                                            "code": "400",
                                            "description": "BAD REQUEST. The data given in the POST or PUT failed validation. Inspect the response body for details."
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "UNAUTHORIZED. Authentication credentials are required to access the resource. All requests must be authenticated."
                                        },
                                        "403": {
                                            "code": "403",
                                            "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                                        },
                                        "405": {
                                            "code": "405",
                                            "description": "METHOD NOT ALLOWED. POST is not supported for the resource."
                                        },
                                        "409": {
                                            "code": "409",
                                            "description": "CONFLICT. You cannot create or update a resource because another resource already exists or conflicts with one you are submitting."
                                        },
                                        "415": {
                                            "code": "415",
                                            "description": "UNSUPPORTED MEDIA TYPE. You did not specify the request Content-Type header to have a value of application/json. Only application/json is currently supported."
                                        },
                                        "429": {
                                            "code": "429",
                                            "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                                        },
                                        "500": {
                                            "code": "500",
                                            "description": "SERVER ERROR. We could not create or update the resource. Please try again."
                                        },
                                        "503": {
                                            "code": "503",
                                            "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "CreateAccount",
                                            "example": "{\n  \"username\" : \"jlpicard\" ,\n  \"email\" : \"capt@enterprise.com\" ,\n  \"givenName\" : \"Jean-Luc\" ,\n  \"surname\" : \"Picard\" ,\n  \"password\" : \"uGhd%a8Kl!\"\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"username\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"email\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"givenName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"surname\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"password\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "basic",
                                        "digest"
                                    ],
                                    "description": "Create an account",
                                    "method": "post",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/accounts",
                            "description": "",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "accounts"
                            ]
                        },
                        {
                            "relativeUri": "/groups",
                            "type": "stormpathResource",
                            "securedBy": [
                                "basic",
                                "digest"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "DirectoryAccountsList",
                                                    "example": "{\n  \"href\" : \"https://api.stormpath.com/v1/directories/5D1bvO5To6KQBaGFh793Zz/groups\" ,\n  \"offset\" : 0 ,\n  \"limit\" : 25 ,\n  \"items\" : [\n    {\n      \"href\" : \"https://api.stormpath.com/v1/groups/WpM9nyZ2TbaEzfbRvLk9KA\"\n    } , {\n      \"href\" : \"https://api.stormpath.com/v1/groups/aLlyOUrBAse34js9hjiH9j\"\n    } , {\n      \"href\" : \"https://api.stormpath.com/v1/groups/Xhf0a9HLA02djsdP90dsQ2\"\n    }\n  ]\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"offset\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"limit\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"items\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"href\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                                }
                                            },
                                            "description": "OK. The request was successful and the response body contains the representation requested."
                                        },
                                        "302": {
                                            "code": "302",
                                            "description": "FOUND. A common redirect response; you can GET the representation at the URI in the location response header."
                                        },
                                        "304": {
                                            "code": "304",
                                            "description": "NOT MODIFIED. Your clients cached version of the representation is still up to date."
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "UNAUTHORIZED. Authentication credentials are required to access the resource. All requests must be authenticated."
                                        },
                                        "403": {
                                            "code": "403",
                                            "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                                        },
                                        "429": {
                                            "code": "429",
                                            "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                                        },
                                        "500": {
                                            "code": "500",
                                            "description": "SERVER ERROR. We could not return the representation due to an internal server error."
                                        },
                                        "503": {
                                            "code": "503",
                                            "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "basic",
                                        "digest"
                                    ],
                                    "queryParameters": {
                                        "name": {
                                            "name": "name",
                                            "displayName": "name",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "The name of the group. Must be unique within a directory.",
                                            "minLength": 1,
                                            "maxLength": 255,
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "limit": {
                                            "name": "limit",
                                            "displayName": "limit",
                                            "type": "integer",
                                            "required": false,
                                            "default": 25,
                                            "repeat": false,
                                            "description": "The maximum number of collection items to return for a single request. Minimum value is 1. The maximum value is 100 and the default value is 25. This is a pagination-specific attribute.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "orderBy": {
                                            "name": "orderBy",
                                            "displayName": "orderBy",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "A request for a Collection Resource can contain an optional orderBy query parameter. The query parameter value is a URL-encoded comma-delimited list of ordering statements.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "q": {
                                            "name": "q",
                                            "displayName": "q",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "A filter search consists of specifying a q query parameter and a corresponding search value on a Collection",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "offset": {
                                            "name": "offset",
                                            "displayName": "offset",
                                            "type": "integer",
                                            "required": false,
                                            "default": 0,
                                            "repeat": false,
                                            "description": "The zero-based starting index in the entire collection of the first item to return. The default value is 0. This is a pagination-specific attribute.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "You can list your directorys groups by sending a GET request to your directorys groups Collection Resource href URL. The response is a paginated list of directory groups.",
                                    "method": "get",
                                    "is": [
                                        "query"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/groups",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "groups"
                            ]
                        }
                    ],
                    "displayName": "/{directoryId}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{directoryId}"
                    ]
                }
            ],
            "displayName": "/directories",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "directories"
            ]
        },
        {
            "relativeUri": "/groups",
            "type": "stormpathResource",
            "securedBy": [
                "basic",
                "digest"
            ],
            "resources": [
                {
                    "relativeUri": "/{groupId}",
                    "type": "stormpathResource",
                    "securedBy": [
                        "basic",
                        "digest"
                    ],
                    "uriParameters": {
                        "groupId": {
                            "name": "groupId",
                            "displayName": "groupId",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "RetrieveGroup",
                                            "example": "{\n  \"href\" : \"https://api.stormpath.com/v1/groups/ZgoHUG0oSoVNeU0K4GZeVQ\" ,\n  \"name\" : \"Aquanauts\" ,\n  \"description\" : \"Sea Voyagers\" ,\n  \"status\" : \"enabled\" ,\n  \"directory\" : {\n    \"href\" : \"https://api.stormpath.com/v1/directories/bckhcGMXQDujIXpbCDRb2Q\"\n  } ,\n  \"tenant\" : {\n    \"href\" : \"https://api.stormpath.com/v1/tenants/Gh9238fksJlsieJkPkQuW\"\n  } ,\n  \"accounts\" : {\n    \"href\" : \"https://api.stormpath.com/v1/groups/ZgoHUG0oSoVNeU0K4GZeVQ/accounts\"\n  }\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"status\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"directory\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"tenant\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"accounts\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
                                        }
                                    },
                                    "description": "OK. The request was successful and the response body contains the representation requested."
                                },
                                "302": {
                                    "code": "302",
                                    "description": "FOUND. A common redirect response; you can GET the representation at the URI in the location response header."
                                },
                                "304": {
                                    "code": "304",
                                    "description": "NOT MODIFIED. Your clients cached version of the representation is still up to date."
                                },
                                "401": {
                                    "code": "401",
                                    "description": "UNAUTHORIZED. Authentication credentials are required to access the resource. All requests must be authenticated."
                                },
                                "403": {
                                    "code": "403",
                                    "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                                },
                                "404": {
                                    "code": "404",
                                    "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                                },
                                "429": {
                                    "code": "429",
                                    "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                                },
                                "500": {
                                    "code": "500",
                                    "description": "SERVER ERROR. We could not return the representation due to an internal server error."
                                },
                                "503": {
                                    "code": "503",
                                    "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "basic",
                                "digest"
                            ],
                            "queryParameters": {
                                "expand": {
                                    "name": "expand",
                                    "displayName": "expand",
                                    "type": "string",
                                    "required": false,
                                    "example": "expand=tenant,directory,accounts(offset:0,limit:50)",
                                    "repeat": false,
                                    "description": "The following Groups attributes are expandable: tenant, directory, accounts. Also, because accounts is a Collection Resources itself, you can additionally control pagination for either expanded collection.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Retrieve a group",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "example": "{\r\n  \"href\" : \"https://api.stormpath.com/v1/groups/ZgoHUG0oSoVNeU0K4GZeVQ\",\r\n  \"name\" : \"Aquanauts\",\r\n  \"description\" : \"Sea Voyagers\",\r\n  \"status\" : \"enabled\",\r\n  \"directory\" : {\r\n    \"href\" : \"https://api.stormpath.com/v1/directories/bckhcGMXQDujIXpbCDRb2Q\"\r\n  },\r\n  \"tenant\" : {\r\n    \"href\" : \"https://api.stormpath.com/v1/tenants/Gh9238fksJlsieJkPkQuW\"\r\n  },\r\n  \"accounts\" : {\r\n    \"href\" : \"https://api.stormpath.com/v1/groups/ZgoHUG0oSoVNeU0K4GZeVQ/accounts\"\r\n  }\r\n}"
                                        }
                                    }
                                },
                                "201": {
                                    "code": "201",
                                    "description": "CREATED. The request was successful, we created a new resource, and the response body contains the representation. The Location header contains the new resources canonical URI."
                                },
                                "400": {
                                    "code": "400",
                                    "description": "BAD REQUEST. The data given in the POST or PUT failed validation. Inspect the response body for details."
                                },
                                "401": {
                                    "code": "401",
                                    "description": "UNAUTHORIZED. Authentication credentials are required to access the resource. All requests must be authenticated."
                                },
                                "403": {
                                    "code": "403",
                                    "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                                },
                                "404": {
                                    "code": "404",
                                    "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                                },
                                "405": {
                                    "code": "405",
                                    "description": "METHOD NOT ALLOWED. POST is not supported for the resource."
                                },
                                "409": {
                                    "code": "409",
                                    "description": "CONFLICT. You cannot create or update a resource because another resource already exists or conflicts with one you are submitting."
                                },
                                "415": {
                                    "code": "415",
                                    "description": "UNSUPPORTED MEDIA TYPE. You did not specify the request Content-Type header to have a value of application/json. Only application/json is currently supported."
                                },
                                "429": {
                                    "code": "429",
                                    "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                                },
                                "500": {
                                    "code": "500",
                                    "description": "SERVER ERROR. We could not create or update the resource. Please try again."
                                },
                                "503": {
                                    "code": "503",
                                    "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "UpdateGroup",
                                    "example": "{\n  \"description\" : \"Sea Voyagers\"\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "basic",
                                "digest"
                            ],
                            "description": "Update a group",
                            "method": "post",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "204": {
                                    "code": "204",
                                    "description": "NO CONTENT. The request was successful; the resource was deleted. The deleted resource representation will not be returned."
                                },
                                "401": {
                                    "code": "401",
                                    "description": "UNAUTHORIZED. The supplied credentials, if any, are not sufficient to create or update the resource."
                                },
                                "403": {
                                    "code": "403",
                                    "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                                },
                                "404": {
                                    "code": "404",
                                    "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                                },
                                "405": {
                                    "code": "405",
                                    "description": "METHOD NOT ALLOWED. DELETE is not supported for the resource."
                                },
                                "429": {
                                    "code": "429",
                                    "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                                },
                                "500": {
                                    "code": "500",
                                    "description": "SERVER ERROR. We could not create or update the resource. Please try again."
                                },
                                "503": {
                                    "code": "503",
                                    "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "basic",
                                "digest"
                            ],
                            "description": "Delete a group",
                            "method": "delete",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/accounts",
                            "type": "stormpathResource",
                            "securedBy": [
                                "basic",
                                "digest"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json"
                                                }
                                            },
                                            "description": "OK. The request was successful and the response body contains the representation requested."
                                        },
                                        "302": {
                                            "code": "302",
                                            "description": "FOUND. A common redirect response; you can GET the representation at the URI in the location response header."
                                        },
                                        "304": {
                                            "code": "304",
                                            "description": "NOT MODIFIED. Your clients cached version of the representation is still up to date."
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "UNAUTHORIZED. Authentication credentials are required to access the resource. All requests must be authenticated."
                                        },
                                        "403": {
                                            "code": "403",
                                            "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                                        },
                                        "429": {
                                            "code": "429",
                                            "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                                        },
                                        "500": {
                                            "code": "500",
                                            "description": "SERVER ERROR. We could not return the representation due to an internal server error."
                                        },
                                        "503": {
                                            "code": "503",
                                            "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "basic",
                                        "digest"
                                    ],
                                    "queryParameters": {
                                        "limit": {
                                            "name": "limit",
                                            "displayName": "limit",
                                            "type": "integer",
                                            "required": false,
                                            "default": 25,
                                            "repeat": false,
                                            "description": "The maximum number of collection items to return for a single request. Minimum value is 1. The maximum value is 100 and the default value is 25. This is a pagination-specific attribute.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "orderBy": {
                                            "name": "orderBy",
                                            "displayName": "orderBy",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "A request for a Collection Resource can contain an optional orderBy query parameter. The query parameter value is a URL-encoded comma-delimited list of ordering statements.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "q": {
                                            "name": "q",
                                            "displayName": "q",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "A filter search consists of specifying a q query parameter and a corresponding search value on a Collection",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "offset": {
                                            "name": "offset",
                                            "displayName": "offset",
                                            "type": "integer",
                                            "required": false,
                                            "default": 0,
                                            "repeat": false,
                                            "description": "The zero-based starting index in the entire collection of the first item to return. The default value is 0. This is a pagination-specific attribute.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Retreive group accounts.",
                                    "method": "get",
                                    "is": [
                                        "query"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/accounts",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "accounts"
                            ]
                        },
                        {
                            "relativeUri": "/customData",
                            "type": "stormpathResource",
                            "securedBy": [
                                "basic",
                                "digest"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "example": ""
                                                }
                                            },
                                            "description": "OK. The request was successful and the response body contains the representation requested."
                                        },
                                        "302": {
                                            "code": "302",
                                            "description": "FOUND. A common redirect response; you can GET the representation at the URI in the location response header."
                                        },
                                        "304": {
                                            "code": "304",
                                            "description": "NOT MODIFIED. Your clients cached version of the representation is still up to date."
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "UNAUTHORIZED. Authentication credentials are required to access the resource. All requests must be authenticated."
                                        },
                                        "403": {
                                            "code": "403",
                                            "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                                        },
                                        "429": {
                                            "code": "429",
                                            "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                                        },
                                        "500": {
                                            "code": "500",
                                            "description": "SERVER ERROR. We could not return the representation due to an internal server error."
                                        },
                                        "503": {
                                            "code": "503",
                                            "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "basic",
                                        "digest"
                                    ],
                                    "description": "Retrieve a group custom data",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "204": {
                                            "code": "204",
                                            "description": "NO CONTENT. The request was successful; the resource was deleted. The deleted resource representation will not be returned."
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "UNAUTHORIZED. The supplied credentials, if any, are not sufficient to create or update the resource."
                                        },
                                        "403": {
                                            "code": "403",
                                            "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                                        },
                                        "405": {
                                            "code": "405",
                                            "description": "METHOD NOT ALLOWED. DELETE is not supported for the resource."
                                        },
                                        "429": {
                                            "code": "429",
                                            "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                                        },
                                        "500": {
                                            "code": "500",
                                            "description": "SERVER ERROR. We could not create or update the resource. Please try again."
                                        },
                                        "503": {
                                            "code": "503",
                                            "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "basic",
                                        "digest"
                                    ],
                                    "description": "Delete all of a groups custom data",
                                    "method": "delete",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json"
                                                }
                                            }
                                        },
                                        "201": {
                                            "code": "201",
                                            "description": "CREATED. The request was successful, we created a new resource, and the response body contains the representation. The Location header contains the new resources canonical URI."
                                        },
                                        "400": {
                                            "code": "400",
                                            "description": "BAD REQUEST. The data given in the POST or PUT failed validation. Inspect the response body for details."
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "UNAUTHORIZED. Authentication credentials are required to access the resource. All requests must be authenticated."
                                        },
                                        "403": {
                                            "code": "403",
                                            "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                                        },
                                        "405": {
                                            "code": "405",
                                            "description": "METHOD NOT ALLOWED. POST is not supported for the resource."
                                        },
                                        "409": {
                                            "code": "409",
                                            "description": "CONFLICT. You cannot create or update a resource because another resource already exists or conflicts with one you are submitting."
                                        },
                                        "415": {
                                            "code": "415",
                                            "description": "UNSUPPORTED MEDIA TYPE. You did not specify the request Content-Type header to have a value of application/json. Only application/json is currently supported."
                                        },
                                        "429": {
                                            "code": "429",
                                            "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                                        },
                                        "500": {
                                            "code": "500",
                                            "description": "SERVER ERROR. We could not create or update the resource. Please try again."
                                        },
                                        "503": {
                                            "code": "503",
                                            "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json"
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "basic",
                                        "digest"
                                    ],
                                    "description": "Update a group custom data",
                                    "method": "post",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "resources": [
                                {
                                    "relativeUri": "/{fieldName}",
                                    "type": "stormpathResource",
                                    "securedBy": [
                                        "basic",
                                        "digest"
                                    ],
                                    "uriParameters": {
                                        "fieldName": {
                                            "name": "fieldName",
                                            "displayName": "fieldName",
                                            "type": "string",
                                            "required": true,
                                            "repeat": false,
                                            "__METADATA__": {
                                                "calculated": true,
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "methods": [
                                        {
                                            "responses": {
                                                "204": {
                                                    "code": "204",
                                                    "description": "NO CONTENT. The request was successful; the resource was deleted. The deleted resource representation will not be returned."
                                                },
                                                "401": {
                                                    "code": "401",
                                                    "description": "UNAUTHORIZED. The supplied credentials, if any, are not sufficient to create or update the resource."
                                                },
                                                "403": {
                                                    "code": "403",
                                                    "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                                                },
                                                "404": {
                                                    "code": "404",
                                                    "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                                                },
                                                "405": {
                                                    "code": "405",
                                                    "description": "METHOD NOT ALLOWED. DELETE is not supported for the resource."
                                                },
                                                "429": {
                                                    "code": "429",
                                                    "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                                                },
                                                "500": {
                                                    "code": "500",
                                                    "description": "SERVER ERROR. We could not create or update the resource. Please try again."
                                                },
                                                "503": {
                                                    "code": "503",
                                                    "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                                                }
                                            },
                                            "protocols": [
                                                "HTTPS"
                                            ],
                                            "securedBy": [
                                                "basic",
                                                "digest"
                                            ],
                                            "description": "Delete a customData field.",
                                            "method": "delete",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/{fieldName}",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "{fieldName}"
                                    ]
                                }
                            ],
                            "displayName": "/customData",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "customData"
                            ]
                        },
                        {
                            "relativeUri": "/accountMemberships",
                            "type": "stormpathResource",
                            "securedBy": [
                                "basic",
                                "digest"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "GroupMembershipsList",
                                                    "example": "{\n  \"href\" : \"https://api.stormpath.com/v1/accounts/MvdTIJakRO2Ry8c5z5itWw/groupMemberships\" ,\n  \"offset\" : 0 ,\n  \"limit\" : 25 ,\n  \"items\" : [\n    {\n      \"href\" : \"https://api.stormpath.com/v1/groupMemberships/36KuRJcsfiHZjCR0Trv4yJ\" ,\n      \"account\" : {\n        \"href\" : \"https://api.stormpath.com/v1/accounts/MvdTIJakRO2Ry8c5z5itWw\"\n      } ,\n      \"group\" : {\n        \"href\" : \"https://api.stormpath.com/v1/groups/tKP_30-9TcCneD3ktBwcig\"\n      }\n    } , {\n      \"href\" : \"https://api.stormpath.com/v1/groupMemberships/1kjD3owGFAAzoGhFsO1oLz\" ,\n      \"account\" : {\n        \"href\" : \"https://api.stormpath.com/v1/accounts/MvdTIJakRO2Ry8c5z5itWw\"\n      } ,\n      \"group\" : {\n        \"href\" : \"https://api.stormpath.com/v1/groups/smJGMBMpQ_-FKvMgCRTdVA\"\n      }\n    }\n  ]\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"offset\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"limit\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"items\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"href\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"account\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"href\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"group\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"href\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                                }
                                            },
                                            "description": "OK. The request was successful and the response body contains the representation requested."
                                        },
                                        "302": {
                                            "code": "302",
                                            "description": "FOUND. A common redirect response; you can GET the representation at the URI in the location response header."
                                        },
                                        "304": {
                                            "code": "304",
                                            "description": "NOT MODIFIED. Your clients cached version of the representation is still up to date."
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "UNAUTHORIZED. Authentication credentials are required to access the resource. All requests must be authenticated."
                                        },
                                        "403": {
                                            "code": "403",
                                            "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                                        },
                                        "429": {
                                            "code": "429",
                                            "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                                        },
                                        "500": {
                                            "code": "500",
                                            "description": "SERVER ERROR. We could not return the representation due to an internal server error."
                                        },
                                        "503": {
                                            "code": "503",
                                            "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "basic",
                                        "digest"
                                    ],
                                    "description": "Retreive a Collection Resource containing the group memberships to which a specific group is a member",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/accountMemberships",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "accountMemberships"
                            ]
                        }
                    ],
                    "displayName": "/{groupId}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{groupId}"
                    ]
                }
            ],
            "displayName": "/groups",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "groups"
            ]
        },
        {
            "relativeUri": "/groupMemberships",
            "type": "stormpathResource",
            "securedBy": [
                "basic",
                "digest"
            ],
            "methods": [
                {
                    "responses": {
                        "201": {
                            "code": "201",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "CreateGroupMembershipresp",
                                    "example": "{\n  \"href\" : \"https://api.stormpath.com/v1/groupMemberships/57YZCqrNgrzcIGYs1PfP4F\" ,\n  \"account\" : {\n    \"href\" : \"https://api.stormpath.com/v1/accounts/gSraAOpFS-Savh3h6gFDzQ\"\n  } ,\n  \"group\" : {\n    \"href\" : \"https://api.stormpath.com/v1/groups/smJGMBMpQ_-FKvMgCRTdVA\"\n  }\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"account\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"group\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
                                }
                            },
                            "description": "CREATED. The request was successful, we created a new resource, and the response body contains the representation. The Location header contains the new resources canonical URI."
                        },
                        "400": {
                            "code": "400",
                            "description": "BAD REQUEST. The data given in the POST or PUT failed validation. Inspect the response body for details."
                        },
                        "401": {
                            "code": "401",
                            "description": "UNAUTHORIZED. Authentication credentials are required to access the resource. All requests must be authenticated."
                        },
                        "403": {
                            "code": "403",
                            "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                        },
                        "404": {
                            "code": "404",
                            "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                        },
                        "405": {
                            "code": "405",
                            "description": "METHOD NOT ALLOWED. POST is not supported for the resource."
                        },
                        "409": {
                            "code": "409",
                            "description": "CONFLICT. You cannot create or update a resource because another resource already exists or conflicts with one you are submitting."
                        },
                        "415": {
                            "code": "415",
                            "description": "UNSUPPORTED MEDIA TYPE. You did not specify the request Content-Type header to have a value of application/json. Only application/json is currently supported."
                        },
                        "429": {
                            "code": "429",
                            "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                        },
                        "500": {
                            "code": "500",
                            "description": "SERVER ERROR. We could not create or update the resource. Please try again."
                        },
                        "503": {
                            "code": "503",
                            "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json",
                            "schema": "CreateGroupMembership",
                            "example": "{\n  \"account\" : {\n    \"href\" : \"https://api.stormpath.com/v1/accounts/gSraAOpFS-Savh3h6gFDzQ\"\n  } ,\n  \"group\" : {\n    \"href\" : \"https://api.stormpath.com/v1/groups/smJGMBMpQ_-FKvMgCRTdVA\"\n  }\n}",
                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"account\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"group\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "basic",
                        "digest"
                    ],
                    "description": "To create a group membership you need the account and the group href.",
                    "method": "post",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/{groupMembershipId}",
                    "type": "stormpathResource",
                    "securedBy": [
                        "basic",
                        "digest"
                    ],
                    "uriParameters": {
                        "groupMembershipId": {
                            "name": "groupMembershipId",
                            "displayName": "groupMembershipId",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "RetrieveGroupMembership",
                                            "example": "{\n  \"href\" : \"https://api.stormpath.com/v1/groupMemberships/249Up9ojT6NUNEYocdG4Dj\" ,\n  \"account\" : {\n    \"href\" : \"https://api.stormpath.com/v1/accounts/k8idbaXRTSKncv3VLffDNw\"\n  } ,\n  \"group\" : {\n    \"href\" : \"https://api.stormpath.com/v1/groups/smJGMBMpQ_-FKvMgCRTdVA\"\n  }\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"account\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"group\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
                                        }
                                    },
                                    "description": "OK. The request was successful and the response body contains the representation requested."
                                },
                                "302": {
                                    "code": "302",
                                    "description": "FOUND. A common redirect response; you can GET the representation at the URI in the location response header."
                                },
                                "304": {
                                    "code": "304",
                                    "description": "NOT MODIFIED. Your clients cached version of the representation is still up to date."
                                },
                                "401": {
                                    "code": "401",
                                    "description": "UNAUTHORIZED. Authentication credentials are required to access the resource. All requests must be authenticated."
                                },
                                "403": {
                                    "code": "403",
                                    "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                                },
                                "404": {
                                    "code": "404",
                                    "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                                },
                                "429": {
                                    "code": "429",
                                    "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                                },
                                "500": {
                                    "code": "500",
                                    "description": "SERVER ERROR. We could not return the representation due to an internal server error."
                                },
                                "503": {
                                    "code": "503",
                                    "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "basic",
                                "digest"
                            ],
                            "description": "Retrieve a group membership.\n",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "204": {
                                    "code": "204",
                                    "description": "NO CONTENT. The request was successful; the resource was deleted. The deleted resource representation will not be returned."
                                },
                                "401": {
                                    "code": "401",
                                    "description": "UNAUTHORIZED. The supplied credentials, if any, are not sufficient to create or update the resource."
                                },
                                "403": {
                                    "code": "403",
                                    "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                                },
                                "404": {
                                    "code": "404",
                                    "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                                },
                                "405": {
                                    "code": "405",
                                    "description": "METHOD NOT ALLOWED. DELETE is not supported for the resource."
                                },
                                "429": {
                                    "code": "429",
                                    "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                                },
                                "500": {
                                    "code": "500",
                                    "description": "SERVER ERROR. We could not create or update the resource. Please try again."
                                },
                                "503": {
                                    "code": "503",
                                    "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "basic",
                                "digest"
                            ],
                            "description": "Delete a group membership",
                            "method": "delete",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/{groupMembershipId}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{groupMembershipId}"
                    ]
                }
            ],
            "displayName": "/groupMemberships",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "groupMemberships"
            ]
        },
        {
            "relativeUri": "/accounts",
            "type": "stormpathResource",
            "securedBy": [
                "basic",
                "digest"
            ],
            "resources": [
                {
                    "relativeUri": "/{accountId}",
                    "type": "stormpathResource",
                    "securedBy": [
                        "basic",
                        "digest"
                    ],
                    "uriParameters": {
                        "accountId": {
                            "name": "accountId",
                            "displayName": "accountId",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "RetrieveAccount",
                                            "example": "{\n  \"href\" : \"https://api.stormpath.com/v1/accounts/cJoiwcorTTmkDDBsf02AbA\" ,\n  \"username\" : \"jlpicard\" ,\n  \"email\" : \"capt@enterprise.com\" ,\n  \"fullName\" : \"Jean-Luc Picard\" ,\n  \"givenName\" : \"Jean-Luc\" ,\n  \"middleName\" : \"\" ,\n  \"surname\" : \"Picard\" ,\n  \"status\" : \"ENABLED\" ,\n  \"customData\" : {\n    \"href\" : \"https://api.stormpath.com/v1/accounts/cJoiwcorTTmkDDBsf02AbA/customData\"\n  } ,\n  \"groups\" : {\n    \"href\" : \"https://api.stormpath.com/v1/accounts/cJoiwcorTTmkDDBsf02AbA/groups\"\n  } ,\n  \"groupMemberships\" : {\n    \"href\" : \"https://api.stormpath.com/v1/accounts/cJoiwcorTTmkDDBsf02AbA/groupMemberships\"\n  } ,\n  \"directory\" : {\n    \"href\" : \"https://api.stormpath.com/v1/directories/1FaQ6kZxTL4DVJXWeXtUh7\"\n  } ,\n  \"tenant\" : {\n    \"href\" : \"https://api.stormpath.com/v1/tenants/Ad8mIcavSty7XzD-xZdP3g\"\n  } ,\n  \"emailVerificationToken\" : null\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"username\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"email\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"fullName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"givenName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"middleName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"surname\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"status\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"customData\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"groups\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"groupMemberships\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"directory\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"tenant\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"emailVerificationToken\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false\n    }\n  }\n}"
                                        }
                                    },
                                    "description": "OK. The request was successful and the response body contains the representation requested."
                                },
                                "302": {
                                    "code": "302",
                                    "description": "FOUND. A common redirect response; you can GET the representation at the URI in the location response header."
                                },
                                "304": {
                                    "code": "304",
                                    "description": "NOT MODIFIED. Your clients cached version of the representation is still up to date."
                                },
                                "401": {
                                    "code": "401",
                                    "description": "UNAUTHORIZED. Authentication credentials are required to access the resource. All requests must be authenticated."
                                },
                                "403": {
                                    "code": "403",
                                    "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                                },
                                "404": {
                                    "code": "404",
                                    "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                                },
                                "429": {
                                    "code": "429",
                                    "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                                },
                                "500": {
                                    "code": "500",
                                    "description": "SERVER ERROR. We could not return the representation due to an internal server error."
                                },
                                "503": {
                                    "code": "503",
                                    "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "basic",
                                "digest"
                            ],
                            "queryParameters": {
                                "expand": {
                                    "name": "expand",
                                    "displayName": "expand",
                                    "type": "string",
                                    "required": false,
                                    "example": "expand=tenant,directory,groups(offset:0,limit:50),groupMemberships(offset:0,limit:50)",
                                    "repeat": false,
                                    "description": "The following Account attributes are expandable: customData, tenant, directory, groups, groupMemberships. Also, because groups and groupMemberships are Collection Resources themselves, you can additionally control pagination for either expanded collection.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Retrieve an account",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "UpdateAccountresp",
                                            "example": "{\n  \"href\" : \"https://api.stormpath.com/v1/accounts/cJoiwcorTTmkDDBsf02AbA\" ,\n  \"username\" : \"jlpicard\" ,\n  \"email\" : \"capt@enterprise.com\" ,\n  \"fullName\" : \"Jean-Luc Picard\" ,\n  \"givenName\" : \"Jean-Luc\" ,\n  \"middleName\" : \"\" ,\n  \"surname\" : \"Picard\" ,\n  \"status\" : \"ENABLED\" ,\n  \"customData\" : {\n    \"href\" : \"https://api.stormpath.com/v1/accounts/cJoiwcorTTmkDDBsf02AbA/customData\"\n  } ,\n  \"groups\" : {\n    \"href\" : \"https://api.stormpath.com/v1/accounts/cJoiwcorTTmkDDBsf02AbA/groups\"\n  } ,\n  \"groupMemberships\" : {\n    \"href\" : \"https://api.stormpath.com/v1/accounts/cJoiwcorTTmkDDBsf02AbA/groupMemberships\"\n  } ,\n  \"directory\" : {\n    \"href\" : \"https://api.stormpath.com/v1/directories/1FaQ6kZxTL4DVJXWeXtUh7\"\n  } ,\n  \"tenant\" : {\n    \"href\" : \"https://api.stormpath.com/v1/tenants/Ad8mIcavSty7XzD-xZdP3g\"\n  } ,\n  \"emailVerificationToken\" : null\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"username\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"email\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"fullName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"givenName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"middleName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"surname\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"status\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"customData\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"groups\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"groupMemberships\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"directory\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"tenant\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"href\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"emailVerificationToken\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false\n    }\n  }\n}"
                                        }
                                    }
                                },
                                "201": {
                                    "code": "201",
                                    "description": "CREATED. The request was successful, we created a new resource, and the response body contains the representation. The Location header contains the new resources canonical URI."
                                },
                                "400": {
                                    "code": "400",
                                    "description": "BAD REQUEST. The data given in the POST or PUT failed validation. Inspect the response body for details."
                                },
                                "401": {
                                    "code": "401",
                                    "description": "UNAUTHORIZED. Authentication credentials are required to access the resource. All requests must be authenticated."
                                },
                                "403": {
                                    "code": "403",
                                    "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                                },
                                "404": {
                                    "code": "404",
                                    "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                                },
                                "405": {
                                    "code": "405",
                                    "description": "METHOD NOT ALLOWED. POST is not supported for the resource."
                                },
                                "409": {
                                    "code": "409",
                                    "description": "CONFLICT. You cannot create or update a resource because another resource already exists or conflicts with one you are submitting."
                                },
                                "415": {
                                    "code": "415",
                                    "description": "UNSUPPORTED MEDIA TYPE. You did not specify the request Content-Type header to have a value of application/json. Only application/json is currently supported."
                                },
                                "429": {
                                    "code": "429",
                                    "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                                },
                                "500": {
                                    "code": "500",
                                    "description": "SERVER ERROR. We could not create or update the resource. Please try again."
                                },
                                "503": {
                                    "code": "503",
                                    "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "UpdateAccount",
                                    "example": "{\n  \"username\" : \"jlpicard\" ,\n  \"givenName\" : \"Jean-Luc\" ,\n  \"surname\" : \"Picard\"\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"username\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"givenName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"surname\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "basic",
                                "digest"
                            ],
                            "description": "Update an account",
                            "method": "post",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "204": {
                                    "code": "204",
                                    "description": "NO CONTENT. The request was successful; the resource was deleted. The deleted resource representation will not be returned."
                                },
                                "401": {
                                    "code": "401",
                                    "description": "UNAUTHORIZED. The supplied credentials, if any, are not sufficient to create or update the resource."
                                },
                                "403": {
                                    "code": "403",
                                    "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                                },
                                "404": {
                                    "code": "404",
                                    "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                                },
                                "405": {
                                    "code": "405",
                                    "description": "METHOD NOT ALLOWED. DELETE is not supported for the resource."
                                },
                                "429": {
                                    "code": "429",
                                    "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                                },
                                "500": {
                                    "code": "500",
                                    "description": "SERVER ERROR. We could not create or update the resource. Please try again."
                                },
                                "503": {
                                    "code": "503",
                                    "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "basic",
                                "digest"
                            ],
                            "description": "Delete an account",
                            "method": "delete",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/groupMemberships",
                            "type": "stormpathResource",
                            "securedBy": [
                                "basic",
                                "digest"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "GroupMembershipsList",
                                                    "example": "{\n  \"href\" : \"https://api.stormpath.com/v1/accounts/MvdTIJakRO2Ry8c5z5itWw/groupMemberships\" ,\n  \"offset\" : 0 ,\n  \"limit\" : 25 ,\n  \"items\" : [\n    {\n      \"href\" : \"https://api.stormpath.com/v1/groupMemberships/36KuRJcsfiHZjCR0Trv4yJ\" ,\n      \"account\" : {\n        \"href\" : \"https://api.stormpath.com/v1/accounts/MvdTIJakRO2Ry8c5z5itWw\"\n      } ,\n      \"group\" : {\n        \"href\" : \"https://api.stormpath.com/v1/groups/tKP_30-9TcCneD3ktBwcig\"\n      }\n    } , {\n      \"href\" : \"https://api.stormpath.com/v1/groupMemberships/1kjD3owGFAAzoGhFsO1oLz\" ,\n      \"account\" : {\n        \"href\" : \"https://api.stormpath.com/v1/accounts/MvdTIJakRO2Ry8c5z5itWw\"\n      } ,\n      \"group\" : {\n        \"href\" : \"https://api.stormpath.com/v1/groups/smJGMBMpQ_-FKvMgCRTdVA\"\n      }\n    }\n  ]\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"offset\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"limit\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"items\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"href\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"account\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"href\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"group\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"href\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                                }
                                            },
                                            "description": "OK. The request was successful and the response body contains the representation requested."
                                        },
                                        "302": {
                                            "code": "302",
                                            "description": "FOUND. A common redirect response; you can GET the representation at the URI in the location response header."
                                        },
                                        "304": {
                                            "code": "304",
                                            "description": "NOT MODIFIED. Your clients cached version of the representation is still up to date."
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "UNAUTHORIZED. Authentication credentials are required to access the resource. All requests must be authenticated."
                                        },
                                        "403": {
                                            "code": "403",
                                            "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                                        },
                                        "429": {
                                            "code": "429",
                                            "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                                        },
                                        "500": {
                                            "code": "500",
                                            "description": "SERVER ERROR. We could not return the representation due to an internal server error."
                                        },
                                        "503": {
                                            "code": "503",
                                            "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "basic",
                                        "digest"
                                    ],
                                    "description": "Retreive a paginated list of the group memberships where the account is involved.",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/groupMemberships",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "groupMemberships"
                            ]
                        },
                        {
                            "relativeUri": "/groups",
                            "type": "stormpathResource",
                            "securedBy": [
                                "basic",
                                "digest"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "AccountGroupsList",
                                                    "example": "{\n  \"href\" : \"https://api.stormpath.com/v1/accounts/cJoiwcorTTmkDDBsf02AbA/groups\" ,\n  \"offset\" : 0 ,\n  \"limit\" : 25 ,\n  \"items\" : [\n    {\n      \"href\" : \"https://api.stormpath.com/v1/groups/ZgoHUG0oSoVNeU0K4GZeVQ\" ,\n      \"name\" : \"Red Shirts\" ,\n      \"description\" : \"\" ,\n      \"status\" : \"ENABLED\" ,\n      \"directory\" : {\n        \"href\" : \"http://api.stormpath.com/v1/directories/1FaQ6kZxTL4DVJXWeXtUh7\"\n      } ,\n      \"tenant\" : {\n        \"href\" : \"http://api.stormpath.com/v1/tenants/tqjB6LiESGO00qvC5dkNw\"\n      } ,\n      \"accounts\" : {\n        \"href\" : \"http://api.stormpath.com/v1/groups/ZgoHUG0oSoVNeU0K4GZeVQ/accounts\"\n      } ,\n      \"accountMemberships\" : {\n        \"href\" : \"http://api.stormpath.com/v1/groups/ZgoHUG0oSoVNeU0K4GZeVQ/accountMemberships\"\n      }\n    }\n  ]\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"offset\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"limit\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"items\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"href\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"description\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"status\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"directory\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"href\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"tenant\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"href\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"accounts\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"href\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"accountMemberships\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"href\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                                }
                                            },
                                            "description": "OK. The request was successful and the response body contains the representation requested."
                                        },
                                        "302": {
                                            "code": "302",
                                            "description": "FOUND. A common redirect response; you can GET the representation at the URI in the location response header."
                                        },
                                        "304": {
                                            "code": "304",
                                            "description": "NOT MODIFIED. Your clients cached version of the representation is still up to date."
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "UNAUTHORIZED. Authentication credentials are required to access the resource. All requests must be authenticated."
                                        },
                                        "403": {
                                            "code": "403",
                                            "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                                        },
                                        "429": {
                                            "code": "429",
                                            "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                                        },
                                        "500": {
                                            "code": "500",
                                            "description": "SERVER ERROR. We could not return the representation due to an internal server error."
                                        },
                                        "503": {
                                            "code": "503",
                                            "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "basic",
                                        "digest"
                                    ],
                                    "description": "Retreive a Collection Resource containing links for all groups where a specific account is a member.",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/groups",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "groups"
                            ]
                        },
                        {
                            "relativeUri": "/customData",
                            "type": "stormpathResource",
                            "securedBy": [
                                "basic",
                                "digest"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "RetrieveAccountCustomData",
                                                    "example": "{\n  \"href\" : \"https://api.stormpath.com/v1/accounts/cJoiwcorTTmkDDBsf02AbA/customData\" ,\n  \"createdAt\" : \"2014-07-16T13:48:22.378Z\" ,\n  \"modifiedAt\" : \"2014-07-16T13:48:22.378Z\" ,\n  \"birthDate\" : \"1985-07-15\" ,\n  \"favoriteColor\" : \"blue\"\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"createdAt\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"modifiedAt\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"birthDate\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"favoriteColor\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                                }
                                            },
                                            "description": "OK. The request was successful and the response body contains the representation requested."
                                        },
                                        "302": {
                                            "code": "302",
                                            "description": "FOUND. A common redirect response; you can GET the representation at the URI in the location response header."
                                        },
                                        "304": {
                                            "code": "304",
                                            "description": "NOT MODIFIED. Your clients cached version of the representation is still up to date."
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "UNAUTHORIZED. Authentication credentials are required to access the resource. All requests must be authenticated."
                                        },
                                        "403": {
                                            "code": "403",
                                            "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                                        },
                                        "429": {
                                            "code": "429",
                                            "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                                        },
                                        "500": {
                                            "code": "500",
                                            "description": "SERVER ERROR. We could not return the representation due to an internal server error."
                                        },
                                        "503": {
                                            "code": "503",
                                            "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "basic",
                                        "digest"
                                    ],
                                    "description": "Retrieve an account custom data",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "UpdateAccountCustomDataresp",
                                                    "example": "{\n  \"href\" : \"https://api.stormpath.com/v1/accounts/cJoiwcorTTmkDDBsf02AbA/customData\" ,\n  \"createdAt\" : \"2014-07-16T13:48:22.378Z\" ,\n  \"modifiedAt\" : \"2014-07-16T13:48:22.378Z\" ,\n  \"birthDate\" : \"1985-07-15\" ,\n  \"favoriteColor\" : \"red\" ,\n  \"hobby\" : \"Kendo\"\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"createdAt\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"modifiedAt\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"birthDate\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"favoriteColor\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"hobby\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                                }
                                            }
                                        },
                                        "201": {
                                            "code": "201",
                                            "description": "CREATED. The request was successful, we created a new resource, and the response body contains the representation. The Location header contains the new resources canonical URI."
                                        },
                                        "400": {
                                            "code": "400",
                                            "description": "BAD REQUEST. The data given in the POST or PUT failed validation. Inspect the response body for details."
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "UNAUTHORIZED. Authentication credentials are required to access the resource. All requests must be authenticated."
                                        },
                                        "403": {
                                            "code": "403",
                                            "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                                        },
                                        "405": {
                                            "code": "405",
                                            "description": "METHOD NOT ALLOWED. POST is not supported for the resource."
                                        },
                                        "409": {
                                            "code": "409",
                                            "description": "CONFLICT. You cannot create or update a resource because another resource already exists or conflicts with one you are submitting."
                                        },
                                        "415": {
                                            "code": "415",
                                            "description": "UNSUPPORTED MEDIA TYPE. You did not specify the request Content-Type header to have a value of application/json. Only application/json is currently supported."
                                        },
                                        "429": {
                                            "code": "429",
                                            "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                                        },
                                        "500": {
                                            "code": "500",
                                            "description": "SERVER ERROR. We could not create or update the resource. Please try again."
                                        },
                                        "503": {
                                            "code": "503",
                                            "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "UpdateAccountCustomData",
                                            "example": "{\n  \"favoriteColor\" : \"red\" ,\n  \"hobby\" : \"Kendo\"\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"favoriteColor\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"hobby\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "basic",
                                        "digest"
                                    ],
                                    "description": "Update account custom data",
                                    "method": "post",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "204": {
                                            "code": "204",
                                            "description": "NO CONTENT. The request was successful; the resource was deleted. The deleted resource representation will not be returned."
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "UNAUTHORIZED. The supplied credentials, if any, are not sufficient to create or update the resource."
                                        },
                                        "403": {
                                            "code": "403",
                                            "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                                        },
                                        "405": {
                                            "code": "405",
                                            "description": "METHOD NOT ALLOWED. DELETE is not supported for the resource."
                                        },
                                        "429": {
                                            "code": "429",
                                            "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                                        },
                                        "500": {
                                            "code": "500",
                                            "description": "SERVER ERROR. We could not create or update the resource. Please try again."
                                        },
                                        "503": {
                                            "code": "503",
                                            "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "basic",
                                        "digest"
                                    ],
                                    "description": "Delete all of an accounts custom data",
                                    "method": "delete",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "resources": [
                                {
                                    "relativeUri": "/{fieldName}",
                                    "type": "stormpathResource",
                                    "securedBy": [
                                        "basic",
                                        "digest"
                                    ],
                                    "uriParameters": {
                                        "fieldName": {
                                            "name": "fieldName",
                                            "displayName": "fieldName",
                                            "type": "string",
                                            "required": true,
                                            "repeat": false,
                                            "__METADATA__": {
                                                "calculated": true,
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "methods": [
                                        {
                                            "responses": {
                                                "204": {
                                                    "code": "204",
                                                    "description": "NO CONTENT. The request was successful; the resource was deleted. The deleted resource representation will not be returned."
                                                },
                                                "401": {
                                                    "code": "401",
                                                    "description": "UNAUTHORIZED. The supplied credentials, if any, are not sufficient to create or update the resource."
                                                },
                                                "403": {
                                                    "code": "403",
                                                    "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                                                },
                                                "404": {
                                                    "code": "404",
                                                    "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                                                },
                                                "405": {
                                                    "code": "405",
                                                    "description": "METHOD NOT ALLOWED. DELETE is not supported for the resource."
                                                },
                                                "429": {
                                                    "code": "429",
                                                    "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                                                },
                                                "500": {
                                                    "code": "500",
                                                    "description": "SERVER ERROR. We could not create or update the resource. Please try again."
                                                },
                                                "503": {
                                                    "code": "503",
                                                    "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                                                }
                                            },
                                            "protocols": [
                                                "HTTPS"
                                            ],
                                            "securedBy": [
                                                "basic",
                                                "digest"
                                            ],
                                            "description": "Delete a customData field.",
                                            "method": "delete",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/{fieldName}",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "{fieldName}"
                                    ]
                                }
                            ],
                            "displayName": "/customData",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "customData"
                            ]
                        }
                    ],
                    "displayName": "/{accountId}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{accountId}"
                    ]
                },
                {
                    "relativeUri": "/emailVerificationTokens",
                    "type": "stormpathResource",
                    "securedBy": [
                        "basic",
                        "digest"
                    ],
                    "resources": [
                        {
                            "relativeUri": "/{verificationToken}",
                            "type": "stormpathResource",
                            "securedBy": [
                                "basic",
                                "digest"
                            ],
                            "uriParameters": {
                                "verificationToken": {
                                    "name": "verificationToken",
                                    "displayName": "verificationToken",
                                    "type": "string",
                                    "required": true,
                                    "repeat": false,
                                    "__METADATA__": {
                                        "calculated": true,
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "EmailVerificationTokens",
                                                    "example": "{\n  \"href\" : \"https://api.stormpath.com/v1/accounts/6XLbNaUsKm3E0kXMTTr10V\"\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"href\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                                }
                                            }
                                        },
                                        "201": {
                                            "code": "201",
                                            "description": "CREATED. The request was successful, we created a new resource, and the response body contains the representation. The Location header contains the new resources canonical URI."
                                        },
                                        "400": {
                                            "code": "400",
                                            "description": "BAD REQUEST. The data given in the POST or PUT failed validation. Inspect the response body for details."
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "UNAUTHORIZED. Authentication credentials are required to access the resource. All requests must be authenticated."
                                        },
                                        "403": {
                                            "code": "403",
                                            "description": "FORBIDDEN. The supplied authentication credentials are not sufficient to access the resource."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "NOT FOUND. We could not locate the resource based on the specified URI."
                                        },
                                        "405": {
                                            "code": "405",
                                            "description": "METHOD NOT ALLOWED. POST is not supported for the resource."
                                        },
                                        "409": {
                                            "code": "409",
                                            "description": "CONFLICT. You cannot create or update a resource because another resource already exists or conflicts with one you are submitting."
                                        },
                                        "415": {
                                            "code": "415",
                                            "description": "UNSUPPORTED MEDIA TYPE. You did not specify the request Content-Type header to have a value of application/json. Only application/json is currently supported."
                                        },
                                        "429": {
                                            "code": "429",
                                            "description": "TOO MANY REQUESTS. Your application is sending too many simultaneous requests."
                                        },
                                        "500": {
                                            "code": "500",
                                            "description": "SERVER ERROR. We could not create or update the resource. Please try again."
                                        },
                                        "503": {
                                            "code": "503",
                                            "description": "SERVICE UNAVAILABLE. We are temporarily unable to service the request. Please wait for a bit and try again."
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "basic",
                                        "digest"
                                    ],
                                    "description": "Verify the email.",
                                    "method": "post",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/{verificationToken}",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "{verificationToken}"
                            ]
                        }
                    ],
                    "displayName": "/emailVerificationTokens",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "emailVerificationTokens"
                    ]
                }
            ],
            "displayName": "/accounts",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "accounts"
            ]
        }
    ],
    "documentation": [
        {
            "title": "Headline",
            "content": "Stormpath is the first easy, secure user management and authentication service for developers. Fast and intuitive to use, Stormpath enables plug-and-play security and accelerates application development on any platform. Built for developers, it offers an easy API, open source SDKs, and an active community. The flexible cloud service can manage millions of users with a scalable pricing model that is ideal for projects of any size. By offloading user management and authentication to Stormpath, developers can bring new applications to market faster, reduce development and operations costs, and protect their users with best-in-class security."
        }
    ],
    "__METADATA__": {
        "primitiveValuesMeta": {
            "protocols": {
                "calculated": true
            }
        }
    }
}