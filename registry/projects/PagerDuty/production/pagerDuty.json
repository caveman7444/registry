{
    "title": "PagerDuty",
    "version": "v1",
    "baseUri": "https://{serviceName}.pagerduty.com/api/{version}",
    "baseUriParameters": {
        "serviceName": {
            "name": "serviceName",
            "displayName": "serviceName",
            "type": "string",
            "required": true,
            "repeat": false,
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    },
                    "type": {
                        "insertedAsDefault": true
                    },
                    "required": {
                        "insertedAsDefault": true
                    },
                    "repeat": {
                        "insertedAsDefault": true
                    }
                }
            }
        },
        "version": {
            "name": "version",
            "displayName": "version",
            "type": "string",
            "required": true,
            "repeat": false,
            "enum": [
                "v1"
            ],
            "__METADATA__": {
                "calculated": true,
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    },
                    "type": {
                        "insertedAsDefault": true
                    },
                    "required": {
                        "insertedAsDefault": true
                    },
                    "repeat": {
                        "insertedAsDefault": true
                    },
                    "enum": {
                        "calculated": true
                    }
                }
            }
        }
    },
    "protocols": [
        "HTTPS"
    ],
    "mediaType": "application/json",
    "schemas": [
        {
            "alerts": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"alerts\" : {\n\t\t\t\"type\" : \"array\" ,\n\t\t\t\"required\" : false ,\n\t\t\t\"items\" : \n\t\t\t\t{\n\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\"properties\" : {\n\t\t\t\t\t\t\"id\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"type\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"started_at\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"user\" : {\n\t\t\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"address\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t} ,\n\t\t\"limit\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"offset\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"total\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "concatMethodGet": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"contact_method\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "concatMethodPutBody": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"contact_method\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "concatMethodPutResponse": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"contact_method\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "concatMethodsGet": "{\n  \"type\": \"object\",\n  \"required\": true,\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"total\": {\n      \"type\": \"number\",\n      \"required\": false\n    },\n    \"contact_methods\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"items\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"label\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"address\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"user_id\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"type\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"email\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"send_short_email\": {\n              \"type\": \"boolean\",\n              \"required\": false\n            }\n          }\n        }\n      }\n    }\n  }\n}"
        },
        {
            "concatMethodsPostBody": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"contact_method\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "concatMethodsPostResponse": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"contact_method\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "emailFilterPostBody": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"email_filter\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "emailFilterPostResponse": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"email_filter\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "emailFilterPutBody": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"email_filter\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "emailFilterPutResponse": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"email_filter\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "error": "{\r\n  \"required\" : true ,\r\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\r\n  \"type\" : \"object\" ,\r\n  \"properties\" : {\r\n    \"error\" : {\r\n      \"type\" : \"object\" ,\r\n      \"required\" : false ,\r\n      \"properties\" : {\r\n        \"message\" : {\r\n          \"type\" : \"string\" ,\r\n          \"required\" : false\r\n        } ,\r\n        \"code\" : {\r\n          \"type\" : \"number\" ,\r\n          \"required\" : false\r\n        } ,\r\n        \"errors\" : {\r\n          \"type\" : \"array\" ,\r\n          \"required\" : false ,\r\n          \"items\" : \r\n            {\r\n              \"type\" : \"string\"\r\n            }\r\n          \r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
        },
        {
            "escalationPoliciesQuery": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"escalation_policies\" : {\n\t\t\t\"type\" : \"array\" ,\n\t\t\t\"required\" : false ,\n\t\t\t\"items\" : \n\t\t\t\t{\n\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\"properties\" : {\n\t\t\t\t\t\t\"id\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"name\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"escalation_rules\" : {\n\t\t\t\t\t\t\t\"type\" : \"array\" ,\n\t\t\t\t\t\t\t\"required\" : false ,\n\t\t\t\t\t\t\t\"items\" : \n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\t\t\t\t\"properties\" : {\n\t\t\t\t\t\t\t\t\t\t\"id\" : {\n\t\t\t\t\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\t\t\t\t\"escalation_delay_in_minutes\" : {\n\t\t\t\t\t\t\t\t\t\t\t\"type\" : \"number\" ,\n\t\t\t\t\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\t\t\t\t\"rule_object\" : {\n\t\t\t\t\t\t\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"services\" : {\n\t\t\t\t\t\t\t\"type\" : \"array\" ,\n\t\t\t\t\t\t\t\"required\" : false ,\n\t\t\t\t\t\t\t\"items\" : \n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\t\t\t\t\"properties\" : {\n\t\t\t\t\t\t\t\t\t\t\"id\" : {\n\t\t\t\t\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\t\t\t\t\"name\" : {\n\t\t\t\t\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\t\t\t\t\"integration_email\" : {\n\t\t\t\t\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\t\t\t\t\"html_url\" : {\n\t\t\t\t\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\t\t\t\t\"escalation_policy_id\" : {\n\t\t\t\t\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"num_loops\" : {\n\t\t\t\t\t\t\t\"type\" : \"number\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t} ,\n\t\t\"limit\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"offset\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"total\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "escalationPolicyCreated": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"escalation_policy\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "escalationPolicyGet": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"escalation_policy\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "escalationPolicyPost": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"name\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"escalation_rules\" : {\n\t\t\t\"type\" : \"array\" ,\n\t\t\t\"required\" : false ,\n\t\t\t\"items\" : \n\t\t\t\t{\n\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\"properties\" : {\n\t\t\t\t\t\t\"escalation_delay_in_minutes\" : {\n\t\t\t\t\t\t\t\"type\" : \"number\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"rule_object\" : {\n\t\t\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t} ,\n\t\t\"num_loops\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "escalationPolicyPut": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"escalation_policy\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "escalationRuleGet": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"escalation_rule\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "escalationRulePutBody": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"escalation_delay_in_minutes\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"rule_object\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "escalationRulePutResponse": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"escalation_rule\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "escalationRulesPostBody": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"escalation_rule\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "escalationRulesPostResponse": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"escalation_rule\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "escalationRulesPutBody": "{\n  \"type\": \"object\",\n  \"required\": true,\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"escalation_rules\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"items\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"escalation_delay_in_minutes\": {\n              \"type\": \"number\",\n              \"required\": false\n            },\n            \"rule_object\": {\n              \"type\": \"object\",\n              \"required\": false\n            }\n          }\n        }\n      }\n    }\n  }\n}"
        },
        {
            "escalationRulesPutResponse": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"error\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "escalationRulesQuery": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"escalation_rules\" : {\n\t\t\t\"type\" : \"array\" ,\n\t\t\t\"required\" : false ,\n\t\t\t\"items\" : \n\t\t\t\t{\n\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\"properties\" : {\n\t\t\t\t\t\t\"id\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"escalation_delay_in_minutes\" : {\n\t\t\t\t\t\t\t\"type\" : \"number\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"rule_object\" : {\n\t\t\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t}\n\t}\n}"
        },
        {
            "incidentGet": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"id\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"incident_number\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"created_on\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"status\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"html_url\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"incident_key\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"service\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"assigned_to_user\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"trigger_summary_data\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"trigger_details_html_url\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"last_status_change_on\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"last_status_change_by\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "incidentsCount": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"total\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "incidentsPutBody": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"requester_id\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"incidents\" : {\n\t\t\t\"type\" : \"array\" ,\n\t\t\t\"required\" : false ,\n\t\t\t\"items\" : \n\t\t\t\t{\n\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\"properties\" : {\n\t\t\t\t\t\t\"id\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"status\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t}\n\t}\n}"
        },
        {
            "incidentsPutResponse": "{\n  \"type\": \"object\",\n  \"required\": true,\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"incidents\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"items\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"status\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"incident_number\": {\n              \"type\": \"number\",\n              \"required\": false\n            },\n            \"url\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"error\": {\n              \"type\": \"object\",\n              \"required\": false\n            }\n          }\n        }\n      }\n    }\n  }\n}"
        },
        {
            "incidentsQuery": "{\n  \"type\": \"object\",\n  \"required\": true,\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"incidents\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"items\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"incident_number\": {\n              \"type\": \"number\",\n              \"required\": false\n            },\n            \"created_on\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"status\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"html_url\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"incident_key\": {\n              \"type\": \"object\",\n              \"required\": false\n            },\n            \"service\": {\n              \"type\": \"object\",\n              \"required\": false\n            },\n            \"assigned_to_user\": {\n              \"type\": \"object\",\n              \"required\": false\n            },\n            \"trigger_summary_data\": {\n              \"type\": \"object\",\n              \"required\": false\n            },\n            \"trigger_details_html_url\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"last_status_change_on\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"last_status_change_by\": {\n              \"type\": \"object\",\n              \"required\": false\n            }\n          }\n        }\n      }\n    },\n    \"limit\": {\n      \"type\": \"number\",\n      \"required\": false\n    },\n    \"offset\": {\n      \"type\": \"number\",\n      \"required\": false\n    },\n    \"total\": {\n      \"type\": \"number\",\n      \"required\": false\n    }\n  }\n}"
        },
        {
            "logEntriesForIncident": "{\n  \"type\": \"object\",\n  \"required\": true,\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"log_entries\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"items\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"type\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"created_at\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"note\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"agent\": {\n              \"type\": \"object\",\n              \"required\": false\n            },\n            \"channel\": {\n              \"type\": \"object\",\n              \"required\": false\n            }\n          }\n        }\n      }\n    },\n    \"limit\": {\n      \"type\": \"number\",\n      \"required\": false\n    },\n    \"offset\": {\n      \"type\": \"number\",\n      \"required\": false\n    },\n    \"total\": {\n      \"type\": \"number\",\n      \"required\": false\n    }\n  }\n}"
        },
        {
            "logEntriesForUser": "{\n  \"type\": \"object\",\n  \"required\": true,\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"log_entries\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"items\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"type\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"created_at\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"agent\": {\n              \"type\": \"object\",\n              \"required\": false\n            },\n            \"channel\": {\n              \"type\": \"object\",\n              \"required\": false\n            },\n            \"assigned_user\": {\n              \"type\": \"object\",\n              \"required\": false\n            },\n            \"note\": {\n              \"type\": \"object\",\n              \"required\": false\n            }\n          }\n        }\n      }\n    },\n    \"limit\": {\n      \"type\": \"number\",\n      \"required\": false\n    },\n    \"offset\": {\n      \"type\": \"number\",\n      \"required\": false\n    },\n    \"total\": {\n      \"type\": \"number\",\n      \"required\": false\n    }\n  }\n}"
        },
        {
            "logEntriesQuery": "{\n  \"type\": \"object\",\n  \"required\": true,\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"log_entries\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"items\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"type\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"created_at\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"note\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"agent\": {\n              \"type\": \"object\",\n              \"required\": false\n            },\n            \"channel\": {\n              \"type\": \"object\",\n              \"required\": false\n            }\n          }\n        }\n      }\n    },\n    \"limit\": {\n      \"type\": \"number\",\n      \"required\": false\n    },\n    \"offset\": {\n      \"type\": \"number\",\n      \"required\": false\n    },\n    \"total\": {\n      \"type\": \"number\",\n      \"required\": false\n    }\n  }\n}"
        },
        {
            "logEntry": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"log_entry\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "maintenanceWindowGet": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"maintenance_window\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "maintenanceWindowPostBody": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"maintenance_window\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"requester_id\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "maintenanceWindowPostResponse": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"maintenance_window\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "maintenanceWindowPutBody": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"start_time\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"end_time\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"description\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"service_ids\" : {\n\t\t\t\"type\" : \"array\" ,\n\t\t\t\"required\" : false ,\n\t\t\t\"items\" : \n\t\t\t\t{\n\t\t\t\t\t\"type\" : \"string\"\n\t\t\t\t}\n\t\t\t\n\t\t}\n\t}\n}"
        },
        {
            "maintenanceWindowPutResponse": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"maintenance_window\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "maintenanceWindowsQuery": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"maintenance_windows\" : {\n\t\t\t\"type\" : \"array\" ,\n\t\t\t\"required\" : false ,\n\t\t\t\"items\" : \n\t\t\t\t{\n\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\"properties\" : {\n\t\t\t\t\t\t\"id\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"sequence_number\" : {\n\t\t\t\t\t\t\t\"type\" : \"number\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"start_time\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"end_time\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"description\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"created_by\" : {\n\t\t\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"services\" : {\n\t\t\t\t\t\t\t\"type\" : \"array\" ,\n\t\t\t\t\t\t\t\"required\" : false ,\n\t\t\t\t\t\t\t\"items\" : \n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\t\t\t\t\"properties\" : {\n\t\t\t\t\t\t\t\t\t\t\"name\" : {\n\t\t\t\t\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\t\t\t\t\"url\" : {\n\t\t\t\t\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\t\t\t\t\"id\" : {\n\t\t\t\t\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t} ,\n\t\t\"limit\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"offset\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"total\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"query\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"counts\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "notesGet": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"notes\" : {\n\t\t\t\"type\" : \"array\" ,\n\t\t\t\"required\" : false ,\n\t\t\t\"items\" : \n\t\t\t\t{\n\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\"properties\" : {\n\t\t\t\t\t\t\"id\" : {\n\t\t\t\t\t\t\t\"type\" : \"number\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"user\" : {\n\t\t\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"content\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"created_at\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t}\n\t}\n}"
        },
        {
            "notesPostBody": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"requester_id\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"note\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "notesPostResponse": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"note\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "notificationRuleGet": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"notification_rule\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "notificationRulePutBody": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"notification_rule\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "notificationRulePutResponse": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"notification_rule\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "notificationRulesGet": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"notification_rules\" : {\n\t\t\t\"type\" : \"array\" ,\n\t\t\t\"required\" : false ,\n\t\t\t\"items\" : \n\t\t\t\t{\n\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\"properties\" : {\n\t\t\t\t\t\t\"id\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"start_delay_in_minutes\" : {\n\t\t\t\t\t\t\t\"type\" : \"number\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"contact_method\" : {\n\t\t\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t} ,\n\t\t\"total\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "notificationRulesPostBody": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"notification_rule\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "notificationRulesPostResponse": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"notification_rule\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "overridesGet": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"overrides\" : {\n\t\t\t\"type\" : \"array\" ,\n\t\t\t\"required\" : false ,\n\t\t\t\"items\" : \n\t\t\t\t{\n\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\"properties\" : {\n\t\t\t\t\t\t\"end\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"start\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"user\" : {\n\t\t\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t} ,\n\t\t\"total\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "overridesPostBody": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"override\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "overridesPostResponse": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"override\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "reportsAlertsPerTime": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"incidents\" : {\n\t\t\t\"type\" : \"array\" ,\n\t\t\t\"required\" : false ,\n\t\t\t\"items\" : \n\t\t\t\t{\n\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\"properties\" : {\n\t\t\t\t\t\t\"start\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"number_of_incidents\" : {\n\t\t\t\t\t\t\t\"type\" : \"number\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"end\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t}\n\t}\n}"
        },
        {
            "reportsIncidentsPerTime": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"alerts\" : {\n\t\t\t\"type\" : \"array\" ,\n\t\t\t\"required\" : false ,\n\t\t\t\"items\" : \n\t\t\t\t{\n\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\"properties\" : {\n\t\t\t\t\t\t\"number_of_alerts\" : {\n\t\t\t\t\t\t\t\"type\" : \"number\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"number_of_phone_alerts\" : {\n\t\t\t\t\t\t\t\"type\" : \"number\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"number_of_sms_alerts\" : {\n\t\t\t\t\t\t\t\"type\" : \"number\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"number_of_email_alerts\" : {\n\t\t\t\t\t\t\t\"type\" : \"number\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"start\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"end\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t} ,\n\t\t\"total_number_of_alerts\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"total_number_of_phone_alerts\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"total_number_of_sms_alerts\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"total_number_of_email_alerts\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"total_number_of_billable_alerts\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "scheduleEntries": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"total\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"entries\" : {\n\t\t\t\"type\" : \"array\" ,\n\t\t\t\"required\" : false ,\n\t\t\t\"items\" : \n\t\t\t\t{\n\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\"properties\" : {\n\t\t\t\t\t\t\"user\" : {\n\t\t\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"end\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"start\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t}\n\t}\n}"
        },
        {
            "scheduleGet": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"schedule\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "schedulePreviewBody": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"schedule\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "schedulePreviewResponse": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"schedule\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "schedulePutBody": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"since\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"until\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"overflow\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"schedule\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "schedulePutResponse": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"schedule\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "schedulesGet": "{\n  \"type\": \"object\",\n  \"required\": true,\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"schedules\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"items\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"name\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"time_zone\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"today\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"escalation_policies\": {\n              \"type\": \"array\",\n              \"required\": false,\n              \"items\": {\n                \"type\": \"array\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"limit\": {\n      \"type\": \"number\",\n      \"required\": false\n    },\n    \"offset\": {\n      \"type\": \"number\",\n      \"required\": false\n    },\n    \"total\": {\n      \"type\": \"number\",\n      \"required\": false\n    }\n  }\n}"
        },
        {
            "schedulesPostBody": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"since\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"overflow\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"until\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"schedule\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "schedulesPostResponse": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"schedule\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"id\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "scheduleUsers": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"users\" : {\n\t\t\t\"type\" : \"array\" ,\n\t\t\t\"required\" : false ,\n\t\t\t\"items\" : \n\t\t\t\t{\n\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\"properties\" : {\n\t\t\t\t\t\t\"time_zone\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"color\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"email\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"avatar_url\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"user_url\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"invitation_sent\" : {\n\t\t\t\t\t\t\t\"type\" : \"boolean\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"role\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"name\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"id\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t}\n\t}\n}"
        },
        {
            "serviceDisable": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"requester_id\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "serviceGet": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"service\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "servicePutBody": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"service\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "servicePutResponse": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"service\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "serviceRegenerateKey": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"service\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "servicesPostBody": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"service\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "servicesPostResponse": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"service\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "servicesQuery": "{\n  \"type\": \"object\",\n  \"required\": true,\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"services\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"items\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"name\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"service_url\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"service_key\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"auto_resolve_timeout\": {\n              \"type\": \"number\",\n              \"required\": false\n            },\n            \"acknowledgement_timeout\": {\n              \"type\": \"number\",\n              \"required\": false\n            },\n            \"created_at\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"status\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"last_incident_timestamp\": {\n              \"type\": \"object\",\n              \"required\": false\n            },\n            \"email_incident_creation\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"incident_counts\": {\n              \"type\": \"object\",\n              \"required\": false\n            },\n            \"email_filter_mode\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"type\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"description\": {\n              \"type\": \"string\",\n              \"required\": false\n            }\n          }\n        }\n      }\n    },\n    \"limit\": {\n      \"type\": \"number\",\n      \"required\": false\n    },\n    \"offset\": {\n      \"type\": \"number\",\n      \"required\": false\n    },\n    \"total\": {\n      \"type\": \"number\",\n      \"required\": false\n    }\n  }\n}"
        },
        {
            "userGet": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"user\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "userPutBody": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"user\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "userPutResponse": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"user\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "usersPostBody": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"role\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"name\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"email\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"requester_id\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "usersPostResponse": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"user\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        },
        {
            "usersQuery": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"users\" : {\n\t\t\t\"type\" : \"array\" ,\n\t\t\t\"required\" : false ,\n\t\t\t\"items\" : \n\t\t\t\t{\n\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\"properties\" : {\n\t\t\t\t\t\t\"id\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"name\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"email\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"time_zone\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"color\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"role\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"avatar_url\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"user_url\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"invitation_sent\" : {\n\t\t\t\t\t\t\t\"type\" : \"boolean\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t} ,\n\t\t\"active_account_users\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"limit\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"query\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"offset\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"total\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
        }
    ],
    "traits": [
        {
            "reports": {
                "body": {
                    "application/x-www-form-urlencoded": {
                        "name": "application/x-www-form-urlencoded",
                        "formParameters": {
                            "since": {
                                "name": "since",
                                "displayName": "since",
                                "type": "string",
                                "required": true,
                                "repeat": false,
                                "description": "The start of the date range over which you want to search. The time element is optional.",
                                "__METADATA__": {
                                    "primitiveValuesMeta": {
                                        "displayName": {
                                            "calculated": true
                                        },
                                        "type": {
                                            "insertedAsDefault": true
                                        },
                                        "repeat": {
                                            "insertedAsDefault": true
                                        }
                                    }
                                }
                            },
                            "until": {
                                "name": "until",
                                "displayName": "until",
                                "type": "string",
                                "required": true,
                                "repeat": false,
                                "description": "The end of the date range over which you want to search. This should be in the same format as 'since'.",
                                "__METADATA__": {
                                    "primitiveValuesMeta": {
                                        "displayName": {
                                            "calculated": true
                                        },
                                        "type": {
                                            "insertedAsDefault": true
                                        },
                                        "repeat": {
                                            "insertedAsDefault": true
                                        }
                                    }
                                }
                            },
                            "rollup": {
                                "name": "rollup",
                                "displayName": "rollup",
                                "type": "string",
                                "required": false,
                                "repeat": false,
                                "description": "Possible values are 'daily', 'weekly' or 'monthly'.\nSpecifies the bucket duration for each summation.\nDefaults to 'monthly'.\nFor example, A time window of two years (based on 'since' and 'until') with a rollup of 'monthly'\nwill result in 24 sets of data points being returned (one for each month in the span).\n",
                                "enum": [
                                    "daily",
                                    "weekly",
                                    "monthly"
                                ],
                                "__METADATA__": {
                                    "primitiveValuesMeta": {
                                        "displayName": {
                                            "calculated": true
                                        },
                                        "type": {
                                            "insertedAsDefault": true
                                        },
                                        "required": {
                                            "insertedAsDefault": true
                                        },
                                        "repeat": {
                                            "insertedAsDefault": true
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "name": "reports"
            }
        },
        {
            "incidentsQuery": {
                "body": {
                    "application/x-www-form-urlencoded": {
                        "name": "application/x-www-form-urlencoded",
                        "formParameters": {
                            "date_range": {
                                "name": "date_range",
                                "displayName": "date_range",
                                "type": "string",
                                "required": false,
                                "repeat": false,
                                "description": "When set to 'all', the 'since' and 'until' parameters and defaults are ignored.\nUse this to get all incidents since the account was created.\n",
                                "enum": [
                                    "all"
                                ],
                                "__METADATA__": {
                                    "primitiveValuesMeta": {
                                        "displayName": {
                                            "calculated": true
                                        },
                                        "type": {
                                            "insertedAsDefault": true
                                        },
                                        "required": {
                                            "insertedAsDefault": true
                                        },
                                        "repeat": {
                                            "insertedAsDefault": true
                                        }
                                    }
                                }
                            },
                            "status": {
                                "name": "status",
                                "displayName": "status",
                                "type": "string",
                                "required": false,
                                "repeat": false,
                                "description": "Returns only the incidents currently in the passed status(es).\nValid status options are 'triggered', 'acknowledged', and 'resolved'.\nMore status codes may be introduced in the future.\nSeparate multiple statuses with a comma.\n",
                                "enum": [
                                    "triggered",
                                    "acknowledged",
                                    "resolved"
                                ],
                                "__METADATA__": {
                                    "primitiveValuesMeta": {
                                        "displayName": {
                                            "calculated": true
                                        },
                                        "type": {
                                            "insertedAsDefault": true
                                        },
                                        "required": {
                                            "insertedAsDefault": true
                                        },
                                        "repeat": {
                                            "insertedAsDefault": true
                                        }
                                    }
                                }
                            },
                            "incident_key": {
                                "name": "incident_key",
                                "displayName": "incident_key",
                                "type": "string",
                                "required": false,
                                "repeat": false,
                                "description": "Only counts the incidents with the passed de-duplication key.\nSee the PagerDuty Integration API docs for further details.\n",
                                "__METADATA__": {
                                    "primitiveValuesMeta": {
                                        "displayName": {
                                            "calculated": true
                                        },
                                        "type": {
                                            "insertedAsDefault": true
                                        },
                                        "required": {
                                            "insertedAsDefault": true
                                        },
                                        "repeat": {
                                            "insertedAsDefault": true
                                        }
                                    }
                                }
                            },
                            "service": {
                                "name": "service",
                                "displayName": "service",
                                "type": "string",
                                "required": false,
                                "repeat": false,
                                "description": "Returns only the incidents associated with the passed service(s).\nThis expects one or more service IDs. Separate multiple ids with a comma.\n",
                                "__METADATA__": {
                                    "primitiveValuesMeta": {
                                        "displayName": {
                                            "calculated": true
                                        },
                                        "type": {
                                            "insertedAsDefault": true
                                        },
                                        "required": {
                                            "insertedAsDefault": true
                                        },
                                        "repeat": {
                                            "insertedAsDefault": true
                                        }
                                    }
                                }
                            },
                            "assigned_to_user": {
                                "name": "assigned_to_user",
                                "displayName": "assigned_to_user",
                                "type": "string",
                                "required": false,
                                "repeat": false,
                                "description": "Returns only the incidents currently assigned to the passed user(s).\nThis expects one or more user IDs. Please see below for more info on how to find your users' IDs.\nWhen using the 'assigned_to_user' filter, you will only receive incidents with statuses of\n'triggered or 'acknowledged'. This is because 'resolved' incidents are not assigned to any user.\nSeparate multiple ids with a comma.\n",
                                "__METADATA__": {
                                    "primitiveValuesMeta": {
                                        "displayName": {
                                            "calculated": true
                                        },
                                        "type": {
                                            "insertedAsDefault": true
                                        },
                                        "required": {
                                            "insertedAsDefault": true
                                        },
                                        "repeat": {
                                            "insertedAsDefault": true
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "name": "incidentsQuery"
            }
        },
        {
            "logging": {
                "body": {
                    "application/x-www-form-urlencoded": {
                        "name": "application/x-www-form-urlencoded",
                        "formParameters": {
                            "time_zone": {
                                "name": "time_zone",
                                "displayName": "time_zone",
                                "type": "string",
                                "required": false,
                                "repeat": false,
                                "description": "Time zone in which dates in the result will be rendered. Defaults to 'UTC'",
                                "__METADATA__": {
                                    "primitiveValuesMeta": {
                                        "displayName": {
                                            "calculated": true
                                        },
                                        "type": {
                                            "insertedAsDefault": true
                                        },
                                        "required": {
                                            "insertedAsDefault": true
                                        },
                                        "repeat": {
                                            "insertedAsDefault": true
                                        }
                                    }
                                }
                            },
                            "since": {
                                "name": "since",
                                "displayName": "since",
                                "type": "string",
                                "required": false,
                                "repeat": false,
                                "description": "The start of the date range over which you want to search.",
                                "__METADATA__": {
                                    "primitiveValuesMeta": {
                                        "displayName": {
                                            "calculated": true
                                        },
                                        "type": {
                                            "insertedAsDefault": true
                                        },
                                        "required": {
                                            "insertedAsDefault": true
                                        },
                                        "repeat": {
                                            "insertedAsDefault": true
                                        }
                                    }
                                }
                            },
                            "until": {
                                "name": "until",
                                "displayName": "until",
                                "type": "string",
                                "required": false,
                                "repeat": false,
                                "description": "The end of the date range over which you want to search.",
                                "__METADATA__": {
                                    "primitiveValuesMeta": {
                                        "displayName": {
                                            "calculated": true
                                        },
                                        "type": {
                                            "insertedAsDefault": true
                                        },
                                        "required": {
                                            "insertedAsDefault": true
                                        },
                                        "repeat": {
                                            "insertedAsDefault": true
                                        }
                                    }
                                }
                            },
                            "is_overview": {
                                "name": "is_overview",
                                "displayName": "is_overview",
                                "type": "boolean",
                                "required": false,
                                "repeat": false,
                                "description": "If 'true', will only return log entries of type 'trigger', 'acknowledge', or 'resolve'.\nDefaults to 'false'.\n",
                                "__METADATA__": {
                                    "primitiveValuesMeta": {
                                        "displayName": {
                                            "calculated": true
                                        },
                                        "required": {
                                            "insertedAsDefault": true
                                        },
                                        "repeat": {
                                            "insertedAsDefault": true
                                        }
                                    }
                                }
                            },
                            "include[]": {
                                "name": "include[]",
                                "displayName": "include[]",
                                "type": "string",
                                "required": false,
                                "example": "include[]=channel&include[]=incident",
                                "repeat": false,
                                "description": "Array of additional details to include. This API accepts 'channel', 'incident', and 'service'.\nIf 'channel' is not included, a summary will be returned (See channel format information for more information.)\n",
                                "enum": [
                                    "channel",
                                    "incident",
                                    "service"
                                ],
                                "__METADATA__": {
                                    "primitiveValuesMeta": {
                                        "displayName": {
                                            "calculated": true
                                        },
                                        "type": {
                                            "insertedAsDefault": true
                                        },
                                        "required": {
                                            "insertedAsDefault": true
                                        },
                                        "repeat": {
                                            "insertedAsDefault": true
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "name": "logging"
            }
        },
        {
            "allowsRange": {
                "body": {
                    "application/x-www-form-urlencoded": {
                        "name": "application/x-www-form-urlencoded",
                        "formParameters": {
                            "since": {
                                "name": "since",
                                "displayName": "since",
                                "type": "string",
                                "required": false,
                                "repeat": false,
                                "description": "The start of the date range over which you want to search.",
                                "__METADATA__": {
                                    "primitiveValuesMeta": {
                                        "displayName": {
                                            "calculated": true
                                        },
                                        "type": {
                                            "insertedAsDefault": true
                                        },
                                        "required": {
                                            "insertedAsDefault": true
                                        },
                                        "repeat": {
                                            "insertedAsDefault": true
                                        }
                                    }
                                }
                            },
                            "until": {
                                "name": "until",
                                "displayName": "until",
                                "type": "string",
                                "required": false,
                                "repeat": false,
                                "description": "The end of the date range over which you want to search.\nIf you leave off either 'since' or 'until', a 30 day default range is applied to your open ended range.\nNot including the 'since' parameter will set the date range to 'until' - 30 days.\nLikewise, if you leave off 'until', it is set to 'since' + 30 days.\nDefaults to the last 30 days if you leave off both.\nThe size of the date range must be less than 180 days.\n",
                                "__METADATA__": {
                                    "primitiveValuesMeta": {
                                        "displayName": {
                                            "calculated": true
                                        },
                                        "type": {
                                            "insertedAsDefault": true
                                        },
                                        "required": {
                                            "insertedAsDefault": true
                                        },
                                        "repeat": {
                                            "insertedAsDefault": true
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "name": "allowsRange"
            }
        },
        {
            "paginated": {
                "body": {
                    "application/x-www-form-urlencoded": {
                        "name": "application/x-www-form-urlencoded",
                        "formParameters": {
                            "total": {
                                "name": "total",
                                "displayName": "total",
                                "type": "integer",
                                "required": false,
                                "repeat": false,
                                "description": "The offset of the first record returned. Default is 0.",
                                "__METADATA__": {
                                    "primitiveValuesMeta": {
                                        "displayName": {
                                            "calculated": true
                                        },
                                        "required": {
                                            "insertedAsDefault": true
                                        },
                                        "repeat": {
                                            "insertedAsDefault": true
                                        }
                                    }
                                }
                            },
                            "offset": {
                                "name": "offset",
                                "displayName": "offset",
                                "type": "integer",
                                "required": false,
                                "repeat": false,
                                "description": "The number of records returned. Default (and max limit) is 100 for most APIs.",
                                "__METADATA__": {
                                    "primitiveValuesMeta": {
                                        "displayName": {
                                            "calculated": true
                                        },
                                        "required": {
                                            "insertedAsDefault": true
                                        },
                                        "repeat": {
                                            "insertedAsDefault": true
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "name": "paginated"
            }
        }
    ],
    "securitySchemes": [
        {
            "basic": {
                "name": "basic",
                "type": "Basic Authentication"
            }
        },
        {
            "tokenSchema": {
                "name": "tokenSchema",
                "type": "x-token-schema",
                "description": "Schema which requires Application ID and REST API Key",
                "describedBy": {
                    "headers": {
                        "Authorization": {
                            "name": "Authorization",
                            "displayName": "Authorization",
                            "type": "string",
                            "required": true,
                            "example": "Token token=E7px6VVr3PVHZPJq51oa",
                            "repeat": false,
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    ],
    "resourceTypes": [
        {
            "pagerDutyResource": {
                "name": "pagerDutyResource",
                "securedBy": [
                    "basic",
                    "tokenSchema"
                ],
                "get": {
                    "responses": {
                        "200": {
                            "code": "200",
                            "description": "OK. The request was successful."
                        },
                        "201": {
                            "code": "201",
                            "description": "Created. The request was successful and a new resource was created."
                        },
                        "204": {
                            "code": "204",
                            "description": "No Content.  The request was successful. No content is returned."
                        },
                        "400": {
                            "code": "400",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "error",
                                    "example": "{\r\n  \"error\" : {\r\n    \"message\" : \"Error Message String\" ,\r\n    \"code\" : 2001 ,\r\n    \"errors\" : [\r\n      \"human-readable error details\" ,\r\n      \"more details\"\r\n    ]\r\n  }\r\n}",
                                    "schemaContent": "error"
                                }
                            },
                            "description": "Bad Request.\nCaller provided invalid arguments.\nPlease review the response for error details.\nRetrying with the same arguments will not work.\n\nError codes:\n|Code|Message|\n|---|---|\n|2000|Internal Error|\n|2001|Invalid Input Provided|\n|2002|Arguments Caused Error|\n|2003|Missing Arguments|\n|2004|Invalid 'since' or 'until' Parameter Values|\n|2005|Invalid Query Date Range|\n|2006|Authentication Failed|\n|2007|Account Not Found|\n|2008|Account Locked|\n|2009|Only HTTPS Allowed For This Call|\n|2010|Access Denied|\n|2011|The action requires a 'requester_id' to be specified|\n|2012|Your account is expired and cannot use the API|\n"
                        },
                        "500": {
                            "code": "500",
                            "description": "Internal Server Error. Internal error occurred while processing request. Please try again."
                        }
                    },
                    "securedBy": [
                        "basic",
                        "tokenSchema"
                    ],
                    "method": "get",
                    "__METADATA__": {
                        "optional": true,
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                },
                "put": {
                    "responses": {
                        "200": {
                            "code": "200",
                            "description": "OK. The request was successful."
                        },
                        "201": {
                            "code": "201",
                            "description": "Created. The request was successful and a new resource was created."
                        },
                        "204": {
                            "code": "204",
                            "description": "No Content.  The request was successful. No content is returned."
                        },
                        "400": {
                            "code": "400",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "error",
                                    "example": "{\r\n  \"error\" : {\r\n    \"message\" : \"Error Message String\" ,\r\n    \"code\" : 2001 ,\r\n    \"errors\" : [\r\n      \"human-readable error details\" ,\r\n      \"more details\"\r\n    ]\r\n  }\r\n}",
                                    "schemaContent": "error"
                                }
                            },
                            "description": "Bad Request.\nCaller provided invalid arguments.\nPlease review the response for error details.\nRetrying with the same arguments will not work.\n\nError codes:\n|Code|Message|\n|---|---|\n|2000|Internal Error|\n|2001|Invalid Input Provided|\n|2002|Arguments Caused Error|\n|2003|Missing Arguments|\n|2004|Invalid 'since' or 'until' Parameter Values|\n|2005|Invalid Query Date Range|\n|2006|Authentication Failed|\n|2007|Account Not Found|\n|2008|Account Locked|\n|2009|Only HTTPS Allowed For This Call|\n|2010|Access Denied|\n|2011|The action requires a 'requester_id' to be specified|\n|2012|Your account is expired and cannot use the API|\n"
                        },
                        "500": {
                            "code": "500",
                            "description": "Internal Server Error. Internal error occurred while processing request. Please try again."
                        }
                    },
                    "securedBy": [
                        "basic",
                        "tokenSchema"
                    ],
                    "method": "put",
                    "__METADATA__": {
                        "optional": true,
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                },
                "post": {
                    "responses": {
                        "200": {
                            "code": "200",
                            "description": "OK. The request was successful."
                        },
                        "201": {
                            "code": "201",
                            "description": "Created. The request was successful and a new resource was created."
                        },
                        "204": {
                            "code": "204",
                            "description": "No Content.  The request was successful. No content is returned."
                        },
                        "400": {
                            "code": "400",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "error",
                                    "example": "{\r\n  \"error\" : {\r\n    \"message\" : \"Error Message String\" ,\r\n    \"code\" : 2001 ,\r\n    \"errors\" : [\r\n      \"human-readable error details\" ,\r\n      \"more details\"\r\n    ]\r\n  }\r\n}",
                                    "schemaContent": "error"
                                }
                            },
                            "description": "Bad Request.\nCaller provided invalid arguments.\nPlease review the response for error details.\nRetrying with the same arguments will not work.\n\nError codes:\n|Code|Message|\n|---|---|\n|2000|Internal Error|\n|2001|Invalid Input Provided|\n|2002|Arguments Caused Error|\n|2003|Missing Arguments|\n|2004|Invalid 'since' or 'until' Parameter Values|\n|2005|Invalid Query Date Range|\n|2006|Authentication Failed|\n|2007|Account Not Found|\n|2008|Account Locked|\n|2009|Only HTTPS Allowed For This Call|\n|2010|Access Denied|\n|2011|The action requires a 'requester_id' to be specified|\n|2012|Your account is expired and cannot use the API|\n"
                        },
                        "500": {
                            "code": "500",
                            "description": "Internal Server Error. Internal error occurred while processing request. Please try again."
                        }
                    },
                    "securedBy": [
                        "basic",
                        "tokenSchema"
                    ],
                    "method": "post",
                    "__METADATA__": {
                        "optional": true,
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                },
                "delete": {
                    "responses": {
                        "200": {
                            "code": "200",
                            "description": "OK. The request was successful."
                        },
                        "201": {
                            "code": "201",
                            "description": "Created. The request was successful and a new resource was created."
                        },
                        "204": {
                            "code": "204",
                            "description": "No Content.  The request was successful. No content is returned."
                        },
                        "400": {
                            "code": "400",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "error",
                                    "example": "{\r\n  \"error\" : {\r\n    \"message\" : \"Error Message String\" ,\r\n    \"code\" : 2001 ,\r\n    \"errors\" : [\r\n      \"human-readable error details\" ,\r\n      \"more details\"\r\n    ]\r\n  }\r\n}",
                                    "schemaContent": "error"
                                }
                            },
                            "description": "Bad Request.\nCaller provided invalid arguments.\nPlease review the response for error details.\nRetrying with the same arguments will not work.\n\nError codes:\n|Code|Message|\n|---|---|\n|2000|Internal Error|\n|2001|Invalid Input Provided|\n|2002|Arguments Caused Error|\n|2003|Missing Arguments|\n|2004|Invalid 'since' or 'until' Parameter Values|\n|2005|Invalid Query Date Range|\n|2006|Authentication Failed|\n|2007|Account Not Found|\n|2008|Account Locked|\n|2009|Only HTTPS Allowed For This Call|\n|2010|Access Denied|\n|2011|The action requires a 'requester_id' to be specified|\n|2012|Your account is expired and cannot use the API|\n"
                        },
                        "500": {
                            "code": "500",
                            "description": "Internal Server Error. Internal error occurred while processing request. Please try again."
                        }
                    },
                    "securedBy": [
                        "basic",
                        "tokenSchema"
                    ],
                    "method": "delete",
                    "__METADATA__": {
                        "optional": true,
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            }
        },
        {
            "overrideResource": {
                "name": "overrideResource",
                "type": "pagerDutyResource",
                "get": {
                    "responses": {
                        "400": {
                            "code": "400",
                            "description": "Bad Request.\nCaller provided invalid arguments.\nPlease review the response for error details.\nRetrying with the same arguments will not work.\n\nError codes:\n|4001|Missing or invalid 'time' parameter|\n|4002|Missing 'override' parameter|\n|4003|User Not Found|\n|4004|Invalid Override|\n|4005|Cannot Destroy Override|\n"
                        }
                    },
                    "method": "get",
                    "__METADATA__": {
                        "optional": true
                    }
                },
                "put": {
                    "responses": {
                        "400": {
                            "code": "400",
                            "description": "Bad Request.\nCaller provided invalid arguments.\nPlease review the response for error details.\nRetrying with the same arguments will not work.\n\nError codes:\n|4001|Missing or invalid 'time' parameter|\n|4002|Missing 'override' parameter|\n|4003|User Not Found|\n|4004|Invalid Override|\n|4005|Cannot Destroy Override|\n"
                        }
                    },
                    "method": "put",
                    "__METADATA__": {
                        "optional": true
                    }
                },
                "post": {
                    "responses": {
                        "400": {
                            "code": "400",
                            "description": "Bad Request.\nCaller provided invalid arguments.\nPlease review the response for error details.\nRetrying with the same arguments will not work.\n\nError codes:\n|4001|Missing or invalid 'time' parameter|\n|4002|Missing 'override' parameter|\n|4003|User Not Found|\n|4004|Invalid Override|\n|4005|Cannot Destroy Override|\n"
                        }
                    },
                    "method": "post",
                    "__METADATA__": {
                        "optional": true
                    }
                },
                "delete": {
                    "responses": {
                        "400": {
                            "code": "400",
                            "description": "Bad Request.\nCaller provided invalid arguments.\nPlease review the response for error details.\nRetrying with the same arguments will not work.\n\nError codes:\n|4001|Missing or invalid 'time' parameter|\n|4002|Missing 'override' parameter|\n|4003|User Not Found|\n|4004|Invalid Override|\n|4005|Cannot Destroy Override|\n"
                        }
                    },
                    "method": "delete",
                    "__METADATA__": {
                        "optional": true
                    }
                }
            }
        }
    ],
    "resources": [
        {
            "relativeUri": "/alerts",
            "type": "pagerDutyResource",
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "alerts",
                                    "example": "{\n\t\"alerts\" : [ {\n\t\t\"id\" : \"PWL7QXS\" ,\n\t\t\"type\" : \"Phone\" ,\n\t\t\"started_at\" : \"2013-03-06T15:28:50-05:00\" ,\n\t\t\"user\" : {\n\t\t\t\"id\" : \"PT23IWX\" ,\n\t\t\t\"name\" : \"Tim Wright\" ,\n\t\t\t\"email\" : \"tim@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"purple\" ,\n\t\t\t\"role\" : \"owner\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/923a2b907dc04244e9bb5576a42e70a7.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PT23IWX\" ,\n\t\t\t\"invitation_sent\" : false ,\n\t\t\t\"marketing_opt_out\" : false\n\t\t} ,\n\t\t\"address\" : \"+15555551234\"\n\t} , {\n\t\t\"id\" : \"PKN7NBH\" ,\n\t\t\"type\" : \"Email\" ,\n\t\t\"started_at\" : \"2013-03-06T15:28:51-05:00\" ,\n\t\t\"user\" : {\n\t\t\t\"id\" : \"PT23IWX\" ,\n\t\t\t\"name\" : \"Tim Wright\" ,\n\t\t\t\"email\" : \"tim@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"purple\" ,\n\t\t\t\"role\" : \"owner\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/923a2b907dc04244e9bb5576a42e70a7.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PT23IWX\" ,\n\t\t\t\"invitation_sent\" : false ,\n\t\t\t\"marketing_opt_out\" : false\n\t\t} ,\n\t\t\"address\" : \"tim@pagerduty.com\"\n\t} ] ,\n\t\"limit\" : 100 ,\n\t\"offset\" : 0 ,\n\t\"total\" : 2\n}",
                                    "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"alerts\" : {\n\t\t\t\"type\" : \"array\" ,\n\t\t\t\"required\" : false ,\n\t\t\t\"items\" : \n\t\t\t\t{\n\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\"properties\" : {\n\t\t\t\t\t\t\"id\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"type\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"started_at\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"user\" : {\n\t\t\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"address\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t} ,\n\t\t\"limit\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"offset\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"total\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                }
                            }
                        }
                    },
                    "body": {
                        "application/x-www-form-urlencoded": {
                            "name": "application/x-www-form-urlencoded",
                            "formParameters": {
                                "since": {
                                    "name": "since",
                                    "displayName": "since",
                                    "type": "string",
                                    "required": true,
                                    "repeat": false,
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "until": {
                                    "name": "until",
                                    "displayName": "until",
                                    "type": "string",
                                    "required": true,
                                    "repeat": false,
                                    "description": "The end of the date range over which you want to search.\nThis should be in the same format as since. The size of the date range must be less than 3 months.\n",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "filter[type]": {
                                    "name": "filter[type]",
                                    "displayName": "filter[type]",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Returns only the alerts of the said types.",
                                    "enum": [
                                        "sms",
                                        "email",
                                        "phone",
                                        "push"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "time_zone": {
                                    "name": "time_zone",
                                    "displayName": "time_zone",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Time zone in which dates in the result will be rendered. Defaults to account time zone.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "description": "List existing alerts for a given time range, optionally filtered by type (SMS, Email, Phone, or Push).",
                    "method": "get",
                    "is": [
                        "paginated",
                        "allowsRange"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/alerts",
            "description": "When an incident is triggered or when it is escalated it creates an alert (also known as a notification).\nAlerts are messages containing the details of the incident, and can be sent through SMS,\nemail, phone calls, and push notifications.\nThis API allows you to access read-only data regarding what alerts have been sent to your users.\n",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "alerts"
            ]
        },
        {
            "relativeUri": "/incidents",
            "type": "pagerDutyResource",
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "incidentsQuery",
                                    "example": "{\n\t\"incidents\" : [ {\n\t\t\"incident_number\" : 1 ,\n\t\t\"created_on\" : \"2012-09-11T22:49:21Z\" ,\n\t\t\"status\" : \"resolved\" ,\n\t\t\"html_url\" : \"https://acme.pagerduty.com/incidents/P2A6J96\" ,\n\t\t\"incident_key\" : null ,\n\t\t\"service\" : {\n\t\t\t\"id\" : \"PBF77WY\" ,\n\t\t\t\"name\" : \"Generic Api\" ,\n\t\t\t\"html_url\" : \"https://acme.pagerduty.com/services/PBF77WY\"\n\t\t} ,\n\t\t\"assigned_to_user\" : null ,\n\t\t\"trigger_summary_data\" : {\n\t\t\t\"subject\" : \"Opened on the web ui\"\n\t\t} ,\n\t\t\"trigger_details_html_url\" :\n\t\t\"https://acme.pagerduty.com/incidents/P2A6J96/log_entries/P2NQP6P\" ,\n\t\t\"last_status_change_on\" : \"2012-09-11T22:50:59Z\" ,\n\t\t\"last_status_change_by\" : {\n\t\t\t\"id\" : \"PEO3O45\" ,\n\t\t\t\"name\" : \"John\" ,\n\t\t\t\"email\" : \"john@acme.com\" ,\n\t\t\t\"html_url\" : \"https://acme.pagerduty.com/users/PEO3O45\"\n\t\t}\n\t} , {\n\t\t\"incident_number\" : 3 ,\n\t\t\"created_on\" : \"2012-09-11T22:54:08Z\" ,\n\t\t\"status\" : \"resolved\" ,\n\t\t\"html_url\" : \"https://acme.pagerduty.com/incidents/PBXG6JS\" ,\n\t\t\"incident_key\" :\n\t\t\"=?UTF-8?B?SnVzdCBhbiBlbWFpbCBmcm9tIOWvjOWjq+WxsSBhbmQg8J2EnvCdlaXwnZ+2IPCggoo=?=\"\n\t\t,\n\t\t\"service\" : {\n\t\t\t\"id\" : \"PFRV88L\" ,\n\t\t\t\"name\" : \"Generic Email\" ,\n\t\t\t\"html_url\" : \"https://acme.pagerduty.com/services/PFRV88L\"\n\t\t} ,\n\t\t\"assigned_to_user\" : null ,\n\t\t\"trigger_summary_data\" : {\n\t\t\t\"subject\" : \"Just an email from James and John\"\n\t\t} ,\n\t\t\"trigger_details_html_url\" :\n\t\t\"https://acme.pagerduty.com/incidents/PBXG6JS/log_entries/P30IVAT\" ,\n\t\t\"last_status_change_on\" : \"2012-09-12T01:35:03Z\" ,\n\t\t\"last_status_change_by\" : {\n\t\t\t\"id\" : \"PEO3O45\" ,\n\t\t\t\"name\" : \"John\" ,\n\t\t\t\"email\" : \"john@acme.com\" ,\n\t\t\t\"html_url\" : \"https://acme.pagerduty.com/users/PEO3O45\"\n\t\t}\n\t} ] ,\n\t\"limit\" : 100 ,\n\t\"offset\" : 0 ,\n\t\"total\" : 2\n}",
                                    "schemaContent": "{\n  \"type\": \"object\",\n  \"required\": true,\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"incidents\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"items\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"incident_number\": {\n              \"type\": \"number\",\n              \"required\": false\n            },\n            \"created_on\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"status\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"html_url\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"incident_key\": {\n              \"type\": \"object\",\n              \"required\": false\n            },\n            \"service\": {\n              \"type\": \"object\",\n              \"required\": false\n            },\n            \"assigned_to_user\": {\n              \"type\": \"object\",\n              \"required\": false\n            },\n            \"trigger_summary_data\": {\n              \"type\": \"object\",\n              \"required\": false\n            },\n            \"trigger_details_html_url\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"last_status_change_on\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"last_status_change_by\": {\n              \"type\": \"object\",\n              \"required\": false\n            }\n          }\n        }\n      }\n    },\n    \"limit\": {\n      \"type\": \"number\",\n      \"required\": false\n    },\n    \"offset\": {\n      \"type\": \"number\",\n      \"required\": false\n    },\n    \"total\": {\n      \"type\": \"number\",\n      \"required\": false\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "body": {
                        "application/x-www-form-urlencoded": {
                            "name": "application/x-www-form-urlencoded",
                            "formParameters": {
                                "fields": {
                                    "name": "fields",
                                    "displayName": "fields",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Used to restrict the properties of each incident returned to a set of pre-defined fields.\nIf omitted, returned incidents have all fields present. See below for a list of possible fields.\n",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "time_zone": {
                                    "name": "time_zone",
                                    "displayName": "time_zone",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Time zone in which dates in the result will be rendered. Defaults to UTC.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "sort_by": {
                                    "name": "sort_by",
                                    "displayName": "sort_by",
                                    "type": "string",
                                    "required": false,
                                    "example": "{\n   \"sort_by\": \"created_on:desc\"\n}\n",
                                    "repeat": false,
                                    "description": "Used to specify both the field you wish to sort the results on,\nas well as the direction (ascending/descending) of the results.\n|               |                                           |\n|---------------|-------------------------------------------|\n|incident_number| The number of your incident.              |\n|created_on     | The date/time the incident was triggered. |\n|resolved_on    |The date/time the incident was resolved.   |\nValid values\n|    |                                          |\n|----|------------------------------------------|\n|asc |This sorts ascending (default if omitted).|\n|desc|This sorts descending.                    |\nThe sort_by field and direction should be separated by a colon.\n",
                                    "enum": [
                                        "incident_number:asc",
                                        "incident_number:desc",
                                        "created_on:asc",
                                        "created_on:desc",
                                        "resolved_on:asc",
                                        "resolved_on:desc"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "description": "List existing incidents.",
                    "method": "get",
                    "is": [
                        "paginated",
                        "allowsRange",
                        "incidentsQuery"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                },
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "incidentsPutResponse",
                                    "example": "{\n\t\"incidents\" : [ {\n\t\t\"id\" : \"P31FZLG_1\" ,\n\t\t\"status\" : \"resolved\" ,\n\t\t\"incident_number\" : 2 ,\n\t\t\"url\" : \"http://acme.pageduty.com/incidents/P31FZLG\" ,\n\t\t\"error\" : {\n\t\t\t\"message\" : \"Incident Already Resolved\" ,\n\t\t\t\"code\" : 1001\n\t\t}\n\t} , {\n\t\t\"id\" : \"P31FZLG_2\" ,\n\t\t\"status\" : \"resolved\" ,\n\t\t\"incident_number\" : 2 ,\n\t\t\"url\" : \"http://acme.pageduty.com/incidents/P31FZLG\" ,\n\t\t\"error\" : {\n\t\t\t\"message\" : \"Incident Already Resolved\" ,\n\t\t\t\"code\" : 1001\n\t\t}\n\t} , {\n\t\t\"id\" : \"badid\" ,\n\t\t\"status\" : \"resolved\" ,\n\t\t\"incident_number\" : null ,\n\t\t\"url\" : null ,\n\t\t\"error\" : {\n\t\t\t\"message\" : \"Invalid Id Provided\" ,\n\t\t\t\"code\" : 1004\n\t\t}\n\t} ]\n}",
                                    "schemaContent": "{\n  \"type\": \"object\",\n  \"required\": true,\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"incidents\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"items\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"status\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"incident_number\": {\n              \"type\": \"number\",\n              \"required\": false\n            },\n            \"url\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"error\": {\n              \"type\": \"object\",\n              \"required\": false\n            }\n          }\n        }\n      }\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json",
                            "schema": "incidentsPutBody",
                            "example": "{\n\t\"requester_id\" : \"PPSFHH7\" ,\n\t\"incidents\" : [ {\n\t\t\"id\" : \"P31FZLG_1\" ,\n\t\t\"status\" : \"resolved\"\n\t} , {\n\t\t\"id\" : \"P31FZLG_2\" ,\n\t\t\"status\" : \"resolved\"\n\t} , {\n\t\t\"id\" : \"badid\" ,\n\t\t\"status\" : \"resolved\"\n\t} ]\n}",
                            "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"requester_id\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"incidents\" : {\n\t\t\t\"type\" : \"array\" ,\n\t\t\t\"required\" : false ,\n\t\t\t\"items\" : \n\t\t\t\t{\n\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\"properties\" : {\n\t\t\t\t\t\t\"id\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"status\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t}\n\t}\n}"
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "description": "Acknowledge, resolve, escalate or reassign one or more incidents.",
                    "method": "put",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/count",
                    "type": "pagerDutyResource",
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "incidentsCount",
                                            "example": "{\n\t\"total\" : 2\n}",
                                            "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"total\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "description": "Count the number of incidents matching certain criteria.",
                            "method": "get",
                            "is": [
                                "allowsRange",
                                "incidentsQuery"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/count",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "count"
                    ]
                },
                {
                    "relativeUri": "/{incident_id}",
                    "type": "pagerDutyResource",
                    "uriParameters": {
                        "incident_id": {
                            "name": "incident_id",
                            "displayName": "incident_id",
                            "type": "string",
                            "required": true,
                            "example": "https://acme.pagerduty.com/api/v1/incidents/PIJ90N7\n\nhttps://acme.pagerduty.com/api/v1/incidents/1\nrequired:true\n",
                            "repeat": false,
                            "description": "Either incident id or incident number may be used as parameter's value.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "incidentGet",
                                            "example": "{\n\t\"id\" : \"PIJ90N7\" ,\n\t\"incident_number\" : 1 ,\n\t\"created_on\" : \"2012-12-22T00:35:21Z\" ,\n\t\"status\" : \"triggered\" ,\n\t\"html_url\" : \"http://acme.pagerduty.com/incidents/PIJ90N7\" ,\n\t\"incident_key\" : null ,\n\t\"service\" : {\n\t\t\"id\" : \"PBAZLIU\" ,\n\t\t\"name\" : \"service\" ,\n\t\t\"html_url\" : \"http://acme.pagerduty.com/services/PBAZLIU\"\n\t} ,\n\t\"assigned_to_user\" : {\n\t\t\"id\" : \"PPI9KUT\" ,\n\t\t\"name\" : \"Alan Kay\" ,\n\t\t\"email\" : \"alan@pagerduty.com\" ,\n\t\t\"html_url\" : \"http://acme.pagerduty.com/users/PPI9KUT\"\n\t} ,\n\t\"trigger_summary_data\" : {\n\t\t\"subject\" : \"45645\"\n\t} ,\n\t\"trigger_details_html_url\" :\n\t\"http://acme.pagerduty.com/incidents/PIJ90N7/log_entries/PIJ90N7\" ,\n\t\"last_status_change_on\" : \"2012-12-22T00:35:22Z\" ,\n\t\"last_status_change_by\" : null\n}",
                                            "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"id\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"incident_number\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"created_on\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"status\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"html_url\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"incident_key\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"service\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"assigned_to_user\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"trigger_summary_data\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"trigger_details_html_url\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"last_status_change_on\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"last_status_change_by\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "description": "Show detailed information about an incident. Accepts either an incident id, or an incident number.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/resolve",
                            "type": "pagerDutyResource",
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200"
                                        }
                                    },
                                    "body": {
                                        "application/x-www-form-urlencoded": {
                                            "name": "application/x-www-form-urlencoded",
                                            "formParameters": {
                                                "requester_id": {
                                                    "name": "requester_id",
                                                    "displayName": "requester_id",
                                                    "type": "string",
                                                    "required": false,
                                                    "repeat": false,
                                                    "description": "The user id of the user making the request.\nThis will be added to the incident log entry.\nThis is only needed if you are using token based authentication.\n",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "description": "Resolve an incident.",
                                    "method": "put",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/resolve",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "resolve"
                            ]
                        },
                        {
                            "relativeUri": "/acknowledge",
                            "type": "pagerDutyResource",
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200"
                                        }
                                    },
                                    "body": {
                                        "application/x-www-form-urlencoded": {
                                            "name": "application/x-www-form-urlencoded",
                                            "formParameters": {
                                                "requester_id": {
                                                    "name": "requester_id",
                                                    "displayName": "requester_id",
                                                    "type": "string",
                                                    "required": false,
                                                    "repeat": false,
                                                    "description": "The user id of the user making the request.\nThis will be added to the incident log entry.\nThis is only needed if you are using token based authentication.\n",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "description": "Acknowledge an incident.",
                                    "method": "put",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/acknowledge",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "acknowledge"
                            ]
                        },
                        {
                            "relativeUri": "/reassign",
                            "type": "pagerDutyResource",
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200"
                                        }
                                    },
                                    "body": {
                                        "application/x-www-form-urlencoded": {
                                            "name": "application/x-www-form-urlencoded",
                                            "formParameters": {
                                                "requester_id": {
                                                    "name": "requester_id",
                                                    "displayName": "requester_id",
                                                    "type": "string",
                                                    "required": false,
                                                    "repeat": false,
                                                    "description": "The user id of the user making the request.\nThis will be added to the incident log entry.\nThis is only needed if you are using token based authentication.\n",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "escalation_level": {
                                                    "name": "escalation_level",
                                                    "displayName": "escalation_level",
                                                    "type": "integer",
                                                    "required": false,
                                                    "repeat": false,
                                                    "description": "Escalate incident to this level in the escalation policy.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "assigned_to_user": {
                                                    "name": "assigned_to_user",
                                                    "displayName": "assigned_to_user",
                                                    "type": "string",
                                                    "required": false,
                                                    "repeat": false,
                                                    "description": "Assign this incident to the specified user id.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "description": "Reassign an incident.\n",
                                    "method": "put",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/reassign",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "reassign"
                            ]
                        },
                        {
                            "relativeUri": "/notes",
                            "type": "pagerDutyResource",
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "notesGet",
                                                    "example": "{\n\t\"notes\" : [ {\n\t\t\"id\" : 22012 ,\n\t\t\"user\" : {\n\t\t\t\"id\" : \"PT23IWX\" ,\n\t\t\t\"name\" : \"Tim Wright\" ,\n\t\t\t\"email\" : \"tim@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"purple\" ,\n\t\t\t\"role\" : \"owner\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/923a2b907dc04244e9bb5576a42e70a7.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PT23IWX\" ,\n\t\t\t\"invitation_sent\" : false ,\n\t\t\t\"marketing_opt_out\" : false\n\t\t} ,\n\t\t\"content\" : \"I caught up to it and told it to slow down.\" ,\n\t\t\"created_at\" : \"2013-04-08T14:53:33-04:00\"\n\t} ]\n}",
                                                    "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"notes\" : {\n\t\t\t\"type\" : \"array\" ,\n\t\t\t\"required\" : false ,\n\t\t\t\"items\" : \n\t\t\t\t{\n\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\"properties\" : {\n\t\t\t\t\t\t\"id\" : {\n\t\t\t\t\t\t\t\"type\" : \"number\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"user\" : {\n\t\t\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"content\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"created_at\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t}\n\t}\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "description": "List existing notes for the specified incident.",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "201": {
                                            "code": "201",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "notesPostResponse",
                                                    "example": "{\n\t\"note\" : {\n\t\t\"id\" : 22013 ,\n\t\t\"user\" : {\n\t\t\t\"id\" : \"PT23IWX\" ,\n\t\t\t\"name\" : \"Tim Wright\" ,\n\t\t\t\"email\" : \"tim@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"purple\" ,\n\t\t\t\"role\" : \"owner\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/923a2b907dc04244e9bb5576a42e70a7.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PT23IWX\" ,\n\t\t\t\"invitation_sent\" : false ,\n\t\t\t\"marketing_opt_out\" : false\n\t\t} ,\n\t\t\"content\" : \"New Note\" ,\n\t\t\"created_at\" : \"2013-04-08T14:54:33-04:00\"\n\t}\n}",
                                                    "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"note\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                                }
                                            }
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "notesPostBody",
                                            "example": "{\n\t\"requester_id\" : \"PPSFHH7\" ,\n\t\"note\" : {\n\t\t\"content\" : \"New Note\"\n\t}\n}",
                                            "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"requester_id\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"note\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "description": "Create a new note for the specified incident.",
                                    "method": "post",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/notes",
                            "description": "The Incident Notes API allows you to add notes to a specified incident.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "notes"
                            ]
                        },
                        {
                            "relativeUri": "/log_entries",
                            "type": "pagerDutyResource",
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "logEntriesForIncident",
                                                    "example": "{\n\t\"log_entries\" : [ {\n\t\t\"id\" : \"PPV5KG7\" ,\n\t\t\"type\" : \"resolve\" ,\n\t\t\"created_at\" : \"2013-03-06T21:33:15Z\" ,\n\t\t\"note\" : \"Fixed\" ,\n\t\t\"agent\" : {\n\t\t\t\"id\" : \"PT23IWX\" ,\n\t\t\t\"name\" : \"Tim Wright\" ,\n\t\t\t\"email\" : \"tim@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"purple\" ,\n\t\t\t\"role\" : \"owner\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/923a2b907dc04244e9bb5576a42e70a7.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PT23IWX\" ,\n\t\t\t\"invitation_sent\" : false ,\n\t\t\t\"marketing_opt_out\" : false ,\n\t\t\t\"type\" : \"user\"\n\t\t} ,\n\t\t\"channel\" : {\n\t\t\t\"type\" : \"website\"\n\t\t}\n\t} , {\n\t\t\"id\" : \"PVALU1K\" ,\n\t\t\"type\" : \"notify\" ,\n\t\t\"created_at\" : \"2013-03-06T21:08:43Z\" ,\n\t\t\"user\" : {\n\t\t\t\"id\" : \"PPSFHH7\" ,\n\t\t\t\"name\" : \"Bob Smith\" ,\n\t\t\t\"email\" : \"bob@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"red\" ,\n\t\t\t\"role\" : \"user\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/78e9fa7d6d2ddba416ad7534eb1403d0.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PPSFHH7\" ,\n\t\t\t\"invitation_sent\" : true ,\n\t\t\t\"marketing_opt_out\" : false\n\t\t} ,\n\t\t\"notification\" : {\n\t\t\t\"type\" : \"email\" ,\n\t\t\t\"address\" : \"bob@acme.com\" ,\n\t\t\t\"status\" : \"success\"\n\t\t}\n\t} , {\n\t\t\"id\" : \"P8MDTZ8\" ,\n\t\t\"type\" : \"notify\" ,\n\t\t\"created_at\" : \"2013-03-06T21:00:30Z\" ,\n\t\t\"user\" : {\n\t\t\t\"id\" : \"PPSFHH7\" ,\n\t\t\t\"name\" : \"Bob Smith\" ,\n\t\t\t\"email\" : \"bob@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"red\" ,\n\t\t\t\"role\" : \"user\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/78e9fa7d6d2ddba416ad7534eb1403d0.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PPSFHH7\" ,\n\t\t\t\"invitation_sent\" : true ,\n\t\t\t\"marketing_opt_out\" : false\n\t\t} ,\n\t\t\"notification\" : {\n\t\t\t\"type\" : \"email\" ,\n\t\t\t\"address\" : \"bob@acme.com\" ,\n\t\t\t\"status\" : \"success\"\n\t\t}\n\t} , {\n\t\t\"id\" : \"PHCXXHR\" ,\n\t\t\"type\" : \"escalate\" ,\n\t\t\"created_at\" : \"2013-03-06T21:00:30Z\" ,\n\t\t\"agent\" : {\n\t\t\t\"type\" : \"service\"\n\t\t} ,\n\t\t\"channel\" : {\n\t\t\t\"type\" : \"timeout\"\n\t\t} ,\n\t\t\"assigned_user\" : {\n\t\t\t\"id\" : \"PPSFHH7\" ,\n\t\t\t\"name\" : \"Bob Smith\" ,\n\t\t\t\"email\" : \"bob@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"red\" ,\n\t\t\t\"role\" : \"user\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/78e9fa7d6d2ddba416ad7534eb1403d0.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PPSFHH7\" ,\n\t\t\t\"invitation_sent\" : true ,\n\t\t\t\"marketing_opt_out\" : false\n\t\t} ,\n\t\t\"note\" : null\n\t} , {\n\t\t\"id\" : \"PE5XGDA\" ,\n\t\t\"type\" : \"notify\" ,\n\t\t\"created_at\" : \"2013-03-06T20:59:31Z\" ,\n\t\t\"user\" : {\n\t\t\t\"id\" : \"PT23IWX\" ,\n\t\t\t\"name\" : \"Tim Wright\" ,\n\t\t\t\"email\" : \"tim@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"purple\" ,\n\t\t\t\"role\" : \"owner\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/923a2b907dc04244e9bb5576a42e70a7.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PT23IWX\" ,\n\t\t\t\"invitation_sent\" : false ,\n\t\t\t\"marketing_opt_out\" : false\n\t\t} ,\n\t\t\"notification\" : {\n\t\t\t\"type\" : \"sms\" ,\n\t\t\t\"address\" : \"+1 956-821-0372\" ,\n\t\t\t\"status\" : \"success\"\n\t\t}\n\t} , {\n\t\t\"id\" : \"P9DWJ9J\" ,\n\t\t\"type\" : \"notify\" ,\n\t\t\"created_at\" : \"2013-03-06T20:59:30Z\" ,\n\t\t\"user\" : {\n\t\t\t\"id\" : \"PT23IWX\" ,\n\t\t\t\"name\" : \"Tim Wright\" ,\n\t\t\t\"email\" : \"tim@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"purple\" ,\n\t\t\t\"role\" : \"owner\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/923a2b907dc04244e9bb5576a42e70a7.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PT23IWX\" ,\n\t\t\t\"invitation_sent\" : false ,\n\t\t\t\"marketing_opt_out\" : false\n\t\t} ,\n\t\t\"notification\" : {\n\t\t\t\"type\" : \"email\" ,\n\t\t\t\"address\" : \"tim@pagerduty.com\" ,\n\t\t\t\"status\" : \"success\"\n\t\t}\n\t} , {\n\t\t\"id\" : \"P36T0K8\" ,\n\t\t\"type\" : \"unacknowledge\" ,\n\t\t\"created_at\" : \"2013-03-06T20:59:30Z\" ,\n\t\t\"agent\" : {\n\t\t\t\"type\" : \"service\"\n\t\t} ,\n\t\t\"channel\" : {\n\t\t\t\"type\" : \"timeout\"\n\t\t}\n\t} , {\n\t\t\"id\" : \"PKU5VMR\" ,\n\t\t\"type\" : \"acknowledge\" ,\n\t\t\"created_at\" : \"2013-03-06T20:29:30Z\" ,\n\t\t\"agent\" : {\n\t\t\t\"id\" : \"PT23IWX\" ,\n\t\t\t\"name\" : \"Tim Wright\" ,\n\t\t\t\"email\" : \"tim@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"purple\" ,\n\t\t\t\"role\" : \"owner\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/923a2b907dc04244e9bb5576a42e70a7.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PT23IWX\" ,\n\t\t\t\"invitation_sent\" : false ,\n\t\t\t\"marketing_opt_out\" : false ,\n\t\t\t\"type\" : \"user\"\n\t\t} ,\n\t\t\"channel\" : {\n\t\t\t\"type\" : \"phone\"\n\t\t}\n\t} , {\n\t\t\"id\" : \"P36HB17\" ,\n\t\t\"type\" : \"notify\" ,\n\t\t\"created_at\" : \"2013-03-06T20:28:51Z\" ,\n\t\t\"user\" : {\n\t\t\t\"id\" : \"PT23IWX\" ,\n\t\t\t\"name\" : \"Tim Wright\" ,\n\t\t\t\"email\" : \"tim@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"purple\" ,\n\t\t\t\"role\" : \"owner\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/923a2b907dc04244e9bb5576a42e70a7.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PT23IWX\" ,\n\t\t\t\"invitation_sent\" : false ,\n\t\t\t\"marketing_opt_out\" : false\n\t\t} ,\n\t\t\"notification\" : {\n\t\t\t\"type\" : \"email\" ,\n\t\t\t\"address\" : \"tim@pagerduty.com\" ,\n\t\t\t\"status\" : \"success\"\n\t\t}\n\t} , {\n\t\t\"id\" : \"PBJBF9Q\" ,\n\t\t\"type\" : \"notify\" ,\n\t\t\"created_at\" : \"2013-03-06T20:28:50Z\" ,\n\t\t\"user\" : {\n\t\t\t\"id\" : \"PT23IWX\" ,\n\t\t\t\"name\" : \"Tim Wright\" ,\n\t\t\t\"email\" : \"tim@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"purple\" ,\n\t\t\t\"role\" : \"owner\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/923a2b907dc04244e9bb5576a42e70a7.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PT23IWX\" ,\n\t\t\t\"invitation_sent\" : false ,\n\t\t\t\"marketing_opt_out\" : false\n\t\t} ,\n\t\t\"notification\" : {\n\t\t\t\"type\" : \"phone\" ,\n\t\t\t\"address\" : \"+1 956-821-0372\" ,\n\t\t\t\"status\" : \"success\"\n\t\t}\n\t} , {\n\t\t\"id\" : \"PRD9J7P\" ,\n\t\t\"type\" : \"assign\" ,\n\t\t\"created_at\" : \"2013-03-06T20:28:46Z\" ,\n\t\t\"agent\" : {\n\t\t\t\"type\" : \"service\"\n\t\t} ,\n\t\t\"channel\" : {\n\t\t\t\"type\" : \"auto\"\n\t\t} ,\n\t\t\"assigned_user\" : {\n\t\t\t\"id\" : \"PT23IWX\" ,\n\t\t\t\"name\" : \"Tim Wright\" ,\n\t\t\t\"email\" : \"tim@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"purple\" ,\n\t\t\t\"role\" : \"owner\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/923a2b907dc04244e9bb5576a42e70a7.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PT23IWX\" ,\n\t\t\t\"invitation_sent\" : false ,\n\t\t\t\"marketing_opt_out\" : false\n\t\t} ,\n\t\t\"note\" : null\n\t} , {\n\t\t\"id\" : \"PVPXJJC\" ,\n\t\t\"type\" : \"trigger\" ,\n\t\t\"created_at\" : \"2013-03-06T20:28:46Z\" ,\n\t\t\"agent\" : {\n\t\t\t\"id\" : \"PT23IWX\" ,\n\t\t\t\"name\" : \"Tim Wright\" ,\n\t\t\t\"email\" : \"tim@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"purple\" ,\n\t\t\t\"role\" : \"owner\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/923a2b907dc04244e9bb5576a42e70a7.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PT23IWX\" ,\n\t\t\t\"invitation_sent\" : false ,\n\t\t\t\"marketing_opt_out\" : false ,\n\t\t\t\"type\" : \"user\"\n\t\t} ,\n\t\t\"channel\" : {\n\t\t\t\"summary\" : \"Martian's are attacking\" ,\n\t\t\t\"type\" : \"web_trigger\"\n\t\t}\n\t} ] ,\n\t\"limit\" : 100 ,\n\t\"offset\" : 0 ,\n\t\"total\" : 12\n}",
                                                    "schemaContent": "{\n  \"type\": \"object\",\n  \"required\": true,\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"log_entries\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"items\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"type\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"created_at\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"note\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"agent\": {\n              \"type\": \"object\",\n              \"required\": false\n            },\n            \"channel\": {\n              \"type\": \"object\",\n              \"required\": false\n            }\n          }\n        }\n      }\n    },\n    \"limit\": {\n      \"type\": \"number\",\n      \"required\": false\n    },\n    \"offset\": {\n      \"type\": \"number\",\n      \"required\": false\n    },\n    \"total\": {\n      \"type\": \"number\",\n      \"required\": false\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "description": "List all incident log entries for a specific incident.\n",
                                    "method": "get",
                                    "is": [
                                        "paginated",
                                        "allowsRange",
                                        "logging"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/log_entries",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "log_entries"
                            ]
                        }
                    ],
                    "displayName": "/{incident_id}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{incident_id}"
                    ]
                }
            ],
            "displayName": "/incidents",
            "description": "This API lets you access and manipulate incidents.",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "incidents"
            ]
        },
        {
            "relativeUri": "/log_entries",
            "type": "pagerDutyResource",
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "logEntriesQuery",
                                    "example": "{\n\t\"log_entries\" : [ {\n\t\t\"id\" : \"PPV5KG7\" ,\n\t\t\"type\" : \"resolve\" ,\n\t\t\"created_at\" : \"2013-03-06T21:33:15Z\" ,\n\t\t\"note\" : \"Fixed\" ,\n\t\t\"agent\" : {\n\t\t\t\"id\" : \"PT23IWX\" ,\n\t\t\t\"name\" : \"Tim Wright\" ,\n\t\t\t\"email\" : \"tim@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"purple\" ,\n\t\t\t\"role\" : \"owner\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/923a2b907dc04244e9bb5576a42e70a7.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PT23IWX\" ,\n\t\t\t\"invitation_sent\" : false ,\n\t\t\t\"marketing_opt_out\" : false ,\n\t\t\t\"type\" : \"user\"\n\t\t} ,\n\t\t\"channel\" : {\n\t\t\t\"type\" : \"website\"\n\t\t}\n\t} , {\n\t\t\"id\" : \"PEAJ6BC\" ,\n\t\t\"type\" : \"resolve\" ,\n\t\t\"created_at\" : \"2013-03-06T21:33:02Z\" ,\n\t\t\"note\" : \"Fixed\" ,\n\t\t\"agent\" : {\n\t\t\t\"id\" : \"PT23IWX\" ,\n\t\t\t\"name\" : \"Tim Wright\" ,\n\t\t\t\"email\" : \"tim@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"purple\" ,\n\t\t\t\"role\" : \"owner\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/923a2b907dc04244e9bb5576a42e70a7.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PT23IWX\" ,\n\t\t\t\"invitation_sent\" : false ,\n\t\t\t\"marketing_opt_out\" : false ,\n\t\t\t\"type\" : \"user\"\n\t\t} ,\n\t\t\"channel\" : {\n\t\t\t\"type\" : \"website\"\n\t\t}\n\t} , {\n\t\t\"id\" : \"PS1ATPX\" ,\n\t\t\"type\" : \"notify\" ,\n\t\t\"created_at\" : \"2013-03-06T21:08:43Z\" ,\n\t\t\"user\" : {\n\t\t\t\"id\" : \"PPSFHH7\" ,\n\t\t\t\"name\" : \"Bob Smith\" ,\n\t\t\t\"email\" : \"bob@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"red\" ,\n\t\t\t\"role\" : \"user\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/78e9fa7d6d2ddba416ad7534eb1403d0.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PPSFHH7\" ,\n\t\t\t\"invitation_sent\" : true ,\n\t\t\t\"marketing_opt_out\" : false\n\t\t} ,\n\t\t\"notification\" : {\n\t\t\t\"type\" : \"email\" ,\n\t\t\t\"address\" : \"bob@acme.com\" ,\n\t\t\t\"status\" : \"success\"\n\t\t}\n\t} , {\n\t\t\"id\" : \"PVALU1K\" ,\n\t\t\"type\" : \"notify\" ,\n\t\t\"created_at\" : \"2013-03-06T21:08:43Z\" ,\n\t\t\"user\" : {\n\t\t\t\"id\" : \"PPSFHH7\" ,\n\t\t\t\"name\" : \"Bob Smith\" ,\n\t\t\t\"email\" : \"bob@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"red\" ,\n\t\t\t\"role\" : \"user\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/78e9fa7d6d2ddba416ad7534eb1403d0.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PPSFHH7\" ,\n\t\t\t\"invitation_sent\" : true ,\n\t\t\t\"marketing_opt_out\" : false\n\t\t} ,\n\t\t\"notification\" : {\n\t\t\t\"type\" : \"email\" ,\n\t\t\t\"address\" : \"bob@acme.com\" ,\n\t\t\t\"status\" : \"success\"\n\t\t}\n\t} , {\n\t\t\"id\" : \"PZN9UEN\" ,\n\t\t\"type\" : \"escalate\" ,\n\t\t\"created_at\" : \"2013-03-06T21:08:43Z\" ,\n\t\t\"agent\" : {\n\t\t\t\"type\" : \"service\"\n\t\t} ,\n\t\t\"channel\" : {\n\t\t\t\"type\" : \"timeout\"\n\t\t} ,\n\t\t\"assigned_user\" : {\n\t\t\t\"id\" : \"PPSFHH7\" ,\n\t\t\t\"name\" : \"Bob Smith\" ,\n\t\t\t\"email\" : \"bob@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"red\" ,\n\t\t\t\"role\" : \"user\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/78e9fa7d6d2ddba416ad7534eb1403d0.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PPSFHH7\" ,\n\t\t\t\"invitation_sent\" : true ,\n\t\t\t\"marketing_opt_out\" : false\n\t\t} ,\n\t\t\"note\" : null\n\t} , {\n\t\t\"id\" : \"PZMKNZ5\" ,\n\t\t\"type\" : \"notify\" ,\n\t\t\"created_at\" : \"2013-03-06T21:07:43Z\" ,\n\t\t\"user\" : {\n\t\t\t\"id\" : \"PT23IWX\" ,\n\t\t\t\"name\" : \"Tim Wright\" ,\n\t\t\t\"email\" : \"tim@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"purple\" ,\n\t\t\t\"role\" : \"owner\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/923a2b907dc04244e9bb5576a42e70a7.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PT23IWX\" ,\n\t\t\t\"invitation_sent\" : false ,\n\t\t\t\"marketing_opt_out\" : false\n\t\t} ,\n\t\t\"notification\" : {\n\t\t\t\"type\" : \"email\" ,\n\t\t\t\"address\" : \"tim@pagerduty.com\" ,\n\t\t\t\"status\" : \"success\"\n\t\t}\n\t} , {\n\t\t\"id\" : \"PDZ8OOV\" ,\n\t\t\"type\" : \"notify\" ,\n\t\t\"created_at\" : \"2013-03-06T21:07:43Z\" ,\n\t\t\"user\" : {\n\t\t\t\"id\" : \"PT23IWX\" ,\n\t\t\t\"name\" : \"Tim Wright\" ,\n\t\t\t\"email\" : \"tim@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"purple\" ,\n\t\t\t\"role\" : \"owner\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/923a2b907dc04244e9bb5576a42e70a7.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PT23IWX\" ,\n\t\t\t\"invitation_sent\" : false ,\n\t\t\t\"marketing_opt_out\" : false\n\t\t} ,\n\t\t\"notification\" : {\n\t\t\t\"type\" : \"sms\" ,\n\t\t\t\"address\" : \"+1 956-821-0372\" ,\n\t\t\t\"status\" : \"success\"\n\t\t}\n\t} , {\n\t\t\"id\" : \"PKHHPD8\" ,\n\t\t\"type\" : \"unacknowledge\" ,\n\t\t\"created_at\" : \"2013-03-06T21:07:43Z\" ,\n\t\t\"agent\" : {\n\t\t\t\"type\" : \"service\"\n\t\t} ,\n\t\t\"channel\" : {\n\t\t\t\"type\" : \"timeout\"\n\t\t}\n\t} , {\n\t\t\"id\" : \"P8MDTZ8\" ,\n\t\t\"type\" : \"notify\" ,\n\t\t\"created_at\" : \"2013-03-06T21:00:30Z\" ,\n\t\t\"user\" : {\n\t\t\t\"id\" : \"PPSFHH7\" ,\n\t\t\t\"name\" : \"Bob Smith\" ,\n\t\t\t\"email\" : \"bob@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"red\" ,\n\t\t\t\"role\" : \"user\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/78e9fa7d6d2ddba416ad7534eb1403d0.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PPSFHH7\" ,\n\t\t\t\"invitation_sent\" : true ,\n\t\t\t\"marketing_opt_out\" : false\n\t\t} ,\n\t\t\"notification\" : {\n\t\t\t\"type\" : \"email\" ,\n\t\t\t\"address\" : \"bob@acme.com\" ,\n\t\t\t\"status\" : \"success\"\n\t\t}\n\t} , {\n\t\t\"id\" : \"PHCXXHR\" ,\n\t\t\"type\" : \"escalate\" ,\n\t\t\"created_at\" : \"2013-03-06T21:00:30Z\" ,\n\t\t\"agent\" : {\n\t\t\t\"type\" : \"service\"\n\t\t} ,\n\t\t\"channel\" : {\n\t\t\t\"type\" : \"timeout\"\n\t\t} ,\n\t\t\"assigned_user\" : {\n\t\t\t\"id\" : \"PPSFHH7\" ,\n\t\t\t\"name\" : \"Bob Smith\" ,\n\t\t\t\"email\" : \"bob@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"red\" ,\n\t\t\t\"role\" : \"user\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/78e9fa7d6d2ddba416ad7534eb1403d0.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PPSFHH7\" ,\n\t\t\t\"invitation_sent\" : true ,\n\t\t\t\"marketing_opt_out\" : false\n\t\t} ,\n\t\t\"note\" : null\n\t} , {\n\t\t\"id\" : \"PE5XGDA\" ,\n\t\t\"type\" : \"notify\" ,\n\t\t\"created_at\" : \"2013-03-06T20:59:31Z\" ,\n\t\t\"user\" : {\n\t\t\t\"id\" : \"PT23IWX\" ,\n\t\t\t\"name\" : \"Tim Wright\" ,\n\t\t\t\"email\" : \"tim@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"purple\" ,\n\t\t\t\"role\" : \"owner\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/923a2b907dc04244e9bb5576a42e70a7.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PT23IWX\" ,\n\t\t\t\"invitation_sent\" : false ,\n\t\t\t\"marketing_opt_out\" : false\n\t\t} ,\n\t\t\"notification\" : {\n\t\t\t\"type\" : \"sms\" ,\n\t\t\t\"address\" : \"+1 956-821-0372\" ,\n\t\t\t\"status\" : \"success\"\n\t\t}\n\t} , {\n\t\t\"id\" : \"P9DWJ9J\" ,\n\t\t\"type\" : \"notify\" ,\n\t\t\"created_at\" : \"2013-03-06T20:59:30Z\" ,\n\t\t\"user\" : {\n\t\t\t\"id\" : \"PT23IWX\" ,\n\t\t\t\"name\" : \"Tim Wright\" ,\n\t\t\t\"email\" : \"tim@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"purple\" ,\n\t\t\t\"role\" : \"owner\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/923a2b907dc04244e9bb5576a42e70a7.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PT23IWX\" ,\n\t\t\t\"invitation_sent\" : false ,\n\t\t\t\"marketing_opt_out\" : false\n\t\t} ,\n\t\t\"notification\" : {\n\t\t\t\"type\" : \"email\" ,\n\t\t\t\"address\" : \"tim@pagerduty.com\" ,\n\t\t\t\"status\" : \"success\"\n\t\t}\n\t} , {\n\t\t\"id\" : \"P36T0K8\" ,\n\t\t\"type\" : \"unacknowledge\" ,\n\t\t\"created_at\" : \"2013-03-06T20:59:30Z\" ,\n\t\t\"agent\" : {\n\t\t\t\"type\" : \"service\"\n\t\t} ,\n\t\t\"channel\" : {\n\t\t\t\"type\" : \"timeout\"\n\t\t}\n\t} , {\n\t\t\"id\" : \"PHW1S5W\" ,\n\t\t\"type\" : \"acknowledge\" ,\n\t\t\"created_at\" : \"2013-03-06T20:37:43Z\" ,\n\t\t\"agent\" : {\n\t\t\t\"id\" : \"PT23IWX\" ,\n\t\t\t\"name\" : \"Tim Wright\" ,\n\t\t\t\"email\" : \"tim@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"purple\" ,\n\t\t\t\"role\" : \"owner\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/923a2b907dc04244e9bb5576a42e70a7.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PT23IWX\" ,\n\t\t\t\"invitation_sent\" : false ,\n\t\t\t\"marketing_opt_out\" : false ,\n\t\t\t\"type\" : \"user\"\n\t\t} ,\n\t\t\"channel\" : {\n\t\t\t\"type\" : \"sms\"\n\t\t}\n\t} , {\n\t\t\"id\" : \"P9DAN7O\" ,\n\t\t\"type\" : \"notify\" ,\n\t\t\"created_at\" : \"2013-03-06T20:36:46Z\" ,\n\t\t\"user\" : {\n\t\t\t\"id\" : \"PT23IWX\" ,\n\t\t\t\"name\" : \"Tim Wright\" ,\n\t\t\t\"email\" : \"tim@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"purple\" ,\n\t\t\t\"role\" : \"owner\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/923a2b907dc04244e9bb5576a42e70a7.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PT23IWX\" ,\n\t\t\t\"invitation_sent\" : false ,\n\t\t\t\"marketing_opt_out\" : false\n\t\t} ,\n\t\t\"notification\" : {\n\t\t\t\"type\" : \"email\" ,\n\t\t\t\"address\" : \"tim@pagerduty.com\" ,\n\t\t\t\"status\" : \"success\"\n\t\t}\n\t} , {\n\t\t\"id\" : \"PQPLNJB\" ,\n\t\t\"type\" : \"notify\" ,\n\t\t\"created_at\" : \"2013-03-06T20:36:46Z\" ,\n\t\t\"user\" : {\n\t\t\t\"id\" : \"PT23IWX\" ,\n\t\t\t\"name\" : \"Tim Wright\" ,\n\t\t\t\"email\" : \"tim@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"purple\" ,\n\t\t\t\"role\" : \"owner\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/923a2b907dc04244e9bb5576a42e70a7.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PT23IWX\" ,\n\t\t\t\"invitation_sent\" : false ,\n\t\t\t\"marketing_opt_out\" : false\n\t\t} ,\n\t\t\"notification\" : {\n\t\t\t\"type\" : \"sms\" ,\n\t\t\t\"address\" : \"+1 956-821-0372\" ,\n\t\t\t\"status\" : \"success\"\n\t\t}\n\t} , {\n\t\t\"id\" : \"PXYXPOR\" ,\n\t\t\"type\" : \"assign\" ,\n\t\t\"created_at\" : \"2013-03-06T20:36:45Z\" ,\n\t\t\"agent\" : {\n\t\t\t\"type\" : \"service\"\n\t\t} ,\n\t\t\"channel\" : {\n\t\t\t\"type\" : \"auto\"\n\t\t} ,\n\t\t\"assigned_user\" : {\n\t\t\t\"id\" : \"PT23IWX\" ,\n\t\t\t\"name\" : \"Tim Wright\" ,\n\t\t\t\"email\" : \"tim@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"purple\" ,\n\t\t\t\"role\" : \"owner\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/923a2b907dc04244e9bb5576a42e70a7.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PT23IWX\" ,\n\t\t\t\"invitation_sent\" : false ,\n\t\t\t\"marketing_opt_out\" : false\n\t\t} ,\n\t\t\"note\" : null\n\t} , {\n\t\t\"id\" : \"PB7IQ0E\" ,\n\t\t\"type\" : \"trigger\" ,\n\t\t\"created_at\" : \"2013-03-06T20:36:45Z\" ,\n\t\t\"agent\" : {\n\t\t\t\"id\" : \"PT23IWX\" ,\n\t\t\t\"name\" : \"Tim Wright\" ,\n\t\t\t\"email\" : \"tim@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"purple\" ,\n\t\t\t\"role\" : \"owner\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/923a2b907dc04244e9bb5576a42e70a7.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PT23IWX\" ,\n\t\t\t\"invitation_sent\" : false ,\n\t\t\t\"marketing_opt_out\" : false ,\n\t\t\t\"type\" : \"user\"\n\t\t} ,\n\t\t\"channel\" : {\n\t\t\t\"summary\" : \"Server full of cats\" ,\n\t\t\t\"type\" : \"web_trigger\"\n\t\t}\n\t} , {\n\t\t\"id\" : \"PKU5VMR\" ,\n\t\t\"type\" : \"acknowledge\" ,\n\t\t\"created_at\" : \"2013-03-06T20:29:30Z\" ,\n\t\t\"agent\" : {\n\t\t\t\"id\" : \"PT23IWX\" ,\n\t\t\t\"name\" : \"Tim Wright\" ,\n\t\t\t\"email\" : \"tim@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"purple\" ,\n\t\t\t\"role\" : \"owner\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/923a2b907dc04244e9bb5576a42e70a7.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PT23IWX\" ,\n\t\t\t\"invitation_sent\" : false ,\n\t\t\t\"marketing_opt_out\" : false ,\n\t\t\t\"type\" : \"user\"\n\t\t} ,\n\t\t\"channel\" : {\n\t\t\t\"type\" : \"phone\"\n\t\t}\n\t} , {\n\t\t\"id\" : \"P36HB17\" ,\n\t\t\"type\" : \"notify\" ,\n\t\t\"created_at\" : \"2013-03-06T20:28:51Z\" ,\n\t\t\"user\" : {\n\t\t\t\"id\" : \"PT23IWX\" ,\n\t\t\t\"name\" : \"Tim Wright\" ,\n\t\t\t\"email\" : \"tim@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"purple\" ,\n\t\t\t\"role\" : \"owner\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/923a2b907dc04244e9bb5576a42e70a7.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PT23IWX\" ,\n\t\t\t\"invitation_sent\" : false ,\n\t\t\t\"marketing_opt_out\" : false\n\t\t} ,\n\t\t\"notification\" : {\n\t\t\t\"type\" : \"email\" ,\n\t\t\t\"address\" : \"tim@pagerduty.com\" ,\n\t\t\t\"status\" : \"success\"\n\t\t}\n\t} , {\n\t\t\"id\" : \"PBJBF9Q\" ,\n\t\t\"type\" : \"notify\" ,\n\t\t\"created_at\" : \"2013-03-06T20:28:50Z\" ,\n\t\t\"user\" : {\n\t\t\t\"id\" : \"PT23IWX\" ,\n\t\t\t\"name\" : \"Tim Wright\" ,\n\t\t\t\"email\" : \"tim@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"purple\" ,\n\t\t\t\"role\" : \"owner\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/923a2b907dc04244e9bb5576a42e70a7.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PT23IWX\" ,\n\t\t\t\"invitation_sent\" : false ,\n\t\t\t\"marketing_opt_out\" : false\n\t\t} ,\n\t\t\"notification\" : {\n\t\t\t\"type\" : \"phone\" ,\n\t\t\t\"address\" : \"+1 956-821-0372\" ,\n\t\t\t\"status\" : \"success\"\n\t\t}\n\t} , {\n\t\t\"id\" : \"PRD9J7P\" ,\n\t\t\"type\" : \"assign\" ,\n\t\t\"created_at\" : \"2013-03-06T20:28:46Z\" ,\n\t\t\"agent\" : {\n\t\t\t\"type\" : \"service\"\n\t\t} ,\n\t\t\"channel\" : {\n\t\t\t\"type\" : \"auto\"\n\t\t} ,\n\t\t\"assigned_user\" : {\n\t\t\t\"id\" : \"PT23IWX\" ,\n\t\t\t\"name\" : \"Tim Wright\" ,\n\t\t\t\"email\" : \"tim@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"purple\" ,\n\t\t\t\"role\" : \"owner\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/923a2b907dc04244e9bb5576a42e70a7.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PT23IWX\" ,\n\t\t\t\"invitation_sent\" : false ,\n\t\t\t\"marketing_opt_out\" : false\n\t\t} ,\n\t\t\"note\" : null\n\t} , {\n\t\t\"id\" : \"PVPXJJC\" ,\n\t\t\"type\" : \"trigger\" ,\n\t\t\"created_at\" : \"2013-03-06T20:28:46Z\" ,\n\t\t\"agent\" : {\n\t\t\t\"id\" : \"PT23IWX\" ,\n\t\t\t\"name\" : \"Tim Wright\" ,\n\t\t\t\"email\" : \"tim@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"purple\" ,\n\t\t\t\"role\" : \"owner\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/923a2b907dc04244e9bb5576a42e70a7.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PT23IWX\" ,\n\t\t\t\"invitation_sent\" : false ,\n\t\t\t\"marketing_opt_out\" : false ,\n\t\t\t\"type\" : \"user\"\n\t\t} ,\n\t\t\"channel\" : {\n\t\t\t\"summary\" : \"Martian's are attacking\" ,\n\t\t\t\"type\" : \"web_trigger\"\n\t\t}\n\t} , {\n\t\t\"id\" : \"PABDPAI\" ,\n\t\t\"type\" : \"resolve\" ,\n\t\t\"created_at\" : \"2013-01-31T03:21:15Z\" ,\n\t\t\"note\" : \"Doused it with a water hose.\" ,\n\t\t\"agent\" : {\n\t\t\t\"id\" : \"PPSFHH7\" ,\n\t\t\t\"name\" : \"Bob Smith\" ,\n\t\t\t\"email\" : \"bob@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"red\" ,\n\t\t\t\"role\" : \"user\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/78e9fa7d6d2ddba416ad7534eb1403d0.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PPSFHH7\" ,\n\t\t\t\"invitation_sent\" : true ,\n\t\t\t\"marketing_opt_out\" : false ,\n\t\t\t\"type\" : \"user\"\n\t\t} ,\n\t\t\"channel\" : {\n\t\t\t\"type\" : \"website\"\n\t\t}\n\t} , {\n\t\t\"id\" : \"PKLZ54O\" ,\n\t\t\"type\" : \"acknowledge\" ,\n\t\t\"created_at\" : \"2013-01-31T03:18:13Z\" ,\n\t\t\"agent\" : {\n\t\t\t\"id\" : \"PPSFHH7\" ,\n\t\t\t\"name\" : \"Bob Smith\" ,\n\t\t\t\"email\" : \"bob@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"red\" ,\n\t\t\t\"role\" : \"user\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/78e9fa7d6d2ddba416ad7534eb1403d0.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PPSFHH7\" ,\n\t\t\t\"invitation_sent\" : true ,\n\t\t\t\"marketing_opt_out\" : false ,\n\t\t\t\"type\" : \"user\"\n\t\t} ,\n\t\t\"channel\" : {\n\t\t\t\"type\" : \"website\"\n\t\t}\n\t} , {\n\t\t\"id\" : \"PE03WDN\" ,\n\t\t\"type\" : \"notify\" ,\n\t\t\"created_at\" : \"2013-01-31T03:16:32Z\" ,\n\t\t\"user\" : {\n\t\t\t\"id\" : \"PPSFHH7\" ,\n\t\t\t\"name\" : \"Bob Smith\" ,\n\t\t\t\"email\" : \"bob@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"red\" ,\n\t\t\t\"role\" : \"user\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/78e9fa7d6d2ddba416ad7534eb1403d0.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PPSFHH7\" ,\n\t\t\t\"invitation_sent\" : true ,\n\t\t\t\"marketing_opt_out\" : false\n\t\t} ,\n\t\t\"notification\" : {\n\t\t\t\"type\" : \"email\" ,\n\t\t\t\"address\" : \"bob@acme.com\" ,\n\t\t\t\"status\" : \"success\"\n\t\t}\n\t} , {\n\t\t\"id\" : \"PHZRXSA\" ,\n\t\t\"type\" : \"escalate\" ,\n\t\t\"created_at\" : \"2013-01-31T03:16:32Z\" ,\n\t\t\"agent\" : {\n\t\t\t\"type\" : \"service\"\n\t\t} ,\n\t\t\"channel\" : {\n\t\t\t\"type\" : \"timeout\"\n\t\t} ,\n\t\t\"assigned_user\" : {\n\t\t\t\"id\" : \"PPSFHH7\" ,\n\t\t\t\"name\" : \"Bob Smith\" ,\n\t\t\t\"email\" : \"bob@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"red\" ,\n\t\t\t\"role\" : \"user\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/78e9fa7d6d2ddba416ad7534eb1403d0.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PPSFHH7\" ,\n\t\t\t\"invitation_sent\" : true ,\n\t\t\t\"marketing_opt_out\" : false\n\t\t} ,\n\t\t\"note\" : null\n\t} , {\n\t\t\"id\" : \"P6BSRS1\" ,\n\t\t\"type\" : \"notify\" ,\n\t\t\"created_at\" : \"2013-01-31T03:15:33Z\" ,\n\t\t\"user\" : {\n\t\t\t\"id\" : \"PT23IWX\" ,\n\t\t\t\"name\" : \"Tim Wright\" ,\n\t\t\t\"email\" : \"tim@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"purple\" ,\n\t\t\t\"role\" : \"owner\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/923a2b907dc04244e9bb5576a42e70a7.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PT23IWX\" ,\n\t\t\t\"invitation_sent\" : false ,\n\t\t\t\"marketing_opt_out\" : false\n\t\t} ,\n\t\t\"notification\" : {\n\t\t\t\"type\" : \"email\" ,\n\t\t\t\"address\" : \"tim@acme.com\" ,\n\t\t\t\"status\" : \"success\"\n\t\t}\n\t} , {\n\t\t\"id\" : \"PQK1SGE\" ,\n\t\t\"type\" : \"assign\" ,\n\t\t\"created_at\" : \"2013-01-31T03:15:32Z\" ,\n\t\t\"agent\" : {\n\t\t\t\"type\" : \"service\"\n\t\t} ,\n\t\t\"channel\" : {\n\t\t\t\"type\" : \"auto\"\n\t\t} ,\n\t\t\"assigned_user\" : {\n\t\t\t\"id\" : \"PT23IWX\" ,\n\t\t\t\"name\" : \"Tim Wright\" ,\n\t\t\t\"email\" : \"tim@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"purple\" ,\n\t\t\t\"role\" : \"owner\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/923a2b907dc04244e9bb5576a42e70a7.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PT23IWX\" ,\n\t\t\t\"invitation_sent\" : false ,\n\t\t\t\"marketing_opt_out\" : false\n\t\t} ,\n\t\t\"note\" : null\n\t} , {\n\t\t\"id\" : \"PUWPTW4\" ,\n\t\t\"type\" : \"trigger\" ,\n\t\t\"created_at\" : \"2013-01-31T03:15:32Z\" ,\n\t\t\"agent\" : {\n\t\t\t\"type\" : \"service\"\n\t\t} ,\n\t\t\"channel\" : {\n\t\t\t\"summary\" : \"Your server's on fire!\" ,\n\t\t\t\"type\" : \"email\"\n\t\t}\n\t} ] ,\n\t\"limit\" : 100 ,\n\t\"offset\" : 0 ,\n\t\"total\" : 30\n}",
                                    "schemaContent": "{\n  \"type\": \"object\",\n  \"required\": true,\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"log_entries\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"items\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"type\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"created_at\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"note\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"agent\": {\n              \"type\": \"object\",\n              \"required\": false\n            },\n            \"channel\": {\n              \"type\": \"object\",\n              \"required\": false\n            }\n          }\n        }\n      }\n    },\n    \"limit\": {\n      \"type\": \"number\",\n      \"required\": false\n    },\n    \"offset\": {\n      \"type\": \"number\",\n      \"required\": false\n    },\n    \"total\": {\n      \"type\": \"number\",\n      \"required\": false\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "description": "List all incident log entries across the entire account.",
                    "method": "get",
                    "is": [
                        "paginated",
                        "allowsRange",
                        "logging"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/{id}",
                    "type": "pagerDutyResource",
                    "uriParameters": {
                        "id": {
                            "name": "id",
                            "displayName": "id",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "logEntry",
                                            "example": "{\n\t\"log_entry\" : {\n\t\t\"id\" : \"PVPXJJC\" ,\n\t\t\"type\" : \"trigger\" ,\n\t\t\"created_at\" : \"2013-03-06T20:28:46Z\" ,\n\t\t\"agent\" : {\n\t\t\t\"id\" : \"PT23IWX\" ,\n\t\t\t\"name\" : \"Tim Wright\" ,\n\t\t\t\"email\" : \"tim@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"purple\" ,\n\t\t\t\"role\" : \"owner\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/923a2b907dc04244e9bb5576a42e70a7.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PT23IWX\" ,\n\t\t\t\"invitation_sent\" : false ,\n\t\t\t\"marketing_opt_out\" : false ,\n\t\t\t\"type\" : \"user\"\n\t\t} ,\n\t\t\"channel\" : {\n\t\t\t\"summary\" : \"Martian's are attacking\" ,\n\t\t\t\"type\" : \"web_trigger\"\n\t\t}\n\t}\n}",
                                            "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"log_entry\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                        }
                                    }
                                }
                            },
                            "body": {
                                "application/x-www-form-urlencoded": {
                                    "name": "application/x-www-form-urlencoded",
                                    "formParameters": {
                                        "time_zone": {
                                            "name": "time_zone",
                                            "displayName": "time_zone",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "Time zone in which dates in the result will be rendered. Defaults to UTC",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "include[]": {
                                            "name": "include[]",
                                            "displayName": "include[]",
                                            "type": "string",
                                            "required": false,
                                            "example": "include[]=contact_methods&include[]=notification_rules",
                                            "repeat": false,
                                            "description": "Array of additional details to include. This API accepts 'channel', 'incident', and 'service'.\nIf 'channel' is not included, a summary will be returned (See channel format information for more information.)\n",
                                            "enum": [
                                                "channel",
                                                "incident",
                                                "service"
                                            ],
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "description": "Get details for a specific incident log entry. This method provides additional information you can use to get at raw event data.\n",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/{id}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{id}"
                    ]
                }
            ],
            "displayName": "/log_entries",
            "description": "PagerDuty keeps a log of all the events that happen to an incident.\nThe following APIs provide fine-grained access to this incident log entry data to give you more insight\ninto how your team or organization is handling your incidents.\nLog entry data includes details about the event(s) that triggered the incident, who was notified and when,\nhow they were notified, and who acknowledged or resolved it, amongst a few other things.\n",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "log_entries"
            ]
        },
        {
            "relativeUri": "/maintenance_windows",
            "type": "pagerDutyResource",
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "maintenanceWindowsQuery",
                                    "example": "{\n\t\"maintenance_windows\" : [ {\n\t\t\"id\" : \"P9UJCMM\" ,\n\t\t\"sequence_number\" : 1 ,\n\t\t\"start_time\" : \"2012-06-16T13:00:00-04:00Z\" ,\n\t\t\"end_time\" : \"2012-06-16T14:00:00-04:00Z\" ,\n\t\t\"description\" :\n\t\t\"This service is in maintenance due to a scheduled ruby 1.9 migration\" ,\n\t\t\"created_by\" : {\n\t\t\t\"id\" : \"PP1565R\" ,\n\t\t\t\"name\" : \"John Smith\" ,\n\t\t\t\"email\" : \"john@example.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"grey20\" ,\n\t\t\t\"role\" : \"user\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/2e32280905f296791ed387cd0f61ec6b.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PP1565R\" ,\n\t\t\t\"invitation_sent\" : true\n\t\t} ,\n\t\t\"services\" : [ {\n\t\t\t\"name\" : \"Mail Service 12345677\" ,\n\t\t\t\"url\" : \"/services/PF9KMXH\" ,\n\t\t\t\"id\" : \"PF9KMXH\"\n\t\t} ]\n\t} ] ,\n\t\"limit\" : 25 ,\n\t\"offset\" : 0 ,\n\t\"total\" : 1 ,\n\t\"query\" : \"ruby 1.9 migration\" ,\n\t\"counts\" : {\n\t\t\"ongoing\" : 4 ,\n\t\t\"future\" : 3 ,\n\t\t\"past\" : 3 ,\n\t\t\"all\" : 10\n\t}\n}",
                                    "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"maintenance_windows\" : {\n\t\t\t\"type\" : \"array\" ,\n\t\t\t\"required\" : false ,\n\t\t\t\"items\" : \n\t\t\t\t{\n\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\"properties\" : {\n\t\t\t\t\t\t\"id\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"sequence_number\" : {\n\t\t\t\t\t\t\t\"type\" : \"number\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"start_time\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"end_time\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"description\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"created_by\" : {\n\t\t\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"services\" : {\n\t\t\t\t\t\t\t\"type\" : \"array\" ,\n\t\t\t\t\t\t\t\"required\" : false ,\n\t\t\t\t\t\t\t\"items\" : \n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\t\t\t\t\"properties\" : {\n\t\t\t\t\t\t\t\t\t\t\"name\" : {\n\t\t\t\t\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\t\t\t\t\"url\" : {\n\t\t\t\t\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\t\t\t\t\"id\" : {\n\t\t\t\t\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t} ,\n\t\t\"limit\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"offset\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"total\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"query\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"counts\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                }
                            }
                        }
                    },
                    "body": {
                        "application/x-www-form-urlencoded": {
                            "name": "application/x-www-form-urlencoded",
                            "formParameters": {
                                "query": {
                                    "name": "query",
                                    "displayName": "query",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Filters the results, showing only the maintenance windows whose descriptions contain the query.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "service_ids": {
                                    "name": "service_ids",
                                    "displayName": "service_ids",
                                    "type": "string",
                                    "required": false,
                                    "example": "service_ids[]=PF9KMXH&service_ids[]=qwerty",
                                    "repeat": false,
                                    "description": "An array of service IDs, specifying services whose maintenance windows shall be returned.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "filter": {
                                    "name": "filter",
                                    "displayName": "filter",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Only return maintenance windows that are of this type.\nPossible values are 'past', 'future', 'ongoing'.\nIf this parameter is omitted, all maintenance windows will be returned.\n",
                                    "enum": [
                                        "past",
                                        "future",
                                        "ongoing"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "description": "List existing maintenance windows, optionally filtered by service,\nor whether they are from the past, present or future.\n",
                    "method": "get",
                    "is": [
                        "paginated"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                },
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "maintenanceWindowPostResponse",
                                    "example": "{\n\t\"maintenance_window\" : {\n\t\t\"id\" : \"P9UJCMM\" ,\n\t\t\"sequence_number\" : 1 ,\n\t\t\"start_time\" : \"2012-06-16T13:00:00-04:00Z\" ,\n\t\t\"end_time\" : \"2012-06-16T14:00:00-04:00Z\" ,\n\t\t\"description\" :\n\t\t\"This service is in maintenance due to a scheduled ruby 1.9 migration\" ,\n\t\t\"created_by\" : {\n\t\t\t\"id\" : \"PP1565R\" ,\n\t\t\t\"name\" : \"John Smith\" ,\n\t\t\t\"email\" : \"john@example.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"grey20\" ,\n\t\t\t\"role\" : \"user\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/2e32280905f296791ed387cd0f61ec6b.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PP1565R\" ,\n\t\t\t\"invitation_sent\" : true\n\t\t} ,\n\t\t\"services\" : [ {\n\t\t\t\"name\" : \"Mail Service 12345677\" ,\n\t\t\t\"url\" : \"/services/PF9KMXH\" ,\n\t\t\t\"id\" : \"PF9KMXH\"\n\t\t} ]\n\t}\n}",
                                    "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"maintenance_window\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                }
                            }
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json",
                            "schema": "maintenanceWindowPostBody",
                            "example": "{\n\t\"maintenance_window\" : {\n\t\t\"start_time\" : \"2012-06-16T13:00:00-04:00Z\" ,\n\t\t\"end_time\" : \"2012-06-16T14:00:00-04:00Z\" ,\n\t\t\"description\" : \"Upgrading to new software\" ,\n\t\t\"service_ids\" : [ \"PF9KMXH\" ]\n\t} ,\n\t\"requester_id\" : \"PP1565R\"\n}",
                            "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"maintenance_window\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"requester_id\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "description": "Create a new maintenance window for the specified services.\nNo new incidents will be created for a service that is currently in maintenance.\n",
                    "method": "post",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/{id}",
                    "type": "pagerDutyResource",
                    "uriParameters": {
                        "id": {
                            "name": "id",
                            "displayName": "id",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "maintenanceWindowGet",
                                            "example": "{\n\t\"maintenance_window\" : {\n\t\t\"id\" : \"P9UJCMM\" ,\n\t\t\"sequence_number\" : 1 ,\n\t\t\"start_time\" : \"2012-06-16T13:00:00-04:00Z\" ,\n\t\t\"end_time\" : \"2012-06-16T14:00:00-04:00Z\" ,\n\t\t\"description\" :\n\t\t\"This service is in maintenance due to a scheduled ruby 1.9 migration\" ,\n\t\t\"created_by\" : {\n\t\t\t\"id\" : \"PP1565R\" ,\n\t\t\t\"name\" : \"John Smith\" ,\n\t\t\t\"email\" : \"john@example.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"grey20\" ,\n\t\t\t\"role\" : \"user\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/2e32280905f296791ed387cd0f61ec6b.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PP1565R\" ,\n\t\t\t\"invitation_sent\" : true\n\t\t} ,\n\t\t\"services\" : [ {\n\t\t\t\"name\" : \"Mail Service 12345677\" ,\n\t\t\t\"url\" : \"/services/PF9KMXH\" ,\n\t\t\t\"id\" : \"PF9KMXH\"\n\t\t} ]\n\t}\n}",
                                            "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"maintenance_window\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "description": "Get details about an existing maintenance window.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "maintenanceWindowPutResponse",
                                            "example": "{\n\t\"maintenance_window\" : {\n\t\t\"id\" : \"P9UJCMM\" ,\n\t\t\"sequence_number\" : 1 ,\n\t\t\"start_time\" : \"2012-06-16T13:00:00-04:00Z\" ,\n\t\t\"end_time\" : \"2012-06-16T14:00:00-04:00Z\" ,\n\t\t\"description\" :\n\t\t\"This service is in maintenance due to a scheduled ruby 1.9 migration\" ,\n\t\t\"created_by\" : {\n\t\t\t\"id\" : \"PP1565R\" ,\n\t\t\t\"name\" : \"John Smith\" ,\n\t\t\t\"email\" : \"john@example.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"grey20\" ,\n\t\t\t\"role\" : \"user\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/2e32280905f296791ed387cd0f61ec6b.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PP1565R\" ,\n\t\t\t\"invitation_sent\" : true\n\t\t} ,\n\t\t\"services\" : [ {\n\t\t\t\"name\" : \"Mail Service 12345677\" ,\n\t\t\t\"url\" : \"/services/PF9KMXH\" ,\n\t\t\t\"id\" : \"PF9KMXH\"\n\t\t} ]\n\t}\n}",
                                            "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"maintenance_window\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                        }
                                    }
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "maintenanceWindowPutBody",
                                    "example": "{\n\t\"start_time\" : \"2012-06-16T13:00:00-04:00Z\" ,\n\t\"end_time\" : \"2012-06-16T14:00:00-04:00Z\" ,\n\t\"description\" : \"Description goes here\" ,\n\t\"service_ids\" : [ \"PF9KMXH\" ]\n}",
                                    "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"start_time\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"end_time\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"description\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"service_ids\" : {\n\t\t\t\"type\" : \"array\" ,\n\t\t\t\"required\" : false ,\n\t\t\t\"items\" : \n\t\t\t\t{\n\t\t\t\t\t\"type\" : \"string\"\n\t\t\t\t}\n\t\t\t\n\t\t}\n\t}\n}"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "description": "Update an existing maintenance window.",
                            "method": "put",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "204": {
                                    "code": "204"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "description": "Cancel or delete an existing maintenance window.",
                            "method": "delete",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/{id}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{id}"
                    ]
                }
            ],
            "displayName": "/maintenance_windows",
            "description": "Maintenance windows allow you to schedule service maintenance periods, during which no incidents will be created.",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "maintenance_windows"
            ]
        },
        {
            "relativeUri": "/reports",
            "resources": [
                {
                    "relativeUri": "/incidents_per_time",
                    "type": "pagerDutyResource",
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "reportsIncidentsPerTime",
                                            "example": "{\n\t\"alerts\" : [ {\n\t\t\"number_of_alerts\" : 17 ,\n\t\t\"number_of_phone_alerts\" : 11 ,\n\t\t\"number_of_sms_alerts\" : 2 ,\n\t\t\"number_of_email_alerts\" : 4 ,\n\t\t\"start\" : \"2012-06-01T07:00:00Z\" ,\n\t\t\"end\" : \"2012-07-01T00:00:00-07:00\"\n\t} , {\n\t\t\"number_of_alerts\" : 22 ,\n\t\t\"number_of_phone_alerts\" : 12 ,\n\t\t\"number_of_sms_alerts\" : 5 ,\n\t\t\"number_of_email_alerts\" : 5 ,\n\t\t\"start\" : \"2012-07-01T07:00:00Z\" ,\n\t\t\"end\" : \"2012-08-01T00:00:00-07:00\"\n\t} ] ,\n\t\"total_number_of_alerts\" : 39 ,\n\t\"total_number_of_phone_alerts\" : 23 ,\n\t\"total_number_of_sms_alerts\" : 7 ,\n\t\"total_number_of_email_alerts\" : 9 ,\n\t\"total_number_of_billable_alerts\" : 30\n}",
                                            "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"alerts\" : {\n\t\t\t\"type\" : \"array\" ,\n\t\t\t\"required\" : false ,\n\t\t\t\"items\" : \n\t\t\t\t{\n\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\"properties\" : {\n\t\t\t\t\t\t\"number_of_alerts\" : {\n\t\t\t\t\t\t\t\"type\" : \"number\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"number_of_phone_alerts\" : {\n\t\t\t\t\t\t\t\"type\" : \"number\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"number_of_sms_alerts\" : {\n\t\t\t\t\t\t\t\"type\" : \"number\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"number_of_email_alerts\" : {\n\t\t\t\t\t\t\t\"type\" : \"number\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"start\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"end\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t} ,\n\t\t\"total_number_of_alerts\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"total_number_of_phone_alerts\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"total_number_of_sms_alerts\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"total_number_of_email_alerts\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"total_number_of_billable_alerts\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "description": "Get high level statistics about the number of alerts (SMSes, phone calls and emails)\nsent for the desired time period, summed daily, weekly or monthly.\n",
                            "method": "get",
                            "is": [
                                "reports"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/incidents_per_time",
                    "description": "Access high level reports about alerts and incidents. Useful for creating graphs.",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "incidents_per_time"
                    ]
                },
                {
                    "relativeUri": "/alerts_per_time",
                    "type": "pagerDutyResource",
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "reportsAlertsPerTime",
                                            "example": "{\n\t\"incidents\" : [ {\n\t\t\"start\" : \"2012-08-01T00:00:00Z\" ,\n\t\t\"number_of_incidents\" : 7 ,\n\t\t\"end\" : \"2012-08-02T00:00:00Z\"\n\t} , {\n\t\t\"start\" : \"2012-08-02T00:00:00Z\" ,\n\t\t\"number_of_incidents\" : 3 ,\n\t\t\"end\" : \"2012-08-03T00:00:00Z\"\n\t} , {\n\t\t\"start\" : \"2012-08-03T00:00:00Z\" ,\n\t\t\"number_of_incidents\" : 4 ,\n\t\t\"end\" : \"2012-08-04T00:00:00Z\"\n\t} , {\n\t\t\"start\" : \"2012-08-04T00:00:00Z\" ,\n\t\t\"number_of_incidents\" : 15 ,\n\t\t\"end\" : \"2012-08-05T00:00:00Z\"\n\t} ]\n}",
                                            "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"incidents\" : {\n\t\t\t\"type\" : \"array\" ,\n\t\t\t\"required\" : false ,\n\t\t\t\"items\" : \n\t\t\t\t{\n\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\"properties\" : {\n\t\t\t\t\t\t\"start\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"number_of_incidents\" : {\n\t\t\t\t\t\t\t\"type\" : \"number\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"end\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t}\n\t}\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "description": "Get high level statistics about the number of incidents created for the desired time period, summed daily, weekly or monthly.",
                            "method": "get",
                            "is": [
                                "reports"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/alerts_per_time",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "alerts_per_time"
                    ]
                }
            ],
            "displayName": "/reports",
            "description": "Access high level reports about alerts and incidents. Useful for creating graphs.",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "reports"
            ]
        },
        {
            "relativeUri": "/schedules",
            "type": "pagerDutyResource",
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "schedulesGet",
                                    "example": "{\n\t\"schedules\" : [ {\n\t\t\"id\" : \"PWEVPB6\" ,\n\t\t\"name\" : \"Primary\" ,\n\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\"today\" : \"2013-03-26\" ,\n\t\t\"escalation_policies\" : [ ]\n\t} , {\n\t\t\"id\" : \"PT57OLG\" ,\n\t\t\"name\" : \"Secondary\" ,\n\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\"today\" : \"2013-03-26\" ,\n\t\t\"escalation_policies\" : [ ]\n\t} ] ,\n\t\"limit\" : 100 ,\n\t\"offset\" : 0 ,\n\t\"total\" : 2\n}",
                                    "schemaContent": "{\n  \"type\": \"object\",\n  \"required\": true,\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"schedules\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"items\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"name\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"time_zone\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"today\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"escalation_policies\": {\n              \"type\": \"array\",\n              \"required\": false,\n              \"items\": {\n                \"type\": \"array\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"limit\": {\n      \"type\": \"number\",\n      \"required\": false\n    },\n    \"offset\": {\n      \"type\": \"number\",\n      \"required\": false\n    },\n    \"total\": {\n      \"type\": \"number\",\n      \"required\": false\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "body": {
                        "application/x-www-form-urlencoded": {
                            "name": "application/x-www-form-urlencoded",
                            "formParameters": {
                                "query": {
                                    "name": "query",
                                    "displayName": "query",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Filters the result, showing only the schedules whose name matches the query.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "requester_id": {
                                    "name": "requester_id",
                                    "displayName": "requester_id",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The user id of the user making the request. This will be used to generate the calendar private urls.\nThis is only needed if you are using token based authentication.\n",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "description": "List existing on-call schedules.",
                    "method": "get",
                    "is": [
                        "paginated"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                },
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "schedulesPostResponse",
                                    "example": "{\n\t\"schedule\" : {\n\t\t\"schedule_layers\" : [ {\n\t\t\t\"restriction_type\" : null ,\n\t\t\t\"priority\" : 0 ,\n\t\t\t\"start\" : \"2012-08-05T00:00:00-04:00\" ,\n\t\t\t\"rotation_turn_length_seconds\" : 604800 ,\n\t\t\t\"rotation_virtual_start\" : \"2012-08-05T00:00:00-04:00\" ,\n\t\t\t\"users\" : [ {\n\t\t\t\t\"user\" : {\n\t\t\t\t\t\"email\" : \"hailie_hansen@shieldsfarrell.biz\" ,\n\t\t\t\t\t\"color\" : \"orange\" ,\n\t\t\t\t\t\"id\" : \"P2BI1SS\" ,\n\t\t\t\t\t\"name\" : \"Hailie Hansen\"\n\t\t\t\t} ,\n\t\t\t\t\"member_order\" : 1\n\t\t\t} , {\n\t\t\t\t\"user\" : {\n\t\t\t\t\t\"email\" : \"rogahn.karl@cole.info\" ,\n\t\t\t\t\t\"color\" : \"orange-red\" ,\n\t\t\t\t\t\"id\" : \"PX3ILJ6\" ,\n\t\t\t\t\t\"name\" : \"Karl Rogahn\"\n\t\t\t\t} ,\n\t\t\t\t\"member_order\" : 2\n\t\t\t} ] ,\n\t\t\t\"end\" : null ,\n\t\t\t\"id\" : \"PZGJA4R\" ,\n\t\t\t\"restrictions\" : [ ] ,\n\t\t\t\"name\" : \"Schedule Layer 1\"\n\t\t} , {\n\t\t\t\"restriction_type\" : \"Daily\" ,\n\t\t\t\"priority\" : 1 ,\n\t\t\t\"start\" : \"2012-08-05T00:00:00-04:00\" ,\n\t\t\t\"rotation_turn_length_seconds\" : 86400 ,\n\t\t\t\"rotation_virtual_start\" : \"2012-08-05T00:00:00-04:00\" ,\n\t\t\t\"users\" : [ {\n\t\t\t\t\"user\" : {\n\t\t\t\t\t\"email\" : \"gabrielle_glover@mertz.biz\" ,\n\t\t\t\t\t\"color\" : \"cayenne\" ,\n\t\t\t\t\t\"id\" : \"PAD6MYW\" ,\n\t\t\t\t\t\"name\" : \"Gabrielle Glover\"\n\t\t\t\t} ,\n\t\t\t\t\"member_order\" : 1\n\t\t\t} , {\n\t\t\t\t\"user\" : {\n\t\t\t\t\t\"email\" : \"gerhard.abernathy@kulas.us\" ,\n\t\t\t\t\t\"color\" : \"red\" ,\n\t\t\t\t\t\"id\" : \"PU6348I\" ,\n\t\t\t\t\t\"name\" : \"Gerhard Abernathy\"\n\t\t\t\t} ,\n\t\t\t\t\"member_order\" : 2\n\t\t\t} , {\n\t\t\t\t\"user\" : {\n\t\t\t\t\t\"email\" : \"gregory_hilll@deckow.us\" ,\n\t\t\t\t\t\"color\" : \"teal\" ,\n\t\t\t\t\t\"id\" : \"P6O624F\" ,\n\t\t\t\t\t\"name\" : \"Gregory Hilll\"\n\t\t\t\t} ,\n\t\t\t\t\"member_order\" : 3\n\t\t\t} ] ,\n\t\t\t\"end\" : null ,\n\t\t\t\"id\" : \"PW7YZS1\" ,\n\t\t\t\"restrictions\" : [ {\n\t\t\t\t\"duration_seconds\" : 43200 ,\n\t\t\t\t\"start_time_of_day\" : \"00:00:00\"\n\t\t\t} ] ,\n\t\t\t\"name\" : \"Schedule Layer 2\"\n\t\t} ] ,\n\t\t\"final_schedule\" : {\n\t\t\t\"name\" : \"Final Schedule\"\n\t\t} ,\n\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\"escalation_policies\" : [ ] ,\n\t\t\"today\" : \"2012-08-08\" ,\n\t\t\"overrides_subschedule\" : {\n\t\t\t\"name\" : \"Overrides\"\n\t\t} ,\n\t\t\"name\" : \"Primary On-Call Schedule\"\n\t} ,\n\t\"id\" : \"P2BI1SS\"\n}",
                                    "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"schedule\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"id\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                }
                            }
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json",
                            "schema": "schedulesPostBody",
                            "example": "{\n\t\"since\" : \"2012-08-05T00:00:00\" ,\n\t\"overflow\" : 1 ,\n\t\"until\" : \"2012-08-19T00:00:00\" ,\n\t\"schedule\" : {\n\t\t\"schedule_layers\" : [ {\n\t\t\t\"start\" : \"2012-08-05T00:00:00\" ,\n\t\t\t\"users\" : [ {\n\t\t\t\t\"user\" : {\n\t\t\t\t\t\"id\" : \"P2BI1SS\"\n\t\t\t\t} ,\n\t\t\t\t\"member_order\" : 1\n\t\t\t} , {\n\t\t\t\t\"user\" : {\n\t\t\t\t\t\"id\" : \"PX3ILJ6\"\n\t\t\t\t} ,\n\t\t\t\t\"member_order\" : 2\n\t\t\t} ] ,\n\t\t\t\"restriction_type\" : null ,\n\t\t\t\"rotation_virtual_start\" : \"2012-08-05T00:00:00\" ,\n\t\t\t\"priority\" : 0 ,\n\t\t\t\"rotation_turn_length_seconds\" : 604800 ,\n\t\t\t\"end\" : null ,\n\t\t\t\"restrictions\" : [ ] ,\n\t\t\t\"id\" : null ,\n\t\t\t\"name\" : \"Schedule Layer 1\"\n\t\t} , {\n\t\t\t\"start\" : \"2012-08-05T00:00:00\" ,\n\t\t\t\"users\" : [ {\n\t\t\t\t\"user\" : {\n\t\t\t\t\t\"id\" : \"PAD6MYW\"\n\t\t\t\t} ,\n\t\t\t\t\"member_order\" : 1\n\t\t\t} , {\n\t\t\t\t\"user\" : {\n\t\t\t\t\t\"id\" : \"PU6348I\"\n\t\t\t\t} ,\n\t\t\t\t\"member_order\" : 2\n\t\t\t} , {\n\t\t\t\t\"user\" : {\n\t\t\t\t\t\"id\" : \"P6O624F\"\n\t\t\t\t} ,\n\t\t\t\t\"member_order\" : 3\n\t\t\t} ] ,\n\t\t\t\"restriction_type\" : \"Daily\" ,\n\t\t\t\"rotation_virtual_start\" : \"2012-08-05T00:00:00\" ,\n\t\t\t\"rotation_turn_length_seconds\" : 86400 ,\n\t\t\t\"priority\" : 1 ,\n\t\t\t\"restrictions\" : [ {\n\t\t\t\t\"duration_seconds\" : 43200 ,\n\t\t\t\t\"start_time_of_day\" : \"00:00:00\"\n\t\t\t} ] ,\n\t\t\t\"end\" : null ,\n\t\t\t\"id\" : null ,\n\t\t\t\"name\" : \"Schedule Layer 2\"\n\t\t} ] ,\n\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\"id\" : null ,\n\t\t\"name\" : \"Primary On-Call Schedule\"\n\t}\n}",
                            "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"since\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"overflow\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"until\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"schedule\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "description": "Create a new on-call schedule.",
                    "method": "post",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/{schedule_id}",
                    "type": "pagerDutyResource",
                    "uriParameters": {
                        "schedule_id": {
                            "name": "schedule_id",
                            "displayName": "schedule_id",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "scheduleGet",
                                            "example": "{\n\t\"schedule\" : {\n\t\t\"id\" : \"PWEVPB6\" ,\n\t\t\"name\" : \"Primary\" ,\n\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\"today\" : \"2013-03-26\" ,\n\t\t\"escalation_policies\" : [ ] ,\n\t\t\"schedule_layers\" : [ {\n\t\t\t\"name\" : \"Schedule Layer 2\" ,\n\t\t\t\"rendered_schedule_entries\" : [ ] ,\n\t\t\t\"id\" : \"POM1B2S\" ,\n\t\t\t\"priority\" : 1 ,\n\t\t\t\"start\" : \"2013-02-25T18:38:44-05:00\" ,\n\t\t\t\"end\" : null ,\n\t\t\t\"restriction_type\" : \"Daily\" ,\n\t\t\t\"rotation_virtual_start\" : \"2013-02-24T00:00:00-05:00\" ,\n\t\t\t\"rotation_turn_length_seconds\" : 86400 ,\n\t\t\t\"users\" : [ {\n\t\t\t\t\"member_order\" : 1 ,\n\t\t\t\t\"user\" : {\n\t\t\t\t\t\"id\" : \"PPSFHH7\" ,\n\t\t\t\t\t\"name\" : \"Bob Smith\" ,\n\t\t\t\t\t\"email\" : \"bob@acme.com\" ,\n\t\t\t\t\t\"color\" : \"red\"\n\t\t\t\t}\n\t\t\t} , {\n\t\t\t\t\"member_order\" : 2 ,\n\t\t\t\t\"user\" : {\n\t\t\t\t\t\"id\" : \"PRDFNAL\" ,\n\t\t\t\t\t\"name\" : \"Sarah Jones\" ,\n\t\t\t\t\t\"email\" : \"sarah@acme.com\" ,\n\t\t\t\t\t\"color\" : \"green\"\n\t\t\t\t}\n\t\t\t} ] ,\n\t\t\t\"restrictions\" : [ {\n\t\t\t\t\"start_time_of_day\" : \"00:00:00\" ,\n\t\t\t\t\"duration_seconds\" : 43200\n\t\t\t} ] ,\n\t\t\t\"rendered_coverage_percentage\" : 0.0\n\t\t} , {\n\t\t\t\"name\" : \"Schedule Layer 1\" ,\n\t\t\t\"rendered_schedule_entries\" : [ ] ,\n\t\t\t\"id\" : \"PSYPBEF\" ,\n\t\t\t\"priority\" : 0 ,\n\t\t\t\"start\" : \"2013-02-25T18:38:44-05:00\" ,\n\t\t\t\"end\" : null ,\n\t\t\t\"restriction_type\" : null ,\n\t\t\t\"rotation_virtual_start\" : \"2013-02-24T00:00:00-05:00\" ,\n\t\t\t\"rotation_turn_length_seconds\" : 86400 ,\n\t\t\t\"users\" : [ {\n\t\t\t\t\"member_order\" : 1 ,\n\t\t\t\t\"user\" : {\n\t\t\t\t\t\"id\" : \"PT23IWX\" ,\n\t\t\t\t\t\"name\" : \"Tim Wright\" ,\n\t\t\t\t\t\"email\" : \"tim@acme.com\" ,\n\t\t\t\t\t\"color\" : \"purple\"\n\t\t\t\t}\n\t\t\t} ] ,\n\t\t\t\"restrictions\" : [ ] ,\n\t\t\t\"rendered_coverage_percentage\" : 0.0\n\t\t} ] ,\n\t\t\"overrides_subschedule\" : {\n\t\t\t\"name\" : \"Overrides\" ,\n\t\t\t\"rendered_schedule_entries\" : [ ]\n\t\t} ,\n\t\t\"final_schedule\" : {\n\t\t\t\"name\" : \"Final Schedule\" ,\n\t\t\t\"rendered_schedule_entries\" : [ ] ,\n\t\t\t\"rendered_coverage_percentage\" : 0.0\n\t\t}\n\t}\n}",
                                            "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"schedule\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                        }
                                    }
                                }
                            },
                            "body": {
                                "application/x-www-form-urlencoded": {
                                    "name": "application/x-www-form-urlencoded",
                                    "formParameters": {
                                        "time_zone": {
                                            "name": "time_zone",
                                            "displayName": "time_zone",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "Time zone in which dates in the result will be rendered. Defaults to account time zone.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "description": "Show detailed information about a schedule, including entries for each layer and sub-schedule.",
                            "method": "get",
                            "is": [
                                "allowsRange"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "schedulePutResponse",
                                            "example": "{\n\t\"schedule\" : {\n\t\t\"today\" : \"2012-08-24\" ,\n\t\t\"overrides_subschedule\" : {\n\t\t\t\"name\" : \"Overrides\"\n\t\t} ,\n\t\t\"final_schedule\" : {\n\t\t\t\"name\" : \"Final Schedule\"\n\t\t} ,\n\t\t\"id\" : \"P9UJCMM\" ,\n\t\t\"name\" : \"new name\" ,\n\t\t\"time_zone\" : \"UTC\" ,\n\t\t\"escalation_policies\" : [ ] ,\n\t\t\"schedule_layers\" : [ {\n\t\t\t\"restrictions\" : [ {\n\t\t\t\t\"start_time_of_day\" : \"00:00:00\" ,\n\t\t\t\t\"duration_seconds\" : 43200\n\t\t\t} ] ,\n\t\t\t\"start\" : \"2012-08-24T02:39:33Z\" ,\n\t\t\t\"end\" : null ,\n\t\t\t\"rotation_turn_length_seconds\" : 604800 ,\n\t\t\t\"rotation_virtual_start\" : \"2012-08-05T00:00:00Z\" ,\n\t\t\t\"restriction_type\" : \"Daily\" ,\n\t\t\t\"id\" : \"P07F6S3\" ,\n\t\t\t\"name\" : \"Schedule Layer 1\" ,\n\t\t\t\"users\" : [ {\n\t\t\t\t\"user\" : {\n\t\t\t\t\t\"color\" : \"purple\" ,\n\t\t\t\t\t\"id\" : \"PPI9KUT\" ,\n\t\t\t\t\t\"name\" : \"Alan\" ,\n\t\t\t\t\t\"email\" : \"alankay@example.com\"\n\t\t\t\t} ,\n\t\t\t\t\"member_order\" : 1\n\t\t\t} ] ,\n\t\t\t\"priority\" : 0\n\t\t} ]\n\t}\n}",
                                            "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"schedule\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                        }
                                    }
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "schedulePutBody",
                                    "example": "{\n\t\"since\" : \"2012-08-05T00:00:00\" ,\n\t\"until\" : \"2012-08-19T00:00:00\" ,\n\t\"overflow\" : 1 ,\n\t\"schedule\" : {\n\t\t\"time_zone\" : \"UTC\" ,\n\t\t\"name\" : \"new name\" ,\n\t\t\"schedule_layers\" : [ {\n\t\t\t\"name\" : \"Schedule Layer 1\" ,\n\t\t\t\"id\" : \"P07F6S3\" ,\n\t\t\t\"start\" : \"2012-08-05T00:00:00\" ,\n\t\t\t\"rotation_virtual_start\" : \"2012-08-05T00:00:00\" ,\n\t\t\t\"priority\" : 0 ,\n\t\t\t\"rotation_turn_length_seconds\" : 604800 ,\n\t\t\t\"users\" : [ {\n\t\t\t\t\"user\" : {\n\t\t\t\t\t\"id\" : \"PPI9KUT\"\n\t\t\t\t} ,\n\t\t\t\t\"member_order\" : 1\n\t\t\t} ] ,\n\t\t\t\"restriction_type\" : \"Daily\" ,\n\t\t\t\"restrictions\" : [ {\n\t\t\t\t\"duration_seconds\" : \"43200\" ,\n\t\t\t\t\"start_time_of_day\" : \"00:00:00\"\n\t\t\t} ]\n\t\t} ]\n\t}\n}",
                                    "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"since\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"until\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"overflow\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"schedule\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "description": "Update an existing on-call schedule.",
                            "method": "put",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "204": {
                                    "code": "204"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "description": "Delete an on-call schedule.",
                            "method": "delete",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/users",
                            "type": "pagerDutyResource",
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "scheduleUsers",
                                                    "example": "{\n\t\"users\" : [ {\n\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\"color\" : \"dark-orchid\" ,\n\t\t\"email\" : \"tierra.fritsch@example.com\" ,\n\t\t\"avatar_url\" :\n\t\t\"https://secure.gravatar.com/avatar/f55521919f138925499b9c62f5291aac.png?d=mm&r=PG\"\n\t\t,\n\t\t\"user_url\" : \"/users/PTUXL6G\" ,\n\t\t\"invitation_sent\" : false ,\n\t\t\"role\" : \"owner\" ,\n\t\t\"name\" : \"Tierra Fritsch\" ,\n\t\t\"id\" : \"PTUXL6G\"\n\t} ]\n}",
                                                    "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"users\" : {\n\t\t\t\"type\" : \"array\" ,\n\t\t\t\"required\" : false ,\n\t\t\t\"items\" : \n\t\t\t\t{\n\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\"properties\" : {\n\t\t\t\t\t\t\"time_zone\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"color\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"email\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"avatar_url\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"user_url\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"invitation_sent\" : {\n\t\t\t\t\t\t\t\"type\" : \"boolean\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"role\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"name\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"id\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t}\n\t}\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "description": "List all the users on-call in a given schedule for a given time range.",
                                    "method": "get",
                                    "is": [
                                        "allowsRange"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/users",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "users"
                            ]
                        },
                        {
                            "relativeUri": "/entries",
                            "type": "pagerDutyResource",
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "scheduleEntries",
                                                    "example": "{\n\t\"total\" : 3 ,\n\t\"entries\" : [ {\n\t\t\"user\" : {\n\t\t\t\"email\" : \"gregory_hilll@deckow.us\" ,\n\t\t\t\"name\" : \"Gregory\" ,\n\t\t\t\"color\" : \"chocolate\" ,\n\t\t\t\"id\" : \"PRT2T0A\"\n\t\t} ,\n\t\t\"end\" : \"2012-08-19T12:00:00-04:00\" ,\n\t\t\"start\" : \"2012-08-19T00:00:00-04:00\"\n\t} , {\n\t\t\"user\" : {\n\t\t\t\"email\" : \"hailie_hansen@shieldsfarrell.biz\" ,\n\t\t\t\"name\" : \"Halie\" ,\n\t\t\t\"color\" : \"maroon\" ,\n\t\t\t\"id\" : \"PFKNVH3\"\n\t\t} ,\n\t\t\"end\" : \"2012-08-20T00:00:00-04:00\" ,\n\t\t\"start\" : \"2012-08-19T12:00:00-04:00\"\n\t} , {\n\t\t\"user\" : {\n\t\t\t\"email\" : \"gabrielle_glover@mertz.biz\" ,\n\t\t\t\"name\" : \"Gabriel\" ,\n\t\t\t\"color\" : \"dark-red\" ,\n\t\t\t\"id\" : \"PYBBUSQ\"\n\t\t} ,\n\t\t\"end\" : \"2012-08-20T00:00:00-04:00\" ,\n\t\t\"start\" : \"2012-08-20T00:00:00-04:00\"\n\t} ]\n}",
                                                    "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"total\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"entries\" : {\n\t\t\t\"type\" : \"array\" ,\n\t\t\t\"required\" : false ,\n\t\t\t\"items\" : \n\t\t\t\t{\n\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\"properties\" : {\n\t\t\t\t\t\t\"user\" : {\n\t\t\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"end\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"start\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t}\n\t}\n}"
                                                }
                                            }
                                        }
                                    },
                                    "body": {
                                        "application/x-www-form-urlencoded": {
                                            "name": "application/x-www-form-urlencoded",
                                            "formParameters": {
                                                "since": {
                                                    "name": "since",
                                                    "displayName": "since",
                                                    "type": "string",
                                                    "required": true,
                                                    "repeat": false,
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "until": {
                                                    "name": "until",
                                                    "displayName": "until",
                                                    "type": "string",
                                                    "required": true,
                                                    "repeat": false,
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "overflow": {
                                                    "name": "overflow",
                                                    "displayName": "overflow",
                                                    "type": "boolean",
                                                    "required": false,
                                                    "repeat": false,
                                                    "description": "Any on-call schedule entries that pass the date range bounds will be truncated at the bounds,\nunless the parameter overflow=true is passed. This parameter defaults to false. For instance,\nif your schedule is a rotation that changes daily at midnight UTC, and your date range is\nfrom 2011-06-01T10:00:00Z to 2011-06-01T14:00:00Z:\n\nIf you don't pass the overflow=true parameter,\nyou will get one schedule entry returned with a start of 2011-06-01T10:00:00Z and end of 2011-06-01T14:00:00Z.\n\nIf you do pass the overflow=true parameter, you will get one schedule entry returned with a\nstart of 2011-06-01T00:00:00Z and end of 2011-06-02T00:00:00Z.\n",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "time_zone": {
                                                    "name": "time_zone",
                                                    "displayName": "time_zone",
                                                    "type": "string",
                                                    "required": false,
                                                    "repeat": false,
                                                    "description": "Time zone in which dates in the result will be rendered. Defaults to account time zone.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "user_id": {
                                                    "name": "user_id",
                                                    "displayName": "user_id",
                                                    "type": "string",
                                                    "required": false,
                                                    "repeat": false,
                                                    "description": "To filter the returned on-call schedule entries by a specific user,\nyou can optionally add the user_id parameter to the query.\n",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "description": "List schedule entries that are active for a given time range for a specified on-call schedule.",
                                    "method": "get",
                                    "is": [
                                        "allowsRange"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/entries",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "entries"
                            ]
                        },
                        {
                            "relativeUri": "/overrides",
                            "type": "overrideResource",
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "overridesGet",
                                                    "example": "{\n\t\"overrides\" : [ {\n\t\t\"end\" : \"2012-06-16T13:00:00-04:00\" ,\n\t\t\"start\" : \"2012-06-15T16:20:38-04:00\" ,\n\t\t\"user\" : {\n\t\t\t\"color\" : \"turquoise\" ,\n\t\t\t\"name\" : \"Aurelio Rice\" ,\n\t\t\t\"email\" : \"aurelio.rice@acme.com\" ,\n\t\t\t\"id\" : \"PHLG109\"\n\t\t}\n\t} ] ,\n\t\"total\" : 1\n}",
                                                    "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"overrides\" : {\n\t\t\t\"type\" : \"array\" ,\n\t\t\t\"required\" : false ,\n\t\t\t\"items\" : \n\t\t\t\t{\n\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\"properties\" : {\n\t\t\t\t\t\t\"end\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"start\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"user\" : {\n\t\t\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t} ,\n\t\t\"total\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                                }
                                            }
                                        }
                                    },
                                    "body": {
                                        "application/x-www-form-urlencoded": {
                                            "name": "application/x-www-form-urlencoded",
                                            "formParameters": {
                                                "since": {
                                                    "name": "since",
                                                    "displayName": "since",
                                                    "type": "string",
                                                    "required": true,
                                                    "repeat": false,
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "until": {
                                                    "name": "until",
                                                    "displayName": "until",
                                                    "type": "string",
                                                    "required": true,
                                                    "repeat": false,
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "editable": {
                                                    "name": "editable",
                                                    "displayName": "editable",
                                                    "type": "boolean",
                                                    "required": false,
                                                    "repeat": false,
                                                    "description": "When this parameter is present, only editable overrides will be returned.\nThe result will only include the id the override if this parameter is present.\nOnly future overrides are editable.\n",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "overflow": {
                                                    "name": "overflow",
                                                    "displayName": "overflow",
                                                    "type": "boolean",
                                                    "required": false,
                                                    "repeat": false,
                                                    "description": "Any on-call schedule entries that pass the date range bounds will be truncated at the bounds,\nunless the parameter overflow=true is passed. This parameter defaults to false.\nFor instance, if your schedule is a rotation that changes daily at midnight UTC,\nand your date range is from 2011-06-01T10:00:00Z to 2011-06-01T14:00:00Z:\n\nIf you don't pass the overflow=true parameter,\nyou will get one schedule entry returned with a start of 2011-06-01T10:00:00Z and end of 2011-06-01T14:00:00Z.\n\nIf you do pass the overflow=true parameter, you will get one schedule entry returned with a\nstart of 2011-06-01T00:00:00Z and end of 2011-06-02T00:00:00Z.\n",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "description": "List overrides for a given time range.",
                                    "method": "get",
                                    "is": [
                                        "paginated"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "201": {
                                            "code": "201",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "overridesPostResponse",
                                                    "example": "{\n\t\"override\" : {\n\t\t\"end\" : \"2012-07-02T00:00:00-04:00\" ,\n\t\t\"user\" : {\n\t\t\t\"name\" : \"Aurelio Rice\" ,\n\t\t\t\"email\" : \"aurelio.rice@acme.com\" ,\n\t\t\t\"color\" : \"turquoise\" ,\n\t\t\t\"id\" : \"PHLG109\"\n\t\t} ,\n\t\t\"id\" : \"PQ47DCP\" ,\n\t\t\"start\" : \"2012-07-01T00:00:00-04:00\"\n\t}\n}",
                                                    "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"override\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                                }
                                            }
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "overridesPostBody",
                                            "example": "{\n\t\"override\" : {\n\t\t\"user_id\" : \"PHLG109\" ,\n\t\t\"start\" : \"2012-07-01\" ,\n\t\t\"end\" : \"2012-07-02\"\n\t}\n}",
                                            "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"override\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "description": "Create an override for a specific user covering the specified time range.",
                                    "method": "post",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "resources": [
                                {
                                    "relativeUri": "/{id}",
                                    "type": "overrideResource",
                                    "uriParameters": {
                                        "id": {
                                            "name": "id",
                                            "displayName": "id",
                                            "type": "string",
                                            "required": true,
                                            "repeat": false,
                                            "__METADATA__": {
                                                "calculated": true,
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "methods": [
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200"
                                                },
                                                "204": {
                                                    "code": "204"
                                                }
                                            },
                                            "protocols": [
                                                "HTTPS"
                                            ],
                                            "description": "Remove an override.",
                                            "method": "delete",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/{id}",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "{id}"
                                    ]
                                }
                            ],
                            "displayName": "/overrides",
                            "description": "Schedule overrides are custom, non-recurring exceptions to your regular on-call schedules.\nUse them when your team members go on vacation, swap shifts, or when you simply cannot\nachieve your normal scheduling with recurring layers.\n",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "overrides"
                            ]
                        }
                    ],
                    "displayName": "/{schedule_id}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{schedule_id}"
                    ]
                },
                {
                    "relativeUri": "/preview",
                    "type": "pagerDutyResource",
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "schedulePreviewResponse",
                                            "example": "{\n\t\"schedule\" : {\n\t\t\"id\" : null ,\n\t\t\"name\" : \"Tertiary\" ,\n\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\"today\" : \"2013-03-26\" ,\n\t\t\"escalation_policies\" : [ ] ,\n\t\t\"schedule_layers\" : [ {\n\t\t\t\"name\" : \"Schedule Layer 1\" ,\n\t\t\t\"rendered_schedule_entries\" : [ {\n\t\t\t\t\"start\" : \"2013-03-27T00:00:00-04:00\" ,\n\t\t\t\t\"end\" : \"2013-03-27T12:00:00-04:00\" ,\n\t\t\t\t\"user\" : {\n\t\t\t\t\t\"id\" : \"PPSFHH7\" ,\n\t\t\t\t\t\"name\" : \"Bob Smith\" ,\n\t\t\t\t\t\"email\" : \"bob@acme.com\" ,\n\t\t\t\t\t\"color\" : \"red\"\n\t\t\t\t} ,\n\t\t\t\t\"id\" : null\n\t\t\t} , {\n\t\t\t\t\"start\" : \"2013-03-28T00:00:00-04:00\" ,\n\t\t\t\t\"end\" : \"2013-03-28T12:00:00-04:00\" ,\n\t\t\t\t\"user\" : {\n\t\t\t\t\t\"id\" : \"PPSFHH7\" ,\n\t\t\t\t\t\"name\" : \"Bob Smith\" ,\n\t\t\t\t\t\"email\" : \"bob@acme.com\" ,\n\t\t\t\t\t\"color\" : \"red\"\n\t\t\t\t} ,\n\t\t\t\t\"id\" : null\n\t\t\t} , {\n\t\t\t\t\"start\" : \"2013-03-29T00:00:00-04:00\" ,\n\t\t\t\t\"end\" : \"2013-03-29T12:00:00-04:00\" ,\n\t\t\t\t\"user\" : {\n\t\t\t\t\t\"id\" : \"PPSFHH7\" ,\n\t\t\t\t\t\"name\" : \"Bob Smith\" ,\n\t\t\t\t\t\"email\" : \"bob@acme.com\" ,\n\t\t\t\t\t\"color\" : \"red\"\n\t\t\t\t} ,\n\t\t\t\t\"id\" : null\n\t\t\t} , {\n\t\t\t\t\"start\" : \"2013-03-30T00:00:00-04:00\" ,\n\t\t\t\t\"end\" : \"2013-03-30T12:00:00-04:00\" ,\n\t\t\t\t\"user\" : {\n\t\t\t\t\t\"id\" : \"PPSFHH7\" ,\n\t\t\t\t\t\"name\" : \"Bob Smith\" ,\n\t\t\t\t\t\"email\" : \"bob@acme.com\" ,\n\t\t\t\t\t\"color\" : \"red\"\n\t\t\t\t} ,\n\t\t\t\t\"id\" : null\n\t\t\t} , {\n\t\t\t\t\"start\" : \"2013-03-31T00:00:00-04:00\" ,\n\t\t\t\t\"end\" : \"2013-03-31T12:00:00-04:00\" ,\n\t\t\t\t\"user\" : {\n\t\t\t\t\t\"id\" : \"PRDFNAL\" ,\n\t\t\t\t\t\"name\" : \"Sarah Jones\" ,\n\t\t\t\t\t\"email\" : \"sarah@acme.com\" ,\n\t\t\t\t\t\"color\" : \"green\"\n\t\t\t\t} ,\n\t\t\t\t\"id\" : null\n\t\t\t} , {\n\t\t\t\t\"start\" : \"2013-04-01T00:00:00-04:00\" ,\n\t\t\t\t\"end\" : \"2013-04-01T12:00:00-04:00\" ,\n\t\t\t\t\"user\" : {\n\t\t\t\t\t\"id\" : \"PRDFNAL\" ,\n\t\t\t\t\t\"name\" : \"Sarah Jones\" ,\n\t\t\t\t\t\"email\" : \"sarah@acme.com\" ,\n\t\t\t\t\t\"color\" : \"green\"\n\t\t\t\t} ,\n\t\t\t\t\"id\" : null\n\t\t\t} , {\n\t\t\t\t\"start\" : \"2013-04-02T00:00:00-04:00\" ,\n\t\t\t\t\"end\" : \"2013-04-02T12:00:00-04:00\" ,\n\t\t\t\t\"user\" : {\n\t\t\t\t\t\"id\" : \"PRDFNAL\" ,\n\t\t\t\t\t\"name\" : \"Sarah Jones\" ,\n\t\t\t\t\t\"email\" : \"sarah@acme.com\" ,\n\t\t\t\t\t\"color\" : \"green\"\n\t\t\t\t} ,\n\t\t\t\t\"id\" : null\n\t\t\t} ] ,\n\t\t\t\"id\" : null ,\n\t\t\t\"priority\" : 0 ,\n\t\t\t\"start\" : \"2013-03-26T20:42:15-04:00\" ,\n\t\t\t\"end\" : null ,\n\t\t\t\"restriction_type\" : \"Daily\" ,\n\t\t\t\"rotation_virtual_start\" : \"2012-01-01T00:00:00-05:00\" ,\n\t\t\t\"rotation_turn_length_seconds\" : 604800 ,\n\t\t\t\"users\" : [ {\n\t\t\t\t\"member_order\" : 1 ,\n\t\t\t\t\"user\" : {\n\t\t\t\t\t\"id\" : \"PPSFHH7\" ,\n\t\t\t\t\t\"name\" : \"Bob Smith\" ,\n\t\t\t\t\t\"email\" : \"bob@acme.com\" ,\n\t\t\t\t\t\"color\" : \"red\"\n\t\t\t\t}\n\t\t\t} , {\n\t\t\t\t\"member_order\" : 2 ,\n\t\t\t\t\"user\" : {\n\t\t\t\t\t\"id\" : \"PRDFNAL\" ,\n\t\t\t\t\t\"name\" : \"Sarah Jones\" ,\n\t\t\t\t\t\"email\" : \"sarah@acme.com\" ,\n\t\t\t\t\t\"color\" : \"green\"\n\t\t\t\t}\n\t\t\t} ] ,\n\t\t\t\"restrictions\" : [ {\n\t\t\t\t\"start_time_of_day\" : \"00:00:00\" ,\n\t\t\t\t\"duration_seconds\" : 43200\n\t\t\t} ] ,\n\t\t\t\"rendered_coverage_percentage\" : 55.2\n\t\t} , {\n\t\t\t\"name\" : \"Schedule Layer 2\" ,\n\t\t\t\"rendered_schedule_entries\" : [ {\n\t\t\t\t\"start\" : \"2013-03-26T20:42:16-04:00\" ,\n\t\t\t\t\"end\" : \"2013-04-02T20:42:16-04:00\" ,\n\t\t\t\t\"user\" : {\n\t\t\t\t\t\"id\" : \"PT23IWX\" ,\n\t\t\t\t\t\"name\" : \"Tim Wright\" ,\n\t\t\t\t\t\"email\" : \"tim@acme.com\" ,\n\t\t\t\t\t\"color\" : \"purple\"\n\t\t\t\t} ,\n\t\t\t\t\"id\" : null\n\t\t\t} ] ,\n\t\t\t\"id\" : null ,\n\t\t\t\"priority\" : 1 ,\n\t\t\t\"start\" : \"2013-03-26T20:42:15-04:00\" ,\n\t\t\t\"end\" : null ,\n\t\t\t\"restriction_type\" : null ,\n\t\t\t\"rotation_virtual_start\" : \"2012-01-01T00:00:00-05:00\" ,\n\t\t\t\"rotation_turn_length_seconds\" : 604800 ,\n\t\t\t\"users\" : [ {\n\t\t\t\t\"member_order\" : 1 ,\n\t\t\t\t\"user\" : {\n\t\t\t\t\t\"id\" : \"PT23IWX\" ,\n\t\t\t\t\t\"name\" : \"Tim Wright\" ,\n\t\t\t\t\t\"email\" : \"tim@acme.com\" ,\n\t\t\t\t\t\"color\" : \"purple\"\n\t\t\t\t}\n\t\t\t} ] ,\n\t\t\t\"restrictions\" : [ ] ,\n\t\t\t\"rendered_coverage_percentage\" : 100.0\n\t\t} ] ,\n\t\t\"final_schedule\" : {\n\t\t\t\"name\" : \"Final Schedule\" ,\n\t\t\t\"rendered_schedule_entries\" : [ {\n\t\t\t\t\"start\" : \"2013-03-26T20:42:16-04:00\" ,\n\t\t\t\t\"end\" : \"2013-04-02T20:42:16-04:00\" ,\n\t\t\t\t\"user\" : {\n\t\t\t\t\t\"id\" : \"PT23IWX\" ,\n\t\t\t\t\t\"name\" : \"Tim Wright\" ,\n\t\t\t\t\t\"email\" : \"tim@acme.com\" ,\n\t\t\t\t\t\"color\" : \"purple\"\n\t\t\t\t} ,\n\t\t\t\t\"id\" : null\n\t\t\t} ] ,\n\t\t\t\"rendered_coverage_percentage\" : 100.0\n\t\t}\n\t}\n}",
                                            "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"schedule\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                        }
                                    }
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "schedulePreviewBody",
                                    "example": "{\n\t\"schedule\" : {\n\t\t\"id\" : null ,\n\t\t\"name\" : \"Tertiary\" ,\n\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\"schedule_layers\" : [ {\n\t\t\t\"restriction_type\" : \"Daily\" ,\n\t\t\t\"priority\" : 0 ,\n\t\t\t\"start\" : \"2012-01-01T00:00:00\" ,\n\t\t\t\"rotation_turn_length_seconds\" : 604800 ,\n\t\t\t\"rotation_virtual_start\" : \"2012-01-01T00:00:00\" ,\n\t\t\t\"users\" : [ {\n\t\t\t\t\"user\" : {\n\t\t\t\t\t\"id\" : \"PPSFHH7\"\n\t\t\t\t} ,\n\t\t\t\t\"member_order\" : 1\n\t\t\t} , {\n\t\t\t\t\"user\" : {\n\t\t\t\t\t\"id\" : \"PRDFNAL\"\n\t\t\t\t} ,\n\t\t\t\t\"member_order\" : 2\n\t\t\t} ] ,\n\t\t\t\"end\" : null ,\n\t\t\t\"id\" : null ,\n\t\t\t\"restrictions\" : [ {\n\t\t\t\t\"duration_seconds\" : 43200 ,\n\t\t\t\t\"start_time_of_day\" : \"00:00:00\"\n\t\t\t} ] ,\n\t\t\t\"name\" : \"Schedule Layer 1\"\n\t\t} , {\n\t\t\t\"restriction_type\" : null ,\n\t\t\t\"priority\" : 1 ,\n\t\t\t\"start\" : \"2012-01-01T00:00:00\" ,\n\t\t\t\"rotation_turn_length_seconds\" : 604800 ,\n\t\t\t\"rotation_virtual_start\" : \"2012-01-01T00:00:00\" ,\n\t\t\t\"users\" : [ {\n\t\t\t\t\"user\" : {\n\t\t\t\t\t\"id\" : \"PT23IWX\"\n\t\t\t\t} ,\n\t\t\t\t\"member_order\" : 1\n\t\t\t} ] ,\n\t\t\t\"end\" : null ,\n\t\t\t\"id\" : null ,\n\t\t\t\"restrictions\" : [ ] ,\n\t\t\t\"name\" : \"Schedule Layer 2\"\n\t\t} ]\n\t}\n}",
                                    "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"schedule\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "description": "Preview the configuration of an on-call schedule.",
                            "method": "post",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/preview",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "preview"
                    ]
                }
            ],
            "displayName": "/schedules",
            "description": "This API allows users to manipulate on-call schedules.",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "schedules"
            ]
        },
        {
            "relativeUri": "/services",
            "type": "pagerDutyResource",
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "servicesQuery",
                                    "example": "{\n\t\"services\" : [ {\n\t\t\"id\" : \"PYKZNA9\" ,\n\t\t\"name\" : \"a\" ,\n\t\t\"service_url\" : \"/services/PYKZNA9\" ,\n\t\t\"service_key\" : \"a@acme.pagerduty.com\" ,\n\t\t\"auto_resolve_timeout\" : 14400 ,\n\t\t\"acknowledgement_timeout\" : 1800 ,\n\t\t\"created_at\" : \"2012-11-14T17:22:56-05:00\" ,\n\t\t\"status\" : \"active\" ,\n\t\t\"last_incident_timestamp\" : null ,\n\t\t\"email_incident_creation\" : \"on_new_email_subject\" ,\n\t\t\"incident_counts\" : {\n\t\t\t\"triggered\" : 0 ,\n\t\t\t\"acknowledged\" : 0 ,\n\t\t\t\"resolved\" : 0 ,\n\t\t\t\"total\" : 0\n\t\t} ,\n\t\t\"email_filter_mode\" : \"all-email\" ,\n\t\t\"type\" : \"generic_email\" ,\n\t\t\"description\" : \"service a\"\n\t} , {\n\t\t\"id\" : \"PO2C8W6\" ,\n\t\t\"name\" : \"aa\" ,\n\t\t\"service_url\" : \"/services/PO2C8W6\" ,\n\t\t\"service_key\" : \"aa@acme.pagerduty.com\" ,\n\t\t\"auto_resolve_timeout\" : 14400 ,\n\t\t\"acknowledgement_timeout\" : 1800 ,\n\t\t\"created_at\" : \"2012-11-15T18:43:56-05:00\" ,\n\t\t\"status\" : \"active\" ,\n\t\t\"last_incident_timestamp\" : null ,\n\t\t\"email_incident_creation\" : \"on_new_email_subject\" ,\n\t\t\"incident_counts\" : {\n\t\t\t\"triggered\" : 0 ,\n\t\t\t\"acknowledged\" : 0 ,\n\t\t\t\"resolved\" : 0 ,\n\t\t\t\"total\" : 0\n\t\t} ,\n\t\t\"email_filter_mode\" : \"all-email\" ,\n\t\t\"type\" : \"generic_email\" ,\n\t\t\"description\" : \"service as\"\n\t} , {\n\t\t\"id\" : \"PSQVSNY\" ,\n\t\t\"name\" : \"adsfadsfads\" ,\n\t\t\"service_url\" : \"/services/PSQVSNY\" ,\n\t\t\"service_key\" : \"adsfadsfads@acme.pagerduty.com\" ,\n\t\t\"auto_resolve_timeout\" : 14400 ,\n\t\t\"acknowledgement_timeout\" : 1800 ,\n\t\t\"created_at\" : \"2012-11-12T22:33:51-05:00\" ,\n\t\t\"status\" : \"active\" ,\n\t\t\"last_incident_timestamp\" : null ,\n\t\t\"email_incident_creation\" : \"on_new_email_subject\" ,\n\t\t\"incident_counts\" : {\n\t\t\t\"triggered\" : 0 ,\n\t\t\t\"acknowledged\" : 0 ,\n\t\t\t\"resolved\" : 0 ,\n\t\t\t\"total\" : 0\n\t\t} ,\n\t\t\"email_filter_mode\" : \"all-email\" ,\n\t\t\"type\" : \"generic_email\" ,\n\t\t\"description\" : \"service adsfadsfads\"\n\t} , {\n\t\t\"id\" : \"PVOO9KJ\" ,\n\t\t\"name\" : \"aff\" ,\n\t\t\"service_url\" : \"/services/PVOO9KJ\" ,\n\t\t\"service_key\" : \"aff@acme.pagerduty.com\" ,\n\t\t\"auto_resolve_timeout\" : 14400 ,\n\t\t\"acknowledgement_timeout\" : 1800 ,\n\t\t\"created_at\" : \"2012-11-14T18:12:31-05:00\" ,\n\t\t\"status\" : \"active\" ,\n\t\t\"last_incident_timestamp\" : null ,\n\t\t\"email_incident_creation\" : \"on_new_email_subject\" ,\n\t\t\"incident_counts\" : {\n\t\t\t\"triggered\" : 0 ,\n\t\t\t\"acknowledged\" : 0 ,\n\t\t\t\"resolved\" : 0 ,\n\t\t\t\"total\" : 0\n\t\t} ,\n\t\t\"email_filter_mode\" : \"all-email\" ,\n\t\t\"type\" : \"generic_email\" ,\n\t\t\"description\" : \"service aff\"\n\t} , {\n\t\t\"id\" : \"PEYSGVF\" ,\n\t\t\"name\" : \"cloud\" ,\n\t\t\"service_url\" : \"/services/PEYSGVF\" ,\n\t\t\"service_key\" : \"2b4310400d360130777138f6b11a5d17\" ,\n\t\t\"auto_resolve_timeout\" : 14400 ,\n\t\t\"acknowledgement_timeout\" : 1800 ,\n\t\t\"created_at\" : \"2012-11-02T00:22:31-04:00\" ,\n\t\t\"status\" : \"critical\" ,\n\t\t\"last_incident_timestamp\" : \"2012-11-08T19:22:07-05:00\" ,\n\t\t\"email_incident_creation\" : null ,\n\t\t\"incident_counts\" : {\n\t\t\t\"triggered\" : 1 ,\n\t\t\t\"acknowledged\" : 0 ,\n\t\t\t\"resolved\" : 0 ,\n\t\t\t\"total\" : 1\n\t\t} ,\n\t\t\"email_filter_mode\" : \"all-email\" ,\n\t\t\"type\" : \"cloudkick\" ,\n\t\t\"description\" : \"service cloud\"\n\t} , {\n\t\t\"id\" : \"PF9KMXH\" ,\n\t\t\"name\" : \"defa\" ,\n\t\t\"service_url\" : \"/services/PF9KMXH\" ,\n\t\t\"service_key\" : \"amazing2@acme.pagerduty.com\" ,\n\t\t\"auto_resolve_timeout\" : null ,\n\t\t\"acknowledgement_timeout\" : null ,\n\t\t\"created_at\" : \"2012-08-15T20:15:52-04:00\" ,\n\t\t\"status\" : \"active\" ,\n\t\t\"last_incident_timestamp\" : \"2012-09-12T17:57:06-04:00\" ,\n\t\t\"email_incident_creation\" : \"on_new_email_subject\" ,\n\t\t\"incident_counts\" : {\n\t\t\t\"triggered\" : 0 ,\n\t\t\t\"acknowledged\" : 0 ,\n\t\t\t\"resolved\" : 4 ,\n\t\t\t\"total\" : 4\n\t\t} ,\n\t\t\"email_filter_mode\" : \"or-rules-email\" ,\n\t\t\"type\" : \"generic_email\" ,\n\t\t\"description\" : \"service defa\"\n\t} , {\n\t\t\"id\" : \"P573W8X\" ,\n\t\t\"name\" : \"djaljdlds\" ,\n\t\t\"service_url\" : \"/services/P573W8X\" ,\n\t\t\"service_key\" : \"djaljdlds@acme.pagerduty.com\" ,\n\t\t\"auto_resolve_timeout\" : 14400 ,\n\t\t\"acknowledgement_timeout\" : 1800 ,\n\t\t\"created_at\" : \"2012-11-09T18:48:14-05:00\" ,\n\t\t\"status\" : \"active\" ,\n\t\t\"last_incident_timestamp\" : null ,\n\t\t\"email_incident_creation\" : \"on_new_email_subject\" ,\n\t\t\"incident_counts\" : {\n\t\t\t\"triggered\" : 0 ,\n\t\t\t\"acknowledged\" : 0 ,\n\t\t\t\"resolved\" : 0 ,\n\t\t\t\"total\" : 0\n\t\t} ,\n\t\t\"email_filter_mode\" : \"or-rules-email\" ,\n\t\t\"type\" : \"generic_email\" ,\n\t\t\"description\" : \"service djaljdlds\"\n\t} , {\n\t\t\"id\" : \"PQ47DCP\" ,\n\t\t\"name\" : \"dservicer\" ,\n\t\t\"service_url\" : \"/services/PQ47DCP\" ,\n\t\t\"service_key\" : \"450c73c00f350130777538f6b11a5d17\" ,\n\t\t\"auto_resolve_timeout\" : 14400 ,\n\t\t\"acknowledgement_timeout\" : 1800 ,\n\t\t\"created_at\" : \"2012-11-02T00:34:55-04:00\" ,\n\t\t\"status\" : \"active\" ,\n\t\t\"last_incident_timestamp\" : null ,\n\t\t\"email_incident_creation\" : null ,\n\t\t\"incident_counts\" : {\n\t\t\t\"triggered\" : 0 ,\n\t\t\t\"acknowledged\" : 0 ,\n\t\t\t\"resolved\" : 0 ,\n\t\t\t\"total\" : 0\n\t\t} ,\n\t\t\"email_filter_mode\" : \"all-email\" ,\n\t\t\"type\" : \"server_density\" ,\n\t\t\"description\" : \"service dservicer\"\n\t} , {\n\t\t\"id\" : \"PHW8B63\" ,\n\t\t\"name\" : \"f\" ,\n\t\t\"service_url\" : \"/services/PHW8B63\" ,\n\t\t\"service_key\" : \"f@acme.pagerduty.com\" ,\n\t\t\"auto_resolve_timeout\" : 14400 ,\n\t\t\"acknowledgement_timeout\" : 1800 ,\n\t\t\"created_at\" : \"2012-11-05T17:34:34-05:00\" ,\n\t\t\"status\" : \"disabled\" ,\n\t\t\"last_incident_timestamp\" : null ,\n\t\t\"email_incident_creation\" : \"on_new_email_subject\" ,\n\t\t\"incident_counts\" : {\n\t\t\t\"triggered\" : 0 ,\n\t\t\t\"acknowledged\" : 0 ,\n\t\t\t\"resolved\" : 0 ,\n\t\t\t\"total\" : 0\n\t\t} ,\n\t\t\"email_filter_mode\" : \"or-rules-email\" ,\n\t\t\"type\" : \"generic_email\" ,\n\t\t\"description\" : \"service f\"\n\t} , {\n\t\t\"id\" : \"PAM4FGS\" ,\n\t\t\"name\" : \"keynoted\" ,\n\t\t\"service_url\" : \"/services/PAM4FGS\" ,\n\t\t\"service_key\" : \"keynoted@acme.pagerduty.com\" ,\n\t\t\"auto_resolve_timeout\" : 14400 ,\n\t\t\"acknowledgement_timeout\" : 1800 ,\n\t\t\"created_at\" : \"2012-11-02T00:26:52-04:00\" ,\n\t\t\"status\" : \"active\" ,\n\t\t\"last_incident_timestamp\" : null ,\n\t\t\"email_incident_creation\" : \"on_new_email_subject\" ,\n\t\t\"incident_counts\" : {\n\t\t\t\"triggered\" : 0 ,\n\t\t\t\"acknowledged\" : 0 ,\n\t\t\t\"resolved\" : 0 ,\n\t\t\t\"total\" : 0\n\t\t} ,\n\t\t\"email_filter_mode\" : \"all-email\" ,\n\t\t\"type\" : \"keynote\" ,\n\t\t\"severity_filter\" : \"critical_or_warning\" ,\n\t\t\"description\" : \"service keynoted\"\n\t} , {\n\t\t\"id\" : \"P9UJCMM\" ,\n\t\t\"name\" : \"le monitor\" ,\n\t\t\"service_url\" : \"/services/P9UJCMM\" ,\n\t\t\"service_key\" : \"le-monitor@acme.pagerduty.com\" ,\n\t\t\"auto_resolve_timeout\" : 14400 ,\n\t\t\"acknowledgement_timeout\" : 1800 ,\n\t\t\"created_at\" : \"2012-11-02T00:35:18-04:00\" ,\n\t\t\"status\" : \"active\" ,\n\t\t\"last_incident_timestamp\" : null ,\n\t\t\"email_incident_creation\" : \"on_new_email_subject\" ,\n\t\t\"incident_counts\" : {\n\t\t\t\"triggered\" : 0 ,\n\t\t\t\"acknowledged\" : 0 ,\n\t\t\t\"resolved\" : 0 ,\n\t\t\t\"total\" : 0\n\t\t} ,\n\t\t\"email_filter_mode\" : \"or-rules-email\" ,\n\t\t\"type\" : \"sql_monitor\" ,\n\t\t\"severity_filter\" : \"on_medium_high\" ,\n\t\t\"description\" : \"service le monitor\"\n\t} , {\n\t\t\"id\" : \"PBAZLIU\" ,\n\t\t\"name\" : \"MyApi\" ,\n\t\t\"service_url\" : \"/services/PBAZLIU\" ,\n\t\t\"service_key\" : \"28198a20cae6012f5c6c38f6b11a5d17\" ,\n\t\t\"auto_resolve_timeout\" : 14400 ,\n\t\t\"acknowledgement_timeout\" : 1800 ,\n\t\t\"created_at\" : \"2012-08-17T18:09:37-04:00\" ,\n\t\t\"status\" : \"active\" ,\n\t\t\"last_incident_timestamp\" : \"2011-04-21T04:26:37-04:00\" ,\n\t\t\"email_incident_creation\" : null ,\n\t\t\"incident_counts\" : {\n\t\t\t\"triggered\" : 0 ,\n\t\t\t\"acknowledged\" : 0 ,\n\t\t\t\"resolved\" : 4 ,\n\t\t\t\"total\" : 4\n\t\t} ,\n\t\t\"email_filter_mode\" : \"all-email\" ,\n\t\t\"type\" : \"generic_events_api\" ,\n\t\t\"description\" : \"service MyApi\"\n\t} , {\n\t\t\"id\" : \"PXPGF42\" ,\n\t\t\"name\" : \"nagiosed\" ,\n\t\t\"service_url\" : \"/services/PXPGF42\" ,\n\t\t\"service_key\" : \"4f7a977006d401305df938f6b11a5d17\" ,\n\t\t\"auto_resolve_timeout\" : 14400 ,\n\t\t\"acknowledgement_timeout\" : 1800 ,\n\t\t\"created_at\" : \"2012-11-02T00:33:01-04:00\" ,\n\t\t\"status\" : \"active\" ,\n\t\t\"last_incident_timestamp\" : null ,\n\t\t\"email_incident_creation\" : null ,\n\t\t\"incident_counts\" : {\n\t\t\t\"triggered\" : 0 ,\n\t\t\t\"acknowledged\" : 0 ,\n\t\t\t\"resolved\" : 0 ,\n\t\t\t\"total\" : 0\n\t\t} ,\n\t\t\"email_filter_mode\" : \"all-email\" ,\n\t\t\"type\" : \"nagios\" ,\n\t\t\"description\" : \"service nagiosed\"\n\t} , {\n\t\t\"id\" : \"PDJKATD\" ,\n\t\t\"name\" : \"nagnag\" ,\n\t\t\"service_url\" : \"/services/PDJKATD\" ,\n\t\t\"service_key\" : \"b2977ea00f5e01307d2338f6b11a5d17\" ,\n\t\t\"auto_resolve_timeout\" : 14400 ,\n\t\t\"acknowledgement_timeout\" : 1800 ,\n\t\t\"created_at\" : \"2012-11-05T18:34:53-05:00\" ,\n\t\t\"status\" : \"active\" ,\n\t\t\"last_incident_timestamp\" : null ,\n\t\t\"email_incident_creation\" : null ,\n\t\t\"incident_counts\" : {\n\t\t\t\"triggered\" : 0 ,\n\t\t\t\"acknowledged\" : 0 ,\n\t\t\t\"resolved\" : 0 ,\n\t\t\t\"total\" : 0\n\t\t} ,\n\t\t\"email_filter_mode\" : \"all-email\" ,\n\t\t\"type\" : \"nagios\" ,\n\t\t\"description\" : \"service nagnag\"\n\t} , {\n\t\t\"id\" : \"P29NBY9\" ,\n\t\t\"name\" : \"serverd\" ,\n\t\t\"service_url\" : \"/services/P29NBY9\" ,\n\t\t\"service_key\" : \"0b2f05b00f6201307d2538f6b11a5d17\" ,\n\t\t\"auto_resolve_timeout\" : 14400 ,\n\t\t\"acknowledgement_timeout\" : 1800 ,\n\t\t\"created_at\" : \"2012-11-02T20:56:39-04:00\" ,\n\t\t\"status\" : \"active\" ,\n\t\t\"last_incident_timestamp\" : null ,\n\t\t\"email_incident_creation\" : null ,\n\t\t\"incident_counts\" : {\n\t\t\t\"triggered\" : 0 ,\n\t\t\t\"acknowledged\" : 0 ,\n\t\t\t\"resolved\" : 0 ,\n\t\t\t\"total\" : 0\n\t\t} ,\n\t\t\"email_filter_mode\" : \"all-email\" ,\n\t\t\"type\" : \"server_density\" ,\n\t\t\"description\" : \"service served\"\n\t} , {\n\t\t\"id\" : \"PT20YPA\" ,\n\t\t\"name\" : \"sevname\" ,\n\t\t\"service_url\" : \"/services/PT20YPA\" ,\n\t\t\"service_key\" : \"sevname@acme.pagerduty.com\" ,\n\t\t\"auto_resolve_timeout\" : 14400 ,\n\t\t\"acknowledgement_timeout\" : 1800 ,\n\t\t\"created_at\" : \"2012-11-09T01:03:10-05:00\" ,\n\t\t\"status\" : \"active\" ,\n\t\t\"last_incident_timestamp\" : null ,\n\t\t\"email_incident_creation\" : \"on_new_email_subject\" ,\n\t\t\"incident_counts\" : {\n\t\t\t\"triggered\" : 0 ,\n\t\t\t\"acknowledged\" : 0 ,\n\t\t\t\"resolved\" : 0 ,\n\t\t\t\"total\" : 0\n\t\t} ,\n\t\t\"email_filter_mode\" : \"all-email\" ,\n\t\t\"type\" : \"generic_email\" ,\n\t\t\"description\" : \"service sevname\"\n\t} , {\n\t\t\"id\" : \"P7TR7GG\" ,\n\t\t\"name\" : \"sevname1011\" ,\n\t\t\"service_url\" : \"/services/P7TR7GG\" ,\n\t\t\"service_key\" : \"726602c011bf0130a60d38f6b11a5d17\" ,\n\t\t\"auto_resolve_timeout\" : 14400 ,\n\t\t\"acknowledgement_timeout\" : 1800 ,\n\t\t\"created_at\" : \"2012-11-15T21:01:24-05:00\" ,\n\t\t\"status\" : \"active\" ,\n\t\t\"last_incident_timestamp\" : null ,\n\t\t\"email_incident_creation\" : null ,\n\t\t\"incident_counts\" : {\n\t\t\t\"triggered\" : 0 ,\n\t\t\t\"acknowledged\" : 0 ,\n\t\t\t\"resolved\" : 0 ,\n\t\t\t\"total\" : 0\n\t\t} ,\n\t\t\"email_filter_mode\" : \"all-email\" ,\n\t\t\"type\" : \"generic_events_api\" ,\n\t\t\"description\" : \"service sevname1011\"\n\t} , {\n\t\t\"id\" : \"PQFCJER\" ,\n\t\t\"name\" : \"Thingy\" ,\n\t\t\"service_url\" : \"/services/PQFCJER\" ,\n\t\t\"service_key\" : \"thingy@acme.pagerduty.com\" ,\n\t\t\"auto_resolve_timeout\" : 14400 ,\n\t\t\"acknowledgement_timeout\" : 1800 ,\n\t\t\"created_at\" : \"2011-01-08T00:22:24-05:00\" ,\n\t\t\"status\" : \"active\" ,\n\t\t\"last_incident_timestamp\" : null ,\n\t\t\"email_incident_creation\" : \"on_new_email_subject\" ,\n\t\t\"incident_counts\" : {\n\t\t\t\"triggered\" : 0 ,\n\t\t\t\"acknowledged\" : 0 ,\n\t\t\t\"resolved\" : 0 ,\n\t\t\t\"total\" : 0\n\t\t} ,\n\t\t\"email_filter_mode\" : \"all-email\" ,\n\t\t\"type\" : \"generic_email\" ,\n\t\t\"description\" : \"service Thingy\"\n\t} ] ,\n\t\"limit\" : 25 ,\n\t\"offset\" : 0 ,\n\t\"total\" : 18\n}",
                                    "schemaContent": "{\n  \"type\": \"object\",\n  \"required\": true,\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"services\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"items\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"name\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"service_url\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"service_key\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"auto_resolve_timeout\": {\n              \"type\": \"number\",\n              \"required\": false\n            },\n            \"acknowledgement_timeout\": {\n              \"type\": \"number\",\n              \"required\": false\n            },\n            \"created_at\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"status\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"last_incident_timestamp\": {\n              \"type\": \"object\",\n              \"required\": false\n            },\n            \"email_incident_creation\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"incident_counts\": {\n              \"type\": \"object\",\n              \"required\": false\n            },\n            \"email_filter_mode\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"type\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"description\": {\n              \"type\": \"string\",\n              \"required\": false\n            }\n          }\n        }\n      }\n    },\n    \"limit\": {\n      \"type\": \"number\",\n      \"required\": false\n    },\n    \"offset\": {\n      \"type\": \"number\",\n      \"required\": false\n    },\n    \"total\": {\n      \"type\": \"number\",\n      \"required\": false\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "body": {
                        "application/x-www-form-urlencoded": {
                            "name": "application/x-www-form-urlencoded",
                            "formParameters": {
                                "include[]": {
                                    "name": "include[]",
                                    "displayName": "include[]",
                                    "type": "string",
                                    "required": false,
                                    "example": "include[]=escalation_policy&include[]=email_filters",
                                    "repeat": false,
                                    "description": "Include extra information in the response.\nPossible values are 'escalation_policy' (for inline Escalation Policy) and\n'email_filters' (for inline Email Filters).\n",
                                    "enum": [
                                        "escalation_policy",
                                        "email_filters"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "time_zone": {
                                    "name": "time_zone",
                                    "displayName": "time_zone",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Time zone in which dates in the result will be rendered. Defaults to account default time zone.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "description": "List existing services.",
                    "method": "get",
                    "is": [
                        "paginated"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                },
                {
                    "responses": {
                        "201": {
                            "code": "201",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "servicesPostResponse",
                                    "example": "{\n\t\"service\" : {\n\t\t\"id\" : \"PY944Y7\" ,\n\t\t\"name\" : \"default-email\" ,\n\t\t\"service_url\" : \"/services/PY944Y7\" ,\n\t\t\"service_key\" : \"default-email@acme.pagerduty.com\" ,\n\t\t\"auto_resolve_timeout\" : 14400 ,\n\t\t\"acknowledgement_timeout\" : 1800 ,\n\t\t\"created_at\" : \"2012-11-15T21:29:54-05:00\" ,\n\t\t\"status\" : \"active\" ,\n\t\t\"last_incident_timestamp\" : null ,\n\t\t\"email_incident_creation\" : \"on_new_email_subject\" ,\n\t\t\"incident_counts\" : {\n\t\t\t\"triggered\" : 0 ,\n\t\t\t\"acknowledged\" : 0 ,\n\t\t\t\"resolved\" : 0 ,\n\t\t\t\"total\" : 0\n\t\t} ,\n\t\t\"email_filter_mode\" : \"all-email\" ,\n\t\t\"type\" : \"generic_email\" ,\n\t\t\"description\" : \"default email service\"\n\t}\n}",
                                    "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"service\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                }
                            }
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json",
                            "schema": "servicesPostBody",
                            "example": "{\n\t\"service\" : {\n\t\t\"name\" : \"default-email\" ,\n\t\t\"description\" : \"default email service\" ,\n\t\t\"escalation_policy_id\" : \"PIJ90N7\" ,\n\t\t\"type\" : \"generic_email\",\n        \"service_key\": \"default-email\"\n\t}\n}",
                            "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"service\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "description": "Create a new service.",
                    "method": "post",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/{service_id}",
                    "type": "pagerDutyResource",
                    "uriParameters": {
                        "service_id": {
                            "name": "service_id",
                            "displayName": "service_id",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "serviceGet",
                                            "example": "{\n\t\"service\" : {\n\t\t\"id\" : \"PF9KMXH\" ,\n\t\t\"name\" : \"default\" ,\n\t\t\"service_url\" : \"/services/PF9KMXH\" ,\n\t\t\"service_key\" : \"amazing2@acme.pagerduty.com\" ,\n\t\t\"auto_resolve_timeout\" : null ,\n\t\t\"acknowledgement_timeout\" : null ,\n\t\t\"created_at\" : \"2012-08-15T20:15:52-04:00\" ,\n\t\t\"status\" : \"active\" ,\n\t\t\"last_incident_timestamp\" : \"2012-09-12T17:57:06-04:00\" ,\n\t\t\"email_incident_creation\" : \"on_new_email_subject\" ,\n\t\t\"incident_counts\" : {\n\t\t\t\"triggered\" : 0 ,\n\t\t\t\"acknowledged\" : 0 ,\n\t\t\t\"resolved\" : 4 ,\n\t\t\t\"total\" : 4\n\t\t} ,\n\t\t\"email_filter_mode\" : \"or-rules-email\" ,\n\t\t\"type\" : \"generic_email\" ,\n\t\t\"description\" : \"service default\"\n\t}\n}",
                                            "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"service\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                        }
                                    }
                                }
                            },
                            "body": {
                                "application/x-www-form-urlencoded": {
                                    "name": "application/x-www-form-urlencoded",
                                    "formParameters": {
                                        "include[]": {
                                            "name": "include[]",
                                            "displayName": "include[]",
                                            "type": "string",
                                            "required": false,
                                            "example": "include[]=escalation_policy&include[]=email_filters",
                                            "repeat": false,
                                            "description": "Include extra information in the response.\nPossible values are 'escalation_policy' (for inline Escalation Policy) and\n'email_filters' (for inline Email Filters).\n",
                                            "enum": [
                                                "escalation_policy",
                                                "email_filters"
                                            ],
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "description": "Get details about an existing service.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "servicePutResponse",
                                            "example": "{\n\t\"service\" : {\n\t\t\"id\" : \"PBIS5NX\" ,\n\t\t\"name\" : \"My New Name\" ,\n\t\t\"service_url\" : \"/services/PBIS5NX\" ,\n\t\t\"service_key\" : \"7b68a2c011c20130a61638f6b11a5d17\" ,\n\t\t\"auto_resolve_timeout\" : 57600 ,\n\t\t\"acknowledgement_timeout\" : 1800 ,\n\t\t\"created_at\" : \"2012-11-15T21:23:07-05:00\" ,\n\t\t\"status\" : \"active\" ,\n\t\t\"last_incident_timestamp\" : null ,\n\t\t\"email_incident_creation\" : null ,\n\t\t\"incident_counts\" : {\n\t\t\t\"triggered\" : 0 ,\n\t\t\t\"acknowledged\" : 0 ,\n\t\t\t\"resolved\" : 0 ,\n\t\t\t\"total\" : 0\n\t\t} ,\n\t\t\"email_filter_mode\" : \"all-email\" ,\n\t\t\"type\" : \"generic_events_api\" ,\n\t\t\"description\" : \"Brand New Description\"\n\t}\n}",
                                            "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"service\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                        }
                                    }
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "servicePutBody",
                                    "example": "{\n\t\"service\" : {\n\t\t\"name\" : \"My New Name\" ,\n\t\t\"description\" : \"Brand New Description\" ,\n\t\t\"escalation_policy_id\" : \"PIJ90N7\"\n\t}\n}",
                                    "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"service\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "description": "Update an existing service.",
                            "method": "put",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "204": {
                                    "code": "204"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "description": "Delete an existing service. Once the service is deleted, it will not be accessible\nfrom the web UI and new incidents won't be able to be created for this service.\n",
                            "method": "delete",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/disable",
                            "type": "pagerDutyResource",
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200"
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "serviceDisable",
                                            "example": "{\n\t\"requester_id\" : \"PP1565R\"\n}",
                                            "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"requester_id\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "description": "Disable a service. Once a service is disabled, it will not be\nable to create incidents until it is enabled again.\n",
                                    "method": "put",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/disable",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "disable"
                            ]
                        },
                        {
                            "relativeUri": "/enable",
                            "type": "pagerDutyResource",
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200"
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "description": "Enable a previously disabled service.",
                                    "method": "put",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/enable",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "enable"
                            ]
                        },
                        {
                            "relativeUri": "/regenerate_key",
                            "type": "pagerDutyResource",
                            "methods": [
                                {
                                    "responses": {
                                        "201": {
                                            "code": "201",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "serviceRegenerateKey",
                                                    "example": "{\n\t\"service\" : {\n\t\t\"id\" : \"PBIS5NX\" ,\n\t\t\"name\" : \"sevname10\" ,\n\t\t\"service_url\" : \"/services/PBIS5NX\" ,\n\t\t\"service_key\" : \"7b68a2c011c20130a61638f6b11a5d17\" ,\n\t\t\"auto_resolve_timeout\" : 14400 ,\n\t\t\"acknowledgement_timeout\" : 1800 ,\n\t\t\"created_at\" : \"2012-11-15T21:23:07-05:00\" ,\n\t\t\"status\" : \"active\" ,\n\t\t\"last_incident_timestamp\" : null ,\n\t\t\"email_incident_creation\" : null ,\n\t\t\"incident_counts\" : {\n\t\t\t\"triggered\" : 0 ,\n\t\t\t\"acknowledged\" : 0 ,\n\t\t\t\"resolved\" : 0 ,\n\t\t\t\"total\" : 0\n\t\t} ,\n\t\t\"email_filter_mode\" : \"all-email\" ,\n\t\t\"type\" : \"generic_events_api\" ,\n\t\t\"description\" : \"service sevname10\"\n\t}\n}",
                                                    "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"service\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "description": "Regenerate a new service key for an existing service.",
                                    "method": "post",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/regenerate_key",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "regenerate_key"
                            ]
                        },
                        {
                            "relativeUri": "/email_filters",
                            "type": "pagerDutyResource",
                            "methods": [
                                {
                                    "responses": {
                                        "201": {
                                            "code": "201",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "emailFilterPostResponse",
                                                    "example": "{\n\t\"email_filter\" : {\n\t\t\"subject_mode\" : \"always\" ,\n\t\t\"subject_regex\" : null ,\n\t\t\"body_mode\" : \"no-match\" ,\n\t\t\"body_regex\" : \"sev 3\" ,\n\t\t\"from_email_mode\" : \"always\" ,\n\t\t\"from_email_regex\" : null ,\n\t\t\"id\" : \"PM1H1PY\"\n\t}\n}",
                                                    "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"email_filter\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                                }
                                            }
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "emailFilterPostBody",
                                            "example": "{\n\t\"email_filter\" : {\n\t\t\"body_mode\" : \"no-match\" ,\n\t\t\"body_regex\" : \"sev 3\"\n\t}\n}",
                                            "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"email_filter\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "description": "Create a new Email Filter for the specified service.",
                                    "method": "post",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "resources": [
                                {
                                    "relativeUri": "/{id}",
                                    "type": "pagerDutyResource",
                                    "uriParameters": {
                                        "id": {
                                            "name": "id",
                                            "displayName": "id",
                                            "type": "string",
                                            "required": true,
                                            "repeat": false,
                                            "__METADATA__": {
                                                "calculated": true,
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "methods": [
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "emailFilterPutResponse",
                                                            "example": "{\n\t\"email_filter\" : {\n\t\t\"subject_mode\" : \"always\" ,\n\t\t\"subject_regex\" : null ,\n\t\t\"body_mode\" : \"no-match\" ,\n\t\t\"body_regex\" : \"sev 3\" ,\n\t\t\"from_email_mode\" : \"match\" ,\n\t\t\"from_email_regex\" : \"[rR]yan\" ,\n\t\t\"id\" : \"PM1H1PY\"\n\t}\n}",
                                                            "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"email_filter\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                                        }
                                                    }
                                                }
                                            },
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "emailFilterPutBody",
                                                    "example": "{\n\t\"email_filter\" : {\n\t\t\"from_email_mode\" : \"match\" ,\n\t\t\"from_email_regex\" : \"[rR]yan\"\n\t}\n}",
                                                    "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"email_filter\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                                }
                                            },
                                            "protocols": [
                                                "HTTPS"
                                            ],
                                            "description": "Update an existing Email Filter.",
                                            "method": "put",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "responses": {
                                                "204": {
                                                    "code": "204"
                                                }
                                            },
                                            "protocols": [
                                                "HTTPS"
                                            ],
                                            "description": "Delete an existing Email Filter.",
                                            "method": "delete",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/{id}",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "{id}"
                                    ]
                                }
                            ],
                            "displayName": "/email_filters",
                            "description": "Email Filters are a set of rules that are applied to triggering email's body, subject and from address.\nIt only applies to generic_email kind of Services. The way multiple filters are combined depends on the\nemail_filter_mode attribute of the service.\n",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "email_filters"
                            ]
                        }
                    ],
                    "displayName": "/{service_id}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{service_id}"
                    ]
                }
            ],
            "displayName": "/services",
            "description": "This API lets you access and manipulate the services across your account.",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "services"
            ]
        },
        {
            "relativeUri": "/users",
            "type": "pagerDutyResource",
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "usersQuery",
                                    "example": "{\n\t\"users\" : [ {\n\t\t\"id\" : \"PP1565R\" ,\n\t\t\"name\" : \"John Smith\" ,\n\t\t\"email\" : \"john@example.com\" ,\n\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\"color\" : \"grey20\" ,\n\t\t\"role\" : \"user\" ,\n\t\t\"avatar_url\" :\n\t\t\"https://secure.gravatar.com/avatar/2e32280905f296791ed387cd0f61ec6b.png?d=mm&r=PG\"\n\t\t,\n\t\t\"user_url\" : \"/users/PP1565R\" ,\n\t\t\"invitation_sent\" : true\n\t} ] ,\n\t\"active_account_users\" : 1 ,\n\t\"limit\" : 25 ,\n\t\"query\" : \"john\" ,\n\t\"offset\" : 0 ,\n\t\"total\" : 1\n}",
                                    "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"users\" : {\n\t\t\t\"type\" : \"array\" ,\n\t\t\t\"required\" : false ,\n\t\t\t\"items\" : \n\t\t\t\t{\n\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\"properties\" : {\n\t\t\t\t\t\t\"id\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"name\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"email\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"time_zone\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"color\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"role\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"avatar_url\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"user_url\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"invitation_sent\" : {\n\t\t\t\t\t\t\t\"type\" : \"boolean\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t} ,\n\t\t\"active_account_users\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"limit\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"query\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"offset\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"total\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                }
                            }
                        }
                    },
                    "body": {
                        "application/x-www-form-urlencoded": {
                            "name": "application/x-www-form-urlencoded",
                            "formParameters": {
                                "query": {
                                    "name": "query",
                                    "displayName": "query",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Filters the result, showing only the users whose names or email addresses match the query",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "include[]": {
                                    "name": "include[]",
                                    "displayName": "include[]",
                                    "type": "string",
                                    "required": false,
                                    "example": "include[]=contact_methods&include[]=notification_rules",
                                    "repeat": false,
                                    "description": "Array of additional details to include.\nThis API accepts 'contact_methods', and 'notification_rules'.\n",
                                    "enum": [
                                        "contact_methods",
                                        "notification_rules"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "description": "List existing users.",
                    "method": "get",
                    "is": [
                        "paginated"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                },
                {
                    "responses": {
                        "201": {
                            "code": "201",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "usersPostResponse",
                                    "example": "{\n\t\"user\" : {\n\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\"color\" : \"dark-slate-grey\" ,\n\t\t\"email\" : \"bart@example.com\" ,\n\t\t\"avatar_url\" :\n\t\t\"https://secure.gravatar.com/avatar/6e1b6fc29a03fc3c13756bd594e314f7.png?d=mm&r=PG\"\n\t\t,\n\t\t\"user_url\" : \"/users/PIJ90N7\" ,\n\t\t\"invitation_sent\" : true ,\n\t\t\"role\" : \"admin\" ,\n\t\t\"name\" : \"Bart Simpson\" ,\n\t\t\"id\" : \"PIJ90N7\"\n\t}\n}",
                                    "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"user\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                }
                            }
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json",
                            "schema": "usersPostBody",
                            "example": "{\r\n\t\"role\" : \"admin\" ,\r\n\t\"name\" : \"Bart Simpson\" ,\r\n\t\"email\" : \"bart@example.com\" ,\r\n\t\"requester_id\" : \"PP1565R\"\r\n}",
                            "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"role\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"name\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"email\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"requester_id\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "description": "Create a new user.",
                    "method": "post",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/{user_id}",
                    "type": "pagerDutyResource",
                    "uriParameters": {
                        "user_id": {
                            "name": "user_id",
                            "displayName": "user_id",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "userGet",
                                            "example": "{\n\t\"user\" : {\n\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\"color\" : \"dark-slate-grey\" ,\n\t\t\"email\" : \"bart@example.com\" ,\n\t\t\"avatar_url\" :\n\t\t\"https://secure.gravatar.com/avatar/6e1b6fc29a03fc3c13756bd594e314f7.png?d=mm&r=PG\"\n\t\t,\n\t\t\"user_url\" : \"/users/PIJ90N7\" ,\n\t\t\"invitation_sent\" : true ,\n\t\t\"role\" : \"admin\" ,\n\t\t\"name\" : \"Bart Simpson\" ,\n\t\t\"id\" : \"PIJ90N7\"\n\t}\n}",
                                            "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"user\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                        }
                                    }
                                }
                            },
                            "body": {
                                "application/x-www-form-urlencoded": {
                                    "name": "application/x-www-form-urlencoded",
                                    "formParameters": {
                                        "include[]": {
                                            "name": "include[]",
                                            "displayName": "include[]",
                                            "type": "string",
                                            "required": false,
                                            "example": "include[]=contact_methods&include[]=notification_rules",
                                            "repeat": false,
                                            "description": "Array of additional details to include.\nThis API accepts 'contact_methods', and 'notification_rules'.\n",
                                            "enum": [
                                                "contact_methods",
                                                "notification_rules"
                                            ],
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "description": "Get information about an existing user.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "userPutResponse",
                                            "example": "{\n\t\"user\" : {\n\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\"color\" : \"dark-slate-grey\" ,\n\t\t\"email\" : \"bart@example.com\" ,\n\t\t\"avatar_url\" :\n\t\t\"https://secure.gravatar.com/avatar/6e1b6fc29a03fc3c13756bd594e314f7.png?d=mm&r=PG\"\n\t\t,\n\t\t\"user_url\" : \"/users/PIJ90N7\" ,\n\t\t\"invitation_sent\" : true ,\n\t\t\"role\" : \"admin\" ,\n\t\t\"name\" : \"Bart Simpson\" ,\n\t\t\"id\" : \"PIJ90N7\"\n\t}\n}",
                                            "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"user\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                        }
                                    }
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "userPutBody",
                                    "example": "{\n\t\"user\" : {\n\t\t\"role\" : \"admin\" ,\n\t\t\"name\" : \"Bart Simpson\" ,\n\t\t\"email\" : \"bart@example.com\"\n\t}\n}",
                                    "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"user\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "description": "Update an existing user.",
                            "method": "put",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "204": {
                                    "code": "204"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "description": "Remove an existing user.",
                            "method": "delete",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/contact_methods",
                            "type": "pagerDutyResource",
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "concatMethodsGet",
                                                    "example": "{\n\t\"total\" : 3 ,\n\t\"contact_methods\" : [ {\n\t\t\"id\" : \"PWQ8MIH\" ,\n\t\t\"label\" : \"Work\" ,\n\t\t\"address\" : \"bob@acme.com\" ,\n\t\t\"user_id\" : \"PPSFHH7\" ,\n\t\t\"type\" : \"email\" ,\n\t\t\"email\" : \"bob@acme.com\" ,\n\t\t\"send_short_email\" : false\n\t} , {\n\t\t\"id\" : \"P6W4C77\" ,\n\t\t\"label\" : \"Work\" ,\n\t\t\"address\" : \"5551234567\" ,\n\t\t\"user_id\" : \"PPSFHH7\" ,\n\t\t\"type\" : \"phone\" ,\n\t\t\"country_code\" : 1 ,\n\t\t\"phone_number\" : \"5551234567\" ,\n\t\t\"blacklisted\" : false\n\t} , {\n\t\t\"id\" : \"PK9SG1A\" ,\n\t\t\"label\" : \"Mobile\" ,\n\t\t\"address\" : \"5551234567\" ,\n\t\t\"user_id\" : \"PPSFHH7\" ,\n\t\t\"type\" : \"SMS\" ,\n\t\t\"country_code\" : 1 ,\n\t\t\"phone_number\" : \"5551234567\" ,\n\t\t\"blacklisted\" : false\n\t} ]\n}",
                                                    "schemaContent": "{\n  \"type\": \"object\",\n  \"required\": true,\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"total\": {\n      \"type\": \"number\",\n      \"required\": false\n    },\n    \"contact_methods\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"items\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"label\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"address\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"user_id\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"type\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"email\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"send_short_email\": {\n              \"type\": \"boolean\",\n              \"required\": false\n            }\n          }\n        }\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "description": "List existing contact methods for the specified user.",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "201": {
                                            "code": "201",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "concatMethodsPostResponse",
                                                    "example": "{\n\t\"contact_method\" : {\n\t\t\"id\" : \"PSDKM6U\" ,\n\t\t\"label\" : \"Island Lair\" ,\n\t\t\"address\" : \"5551112222\" ,\n\t\t\"user_id\" : \"PPSFHH7\" ,\n\t\t\"type\" : \"phone\" ,\n\t\t\"country_code\" : 1 ,\n\t\t\"phone_number\" : \"5551112222\" ,\n\t\t\"blacklisted\" : false\n\t}\n}",
                                                    "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"contact_method\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                                }
                                            }
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "concatMethodsPostBody",
                                            "example": "{\n\t\"contact_method\" : {\n\t\t\"type\" : \"phone\" ,\n\t\t\"address\" : \"5551112222\" ,\n\t\t\"label\" : \"Island Lair\" ,\n\t\t\"country_code\" : \"1\"\n\t}\n}",
                                            "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"contact_method\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "description": "Create a new contact method for the specified user.",
                                    "method": "post",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "resources": [
                                {
                                    "relativeUri": "/{id}",
                                    "type": "pagerDutyResource",
                                    "uriParameters": {
                                        "id": {
                                            "name": "id",
                                            "displayName": "id",
                                            "type": "string",
                                            "required": true,
                                            "repeat": false,
                                            "__METADATA__": {
                                                "calculated": true,
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "methods": [
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "concatMethodGet",
                                                            "example": "{\n\t\"contact_method\" : {\n\t\t\"id\" : \"P6W4C77\" ,\n\t\t\"label\" : \"Work\" ,\n\t\t\"address\" : \"5551234567\" ,\n\t\t\"user_id\" : \"PPSFHH7\" ,\n\t\t\"type\" : \"phone\" ,\n\t\t\"country_code\" : 1 ,\n\t\t\"phone_number\" : \"5551234567\" ,\n\t\t\"blacklisted\" : false\n\t}\n}",
                                                            "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"contact_method\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                                        }
                                                    }
                                                }
                                            },
                                            "protocols": [
                                                "HTTPS"
                                            ],
                                            "description": "Get details for a contact method.",
                                            "method": "get",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "concatMethodPutResponse",
                                                            "example": "{\n\t\"contact_method\" : {\n\t\t\"id\" : \"P6W4C77\" ,\n\t\t\"label\" : \"Island Lair\" ,\n\t\t\"address\" : \"5558888888\" ,\n\t\t\"user_id\" : \"PPSFHH7\" ,\n\t\t\"type\" : \"phone\" ,\n\t\t\"country_code\" : 1 ,\n\t\t\"phone_number\" : \"5558888888\" ,\n\t\t\"blacklisted\" : false\n\t}\n}",
                                                            "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"contact_method\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                                        }
                                                    }
                                                }
                                            },
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "concatMethodPutBody",
                                                    "example": "{\n\t\"contact_method\" : {\n\t\t\"type\" : \"phone\" ,\n\t\t\"address\" : \"5558888888\" ,\n\t\t\"label\" : \"Island Lair\" ,\n\t\t\"country_code\" : \"1\"\n\t}\n}",
                                                    "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"contact_method\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                                }
                                            },
                                            "protocols": [
                                                "HTTPS"
                                            ],
                                            "description": "Update an existing contact method.",
                                            "method": "put",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "responses": {
                                                "204": {
                                                    "code": "204"
                                                }
                                            },
                                            "protocols": [
                                                "HTTPS"
                                            ],
                                            "description": "Remove a contact method and any corresponding notification rules.",
                                            "method": "delete",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/{id}",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "{id}"
                                    ]
                                }
                            ],
                            "displayName": "/contact_methods",
                            "description": "Access and manipulate the contact methods for a user.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "contact_methods"
                            ]
                        },
                        {
                            "relativeUri": "/notification_rules",
                            "type": "pagerDutyResource",
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "notificationRulesGet",
                                                    "example": "{\n\t\"notification_rules\" : [ {\n\t\t\"id\" : \"PHU1XBC\" ,\n\t\t\"start_delay_in_minutes\" : 0 ,\n\t\t\"contact_method\" : {\n\t\t\t\"id\" : \"PNGKILZ\" ,\n\t\t\t\"label\" : \"Work\" ,\n\t\t\t\"type\" : \"email\" ,\n\t\t\t\"email\" : \"bob@acme.com\" ,\n\t\t\t\"address\" : \"bob@acme.com\" ,\n\t\t\t\"send_short_email\" : false ,\n\t\t\t\"user_id\" : \"PPSFHH7\"\n\t\t}\n\t} , {\n\t\t\"id\" : \"PPRB3LC\" ,\n\t\t\"start_delay_in_minutes\" : 1 ,\n\t\t\"contact_method\" : {\n\t\t\t\"id\" : \"P1Q6FET\" ,\n\t\t\t\"label\" : \"Work\" ,\n\t\t\t\"type\" : \"phone\" ,\n\t\t\t\"country_code\" : 1 ,\n\t\t\t\"phone_number\" : \"5551234567\" ,\n\t\t\t\"address\" : \"5551234567\" ,\n\t\t\t\"user_id\" : \"PPSFHH7\"\n\t\t}\n\t} , {\n\t\t\"id\" : \"P8FQ39P\" ,\n\t\t\"start_delay_in_minutes\" : 2 ,\n\t\t\"contact_method\" : {\n\t\t\t\"id\" : \"PK9SG1A\" ,\n\t\t\t\"label\" : \"Mobile\" ,\n\t\t\t\"type\" : \"SMS\" ,\n\t\t\t\"country_code\" : 1 ,\n\t\t\t\"address\" : \"5551234567\" ,\n\t\t\t\"phone_number\" : \"5551234567\" ,\n\t\t\t\"user_id\" : \"PPSFHH7\"\n\t\t}\n\t} ] ,\n\t\"total\" : 3\n}",
                                                    "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"notification_rules\" : {\n\t\t\t\"type\" : \"array\" ,\n\t\t\t\"required\" : false ,\n\t\t\t\"items\" : \n\t\t\t\t{\n\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\"properties\" : {\n\t\t\t\t\t\t\"id\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"start_delay_in_minutes\" : {\n\t\t\t\t\t\t\t\"type\" : \"number\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"contact_method\" : {\n\t\t\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t} ,\n\t\t\"total\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "description": "List existing notification rules for the specified user.",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "201": {
                                            "code": "201",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "notificationRulesPostResponse",
                                                    "example": "{\n\t\"notification_rule\" : {\n\t\t\"id\" : \"PDHDWMP\" ,\n\t\t\"start_delay_in_minutes\" : 4 ,\n\t\t\"contact_method\" : {\n\t\t\t\"id\" : \"PNGKILZ\" ,\n\t\t\t\"label\" : \"Work\" ,\n\t\t\t\"type\" : \"email\" ,\n\t\t\t\"email\" : \"bob@acme.com\" ,\n\t\t\t\"address\" : \"bob@acme.com\" ,\n\t\t\t\"send_short_email\" : false ,\n\t\t\t\"user_id\" : \"PPSFHH7\"\n\t\t}\n\t}\n}",
                                                    "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"notification_rule\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                                }
                                            }
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "notificationRulesPostBody",
                                            "example": "{\n\t\"notification_rule\" : {\n\t\t\"contact_method_id\" : \"PNGKILZ\" ,\n\t\t\"start_delay_in_minutes\" : 4\n\t}\n}",
                                            "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"notification_rule\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "description": "Create a new notification rule for the specified user.",
                                    "method": "post",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "resources": [
                                {
                                    "relativeUri": "/{id}",
                                    "type": "pagerDutyResource",
                                    "uriParameters": {
                                        "id": {
                                            "name": "id",
                                            "displayName": "id",
                                            "type": "string",
                                            "required": true,
                                            "repeat": false,
                                            "__METADATA__": {
                                                "calculated": true,
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "methods": [
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "notificationRuleGet",
                                                            "example": "{\n\t\"notification_rule\" : {\n\t\t\"id\" : \"PHU1XBC\" ,\n\t\t\"start_delay_in_minutes\" : 0 ,\n\t\t\"contact_method\" : {\n\t\t\t\"id\" : \"PNGKILZ\" ,\n\t\t\t\"label\" : \"Work\" ,\n\t\t\t\"type\" : \"email\" ,\n\t\t\t\"email\" : \"bob@acme.com\" ,\n\t\t\t\"address\" : \"bob@acme.com\" ,\n\t\t\t\"send_short_email\" : false ,\n\t\t\t\"user_id\" : \"PPSFHH7\"\n\t\t}\n\t}\n}",
                                                            "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"notification_rule\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                                        }
                                                    }
                                                }
                                            },
                                            "protocols": [
                                                "HTTPS"
                                            ],
                                            "description": "Get details for a notification rule.",
                                            "method": "get",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "notificationRulePutResponse",
                                                            "example": "{\n\t\"notification_rule\" : {\n\t\t\"id\" : \"PHU1XBC\" ,\n\t\t\"start_delay_in_minutes\" : 5 ,\n\t\t\"contact_method\" : {\n\t\t\t\"id\" : \"PNGKILZ\" ,\n\t\t\t\"label\" : \"Work\" ,\n\t\t\t\"type\" : \"email\" ,\n\t\t\t\"email\" : \"bob@acme.com\" ,\n\t\t\t\"address\" : \"bob@acme.com\" ,\n\t\t\t\"send_short_email\" : false ,\n\t\t\t\"user_id\" : \"PPSFHH7\"\n\t\t}\n\t}\n}",
                                                            "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"notification_rule\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                                        }
                                                    }
                                                }
                                            },
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "notificationRulePutBody",
                                                    "example": "{\n\t\"notification_rule\" : {\n\t\t\"contact_method_id\" : \"PNGKILZ\" ,\n\t\t\"start_delay_in_minutes\" : 5\n\t}\n}",
                                                    "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"notification_rule\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                                }
                                            },
                                            "protocols": [
                                                "HTTPS"
                                            ],
                                            "description": "Update an existing notification rule.",
                                            "method": "put",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "responses": {
                                                "204": {
                                                    "code": "204"
                                                }
                                            },
                                            "protocols": [
                                                "HTTPS"
                                            ],
                                            "description": "Remove a notification rule.",
                                            "method": "delete",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/{id}",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "{id}"
                                    ]
                                }
                            ],
                            "displayName": "/notification_rules",
                            "description": "Access and manipulate the notification rules for a user.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "notification_rules"
                            ]
                        },
                        {
                            "relativeUri": "/log_entries",
                            "type": "pagerDutyResource",
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "logEntriesForUser",
                                                    "example": "{\n\t\"log_entries\" : [ {\n\t\t\"id\" : \"PZN9UEN\" ,\n\t\t\"type\" : \"escalate\" ,\n\t\t\"created_at\" : \"2013-03-06T21:08:43Z\" ,\n\t\t\"agent\" : {\n\t\t\t\"type\" : \"service\"\n\t\t} ,\n\t\t\"channel\" : {\n\t\t\t\"type\" : \"timeout\"\n\t\t} ,\n\t\t\"assigned_user\" : {\n\t\t\t\"id\" : \"PPSFHH7\" ,\n\t\t\t\"name\" : \"Bob Smith\" ,\n\t\t\t\"email\" : \"bob@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"red\" ,\n\t\t\t\"role\" : \"user\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/78e9fa7d6d2ddba416ad7534eb1403d0.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PPSFHH7\" ,\n\t\t\t\"invitation_sent\" : true ,\n\t\t\t\"marketing_opt_out\" : false\n\t\t} ,\n\t\t\"note\" : null\n\t} , {\n\t\t\"id\" : \"PHCXXHR\" ,\n\t\t\"type\" : \"escalate\" ,\n\t\t\"created_at\" : \"2013-03-06T21:00:30Z\" ,\n\t\t\"agent\" : {\n\t\t\t\"type\" : \"service\"\n\t\t} ,\n\t\t\"channel\" : {\n\t\t\t\"type\" : \"timeout\"\n\t\t} ,\n\t\t\"assigned_user\" : {\n\t\t\t\"id\" : \"PPSFHH7\" ,\n\t\t\t\"name\" : \"Bob Smith\" ,\n\t\t\t\"email\" : \"bob@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"red\" ,\n\t\t\t\"role\" : \"user\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/78e9fa7d6d2ddba416ad7534eb1403d0.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PPSFHH7\" ,\n\t\t\t\"invitation_sent\" : true ,\n\t\t\t\"marketing_opt_out\" : false\n\t\t} ,\n\t\t\"note\" : null\n\t} , {\n\t\t\"id\" : \"PABDPAI\" ,\n\t\t\"type\" : \"resolve\" ,\n\t\t\"created_at\" : \"2013-01-31T03:21:15Z\" ,\n\t\t\"note\" : \"Doused it with a water hose.\" ,\n\t\t\"agent\" : {\n\t\t\t\"id\" : \"PPSFHH7\" ,\n\t\t\t\"name\" : \"Bob Smith\" ,\n\t\t\t\"email\" : \"bob@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"red\" ,\n\t\t\t\"role\" : \"user\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/78e9fa7d6d2ddba416ad7534eb1403d0.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PPSFHH7\" ,\n\t\t\t\"invitation_sent\" : true ,\n\t\t\t\"marketing_opt_out\" : false ,\n\t\t\t\"type\" : \"user\"\n\t\t} ,\n\t\t\"channel\" : {\n\t\t\t\"type\" : \"website\"\n\t\t}\n\t} , {\n\t\t\"id\" : \"PKLZ54O\" ,\n\t\t\"type\" : \"acknowledge\" ,\n\t\t\"created_at\" : \"2013-01-31T03:18:13Z\" ,\n\t\t\"agent\" : {\n\t\t\t\"id\" : \"PPSFHH7\" ,\n\t\t\t\"name\" : \"Bob Smith\" ,\n\t\t\t\"email\" : \"bob@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"red\" ,\n\t\t\t\"role\" : \"user\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/78e9fa7d6d2ddba416ad7534eb1403d0.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PPSFHH7\" ,\n\t\t\t\"invitation_sent\" : true ,\n\t\t\t\"marketing_opt_out\" : false ,\n\t\t\t\"type\" : \"user\"\n\t\t} ,\n\t\t\"channel\" : {\n\t\t\t\"type\" : \"website\"\n\t\t}\n\t} , {\n\t\t\"id\" : \"PHZRXSA\" ,\n\t\t\"type\" : \"escalate\" ,\n\t\t\"created_at\" : \"2013-01-31T03:16:32Z\" ,\n\t\t\"agent\" : {\n\t\t\t\"type\" : \"service\"\n\t\t} ,\n\t\t\"channel\" : {\n\t\t\t\"type\" : \"timeout\"\n\t\t} ,\n\t\t\"assigned_user\" : {\n\t\t\t\"id\" : \"PPSFHH7\" ,\n\t\t\t\"name\" : \"Bob Smith\" ,\n\t\t\t\"email\" : \"bob@acme.com\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"red\" ,\n\t\t\t\"role\" : \"user\" ,\n\t\t\t\"avatar_url\" :\n\t\t\t\"https://secure.gravatar.com/avatar/78e9fa7d6d2ddba416ad7534eb1403d0.png?d=mm&r=PG\"\n\t\t\t,\n\t\t\t\"user_url\" : \"/users/PPSFHH7\" ,\n\t\t\t\"invitation_sent\" : true ,\n\t\t\t\"marketing_opt_out\" : false\n\t\t} ,\n\t\t\"note\" : null\n\t} ] ,\n\t\"limit\" : 100 ,\n\t\"offset\" : 0 ,\n\t\"total\" : 5\n}",
                                                    "schemaContent": "{\n  \"type\": \"object\",\n  \"required\": true,\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"log_entries\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"items\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"type\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"created_at\": {\n              \"type\": \"string\",\n              \"required\": false\n            },\n            \"agent\": {\n              \"type\": \"object\",\n              \"required\": false\n            },\n            \"channel\": {\n              \"type\": \"object\",\n              \"required\": false\n            },\n            \"assigned_user\": {\n              \"type\": \"object\",\n              \"required\": false\n            },\n            \"note\": {\n              \"type\": \"object\",\n              \"required\": false\n            }\n          }\n        }\n      }\n    },\n    \"limit\": {\n      \"type\": \"number\",\n      \"required\": false\n    },\n    \"offset\": {\n      \"type\": \"number\",\n      \"required\": false\n    },\n    \"total\": {\n      \"type\": \"number\",\n      \"required\": false\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "description": "List all incident log entries that describe interactions with a specific user.",
                                    "method": "get",
                                    "is": [
                                        "paginated",
                                        "allowsRange",
                                        "logging"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/log_entries",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "log_entries"
                            ]
                        }
                    ],
                    "displayName": "/{user_id}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{user_id}"
                    ]
                }
            ],
            "displayName": "/users",
            "description": "Access and manipulate user data for your PagerDuty account.\nWhen a user is shown inlined in other resources, a deleted user will its html_url attribute set to null.\n",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "users"
            ]
        },
        {
            "relativeUri": "/escalation_policies",
            "type": "pagerDutyResource",
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "escalationPoliciesQuery",
                                    "example": "{\n\t\"escalation_policies\" : [ {\n\t\t\"id\" : \"PAM4FGS\" ,\n\t\t\"name\" : \"All\" ,\n\t\t\"escalation_rules\" : [ {\n\t\t\t\"id\" : \"PZ8X4N7\" ,\n\t\t\t\"escalation_delay_in_minutes\" : 30 ,\n\t\t\t\"rule_object\" : {\n\t\t\t\t\"id\" : \"PEPV0NJ\" ,\n\t\t\t\t\"name\" : \"Cordell Simonis\" ,\n\t\t\t\t\"type\" : \"user\" ,\n\t\t\t\t\"email\" : \"simonis_cordell@acme.com\" ,\n\t\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\t\"color\" : \"dark-slate-blue\"\n\t\t\t}\n\t\t} , {\n\t\t\t\"id\" : \"POQA264\" ,\n\t\t\t\"escalation_delay_in_minutes\" : 34 ,\n\t\t\t\"rule_object\" : {\n\t\t\t\t\"id\" : \"PF9KMXH\" ,\n\t\t\t\t\"name\" : \"Layered\" ,\n\t\t\t\t\"type\" : \"schedule\"\n\t\t\t}\n\t\t} ] ,\n\t\t\"services\" : [ {\n\t\t\t\"id\" : \"PBAZLIU\" ,\n\t\t\t\"name\" : \"Service Alpha\" ,\n\t\t\t\"integration_email\" : \"alpha@acme.pagerduty.dev\" ,\n\t\t\t\"html_url\" : \"http://acme.pageduty.com/services/PBAZLIU\" ,\n\t\t\t\"escalation_policy_id\" : \"PAM4FGS\"\n\t\t} , {\n\t\t\t\"id\" : \"PIJ90N7\" ,\n\t\t\t\"name\" : \"Service Mail\" ,\n\t\t\t\"integration_email\" : \"email_1@acme.pagerduty.dev\" ,\n\t\t\t\"html_url\" : \"http://acme.pageduty.com/services/PIJ90N7\" ,\n\t\t\t\"escalation_policy_id\" : \"PAM4FGS\"\n\t\t} ] ,\n\t\t\"num_loops\" : 0\n\t} , {\n\t\t\"id\" : \"P29NBY9\" ,\n\t\t\"name\" : \"Beta\" ,\n\t\t\"escalation_rules\" : [ {\n\t\t\t\"id\" : \"PP3NI0M\" ,\n\t\t\t\"escalation_delay_in_minutes\" : 30 ,\n\t\t\t\"rule_object\" : {\n\t\t\t\t\"id\" : \"PF9KMXH\" ,\n\t\t\t\t\"name\" : \"Layered\" ,\n\t\t\t\t\"type\" : \"schedule\"\n\t\t\t}\n\t\t} ] ,\n\t\t\"services\" : [ {\n\t\t\t\"id\" : \"P2KFHAO\" ,\n\t\t\t\"name\" : \"BetaDense\" ,\n\t\t\t\"service_key\" : \"665ee8b4ab8446d1b7a8675b40047a2f\" ,\n\t\t\t\"html_url\" : \"http://acme.pageduty.com/services/P2KFHAO\" ,\n\t\t\t\"escalation_policy_id\" : \"P29NBY9\"\n\t\t} , {\n\t\t\t\"id\" : \"PUS0KTE\" ,\n\t\t\t\"name\" : \"Note of Keys\" ,\n\t\t\t\"integration_email\" : \"note-of-keys@acme.pagerduty.com\" ,\n\t\t\t\"html_url\" : \"http://acme.pageduty.com/services/PUS0KTE\" ,\n\t\t\t\"escalation_policy_id\" : \"P29NBY9\"\n\t\t} ] ,\n\t\t\"num_loops\" : 1\n\t} , {\n\t\t\"id\" : \"PF106PL\" ,\n\t\t\"name\" : \"Escalation Policy\" ,\n\t\t\"escalation_rules\" : [ {\n\t\t\t\"id\" : \"PQZKDEQ\" ,\n\t\t\t\"escalation_delay_in_minutes\" : 22 ,\n\t\t\t\"rule_object\" : {\n\t\t\t\t\"id\" : \"PAD6MYW\" ,\n\t\t\t\t\"name\" : \"Aliya Bradtke\" ,\n\t\t\t\t\"type\" : \"user\" ,\n\t\t\t\t\"email\" : \"bradtke.aliya@acme.com\" ,\n\t\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\t\"color\" : \"cayenne\"\n\t\t\t}\n\t\t} ] ,\n\t\t\"services\" : [ ] ,\n\t\t\"num_loops\" : 2\n\t} ] ,\n\t\"limit\" : 25 ,\n\t\"offset\" : 0 ,\n\t\"total\" : 14\n}",
                                    "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"escalation_policies\" : {\n\t\t\t\"type\" : \"array\" ,\n\t\t\t\"required\" : false ,\n\t\t\t\"items\" : \n\t\t\t\t{\n\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\"properties\" : {\n\t\t\t\t\t\t\"id\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"name\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"escalation_rules\" : {\n\t\t\t\t\t\t\t\"type\" : \"array\" ,\n\t\t\t\t\t\t\t\"required\" : false ,\n\t\t\t\t\t\t\t\"items\" : \n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\t\t\t\t\"properties\" : {\n\t\t\t\t\t\t\t\t\t\t\"id\" : {\n\t\t\t\t\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\t\t\t\t\"escalation_delay_in_minutes\" : {\n\t\t\t\t\t\t\t\t\t\t\t\"type\" : \"number\" ,\n\t\t\t\t\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\t\t\t\t\"rule_object\" : {\n\t\t\t\t\t\t\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"services\" : {\n\t\t\t\t\t\t\t\"type\" : \"array\" ,\n\t\t\t\t\t\t\t\"required\" : false ,\n\t\t\t\t\t\t\t\"items\" : \n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\t\t\t\t\"properties\" : {\n\t\t\t\t\t\t\t\t\t\t\"id\" : {\n\t\t\t\t\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\t\t\t\t\"name\" : {\n\t\t\t\t\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\t\t\t\t\"integration_email\" : {\n\t\t\t\t\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\t\t\t\t\"html_url\" : {\n\t\t\t\t\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\t\t\t\t\"escalation_policy_id\" : {\n\t\t\t\t\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"num_loops\" : {\n\t\t\t\t\t\t\t\"type\" : \"number\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t} ,\n\t\t\"limit\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"offset\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"total\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                }
                            }
                        }
                    },
                    "body": {
                        "application/x-www-form-urlencoded": {
                            "name": "application/x-www-form-urlencoded",
                            "formParameters": {
                                "query": {
                                    "name": "query",
                                    "displayName": "query",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Filters the result, showing only the escalation policies whose names match the query.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "description": "List existing escalation policies.",
                    "method": "get",
                    "is": [
                        "paginated"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                },
                {
                    "responses": {
                        "201": {
                            "code": "201",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "escalationPolicyCreated",
                                    "example": "{\n\t\"escalation_policy\" : {\n\t\t\"id\" : \"PF106PL\" ,\n\t\t\"name\" : \"Escalation Policy\" ,\n\t\t\"escalation_rules\" : [ {\n\t\t\t\"id\" : \"PQZKDEQ\" ,\n\t\t\t\"escalation_delay_in_minutes\" : 22 ,\n\t\t\t\"rule_object\" : {\n\t\t\t\t\"id\" : \"PAD6MYW\" ,\n\t\t\t\t\"name\" : \"Aliya Bradtke\" ,\n\t\t\t\t\"type\" : \"user\" ,\n\t\t\t\t\"email\" : \"bradtke.aliya@acme.com\" ,\n\t\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\t\"color\" : \"cayenne\"\n\t\t\t}\n\t\t} ] ,\n\t\t\"services\" : [ ] ,\n\t\t\"num_loops\" : 2\n\t}\n}",
                                    "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"escalation_policy\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                }
                            }
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json",
                            "schema": "escalationPolicyPost",
                            "example": "{\n\t\"name\" : \"Escalation Policy\" ,\n\t\"escalation_rules\" : [ {\n\t\t\"escalation_delay_in_minutes\" : 22 ,\n\t\t\"rule_object\" : {\n\t\t\t\"type\" : \"user\" ,\n\t\t\t\"id\" : \"PAD6MYW\"\n\t\t}\n\t} ] ,\n\t\"num_loops\" : 2\n}",
                            "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"name\" : {\n\t\t\t\"type\" : \"string\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"escalation_rules\" : {\n\t\t\t\"type\" : \"array\" ,\n\t\t\t\"required\" : false ,\n\t\t\t\"items\" : \n\t\t\t\t{\n\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\"properties\" : {\n\t\t\t\t\t\t\"escalation_delay_in_minutes\" : {\n\t\t\t\t\t\t\t\"type\" : \"number\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"rule_object\" : {\n\t\t\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t} ,\n\t\t\"num_loops\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "description": "Create a new escalation policy.",
                    "method": "post",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/{escalation_policy_id}",
                    "type": "pagerDutyResource",
                    "uriParameters": {
                        "escalation_policy_id": {
                            "name": "escalation_policy_id",
                            "displayName": "escalation_policy_id",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "escalationPolicyGet",
                                            "example": "{\n\t\"escalation_policy\" : {\n\t\t\"id\" : \"PF106PL\" ,\n\t\t\"name\" : \"Escalation Policy\" ,\n\t\t\"escalation_rules\" : [ {\n\t\t\t\"id\" : \"PQZKDEQ\" ,\n\t\t\t\"escalation_delay_in_minutes\" : 22 ,\n\t\t\t\"rule_object\" : {\n\t\t\t\t\"id\" : \"PAD6MYW\" ,\n\t\t\t\t\"name\" : \"Aliya Bradtke\" ,\n\t\t\t\t\"type\" : \"user\" ,\n\t\t\t\t\"email\" : \"bradtke.aliya@leannon.uk\" ,\n\t\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\t\"color\" : \"cayenne\"\n\t\t\t}\n\t\t} ] ,\n\t\t\"services\" : [ ] ,\n\t\t\"num_loops\" : 2\n\t}\n}",
                                            "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"escalation_policy\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "description": "Get details about an escalation policy.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "escalationPolicyGet",
                                            "example": "{\n\t\"escalation_policy\" : {\n\t\t\"id\" : \"PF106PL\" ,\n\t\t\"name\" : \"Escalation Policy\" ,\n\t\t\"escalation_rules\" : [ {\n\t\t\t\"id\" : \"PQZKDEQ\" ,\n\t\t\t\"escalation_delay_in_minutes\" : 22 ,\n\t\t\t\"rule_object\" : {\n\t\t\t\t\"id\" : \"PAD6MYW\" ,\n\t\t\t\t\"name\" : \"Aliya Bradtke\" ,\n\t\t\t\t\"type\" : \"user\" ,\n\t\t\t\t\"email\" : \"bradtke.aliya@leannon.uk\" ,\n\t\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\t\"color\" : \"cayenne\"\n\t\t\t}\n\t\t} ] ,\n\t\t\"services\" : [ ] ,\n\t\t\"num_loops\" : 2\n\t}\n}",
                                            "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"escalation_policy\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                        }
                                    }
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "escalationPolicyPut",
                                    "example": "{\n\t\"escalation_policy\" : {\n\t\t\"id\" : \"PF106PL\" ,\n\t\t\"name\" : \"Escalation Policy 2\" ,\n\t\t\"escalation_rules\" : [ {\n\t\t\t\"id\" : \"PQZKDEQ\" ,\n\t\t\t\"escalation_delay_in_minutes\" : 22 ,\n\t\t\t\"rule_object\" : {\n\t\t\t\t\"id\" : \"PAD6MYW\" ,\n\t\t\t\t\"name\" : \"Aliya Bradtke\" ,\n\t\t\t\t\"type\" : \"user\" ,\n\t\t\t\t\"email\" : \"bradtke.aliya@leannon.uk\" ,\n\t\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\t\"color\" : \"cayenne\"\n\t\t\t}\n\t\t} ] ,\n\t\t\"services\" : [ ] ,\n\t\t\"num_loops\" : 2\n\t}\n}",
                                    "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"escalation_policy\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "description": "Update an escalation policy.",
                            "method": "put",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "204": {
                                    "code": "204"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "description": "Delete an escalation policy.",
                            "method": "delete",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/escalation_rules",
                            "type": "pagerDutyResource",
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "escalationRulesQuery",
                                                    "example": "{\n\t\"escalation_rules\" : [ {\n\t\t\"id\" : \"PQZKDEQ\" ,\n\t\t\"escalation_delay_in_minutes\" : 22 ,\n\t\t\"rule_object\" : {\n\t\t\t\"id\" : \"PAD6MYW\" ,\n\t\t\t\"name\" : \"Aliya Bradtke\" ,\n\t\t\t\"type\" : \"user\" ,\n\t\t\t\"email\" : \"bradtke.aliya@leannon.uk\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"cayenne\"\n\t\t}\n\t} , {\n\t\t\"id\" : \"PN0ZD20\" ,\n\t\t\"escalation_delay_in_minutes\" : 2 ,\n\t\t\"rule_object\" : {\n\t\t\t\"id\" : \"PAD6MYW\" ,\n\t\t\t\"name\" : \"Aliya Bradtke\" ,\n\t\t\t\"type\" : \"user\" ,\n\t\t\t\"email\" : \"bradtke.aliya@leannon.uk\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"cayenne\"\n\t\t}\n\t} ]\n}",
                                                    "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"escalation_rules\" : {\n\t\t\t\"type\" : \"array\" ,\n\t\t\t\"required\" : false ,\n\t\t\t\"items\" : \n\t\t\t\t{\n\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\"properties\" : {\n\t\t\t\t\t\t\"id\" : {\n\t\t\t\t\t\t\t\"type\" : \"string\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"escalation_delay_in_minutes\" : {\n\t\t\t\t\t\t\t\"type\" : \"number\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t} ,\n\t\t\t\t\t\t\"rule_object\" : {\n\t\t\t\t\t\t\t\"type\" : \"object\" ,\n\t\t\t\t\t\t\t\"required\" : false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t}\n\t}\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "description": "List escalation rules for an escalation policy.",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "201": {
                                            "code": "201",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "escalationRulesPostResponse",
                                                    "example": "{\n\t\"escalation_rule\" : {\n\t\t\"id\" : \"PN0ZD20\" ,\n\t\t\"escalation_delay_in_minutes\" : 2 ,\n\t\t\"rule_object\" : {\n\t\t\t\"id\" : \"PAD6MYW\" ,\n\t\t\t\"name\" : \"Aliya Bradtke\" ,\n\t\t\t\"type\" : \"user\"\n\t\t}\n\t}\n}",
                                                    "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"escalation_rule\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                                }
                                            }
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "escalationRulesPostBody",
                                            "example": "{\n\t\"escalation_rule\" : {\n\t\t\"escalation_delay_in_minutes\" : 2 ,\n\t\t\"rule_object\" : {\n\t\t\t\"type\" : \"user\" ,\n\t\t\t\"id\" : \"PAD6MYW\"\n\t\t}\n\t}\n}",
                                            "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"escalation_rule\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "description": "Creates a new escalation rule for an escalation policy and appends it to the end of the existing escalation rules.",
                                    "method": "post",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "escalationRulesPutResponse",
                                                    "example": "{\n\t\"error\" : {\n\t\t\"message\" : \"Arguments Caused Error\" ,\n\t\t\"code\" : 2002 ,\n\t\t\"errors\" : [ \"Validation failed: Rule object can't be blank\" ]\n\t}\n}",
                                                    "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"error\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                                }
                                            }
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "escalationRulesPutBody",
                                            "example": "{\n\t\"escalation_rules\" : [ {\n\t\t\"escalation_delay_in_minutes\" : 12 ,\n\t\t\"rule_object\" : {\n\t\t\t\"type\" : \"schedule\" ,\n\t\t\t\"id\" : \"PY1OL64\"\n\t\t}\n\t} , {\n\t\t\"id\" : \"PN0ZD20\" ,\n\t\t\"escalation_delay_in_minutes\" : 24\n\t} ]\n}",
                                            "schemaContent": "{\n  \"type\": \"object\",\n  \"required\": true,\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"escalation_rules\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"items\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"escalation_delay_in_minutes\": {\n              \"type\": \"number\",\n              \"required\": false\n            },\n            \"rule_object\": {\n              \"type\": \"object\",\n              \"required\": false\n            }\n          }\n        }\n      }\n    }\n  }\n}"
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "description": "Updates the entire collection of escalation rules.",
                                    "method": "put",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "resources": [
                                {
                                    "relativeUri": "/{escalation_rule_id}",
                                    "type": "pagerDutyResource",
                                    "uriParameters": {
                                        "escalation_rule_id": {
                                            "name": "escalation_rule_id",
                                            "displayName": "escalation_rule_id",
                                            "type": "string",
                                            "required": true,
                                            "repeat": false,
                                            "__METADATA__": {
                                                "calculated": true,
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "methods": [
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "escalationRuleGet",
                                                            "example": "{\n\t\"escalation_rule\" : {\n\t\t\"id\" : \"PN0ZD20\" ,\n\t\t\"escalation_delay_in_minutes\" : 2 ,\n\t\t\"rule_object\" : {\n\t\t\t\"id\" : \"PAD6MYW\" ,\n\t\t\t\"name\" : \"Aliya Bradtke\" ,\n\t\t\t\"type\" : \"user\" ,\n\t\t\t\"email\" : \"bradtke.aliya@leannon.uk\" ,\n\t\t\t\"time_zone\" : \"Eastern Time (US & Canada)\" ,\n\t\t\t\"color\" : \"cayenne\"\n\t\t}\n\t}\n}",
                                                            "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"escalation_rule\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                                        }
                                                    }
                                                }
                                            },
                                            "protocols": [
                                                "HTTPS"
                                            ],
                                            "description": "Get details about an escalation rule.",
                                            "method": "get",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "escalationRulePutResponse",
                                                            "example": "{\n\t\"escalation_rule\" : {\n\t\t\"id\" : \"PN0ZD20\" ,\n\t\t\"escalation_delay_in_minutes\" : 44 ,\n\t\t\"rule_object\" : {\n\t\t\t\"id\" : \"PAD6MYW\" ,\n\t\t\t\"name\" : \"Aliya Bradtke\" ,\n\t\t\t\"type\" : \"user\"\n\t\t}\n\t}\n}",
                                                            "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"escalation_rule\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                                        }
                                                    }
                                                }
                                            },
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "escalationRulePutBody",
                                                    "example": "{\n\t\"escalation_delay_in_minutes\" : 44 ,\n\t\"rule_object\" : {\n\t\t\"type\" : \"schedule\" ,\n\t\t\"id\" : \"PY1OL64\"\n\t}\n}",
                                                    "schemaContent": "{\n\t\"type\" : \"object\" ,\n\t\"required\" : true ,\n\t\"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n\t\"properties\" : {\n\t\t\"escalation_delay_in_minutes\" : {\n\t\t\t\"type\" : \"number\" ,\n\t\t\t\"required\" : false\n\t\t} ,\n\t\t\"rule_object\" : {\n\t\t\t\"type\" : \"object\" ,\n\t\t\t\"required\" : false\n\t\t}\n\t}\n}"
                                                }
                                            },
                                            "protocols": [
                                                "HTTPS"
                                            ],
                                            "description": "Update an escalation rule.",
                                            "method": "put",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "responses": {
                                                "204": {
                                                    "code": "204"
                                                }
                                            },
                                            "protocols": [
                                                "HTTPS"
                                            ],
                                            "description": "Delete an escalation rule.",
                                            "method": "delete",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/{escalation_rule_id}",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "{escalation_rule_id}"
                                    ]
                                }
                            ],
                            "displayName": "/escalation_rules",
                            "description": "This API lets you access and manipulate escalation rules of an existing escalation policy.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "escalation_rules"
                            ]
                        }
                    ],
                    "displayName": "/{escalation_policy_id}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{escalation_policy_id}"
                    ]
                }
            ],
            "displayName": "/escalation_policies",
            "description": "This API lets you access and manipulate escalation policies and rules.",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "escalation_policies"
            ]
        }
    ],
    "documentation": [
        {
            "title": "Headline",
            "content": "can not resolve docs/pagerDuty/headline.md"
        }
    ],
    "__METADATA__": {
        "primitiveValuesMeta": {
            "protocols": {
                "calculated": true
            }
        }
    }
}