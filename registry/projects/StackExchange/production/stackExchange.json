{
    "title": "StackExchange",
    "version": "2.0",
    "baseUri": "https://api.stackexchange.com/{version}",
    "baseUriParameters": {
        "version": {
            "name": "version",
            "displayName": "version",
            "type": "string",
            "required": true,
            "repeat": false,
            "enum": [
                "2.0"
            ],
            "__METADATA__": {
                "calculated": true,
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    },
                    "type": {
                        "insertedAsDefault": true
                    },
                    "required": {
                        "insertedAsDefault": true
                    },
                    "repeat": {
                        "insertedAsDefault": true
                    },
                    "enum": {
                        "calculated": true
                    }
                }
            }
        }
    },
    "protocols": [
        "HTTPS"
    ],
    "schemas": [
        {
            "answers": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"accepted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"answer_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"awarded_bounty_amount\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"awarded_bounty_users\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"can_flag\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"comment_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"comments\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"community_owned_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"down_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"downvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"is_accepted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"last_activity_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_edit_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_editor\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"locked_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"question_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"share_link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"tags\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"up_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      }\n    }\n  }\n}"
        },
        {
            "comments": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"can_flag\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"comment_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"edited\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"post_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"post_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"reply_to_user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      }\n    }\n  }\n}"
        },
        {
            "badges": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"award_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"badge_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"badge_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"description\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"name\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"rank\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}"
        },
        {
            "created_comment": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"body\": {\n      \"required\": false,\n      \"type\": \"string\"\n    },\n    \"body_markdown\": {\n      \"required\": false,\n      \"type\": \"string\"\n    },\n    \"can_flag\": {\n      \"required\": false,\n      \"type\": \"boolean\"\n    },\n    \"comment_id\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"creation_date\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"edited\": {\n      \"required\": false,\n      \"type\": \"boolean\"\n    },\n    \"link\": {\n      \"required\": false,\n      \"type\": \"string\"\n    },\n    \"owner\": {\n      \"required\": false,\n      \"type\": \"object\",\n      \"properties\": {\n        \"accept_rate\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"badge_counts\": {\n          \"required\": false,\n          \"type\": \"object\",\n          \"properties\": {\n            \"bronze\": {\n              \"required\": false,\n              \"type\": \"integer\"\n            },\n            \"gold\": {\n              \"required\": false,\n              \"type\": \"integer\"\n            },\n            \"silver\": {\n              \"required\": false,\n              \"type\": \"integer\"\n            }\n          }\n        },\n        \"display_name\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"link\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"profile_image\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"reputation\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"user_id\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"user_type\": {\n          \"required\": false,\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"post_id\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"post_type\": {\n      \"required\": false,\n      \"type\": \"string\"\n    },\n    \"reply_to_user\": {\n      \"required\": false,\n      \"type\": \"object\",\n      \"properties\": {\n        \"accept_rate\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"badge_counts\": {\n          \"required\": false,\n          \"type\": \"object\",\n          \"properties\": {\n            \"bronze\": {\n              \"required\": false,\n              \"type\": \"integer\"\n            },\n            \"gold\": {\n              \"required\": false,\n              \"type\": \"integer\"\n            },\n            \"silver\": {\n              \"required\": false,\n              \"type\": \"integer\"\n            }\n          }\n        },\n        \"display_name\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"link\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"profile_image\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"reputation\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"user_id\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"user_type\": {\n          \"required\": false,\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"score\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"upvoted\": {\n      \"required\": false,\n      \"type\": \"boolean\"\n    }\n  }\n}"
        },
        {
            "events": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"event_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"excerpt\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"the id of the object (answer, comment, question, or user) the event describes\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
        },
        {
            "info_object": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"answers_per_minute\": {\n      \"required\": false,\n      \"type\": \"number\"\n    },\n    \"api_revision\": {\n      \"required\": false,\n      \"type\": \"string\"\n    },\n    \"badges_per_minute\": {\n      \"required\": false,\n      \"type\": \"number\"\n    },\n    \"new_active_users\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"questions_per_minute\": {\n      \"required\": false,\n      \"type\": \"number\"\n    },\n    \"site\": {\n      \"required\": false,\n      \"type\": \"object\",\n      \"properties\": {\n        \"aliases\": {\n          \"required\": false,\n          \"type\": \"array\"\n        },\n        \"api_site_parameter\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"audience\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"closed_beta_date\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"favicon_url\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"high_resolution_icon_url\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"icon_url\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"launch_date\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"logo_url\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"markdown_extensions\": {\n          \"required\": false,\n          \"type\": \"array\"\n        },\n        \"name\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"open_beta_date\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"related_sites\": {\n          \"required\": false,\n          \"type\": \"array\"\n        },\n        \"site_state\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"site_type\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"site_url\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"styling\": {\n          \"required\": false,\n          \"type\": \"object\",\n          \"properties\": {\n            \"link_color\": {\n              \"required\": false,\n              \"type\": \"string\"\n            },\n            \"tag_background_color\": {\n              \"required\": false,\n              \"type\": \"string\"\n            },\n            \"tag_foreground_color\": {\n              \"required\": false,\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"twitter_account\": {\n          \"required\": false,\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"total_accepted\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"total_answers\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"total_badges\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"total_comments\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"total_questions\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"total_unanswered\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"total_users\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"total_votes\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    }\n  }\n}"
        },
        {
            "posts": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"comment_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"comments\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"down_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"downvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"last_activity_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_edit_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_editor\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"post_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"post_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"share_link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"up_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      }\n    }\n  }\n}"
        },
        {
            "revisions": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"comment\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"is_rollback\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"last_body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"last_tags\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"last_title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"post_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"post_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"revision_guid\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"revision_number\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"revision_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"set_community_wiki\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"tags\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}"
        },
        {
            "suggested-edits": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"approval_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"comment\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"post_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"post_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"proposing_user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"rejection_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"suggested_edit_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"tags\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      }\n    }\n  }\n}"
        },
        {
            "privileges": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"description\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"reputation\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"short_description\": {\n        \"required\": false,\n        \"type\": \"string\"\n      }\n    }\n  }\n}"
        },
        {
            "questions": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"accepted_answer_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answer_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answers\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"bounty_amount\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_closes_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"can_close\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"can_flag\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"close_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_details\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"by_users\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"description\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"on_hold\": {\n            \"required\": false,\n            \"type\": \"boolean\"\n          },\n          \"original_questions\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"reason\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"closed_reason\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"comment_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"comments\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"community_owned_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"delete_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"down_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"downvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"favorite_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"favorited\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"is_answered\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"last_activity_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_edit_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_editor\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"locked_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"migrated_from\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"migrated_to\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"notice\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"body\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"creation_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"owner_user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"protected_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"question_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"reopen_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"share_link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"tags\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"up_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"view_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
        },
        {
            "question_timeline_events": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"comment_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"down_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"post_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"question_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"revision_guid\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"timeline_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"up_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}"
        },
        {
            "tags": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"has_synonyms\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"is_moderator_only\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"is_required\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"last_activity_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"name\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"synonyms\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"user_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
        },
        {
            "tag_synonyms": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"applied_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"from_tag\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"last_applied_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"to_tag\": {\n        \"required\": false,\n        \"type\": \"string\"\n      }\n    }\n  }\n}"
        },
        {
            "tag_score_objects": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"post_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}"
        },
        {
            "tag_wikis": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_last_edit_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"excerpt\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"excerpt_last_edit_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_body_editor\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"last_excerpt_editor\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"tag_name\": {\n        \"required\": false,\n        \"type\": \"string\"\n      }\n    }\n  }\n}"
        },
        {
            "users": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"about_me\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"accept_rate\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"account_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"age\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answer_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"badge_counts\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"bronze\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"gold\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"silver\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"display_name\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"down_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"is_employee\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"last_access_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_modified_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"location\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"profile_image\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"question_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"reputation\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"reputation_change_day\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"reputation_change_month\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"reputation_change_quarter\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"reputation_change_week\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"reputation_change_year\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"timed_penalty_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"up_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"user_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"user_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"view_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"website_url\": {\n        \"required\": false,\n        \"type\": \"string\"\n      }\n    }\n  }\n}"
        },
        {
            "user": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"about_me\": {\n      \"required\": false,\n      \"type\": \"string\"\n    },\n    \"accept_rate\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"account_id\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"age\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"answer_count\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"badge_counts\": {\n      \"required\": false,\n      \"type\": \"object\",\n      \"properties\": {\n        \"bronze\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"gold\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"silver\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        }\n      }\n    },\n    \"creation_date\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"display_name\": {\n      \"required\": false,\n      \"type\": \"string\"\n    },\n    \"down_vote_count\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"is_employee\": {\n      \"required\": false,\n      \"type\": \"boolean\"\n    },\n    \"last_access_date\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"last_modified_date\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"link\": {\n      \"required\": false,\n      \"type\": \"string\"\n    },\n    \"location\": {\n      \"required\": false,\n      \"type\": \"string\"\n    },\n    \"profile_image\": {\n      \"required\": false,\n      \"type\": \"string\"\n    },\n    \"question_count\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"reputation\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"reputation_change_day\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"reputation_change_month\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"reputation_change_quarter\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"reputation_change_week\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"reputation_change_year\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"timed_penalty_date\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"up_vote_count\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"user_id\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"user_type\": {\n      \"required\": false,\n      \"type\": \"string\"\n    },\n    \"view_count\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"website_url\": {\n      \"required\": false,\n      \"type\": \"string\"\n    }\n  }\n}"
        },
        {
            "notifications": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"is_unread\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"notification_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"post_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"site\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"aliases\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"api_site_parameter\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"audience\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"closed_beta_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"favicon_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"high_resolution_icon_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"icon_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"launch_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"logo_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"markdown_extensions\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"open_beta_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"related_sites\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"site_state\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"site_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"site_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"styling\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"link_color\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"tag_background_color\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"tag_foreground_color\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"twitter_account\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}"
        },
        {
            "reputation_objects": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"on_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"post_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"post_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"reputation_change\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"user_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"vote_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      }\n    }\n  }\n}"
        },
        {
            "reputation_changes": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"on_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"post_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"post_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"reputation_change\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"user_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"vote_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      }\n    }\n  }\n}"
        },
        {
            "reputation_history": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"post_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"reputation_change\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"reputation_history_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"user_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
        },
        {
            "user_timeline_objects": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"badge_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"comment_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"detail\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"post_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"post_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"suggested_edit_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"timeline_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"user_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
        },
        {
            "top_tag_objects": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"answer_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answer_score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"question_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"question_score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"tag_name\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"user_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
        },
        {
            "write_permissions": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"can_add\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"can_delete\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"can_edit\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"max_daily_actions\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"min_seconds_between_actions\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"object_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"user_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
        },
        {
            "inbox_items": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"answer_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"comment_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"is_unread\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"item_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"question_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"site\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"aliases\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"api_site_parameter\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"audience\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"closed_beta_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"favicon_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"high_resolution_icon_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"icon_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"launch_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"logo_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"markdown_extensions\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"open_beta_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"related_sites\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"site_state\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"site_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"site_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"styling\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"link_color\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"tag_background_color\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"tag_foreground_color\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"twitter_account\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      }\n    }\n  }\n}"
        },
        {
            "access_tokens": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"access_token\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"account_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"expires_on_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"scope\": {\n        \"required\": false,\n        \"type\": \"array\"\n      }\n    }\n  }\n}"
        },
        {
            "errors": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"description\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"error_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"error_name\": {\n        \"required\": false,\n        \"type\": \"string\"\n      }\n    }\n  }\n}"
        },
        {
            "single_filter": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"filter\": {\n      \"required\": false,\n      \"type\": \"string\"\n    },\n    \"filter_type\": {\n      \"required\": false,\n      \"type\": \"string\"\n    },\n    \"included_fields\": {\n      \"required\": false,\n      \"type\": \"array\"\n    }\n  }\n}"
        },
        {
            "filters": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"filter\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"filter_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"included_fields\": {\n        \"required\": false,\n        \"type\": \"array\"\n      }\n    }\n  }\n}"
        },
        {
            "sites": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"aliases\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"api_site_parameter\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"audience\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"closed_beta_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"favicon_url\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"high_resolution_icon_url\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"icon_url\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"launch_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"logo_url\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"markdown_extensions\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"name\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"open_beta_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"related_sites\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"site_state\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"site_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"site_url\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"styling\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"link_color\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"tag_background_color\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"tag_foreground_color\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"twitter_account\": {\n        \"required\": false,\n        \"type\": \"string\"\n      }\n    }\n  }\n}"
        },
        {
            "network_users": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"account_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answer_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"badge_counts\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"bronze\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"gold\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"silver\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_access_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"question_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"reputation\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"site_name\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"site_url\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"top_answers\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"top_questions\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"user_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"user_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      }\n    }\n  }\n}"
        },
        {
            "account_merge": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"merge_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"new_account_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"old_account_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
        },
        {
            "error": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"error_id\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"error_message\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"error_name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        }
    ],
    "traits": [
        {
            "tags": {
                "securedBy": [
                    "oauth_2_0"
                ],
                "queryParameters": {
                    "max": {
                        "name": "max",
                        "displayName": "max",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "sort = popular => number\nsort = activity => date\nsort = name => string\n",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "min": {
                        "name": "min",
                        "displayName": "min",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "sort = popular => number\nsort = activity => date\nsort = name => string\n",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "sort": {
                        "name": "sort",
                        "displayName": "sort",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "enum": [
                            "popular",
                            "activity",
                            "name"
                        ],
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "name": "tags",
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                }
            }
        },
        {
            "users": {
                "securedBy": [
                    "oauth_2_0"
                ],
                "queryParameters": {
                    "max": {
                        "name": "max",
                        "displayName": "max",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "sort = reputation => number\nsort = creation => date\nsort = name => string\nsort = modified => date\n",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "min": {
                        "name": "min",
                        "displayName": "min",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "sort = reputation => number\nsort = creation => date\nsort = name => string\nsort = modified => date\n",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "sort": {
                        "name": "sort",
                        "displayName": "sort",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "enum": [
                            "reputation",
                            "creation",
                            "name",
                            "modified"
                        ],
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "name": "users",
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                }
            }
        },
        {
            "filterableByDate": {
                "securedBy": [
                    "oauth_2_0"
                ],
                "queryParameters": {
                    "fromdate": {
                        "name": "fromdate",
                        "displayName": "fromdate",
                        "type": "integer",
                        "required": false,
                        "repeat": false,
                        "description": "Unix date.",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "todate": {
                        "name": "todate",
                        "displayName": "todate",
                        "type": "integer",
                        "required": false,
                        "repeat": false,
                        "description": "Unix date.",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "name": "filterableByDate",
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                }
            }
        },
        {
            "suggestedEdits": {
                "securedBy": [
                    "oauth_2_0"
                ],
                "queryParameters": {
                    "max": {
                        "name": "max",
                        "displayName": "max",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "sort = creation => date\nsort = approval => date\nsort = rejection => date\n",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "min": {
                        "name": "min",
                        "displayName": "min",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "sort = creation => date\nsort = approval => date\nsort = rejection => date\n",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "sort": {
                        "name": "sort",
                        "displayName": "sort",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "enum": [
                            "creation",
                            "approval",
                            "rejection"
                        ],
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "name": "suggestedEdits",
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                }
            }
        },
        {
            "synonyms": {
                "securedBy": [
                    "oauth_2_0"
                ],
                "queryParameters": {
                    "max": {
                        "name": "max",
                        "displayName": "max",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "sort = creation => date\nsort = applied => number\nsort = activity => date\n",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "min": {
                        "name": "min",
                        "displayName": "min",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "sort = creation => date\nsort = applied => number\nsort = activity => date\n",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "sort": {
                        "name": "sort",
                        "displayName": "sort",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "enum": [
                            "creation",
                            "applied",
                            "activity"
                        ],
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "name": "synonyms",
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                }
            }
        },
        {
            "questions": {
                "securedBy": [
                    "oauth_2_0"
                ],
                "queryParameters": {
                    "max": {
                        "name": "max",
                        "displayName": "max",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "sort = activity => date\nsort = creation => date\nsort = votes => number\nsort = hot => none\nsort = week => none\nsort = month => none\nsort = relevance => none\n",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "min": {
                        "name": "min",
                        "displayName": "min",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "sort = activity => date\nsort = creation => date\nsort = votes => number\nsort = hot => none\nsort = week => none\nsort = month => none\nsort = relevance => none\n",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "sort": {
                        "name": "sort",
                        "displayName": "sort",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "enum": [
                            "activity",
                            "creation",
                            "votes",
                            "hot",
                            "week",
                            "month",
                            "relevance"
                        ],
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "name": "questions",
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                }
            }
        },
        {
            "sortableByCreationVotes": {
                "securedBy": [
                    "oauth_2_0"
                ],
                "queryParameters": {
                    "max": {
                        "name": "max",
                        "displayName": "max",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "sort = creation => date\nsort = votes => number\n",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "min": {
                        "name": "min",
                        "displayName": "min",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "sort = creation => date\nsort = votes => number\n",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "sort": {
                        "name": "sort",
                        "displayName": "sort",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "enum": [
                            "creation",
                            "votes"
                        ],
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "name": "sortableByCreationVotes",
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                }
            }
        },
        {
            "favorites": {
                "securedBy": [
                    "oauth_2_0"
                ],
                "queryParameters": {
                    "max": {
                        "name": "max",
                        "displayName": "max",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "sort = activity => date\nsort = creation => date\nsort = votes => number\nsort = added => date\n",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "min": {
                        "name": "min",
                        "displayName": "min",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "sort = activity => date\nsort = creation => date\nsort = votes => number\nsort = added => date\n",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "sort": {
                        "name": "sort",
                        "displayName": "sort",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "enum": [
                            "activity",
                            "creation",
                            "votes",
                            "added"
                        ],
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "name": "favorites",
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                }
            }
        },
        {
            "badges": {
                "securedBy": [
                    "oauth_2_0"
                ],
                "queryParameters": {
                    "max": {
                        "name": "max",
                        "displayName": "max",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "sort = rank => string\nsort = name => string\nsort = type => string\n",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "min": {
                        "name": "min",
                        "displayName": "min",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "sort = rank => string\nsort = name => string\nsort = type => string\n",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "sort": {
                        "name": "sort",
                        "displayName": "sort",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "enum": [
                            "rank",
                            "name",
                            "type"
                        ],
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "name": "badges",
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                }
            }
        },
        {
            "sortableByActivityCreationVotes": {
                "securedBy": [
                    "oauth_2_0"
                ],
                "queryParameters": {
                    "max": {
                        "name": "max",
                        "displayName": "max",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "sort = activity => date\nsort = creation => date\nsort = votes => number\n",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "min": {
                        "name": "min",
                        "displayName": "min",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "sort = activity => date\nsort = creation => date\nsort = votes => number\n",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "sort": {
                        "name": "sort",
                        "displayName": "sort",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "enum": [
                            "activity",
                            "creation",
                            "votes"
                        ],
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "name": "sortableByActivityCreationVotes",
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                }
            }
        },
        {
            "perSiteMethod": {
                "securedBy": [
                    "oauth_2_0"
                ],
                "queryParameters": {
                    "site": {
                        "name": "site",
                        "displayName": "site",
                        "type": "string",
                        "required": true,
                        "example": "stackoverflow",
                        "repeat": false,
                        "description": "Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. \"stackoverflow.com\"), or a short form identified by api_site_parameter on the site object.\n",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "name": "perSiteMethod",
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                }
            }
        },
        {
            "pageable": {
                "securedBy": [
                    "oauth_2_0"
                ],
                "queryParameters": {
                    "pagesize": {
                        "name": "pagesize",
                        "displayName": "pagesize",
                        "type": "integer",
                        "required": false,
                        "repeat": false,
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "page": {
                        "name": "page",
                        "displayName": "page",
                        "type": "integer",
                        "required": false,
                        "repeat": false,
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "name": "pageable",
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                }
            }
        },
        {
            "linkedOrRelated": {
                "securedBy": [
                    "oauth_2_0"
                ],
                "queryParameters": {
                    "max": {
                        "name": "max",
                        "displayName": "max",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "sort = activity => date\nsort = creation => date\nsort = votes => number\nsort = rank => none\n",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "min": {
                        "name": "min",
                        "displayName": "min",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "sort = activity => date\nsort = creation => date\nsort = votes => number\nsort = rank => none\n",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "sort": {
                        "name": "sort",
                        "displayName": "sort",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "enum": [
                            "activity",
                            "creation",
                            "votes",
                            "rank"
                        ],
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "name": "linkedOrRelated",
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                }
            }
        },
        {
            "base": {
                "securedBy": [
                    "oauth_2_0"
                ],
                "queryParameters": {
                    "filter": {
                        "name": "filter",
                        "displayName": "filter",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "#Discussion\n\nThe Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.\n\nAn application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.\n\nFilters are immutable and non-expiring. An application can safely \"bake in\" any filters that are created, it is not necessary (or advisable) to create filters at runtime.\n\nThe motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).\n\n#Safety\n\nFilters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.\n\nNote that this does not mean that \"safe\" filter is mearly an \"unsafe\" one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).\n\nWhen using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the \"safe\" data is the only accessible data it will be returned even in \"unsafe\" filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.\n\n#Built In Filters\n\nThe following filters are built in:\n\ndefault, each type documents which fields are returned under the default filter (for example, answers).\nwithbody, which is default plus the *.body fields\nnone, which is empty\ntotal, which includes just .total\n\n#Compatibility with V1.x\n\nFor ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters.\n",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "callback": {
                        "name": "callback",
                        "displayName": "callback",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "All API responses are JSON, we do support JSONP with the callback query parameter.\n",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "name": "base",
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                }
            }
        },
        {
            "ordering": {
                "securedBy": [
                    "oauth_2_0"
                ],
                "queryParameters": {
                    "order": {
                        "name": "order",
                        "displayName": "order",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "enum": [
                            "desc",
                            "asc"
                        ],
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "name": "ordering",
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                }
            }
        },
        {
            "searchesByName": {
                "securedBy": [
                    "oauth_2_0"
                ],
                "queryParameters": {
                    "inname": {
                        "name": "inname",
                        "displayName": "inname",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "name": "searchesByName",
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                }
            }
        },
        {
            "questionsByRelevance": {
                "securedBy": [
                    "oauth_2_0"
                ],
                "queryParameters": {
                    "max": {
                        "name": "max",
                        "displayName": "max",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "sort = activity => date\nsort = creation => date\nsort = votes => number\nsort = relevance => none\n",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "min": {
                        "name": "min",
                        "displayName": "min",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "sort = activity => date\nsort = creation => date\nsort = votes => number\nsort = relevance => none\n",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "sort": {
                        "name": "sort",
                        "displayName": "sort",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "enum": [
                            "activity",
                            "creation",
                            "votes",
                            "relevance"
                        ],
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "name": "questionsByRelevance",
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                }
            }
        },
        {
            "searchesByTag": {
                "securedBy": [
                    "oauth_2_0"
                ],
                "queryParameters": {
                    "tagged": {
                        "name": "tagged",
                        "displayName": "tagged",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "String list (semicolon delimited).",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "name": "searchesByTag",
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                }
            }
        },
        {
            "badges2": {
                "securedBy": [
                    "oauth_2_0"
                ],
                "queryParameters": {
                    "max": {
                        "name": "max",
                        "displayName": "max",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "sort = rank => string\nsort = name => string\nsort = type => string\nsort = awarded => date\n",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "min": {
                        "name": "min",
                        "displayName": "min",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "sort = rank => string\nsort = name => string\nsort = type => string\nsort = awarded => date\n",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "sort": {
                        "name": "sort",
                        "displayName": "sort",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "enum": [
                            "rank",
                            "name",
                            "type",
                            "awarded"
                        ],
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "name": "badges2",
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                }
            }
        },
        {
            "badges3": {
                "securedBy": [
                    "oauth_2_0"
                ],
                "queryParameters": {
                    "max": {
                        "name": "max",
                        "displayName": "max",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "sort = rank => string\nsort = name => string\n",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "min": {
                        "name": "min",
                        "displayName": "min",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "sort = rank => string\nsort = name => string\n",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "sort": {
                        "name": "sort",
                        "displayName": "sort",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "enum": [
                            "rank",
                            "name"
                        ],
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "name": "badges3",
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                }
            }
        }
    ],
    "securedBy": [
        "oauth_2_0"
    ],
    "securitySchemes": [
        {
            "oauth_2_0": {
                "name": "oauth_2_0",
                "type": "OAuth 2.0",
                "description": "The Stack Exchange API offers user authentication via OAuth 2.0, specifically templated after Facebook's implementation. There are two flows, an explicit grant for server side applications and an implicit one for pure browser based ones.\n\n#The explicit OAuth 2.0 flow consists of the following steps:\n1. Send a user to https://stackexchange.com/oauth, with these query string parameters\n- client_id\n- scope\n- redirect_uri - must be under an apps registered domain\n- state - optional\n2. The user approves your app\n3. The user is redirected to redirect_uri, with these query string parameters\n- code\n- state - optional, only returned if provided in the first step\n4. POST (application/x-www-form-urlencoded) the following parameters to https://stackexchange.com/oauth/access_token\n- client_id\n- client_secret\n- code - from the previous step\n- redirect_uri - must be the same as the provided in the first step\nThis request is responded to with either an error (HTTP status code 400) or an access token of the form access_token=...&expires=1234. expires will only be set if scope does not include no_expiry, the use of which is strongly advised against unless your app truly needs perpetual access.\n\n#The implicit OAuth 2.0 flow consists of the following steps:\n\n1. Open a new window at https://stackexchange.com/oauth/dialog, with these query string parameters\n- client_id\n- scope (details)\n- redirect_uri - must be under an apps registered domain\n- state - optional\n2. The user approves your app\n3. The user is redirected to redirect_uri, with these parameters in the hash\n- access_token\n- expires - optional, only if scope doesn't contain no_expiry\nThe explicit flow should be used by server-side applications, with special care taken to never leak client_secret. Client side applications should use the implicit flow.\n\nOnce you have authenticated a user once, regardless of flow, subsequent re-authorizations will occur without requiring user action. Naturally, should a user revoke an applications permissions then further action will be required to re-authorize.\n\nApplications using the implicit flow can make use of our provided minimalistic Javascript SDK.\n\n#Scope\n\nWith an empty scope, authentication will only allow an application to identify a user via the /me method. In order to access other information, different scope values must be sent. Multiple values may be sent in scope by comma or space delimitting them.\n\n- read_inbox - access a user's global inbox\n- no_expiry - access_token's with this scope do not expire\n- write_access - perform write operations as a user 2.1\n- private_info - access full history of a user's private actions on the site 2.1\n\n#Desktop Applications\n\nDesktop applications cannot participate directly in OAuth 2.0 flows, however the embeddable browser controls available in most frameworks make it possible to work around this limitation.\n\nDesktop applications should use the implicit client-side flow, hosting the process within a browser control. For redirect_uri, a value of https://stackexchange.com/oauth/login_success should be used. Upon a successful authentication, access_token will be placed in the url hash as with a standard implicit authentication.\n\n#Usage\n\nAccess tokens can be passed (as access_token) to any method to grant applications an increased throttle quota. When passing an access token an app must pass its request key as well, if you don't have a request key you can obtain one by registering your application on Stack Apps (http://stackapps.com/users/login?returnurl=/apps/oauth/register).\n",
                "describedBy": {
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "queryParameters": {
                        "access_token": {
                            "name": "access_token",
                            "displayName": "access_token",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "key": {
                            "name": "key",
                            "displayName": "key",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                },
                "settings": {
                    "accessTokenUri": "https://stackexchange.com/oauth/access_token",
                    "authorizationUri": "https://stackexchange.com/oauth",
                    "authorizationGrants": [
                        "token"
                    ]
                }
            }
        }
    ],
    "resourceTypes": [
        {
            "stackexchangeResource": {
                "name": "stackexchangeResource",
                "securedBy": [
                    "oauth_2_0"
                ],
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                },
                "get": {
                    "responses": {
                        "400": {
                            "code": "400",
                            "description": "bad_parameter Ã¢â‚¬â€œ 400 An invalid parameter was passed, this includes even \"high level\" parameters like key or site.\n"
                        },
                        "401": {
                            "code": "401",
                            "description": "access_token_required Ã¢â‚¬â€œ 401 A method that requires an access token (obtained via authentication) was called without one.\n"
                        },
                        "402": {
                            "code": "402",
                            "description": "invalid_access_token Ã¢â‚¬â€œ 402 An invalid access token was passed to a method.\n"
                        },
                        "403": {
                            "code": "403",
                            "description": "access_denied Ã¢â‚¬â€œ 403 A method which requires certain permissions was called with an access token that lacks those permissions.\n"
                        },
                        "404": {
                            "code": "404",
                            "description": "no_method Ã¢â‚¬â€œ 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error.\n"
                        },
                        "405": {
                            "code": "405",
                            "description": "key_required Ã¢â‚¬â€œ 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed.\n"
                        },
                        "406": {
                            "code": "406",
                            "description": "access_token_compromised Ã¢â‚¬â€œ 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned.\n"
                        },
                        "500": {
                            "code": "500",
                            "description": "internal_error Ã¢â‚¬â€œ 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed.\n"
                        },
                        "502": {
                            "code": "502",
                            "description": "throttle_violation Ã¢â‚¬â€œ 502 An application has violated part of the rate limiting contract, so the request was terminated.\n"
                        },
                        "503": {
                            "code": "503",
                            "description": "temporarily_unavailable Ã¢â‚¬â€œ 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked.\n"
                        }
                    },
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "method": "get",
                    "__METADATA__": {
                        "optional": true,
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                },
                "post": {
                    "responses": {
                        "400": {
                            "code": "400",
                            "description": "bad_parameter Ã¢â‚¬â€œ 400 An invalid parameter was passed, this includes even \"high level\" parameters like key or site.\n"
                        },
                        "401": {
                            "code": "401",
                            "description": "access_token_required Ã¢â‚¬â€œ 401 A method that requires an access token (obtained via authentication) was called without one.\n"
                        },
                        "402": {
                            "code": "402",
                            "description": "invalid_access_token Ã¢â‚¬â€œ 402 An invalid access token was passed to a method.\n"
                        },
                        "403": {
                            "code": "403",
                            "description": "access_denied Ã¢â‚¬â€œ 403 A method which requires certain permissions was called with an access token that lacks those permissions.\n"
                        },
                        "404": {
                            "code": "404",
                            "description": "no_method Ã¢â‚¬â€œ 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error.\n"
                        },
                        "405": {
                            "code": "405",
                            "description": "key_required Ã¢â‚¬â€œ 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed.\n"
                        },
                        "406": {
                            "code": "406",
                            "description": "access_token_compromised Ã¢â‚¬â€œ 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned.\n"
                        },
                        "500": {
                            "code": "500",
                            "description": "internal_error Ã¢â‚¬â€œ 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed.\n"
                        },
                        "502": {
                            "code": "502",
                            "description": "throttle_violation Ã¢â‚¬â€œ 502 An application has violated part of the rate limiting contract, so the request was terminated.\n"
                        },
                        "503": {
                            "code": "503",
                            "description": "temporarily_unavailable Ã¢â‚¬â€œ 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked.\n"
                        }
                    },
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "method": "post",
                    "__METADATA__": {
                        "optional": true,
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            }
        }
    ],
    "resources": [
        {
            "relativeUri": "/answers",
            "type": "stackexchangeResource",
            "securedBy": [
                "oauth_2_0"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "answers",
                                    "example": "[\n  {\n    \"accepted\": true,\n    \"answer_id\": 1,\n    \"awarded_bounty_amount\": 1,\n    \"awarded_bounty_users\": [\n    ],\n    \"body\": \"some string\",\n    \"body_markdown\": \"some string\",\n    \"can_flag\": true,\n    \"comment_count\": 1,\n    \"comments\": [\n    ],\n    \"community_owned_date\": 1,\n    \"creation_date\": 1,\n    \"down_vote_count\": 1,\n    \"downvoted\": true,\n    \"is_accepted\": true,\n    \"last_activity_date\": 1,\n    \"last_edit_date\": 1,\n    \"last_editor\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"link\": \"some string\",\n    \"locked_date\": 1,\n    \"owner\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"question_id\": 1,\n    \"score\": 1,\n    \"share_link\": \"some string\",\n    \"tags\": [\n    ],\n    \"title\": \"some string\",\n    \"up_vote_count\": 1,\n    \"upvoted\": true\n  }\n]",
                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"accepted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"answer_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"awarded_bounty_amount\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"awarded_bounty_users\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"can_flag\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"comment_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"comments\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"community_owned_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"down_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"downvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"is_accepted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"last_activity_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_edit_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_editor\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"locked_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"question_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"share_link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"tags\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"up_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      }\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "description": "Returns all the undeleted answers in the system.\n \nThe sorts accepted by this method operate on the follow fields of the answer object:\n - activity - last_activity_date\n - creation - creation_date\n - votes - score\n  activity is the default sort.\n \n It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\n \nThis method returns a list of answers.\n",
                    "method": "get",
                    "is": [
                        "perSiteMethod",
                        "base",
                        "pageable",
                        "filterableByDate",
                        "sortableByActivityCreationVotes",
                        "ordering"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/{ids}",
                    "type": "stackexchangeResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "uriParameters": {
                        "ids": {
                            "name": "ids",
                            "displayName": "ids",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "description": "Number list (semicolon delimited).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "answers",
                                            "example": "[\n  {\n    \"accepted\": true,\n    \"answer_id\": 1,\n    \"awarded_bounty_amount\": 1,\n    \"awarded_bounty_users\": [\n    ],\n    \"body\": \"some string\",\n    \"body_markdown\": \"some string\",\n    \"can_flag\": true,\n    \"comment_count\": 1,\n    \"comments\": [\n    ],\n    \"community_owned_date\": 1,\n    \"creation_date\": 1,\n    \"down_vote_count\": 1,\n    \"downvoted\": true,\n    \"is_accepted\": true,\n    \"last_activity_date\": 1,\n    \"last_edit_date\": 1,\n    \"last_editor\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"link\": \"some string\",\n    \"locked_date\": 1,\n    \"owner\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"question_id\": 1,\n    \"score\": 1,\n    \"share_link\": \"some string\",\n    \"tags\": [\n    ],\n    \"title\": \"some string\",\n    \"up_vote_count\": 1,\n    \"upvoted\": true\n  }\n]",
                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"accepted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"answer_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"awarded_bounty_amount\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"awarded_bounty_users\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"can_flag\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"comment_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"comments\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"community_owned_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"down_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"downvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"is_accepted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"last_activity_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_edit_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_editor\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"locked_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"question_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"share_link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"tags\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"up_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Gets the set of answers identified by ids.\n \nThis is meant for batch fetcing of questions. A useful trick to poll for updates is to sort by activity, with a minimum date of the last time you polled.\n \n{ids} can contain up to 100 semicolon delimited ids, to find ids programatically look for answer_id on answer objects.\n \nThe sorts accepted by this method operate on the follow fields of the answer object:\n - activity - last_activity_date\n - creation - creation_date\n - votes - score\n  activity is the default sort.\n \n It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\n \nThis method returns a list of answers.\n",
                            "method": "get",
                            "is": [
                                "perSiteMethod",
                                "base",
                                "pageable",
                                "filterableByDate",
                                "sortableByActivityCreationVotes",
                                "ordering"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/comments",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "comments",
                                                    "example": "[\n  {\n    \"body\": \"some string\",\n    \"body_markdown\": \"some string\",\n    \"can_flag\": true,\n    \"comment_id\": 1,\n    \"creation_date\": 1,\n    \"edited\": true,\n    \"link\": \"some string\",\n    \"owner\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"post_id\": 1,\n    \"post_type\": \"some string\",\n    \"reply_to_user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"score\": 1,\n    \"upvoted\": true\n  }\n]",
                                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"can_flag\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"comment_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"edited\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"post_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"post_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"reply_to_user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "description": "Gets the comments on a set of answers.\n \nIf you know that you have an answer id and need the comments, use this method. If you know you have a question id, use /questions/{id}/comments. If you are unsure, use /posts/{id}/comments.\n \n{ids} can contain up to 100 semicolon delimited ids, to find ids programatically look for answer_id on answer objects.\n \nThe sorts accepted by this method operate on the follow fields of the comment object:\n - creation - creation_date\n - votes - score\n  creation is the default sort.\n \n It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\n \nThis method returns a list of comments.\n",
                                    "method": "get",
                                    "is": [
                                        "perSiteMethod",
                                        "base",
                                        "pageable",
                                        "filterableByDate",
                                        "sortableByCreationVotes",
                                        "ordering"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/comments",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "comments"
                            ]
                        }
                    ],
                    "displayName": "/{ids}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{ids}"
                    ]
                }
            ],
            "displayName": "/answers",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "answers"
            ]
        },
        {
            "relativeUri": "/badges",
            "type": "stackexchangeResource",
            "securedBy": [
                "oauth_2_0"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "badges",
                                    "example": "[\n  {\n    \"award_count\": 1,\n    \"badge_id\": 1,\n    \"badge_type\": \"some string\",\n    \"description\": \"some string\",\n    \"link\": \"some string\",\n    \"name\": \"some string\",\n    \"rank\": \"some string\",\n    \"user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    }\n  }\n]",
                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"award_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"badge_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"badge_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"description\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"name\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"rank\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "description": "Returns all the badges in the system.\n \nBadge sorts are a tad complicated. For the purposes of sorting (and min/max) tag_based is considered to be greater than named.\n \nThis means that you can get a list of all tag based badges by passing min=tag_based, and conversely all the named badges by passing max=named, with sort=type.\n \nFor ranks, bronze is greater than silver which is greater than gold. Along with sort=rank, set max=gold for just gold badges, max=silver&min=silver for just silver, and min=bronze for just bronze.\n \nrank is the default sort.\n \nThis method returns a list of badges.\n",
                    "method": "get",
                    "is": [
                        "perSiteMethod",
                        "base",
                        "pageable",
                        "filterableByDate",
                        "badges",
                        "ordering",
                        "searchesByName"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/{ids}",
                    "type": "stackexchangeResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "uriParameters": {
                        "ids": {
                            "name": "ids",
                            "displayName": "ids",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "description": "Number list (semicolon delimited).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "badges",
                                            "example": "[\n  {\n    \"award_count\": 1,\n    \"badge_id\": 1,\n    \"badge_type\": \"some string\",\n    \"description\": \"some string\",\n    \"link\": \"some string\",\n    \"name\": \"some string\",\n    \"rank\": \"some string\",\n    \"user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    }\n  }\n]",
                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"award_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"badge_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"badge_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"description\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"name\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"rank\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Gets the badges identified in id.\n \nNote that badge ids are not constant across sites, and thus should be looked up via the /badges method. A badge id on a single site is, however, guaranteed to be stable.\n \nBadge sorts are a tad complicated. For the purposes of sorting (and min/max) tag_based is considered to be greater than named.\n \nThis means that you can get a list of all tag based badges by passing min=tag_based, and conversely all the named badges by passing max=named, with sort=type.\n \nFor ranks, bronze is greater than silver which is greater than gold. Along with sort=rank, set max=gold for just gold badges, max=silver&min=silver for just silver, and min=bronze for just bronze.\n \nrank is the default sort.\n \n{ids} can contain up to 100 semicolon delimited ids, to find ids programatically look for badge_id on badge objects.\n \nThis method returns a list of badges.\n",
                            "method": "get",
                            "is": [
                                "perSiteMethod",
                                "base",
                                "pageable",
                                "filterableByDate",
                                "badges",
                                "ordering"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/recipients",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "badges",
                                                    "example": "[\n  {\n    \"award_count\": 1,\n    \"badge_id\": 1,\n    \"badge_type\": \"some string\",\n    \"description\": \"some string\",\n    \"link\": \"some string\",\n    \"name\": \"some string\",\n    \"rank\": \"some string\",\n    \"user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    }\n  }\n]",
                                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"award_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"badge_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"badge_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"description\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"name\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"rank\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "description": "Returns recently awarded badges in the system, constrained to a certain set of badges.\n \nAs these badges have been awarded, they will have the badge.user property set.\n \n{ids} can contain up to 100 semicolon delimited ids, to find ids programatically look for badge_id on badge objects.\n \nThis method returns a list of badges.\n",
                                    "method": "get",
                                    "is": [
                                        "perSiteMethod",
                                        "base",
                                        "pageable",
                                        "filterableByDate"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/recipients",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "recipients"
                            ]
                        }
                    ],
                    "displayName": "/{ids}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{ids}"
                    ]
                },
                {
                    "relativeUri": "/name",
                    "type": "stackexchangeResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "badges",
                                            "example": "[\n  {\n    \"award_count\": 1,\n    \"badge_id\": 1,\n    \"badge_type\": \"some string\",\n    \"description\": \"some string\",\n    \"link\": \"some string\",\n    \"name\": \"some string\",\n    \"rank\": \"some string\",\n    \"user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    }\n  }\n]",
                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"award_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"badge_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"badge_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"description\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"name\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"rank\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Gets all explicitly named badges in the system.\n \nA named badged stands in opposition to a tag-based badge. These are referred to as general badges on the sites themselves.\n \nFor the rank sort, bronze is greater than silver which is greater than gold. Along with sort=rank, set max=gold for just gold badges, max=silver&min=silver for just silver, and min=bronze for just bronze.\n \nrank is the default sort.\n \nThis method returns a list of badges.\n",
                            "method": "get",
                            "is": [
                                "perSiteMethod",
                                "base",
                                "pageable",
                                "filterableByDate",
                                "badges3",
                                "ordering",
                                "searchesByName"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/name",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "name"
                    ]
                },
                {
                    "relativeUri": "/recipients",
                    "type": "stackexchangeResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "badges",
                                            "example": "[\n  {\n    \"award_count\": 1,\n    \"badge_id\": 1,\n    \"badge_type\": \"some string\",\n    \"description\": \"some string\",\n    \"link\": \"some string\",\n    \"name\": \"some string\",\n    \"rank\": \"some string\",\n    \"user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    }\n  }\n]",
                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"award_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"badge_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"badge_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"description\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"name\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"rank\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Returns recently awarded badges in the system.\n \nAs these badges have been awarded, they will have the badge.user property set.\n \nThis method returns a list of badges.\n",
                            "method": "get",
                            "is": [
                                "perSiteMethod",
                                "base",
                                "pageable",
                                "filterableByDate"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/recipients",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "recipients"
                    ]
                },
                {
                    "relativeUri": "/tags",
                    "type": "stackexchangeResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "badges",
                                            "example": "[\n  {\n    \"award_count\": 1,\n    \"badge_id\": 1,\n    \"badge_type\": \"some string\",\n    \"description\": \"some string\",\n    \"link\": \"some string\",\n    \"name\": \"some string\",\n    \"rank\": \"some string\",\n    \"user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    }\n  }\n]",
                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"award_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"badge_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"badge_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"description\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"name\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"rank\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Returns the badges that are awarded for participation in specific tags.\n \nFor the rank sort, bronze is greater than silver which is greater than gold. Along with sort=rank, set max=gold for just gold badges, max=silver&min=silver for just silver, and min=bronze for just bronze.\n \nrank is the default sort.\n \nThis method returns a list of badges.\n",
                            "method": "get",
                            "is": [
                                "perSiteMethod",
                                "base",
                                "pageable",
                                "filterableByDate",
                                "badges3",
                                "ordering",
                                "searchesByName"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/tags",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "tags"
                    ]
                }
            ],
            "displayName": "/badges",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "badges"
            ]
        },
        {
            "relativeUri": "/comments",
            "type": "stackexchangeResource",
            "securedBy": [
                "oauth_2_0"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "comments",
                                    "example": "[\n  {\n    \"body\": \"some string\",\n    \"body_markdown\": \"some string\",\n    \"can_flag\": true,\n    \"comment_id\": 1,\n    \"creation_date\": 1,\n    \"edited\": true,\n    \"link\": \"some string\",\n    \"owner\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"post_id\": 1,\n    \"post_type\": \"some string\",\n    \"reply_to_user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"score\": 1,\n    \"upvoted\": true\n  }\n]",
                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"can_flag\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"comment_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"edited\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"post_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"post_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"reply_to_user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      }\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "description": "Gets all the comments on the site.\n \nIf you're filtering for interesting comments (by score, creation date, etc.) make use of the sort paramter with appropriate min and max values.\n \nIf you're looking to query conversations between users, instead use the /users/{ids}/mentioned and /users/{ids}/comments/{toid} methods.\n \nThe sorts accepted by this method operate on the follow fields of the comment object:\n - creation - creation_date\n - votes - score\n  creation is the default sort.\n \n It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\n \nThis method returns a list of comments.\n",
                    "method": "get",
                    "is": [
                        "perSiteMethod",
                        "base",
                        "pageable",
                        "filterableByDate",
                        "sortableByCreationVotes",
                        "ordering"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/{ids}",
                    "type": "stackexchangeResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "uriParameters": {
                        "ids": {
                            "name": "ids",
                            "displayName": "ids",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "description": "Number list (semicolon delimited).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "comments",
                                            "example": "[\n  {\n    \"body\": \"some string\",\n    \"body_markdown\": \"some string\",\n    \"can_flag\": true,\n    \"comment_id\": 1,\n    \"creation_date\": 1,\n    \"edited\": true,\n    \"link\": \"some string\",\n    \"owner\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"post_id\": 1,\n    \"post_type\": \"some string\",\n    \"reply_to_user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"score\": 1,\n    \"upvoted\": true\n  }\n]",
                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"can_flag\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"comment_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"edited\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"post_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"post_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"reply_to_user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Gets the comments identified in id.\n \nThis method is most useful if you have a cache of comment ids obtained through other means (such as /questions/{id}/comments) but suspect the data may be stale.\n \n{ids} can contain up to 100 semicolon delimited ids, to find ids programatically look for comment_id on comment objects.\n \nThe sorts accepted by this method operate on the follow fields of the comment object:\n - creation - creation_date\n - votes - score\n  creation is the default sort.\n \n It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\n \nThis method returns a list of comments.\n",
                            "method": "get",
                            "is": [
                                "perSiteMethod",
                                "base",
                                "pageable",
                                "filterableByDate",
                                "sortableByCreationVotes",
                                "ordering"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/{ids}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{ids}"
                    ]
                },
                {
                    "relativeUri": "/{id}",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "uriParameters": {
                        "id": {
                            "name": "id",
                            "displayName": "id",
                            "type": "integer",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "resources": [
                        {
                            "relativeUri": "/delete",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200"
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "queryParameters": {
                                        "preview": {
                                            "name": "preview",
                                            "displayName": "preview",
                                            "type": "boolean",
                                            "required": false,
                                            "repeat": false,
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Deletes a comment.\n \nUse an access_token with write_access to delete a comment.\n \nIn practice, this method will never return an object.\n",
                                    "method": "post",
                                    "is": [
                                        "perSiteMethod",
                                        "base"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/delete",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "delete"
                            ]
                        },
                        {
                            "relativeUri": "/edit",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "created_comment",
                                                    "example": "{\n  \"body\": \"some string\",\n  \"body_markdown\": \"some string\",\n  \"can_flag\": true,\n  \"comment_id\": 1,\n  \"creation_date\": 1,\n  \"edited\": true,\n  \"link\": \"some string\",\n  \"owner\": {\n    \"accept_rate\": 1,\n    \"badge_counts\": {\n      \"bronze\": 1,\n      \"gold\": 1,\n      \"silver\": 1\n    },\n    \"display_name\": \"some string\",\n    \"link\": \"some string\",\n    \"profile_image\": \"some string\",\n    \"reputation\": 1,\n    \"user_id\": 1,\n    \"user_type\": \"some string\"\n  },\n  \"post_id\": 1,\n  \"post_type\": \"some string\",\n  \"reply_to_user\": {\n    \"accept_rate\": 1,\n    \"badge_counts\": {\n      \"bronze\": 1,\n      \"gold\": 1,\n      \"silver\": 1\n    },\n    \"display_name\": \"some string\",\n    \"link\": \"some string\",\n    \"profile_image\": \"some string\",\n    \"reputation\": 1,\n    \"user_id\": 1,\n    \"user_type\": \"some string\"\n  },\n  \"score\": 1,\n  \"upvoted\": true\n}",
                                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"body\": {\n      \"required\": false,\n      \"type\": \"string\"\n    },\n    \"body_markdown\": {\n      \"required\": false,\n      \"type\": \"string\"\n    },\n    \"can_flag\": {\n      \"required\": false,\n      \"type\": \"boolean\"\n    },\n    \"comment_id\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"creation_date\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"edited\": {\n      \"required\": false,\n      \"type\": \"boolean\"\n    },\n    \"link\": {\n      \"required\": false,\n      \"type\": \"string\"\n    },\n    \"owner\": {\n      \"required\": false,\n      \"type\": \"object\",\n      \"properties\": {\n        \"accept_rate\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"badge_counts\": {\n          \"required\": false,\n          \"type\": \"object\",\n          \"properties\": {\n            \"bronze\": {\n              \"required\": false,\n              \"type\": \"integer\"\n            },\n            \"gold\": {\n              \"required\": false,\n              \"type\": \"integer\"\n            },\n            \"silver\": {\n              \"required\": false,\n              \"type\": \"integer\"\n            }\n          }\n        },\n        \"display_name\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"link\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"profile_image\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"reputation\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"user_id\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"user_type\": {\n          \"required\": false,\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"post_id\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"post_type\": {\n      \"required\": false,\n      \"type\": \"string\"\n    },\n    \"reply_to_user\": {\n      \"required\": false,\n      \"type\": \"object\",\n      \"properties\": {\n        \"accept_rate\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"badge_counts\": {\n          \"required\": false,\n          \"type\": \"object\",\n          \"properties\": {\n            \"bronze\": {\n              \"required\": false,\n              \"type\": \"integer\"\n            },\n            \"gold\": {\n              \"required\": false,\n              \"type\": \"integer\"\n            },\n            \"silver\": {\n              \"required\": false,\n              \"type\": \"integer\"\n            }\n          }\n        },\n        \"display_name\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"link\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"profile_image\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"reputation\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"user_id\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"user_type\": {\n          \"required\": false,\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"score\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"upvoted\": {\n      \"required\": false,\n      \"type\": \"boolean\"\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "queryParameters": {
                                        "body": {
                                            "name": "body",
                                            "displayName": "body",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "preview": {
                                            "name": "preview",
                                            "displayName": "preview",
                                            "type": "boolean",
                                            "required": false,
                                            "repeat": false,
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Edit an existing comment.\n \nUse an access_token with write_access to edit an existing comment.\n \nThis method return the created comment.\n",
                                    "method": "post",
                                    "is": [
                                        "perSiteMethod",
                                        "base"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/edit",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "edit"
                            ]
                        }
                    ],
                    "displayName": "/{id}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{id}"
                    ]
                }
            ],
            "displayName": "/comments",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "comments"
            ]
        },
        {
            "relativeUri": "/events",
            "type": "stackexchangeResource",
            "securedBy": [
                "oauth_2_0"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "events",
                                    "example": "[\n  {\n    \"creation_date\": 1,\n    \"the id of the object (answer, comment, question, or user) the event describes\": 1,\n    \"event_type\": \"some string\",\n    \"excerpt\": \"some string\",\n    \"link\": \"some string\"\n  }\n]",
                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"event_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"excerpt\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"the id of the object (answer, comment, question, or user) the event describes\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "queryParameters": {
                        "since": {
                            "name": "since",
                            "displayName": "since",
                            "type": "integer",
                            "required": false,
                            "repeat": false,
                            "description": "Unix date.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Returns a stream of events that have occurred on the site.\n \nThe API considers the following \"events\":\n - posting a question\n - posting an answer\n - posting a comment\n - editing a post\n - creating a user\n  \n \nEvents are only accessible for 15 minutes after they occurred, and by default only events in the last 5 minutes are returned. You can specify the age of the oldest event returned by setting the since parameter.\n \nIt is advised that developers batch events by ids and make as few subsequent requests to other methods as possible.\n \nThis method returns a list of events.\n",
                    "method": "get",
                    "is": [
                        "perSiteMethod",
                        "base",
                        "pageable"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/events",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "events"
            ]
        },
        {
            "relativeUri": "/info",
            "type": "stackexchangeResource",
            "securedBy": [
                "oauth_2_0"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "info_object",
                                    "example": "{\n  \"answers_per_minute\": 1.0,\n  \"api_revision\": \"some string\",\n  \"badges_per_minute\": 1.0,\n  \"new_active_users\": 1,\n  \"questions_per_minute\": 1.0,\n  \"site\": {\n    \"aliases\": [\n    ],\n    \"api_site_parameter\": \"some string\",\n    \"audience\": \"some string\",\n    \"closed_beta_date\": 1,\n    \"favicon_url\": \"some string\",\n    \"high_resolution_icon_url\": \"some string\",\n    \"icon_url\": \"some string\",\n    \"launch_date\": 1,\n    \"logo_url\": \"some string\",\n    \"markdown_extensions\": [\n    ],\n    \"name\": \"some string\",\n    \"open_beta_date\": 1,\n    \"related_sites\": [\n    ],\n    \"site_state\": \"some string\",\n    \"site_type\": \"some string\",\n    \"site_url\": \"some string\",\n    \"styling\": {\n      \"link_color\": \"some string\",\n      \"tag_background_color\": \"some string\",\n      \"tag_foreground_color\": \"some string\"\n    },\n    \"twitter_account\": \"some string\"\n  },\n  \"total_accepted\": 1,\n  \"total_answers\": 1,\n  \"total_badges\": 1,\n  \"total_comments\": 1,\n  \"total_questions\": 1,\n  \"total_unanswered\": 1,\n  \"total_users\": 1,\n  \"total_votes\": 1\n}",
                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"answers_per_minute\": {\n      \"required\": false,\n      \"type\": \"number\"\n    },\n    \"api_revision\": {\n      \"required\": false,\n      \"type\": \"string\"\n    },\n    \"badges_per_minute\": {\n      \"required\": false,\n      \"type\": \"number\"\n    },\n    \"new_active_users\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"questions_per_minute\": {\n      \"required\": false,\n      \"type\": \"number\"\n    },\n    \"site\": {\n      \"required\": false,\n      \"type\": \"object\",\n      \"properties\": {\n        \"aliases\": {\n          \"required\": false,\n          \"type\": \"array\"\n        },\n        \"api_site_parameter\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"audience\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"closed_beta_date\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"favicon_url\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"high_resolution_icon_url\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"icon_url\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"launch_date\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"logo_url\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"markdown_extensions\": {\n          \"required\": false,\n          \"type\": \"array\"\n        },\n        \"name\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"open_beta_date\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"related_sites\": {\n          \"required\": false,\n          \"type\": \"array\"\n        },\n        \"site_state\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"site_type\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"site_url\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"styling\": {\n          \"required\": false,\n          \"type\": \"object\",\n          \"properties\": {\n            \"link_color\": {\n              \"required\": false,\n              \"type\": \"string\"\n            },\n            \"tag_background_color\": {\n              \"required\": false,\n              \"type\": \"string\"\n            },\n            \"tag_foreground_color\": {\n              \"required\": false,\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"twitter_account\": {\n          \"required\": false,\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"total_accepted\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"total_answers\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"total_badges\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"total_comments\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"total_questions\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"total_unanswered\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"total_users\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"total_votes\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "description": "Returns a collection of statistics about the site.\n \nData to facilitate per-site customization, discover related sites, and aggregate statistics is all returned by this method.\n \nThis data is cached very aggressively, by design. Query sparingly, ideally no more than once an hour.\n \nThis method returns an info object.\n",
                    "method": "get",
                    "is": [
                        "perSiteMethod"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/info",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "info"
            ]
        },
        {
            "relativeUri": "/posts",
            "type": "stackexchangeResource",
            "securedBy": [
                "oauth_2_0"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "posts",
                                    "example": "[\n  {\n    \"body\": \"some string\",\n    \"body_markdown\": \"some string\",\n    \"comment_count\": 1,\n    \"comments\": [\n    ],\n    \"creation_date\": 1,\n    \"down_vote_count\": 1,\n    \"downvoted\": true,\n    \"last_activity_date\": 1,\n    \"last_edit_date\": 1,\n    \"last_editor\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"link\": \"some string\",\n    \"owner\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"post_id\": 1,\n    \"post_type\": \"some string\",\n    \"score\": 1,\n    \"share_link\": \"some string\",\n    \"title\": \"some string\",\n    \"up_vote_count\": 1,\n    \"upvoted\": true\n  }\n]",
                                    "schemaContent": "posts"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "description": "Fetches all posts (questions and answers) on the site.\n \nIn many ways this method is the union of /questions and /answers, returning both sets of data albeit only the common fields.\n \nMost applications should use the question or answer specific methods, but /posts is available for those rare cases where any activity is of intereset. Examples of such queries would be: \"all posts on Jan. 1st 2011\" or \"top 10 posts by score of all time\".\n \nThe sorts accepted by this method operate on the follow fields of the post object:\n - activity - last_activity_date\n - creation - creation_date\n - votes - score\n  activity is the default sort.\n \n It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\n \nThis method returns a list of posts.\n",
                    "method": "get",
                    "is": [
                        "perSiteMethod",
                        "base",
                        "pageable",
                        "filterableByDate",
                        "sortableByActivityCreationVotes",
                        "ordering"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/{ids}",
                    "type": "stackexchangeResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "uriParameters": {
                        "ids": {
                            "name": "ids",
                            "displayName": "ids",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "description": "Number list (semicolon delimited).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "posts",
                                            "example": "[\n  {\n    \"body\": \"some string\",\n    \"body_markdown\": \"some string\",\n    \"comment_count\": 1,\n    \"comments\": [\n    ],\n    \"creation_date\": 1,\n    \"down_vote_count\": 1,\n    \"downvoted\": true,\n    \"last_activity_date\": 1,\n    \"last_edit_date\": 1,\n    \"last_editor\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"link\": \"some string\",\n    \"owner\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"post_id\": 1,\n    \"post_type\": \"some string\",\n    \"score\": 1,\n    \"share_link\": \"some string\",\n    \"title\": \"some string\",\n    \"up_vote_count\": 1,\n    \"upvoted\": true\n  }\n]",
                                            "schemaContent": "posts"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Fetches a set of posts by ids.\n \nThis method is meant for grabbing an object when unsure whether an id identifies a question or an answer. This is most common with user entered data.\n \n{ids} can contain up to 100 semicolon delimited ids, to find ids programatically look for post_id, answer_id, or question_id on post, answer, and question objects respectively.\n \nThe sorts accepted by this method operate on the follow fields of the post object:\n - activity - last_activity_date\n - creation - creation_date\n - votes - score\n  activity is the default sort.\n \n It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\n \nThis method returns a list of posts.\n",
                            "method": "get",
                            "is": [
                                "perSiteMethod",
                                "base",
                                "pageable",
                                "filterableByDate",
                                "sortableByActivityCreationVotes",
                                "ordering"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/comments",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "comments",
                                                    "example": "[\n  {\n    \"body\": \"some string\",\n    \"body_markdown\": \"some string\",\n    \"can_flag\": true,\n    \"comment_id\": 1,\n    \"creation_date\": 1,\n    \"edited\": true,\n    \"link\": \"some string\",\n    \"owner\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"post_id\": 1,\n    \"post_type\": \"some string\",\n    \"reply_to_user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"score\": 1,\n    \"upvoted\": true\n  }\n]",
                                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"can_flag\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"comment_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"edited\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"post_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"post_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"reply_to_user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "description": "Gets the comments on the posts identified in ids, regardless of the type of the posts.\n \nThis method is meant for cases when you are unsure of the type of the post id provided. Generally, this would be due to obtaining the post id directly from a user.\n \n{ids} can contain up to 100 semicolon delimited ids, to find ids programatically look for post_id, answer_id, or question_id on post, answer, and question objects respectively.\n \nThe sorts accepted by this method operate on the follow fields of the comment object:\n - creation - creation_date\n - votes - score\n  creation is the default sort.\n \n It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\n \nThis method returns a list of comments.\n",
                                    "method": "get",
                                    "is": [
                                        "perSiteMethod",
                                        "base",
                                        "pageable",
                                        "filterableByDate",
                                        "sortableByCreationVotes",
                                        "ordering"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/comments",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "comments"
                            ]
                        },
                        {
                            "relativeUri": "/revisions",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "revisions",
                                                    "example": "[\n  {\n    \"body\": \"some string\",\n    \"comment\": \"some string\",\n    \"creation_date\": 1,\n    \"is_rollback\": true,\n    \"last_body\": \"some string\",\n    \"last_tags\": [\n    ],\n    \"last_title\": \"some string\",\n    \"post_id\": 1,\n    \"post_type\": \"some string\",\n    \"revision_guid\": \"some string\",\n    \"revision_number\": 1,\n    \"revision_type\": \"some string\",\n    \"set_community_wiki\": true,\n    \"tags\": [\n    ],\n    \"title\": \"some string\",\n    \"user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    }\n  }\n]",
                                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"comment\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"is_rollback\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"last_body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"last_tags\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"last_title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"post_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"post_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"revision_guid\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"revision_number\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"revision_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"set_community_wiki\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"tags\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "description": "Returns edit revisions for the posts identified in ids.\n \n{ids} can contain up to 100 semicolon delimited ids, to find ids programatically look for post_id, answer_id, or question_id on post, answer, and question objects respectively.\n \nThis method returns a list of revisions.\n",
                                    "method": "get",
                                    "is": [
                                        "perSiteMethod",
                                        "base",
                                        "pageable",
                                        "filterableByDate"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/revisions",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "revisions"
                            ]
                        },
                        {
                            "relativeUri": "/suggested-edits",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "suggested-edits",
                                                    "example": "[\n  {\n    \"approval_date\": 1,\n    \"body\": \"some string\",\n    \"comment\": \"some string\",\n    \"creation_date\": 1,\n    \"post_id\": 1,\n    \"post_type\": \"some string\",\n    \"proposing_user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"rejection_date\": 1,\n    \"suggested_edit_id\": 1,\n    \"tags\": [\n    ],\n    \"title\": \"some string\"\n  }\n]",
                                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"approval_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"comment\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"post_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"post_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"proposing_user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"rejection_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"suggested_edit_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"tags\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "description": "Returns suggsted edits on the posts identified in ids.\n \n - creation - creation_date\n - approval - approval_date\n - rejection - rejection_date\n  creation is the default sort.\n \n {ids} can contain up to 100 semicolon delimited ids, to find ids programatically look for post_id, answer_id, or question_id on post, answer, and question objects respectively.\n \nThis method returns a list of suggested-edits.\n",
                                    "method": "get",
                                    "is": [
                                        "perSiteMethod",
                                        "base",
                                        "pageable",
                                        "filterableByDate",
                                        "suggestedEdits",
                                        "ordering"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/suggested-edits",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "suggested-edits"
                            ]
                        }
                    ],
                    "displayName": "/{ids}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{ids}"
                    ]
                },
                {
                    "relativeUri": "/{id}",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "uriParameters": {
                        "id": {
                            "name": "id",
                            "displayName": "id",
                            "type": "integer",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "resources": [
                        {
                            "relativeUri": "/comments",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "resources": [
                                {
                                    "relativeUri": "/add",
                                    "type": "stackexchangeResource",
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "methods": [
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "created_comment",
                                                            "example": "{\n  \"body\": \"some string\",\n  \"body_markdown\": \"some string\",\n  \"can_flag\": true,\n  \"comment_id\": 1,\n  \"creation_date\": 1,\n  \"edited\": true,\n  \"link\": \"some string\",\n  \"owner\": {\n    \"accept_rate\": 1,\n    \"badge_counts\": {\n      \"bronze\": 1,\n      \"gold\": 1,\n      \"silver\": 1\n    },\n    \"display_name\": \"some string\",\n    \"link\": \"some string\",\n    \"profile_image\": \"some string\",\n    \"reputation\": 1,\n    \"user_id\": 1,\n    \"user_type\": \"some string\"\n  },\n  \"post_id\": 1,\n  \"post_type\": \"some string\",\n  \"reply_to_user\": {\n    \"accept_rate\": 1,\n    \"badge_counts\": {\n      \"bronze\": 1,\n      \"gold\": 1,\n      \"silver\": 1\n    },\n    \"display_name\": \"some string\",\n    \"link\": \"some string\",\n    \"profile_image\": \"some string\",\n    \"reputation\": 1,\n    \"user_id\": 1,\n    \"user_type\": \"some string\"\n  },\n  \"score\": 1,\n  \"upvoted\": true\n}",
                                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"body\": {\n      \"required\": false,\n      \"type\": \"string\"\n    },\n    \"body_markdown\": {\n      \"required\": false,\n      \"type\": \"string\"\n    },\n    \"can_flag\": {\n      \"required\": false,\n      \"type\": \"boolean\"\n    },\n    \"comment_id\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"creation_date\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"edited\": {\n      \"required\": false,\n      \"type\": \"boolean\"\n    },\n    \"link\": {\n      \"required\": false,\n      \"type\": \"string\"\n    },\n    \"owner\": {\n      \"required\": false,\n      \"type\": \"object\",\n      \"properties\": {\n        \"accept_rate\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"badge_counts\": {\n          \"required\": false,\n          \"type\": \"object\",\n          \"properties\": {\n            \"bronze\": {\n              \"required\": false,\n              \"type\": \"integer\"\n            },\n            \"gold\": {\n              \"required\": false,\n              \"type\": \"integer\"\n            },\n            \"silver\": {\n              \"required\": false,\n              \"type\": \"integer\"\n            }\n          }\n        },\n        \"display_name\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"link\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"profile_image\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"reputation\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"user_id\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"user_type\": {\n          \"required\": false,\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"post_id\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"post_type\": {\n      \"required\": false,\n      \"type\": \"string\"\n    },\n    \"reply_to_user\": {\n      \"required\": false,\n      \"type\": \"object\",\n      \"properties\": {\n        \"accept_rate\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"badge_counts\": {\n          \"required\": false,\n          \"type\": \"object\",\n          \"properties\": {\n            \"bronze\": {\n              \"required\": false,\n              \"type\": \"integer\"\n            },\n            \"gold\": {\n              \"required\": false,\n              \"type\": \"integer\"\n            },\n            \"silver\": {\n              \"required\": false,\n              \"type\": \"integer\"\n            }\n          }\n        },\n        \"display_name\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"link\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"profile_image\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"reputation\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"user_id\": {\n          \"required\": false,\n          \"type\": \"integer\"\n        },\n        \"user_type\": {\n          \"required\": false,\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"score\": {\n      \"required\": false,\n      \"type\": \"integer\"\n    },\n    \"upvoted\": {\n      \"required\": false,\n      \"type\": \"boolean\"\n    }\n  }\n}"
                                                        }
                                                    }
                                                }
                                            },
                                            "protocols": [
                                                "HTTPS"
                                            ],
                                            "securedBy": [
                                                "oauth_2_0"
                                            ],
                                            "queryParameters": {
                                                "body": {
                                                    "name": "body",
                                                    "displayName": "body",
                                                    "type": "string",
                                                    "required": false,
                                                    "repeat": false,
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "preview": {
                                                    "name": "preview",
                                                    "displayName": "preview",
                                                    "type": "boolean",
                                                    "required": false,
                                                    "repeat": false,
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "description": "Create a new comment.\n \nUse an access_token with write_access to create a new comment on a post.\n \nThis method returns the created comment.\n",
                                            "method": "post",
                                            "is": [
                                                "perSiteMethod",
                                                "base"
                                            ],
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/add",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "securedBy": {
                                                "calculated": true
                                            },
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "add"
                                    ]
                                }
                            ],
                            "displayName": "/comments",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "comments"
                            ]
                        }
                    ],
                    "displayName": "/{id}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{id}"
                    ]
                }
            ],
            "displayName": "/posts",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "posts"
            ]
        },
        {
            "relativeUri": "/privileges",
            "type": "stackexchangeResource",
            "securedBy": [
                "oauth_2_0"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "privileges",
                                    "example": "[\n  {\n    \"description\": \"some string\",\n    \"reputation\": 1,\n    \"short_description\": \"some string\"\n  }\n]",
                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"description\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"reputation\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"short_description\": {\n        \"required\": false,\n        \"type\": \"string\"\n      }\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "description": "Returns the earnable privileges on a site.\n \nPrivileges define abilities a user can earn (via reputation) on any Stack Exchange site.\n \nWhile fairly stable, over time they do change. New ones are introduced with new features, and the reputation requirements change as a site matures.\n \nThis method returns a list of privileges.\n",
                    "method": "get",
                    "is": [
                        "perSiteMethod",
                        "base",
                        "pageable"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/privileges",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "privileges"
            ]
        },
        {
            "relativeUri": "/questions",
            "type": "stackexchangeResource",
            "securedBy": [
                "oauth_2_0"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "questions",
                                    "example": "[\n  {\n    \"accepted_answer_id\": 1,\n    \"answer_count\": 1,\n    \"answers\": [\n    ],\n    \"body\": \"some string\",\n    \"body_markdown\": \"some string\",\n    \"bounty_amount\": 1,\n    \"bounty_closes_date\": 1,\n    \"bounty_user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"can_close\": true,\n    \"can_flag\": true,\n    \"close_vote_count\": 1,\n    \"closed_date\": 1,\n    \"closed_details\": {\n      \"by_users\": [\n      ],\n      \"description\": \"some string\",\n      \"on_hold\": true,\n      \"original_questions\": [\n      ],\n      \"reason\": \"some string\"\n    },\n    \"closed_reason\": \"some string\",\n    \"comment_count\": 1,\n    \"comments\": [\n    ],\n    \"community_owned_date\": 1,\n    \"creation_date\": 1,\n    \"delete_vote_count\": 1,\n    \"down_vote_count\": 1,\n    \"downvoted\": true,\n    \"favorite_count\": 1,\n    \"favorited\": true,\n    \"is_answered\": true,\n    \"last_activity_date\": 1,\n    \"last_edit_date\": 1,\n    \"last_editor\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"link\": \"some string\",\n    \"locked_date\": 1,\n    \"migrated_from\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"migrated_to\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"notice\": {\n      \"body\": \"some string\",\n      \"creation_date\": 1,\n      \"owner_user_id\": 1\n    },\n    \"owner\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"protected_date\": 1,\n    \"question_id\": 1,\n    \"reopen_vote_count\": 1,\n    \"score\": 1,\n    \"share_link\": \"some string\",\n    \"tags\": [\n    ],\n    \"title\": \"some string\",\n    \"up_vote_count\": 1,\n    \"upvoted\": true,\n    \"view_count\": 1\n  }\n]",
                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"accepted_answer_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answer_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answers\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"bounty_amount\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_closes_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"can_close\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"can_flag\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"close_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_details\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"by_users\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"description\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"on_hold\": {\n            \"required\": false,\n            \"type\": \"boolean\"\n          },\n          \"original_questions\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"reason\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"closed_reason\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"comment_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"comments\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"community_owned_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"delete_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"down_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"downvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"favorite_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"favorited\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"is_answered\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"last_activity_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_edit_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_editor\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"locked_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"migrated_from\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"migrated_to\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"notice\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"body\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"creation_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"owner_user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"protected_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"question_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"reopen_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"share_link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"tags\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"up_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"view_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "description": "Gets all the questions on the site.\n \nThis method allows you make fairly flexible queries across the entire corpus of questions on a site. For example, getting all questions asked in the the week of Jan 1st 2011 with scores of 10 or more is a single query with parameters sort=votes&min=10&fromdate=1293840000&todate=1294444800.\n \nTo constrain questions returned to those with a set of tags, use the tagged parameter with a semi-colon delimited list of tags. This is an and contraint, passing tagged=c;java will return only those questions with both tags. As such, passing more than 5 tags will always return zero results.\n \nThe sorts accepted by this method operate on the follow fields of the question object:\n - activity - last_activity_date\n - creation - creation_date\n - votes - score\n - hot - by the formula ordering the hot tab Does not accept min or max\n - week - by the formula ordering the week tab Does not accept min or max\n - month - by the formula ordering the month tab Does not accept min or max\n  activity is the default sort.\n \n It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\n \nThis method returns a list of questions.\n",
                    "method": "get",
                    "is": [
                        "perSiteMethod",
                        "base",
                        "pageable",
                        "filterableByDate",
                        "questions",
                        "ordering",
                        "searchesByTag"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/{ids}",
                    "type": "stackexchangeResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "uriParameters": {
                        "ids": {
                            "name": "ids",
                            "displayName": "ids",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "description": "Number list (semicolon delimited).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "questions",
                                            "example": "[\n  {\n    \"accepted_answer_id\": 1,\n    \"answer_count\": 1,\n    \"answers\": [\n    ],\n    \"body\": \"some string\",\n    \"body_markdown\": \"some string\",\n    \"bounty_amount\": 1,\n    \"bounty_closes_date\": 1,\n    \"bounty_user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"can_close\": true,\n    \"can_flag\": true,\n    \"close_vote_count\": 1,\n    \"closed_date\": 1,\n    \"closed_details\": {\n      \"by_users\": [\n      ],\n      \"description\": \"some string\",\n      \"on_hold\": true,\n      \"original_questions\": [\n      ],\n      \"reason\": \"some string\"\n    },\n    \"closed_reason\": \"some string\",\n    \"comment_count\": 1,\n    \"comments\": [\n    ],\n    \"community_owned_date\": 1,\n    \"creation_date\": 1,\n    \"delete_vote_count\": 1,\n    \"down_vote_count\": 1,\n    \"downvoted\": true,\n    \"favorite_count\": 1,\n    \"favorited\": true,\n    \"is_answered\": true,\n    \"last_activity_date\": 1,\n    \"last_edit_date\": 1,\n    \"last_editor\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"link\": \"some string\",\n    \"locked_date\": 1,\n    \"migrated_from\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"migrated_to\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"notice\": {\n      \"body\": \"some string\",\n      \"creation_date\": 1,\n      \"owner_user_id\": 1\n    },\n    \"owner\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"protected_date\": 1,\n    \"question_id\": 1,\n    \"reopen_vote_count\": 1,\n    \"score\": 1,\n    \"share_link\": \"some string\",\n    \"tags\": [\n    ],\n    \"title\": \"some string\",\n    \"up_vote_count\": 1,\n    \"upvoted\": true,\n    \"view_count\": 1\n  }\n]",
                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"accepted_answer_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answer_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answers\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"bounty_amount\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_closes_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"can_close\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"can_flag\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"close_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_details\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"by_users\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"description\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"on_hold\": {\n            \"required\": false,\n            \"type\": \"boolean\"\n          },\n          \"original_questions\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"reason\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"closed_reason\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"comment_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"comments\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"community_owned_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"delete_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"down_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"downvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"favorite_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"favorited\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"is_answered\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"last_activity_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_edit_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_editor\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"locked_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"migrated_from\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"migrated_to\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"notice\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"body\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"creation_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"owner_user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"protected_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"question_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"reopen_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"share_link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"tags\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"up_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"view_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Returns the questions identified in {ids}.\n \nThis is most useful for fetching fresh data when maintaining a cache of question ids, or polling for changes.\n \n{ids} can contain up to 100 semicolon delimited ids, to find ids programatically look for question_id on question objects.\n \nThe sorts accepted by this method operate on the follow fields of the question object:\n - activity - last_activity_date\n - creation - creation_date\n - votes - score\n  activity is the default sort.\n \n It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\n \nThis method returns a list of questions.\n",
                            "method": "get",
                            "is": [
                                "perSiteMethod",
                                "base",
                                "pageable",
                                "filterableByDate",
                                "sortableByActivityCreationVotes",
                                "ordering"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/answers",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "answers",
                                                    "example": "[\n  {\n    \"accepted\": true,\n    \"answer_id\": 1,\n    \"awarded_bounty_amount\": 1,\n    \"awarded_bounty_users\": [\n    ],\n    \"body\": \"some string\",\n    \"body_markdown\": \"some string\",\n    \"can_flag\": true,\n    \"comment_count\": 1,\n    \"comments\": [\n    ],\n    \"community_owned_date\": 1,\n    \"creation_date\": 1,\n    \"down_vote_count\": 1,\n    \"downvoted\": true,\n    \"is_accepted\": true,\n    \"last_activity_date\": 1,\n    \"last_edit_date\": 1,\n    \"last_editor\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"link\": \"some string\",\n    \"locked_date\": 1,\n    \"owner\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"question_id\": 1,\n    \"score\": 1,\n    \"share_link\": \"some string\",\n    \"tags\": [\n    ],\n    \"title\": \"some string\",\n    \"up_vote_count\": 1,\n    \"upvoted\": true\n  }\n]",
                                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"accepted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"answer_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"awarded_bounty_amount\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"awarded_bounty_users\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"can_flag\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"comment_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"comments\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"community_owned_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"down_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"downvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"is_accepted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"last_activity_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_edit_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_editor\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"locked_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"question_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"share_link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"tags\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"up_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "description": "Gets the answers to a set of questions identified in id.\n \nThis method is most useful if you have a set of interesting questions, and you wish to obtain all of their answers at once or if you are polling for new or updates answers (in conjunction with sort=activity).\n \n{ids} can contain up to 100 semicolon delimited ids, to find ids programatically look for question_id on question objects.\n \nThe sorts accepted by this method operate on the follow fields of the answer object:\n - activity - last_activity_date\n - creation - creation_date\n - votes - score\n  activity is the default sort.\n \n It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\n \nThis method returns a list of answers.\n",
                                    "method": "get",
                                    "is": [
                                        "perSiteMethod",
                                        "base",
                                        "pageable",
                                        "filterableByDate",
                                        "sortableByActivityCreationVotes",
                                        "ordering"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/answers",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "answers"
                            ]
                        },
                        {
                            "relativeUri": "/comments",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "comments",
                                                    "example": "[\n  {\n    \"body\": \"some string\",\n    \"body_markdown\": \"some string\",\n    \"can_flag\": true,\n    \"comment_id\": 1,\n    \"creation_date\": 1,\n    \"edited\": true,\n    \"link\": \"some string\",\n    \"owner\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"post_id\": 1,\n    \"post_type\": \"some string\",\n    \"reply_to_user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"score\": 1,\n    \"upvoted\": true\n  }\n]",
                                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"can_flag\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"comment_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"edited\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"post_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"post_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"reply_to_user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "description": "Gets the comments on a question.\n \nIf you know that you have an question id and need the comments, use this method. If you know you have a answer id, use /answers/{ids}/comments. If you are unsure, use /posts/{ids}/comments.\n \n{ids} can contain up to 100 semicolon delimited ids, to find ids programatically look for question_id on question objects.\n \nThe sorts accepted by this method operate on the follow fields of the comment object:\n - creation - creation_date\n - votes - score\n  creation is the default sort.\n \n It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\n \nThis method returns a list of comments.\n",
                                    "method": "get",
                                    "is": [
                                        "perSiteMethod",
                                        "base",
                                        "pageable",
                                        "filterableByDate",
                                        "sortableByCreationVotes",
                                        "ordering"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/comments",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "comments"
                            ]
                        },
                        {
                            "relativeUri": "/linked",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "questions",
                                                    "example": "[\n  {\n    \"accepted_answer_id\": 1,\n    \"answer_count\": 1,\n    \"answers\": [\n    ],\n    \"body\": \"some string\",\n    \"body_markdown\": \"some string\",\n    \"bounty_amount\": 1,\n    \"bounty_closes_date\": 1,\n    \"bounty_user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"can_close\": true,\n    \"can_flag\": true,\n    \"close_vote_count\": 1,\n    \"closed_date\": 1,\n    \"closed_details\": {\n      \"by_users\": [\n      ],\n      \"description\": \"some string\",\n      \"on_hold\": true,\n      \"original_questions\": [\n      ],\n      \"reason\": \"some string\"\n    },\n    \"closed_reason\": \"some string\",\n    \"comment_count\": 1,\n    \"comments\": [\n    ],\n    \"community_owned_date\": 1,\n    \"creation_date\": 1,\n    \"delete_vote_count\": 1,\n    \"down_vote_count\": 1,\n    \"downvoted\": true,\n    \"favorite_count\": 1,\n    \"favorited\": true,\n    \"is_answered\": true,\n    \"last_activity_date\": 1,\n    \"last_edit_date\": 1,\n    \"last_editor\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"link\": \"some string\",\n    \"locked_date\": 1,\n    \"migrated_from\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"migrated_to\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"notice\": {\n      \"body\": \"some string\",\n      \"creation_date\": 1,\n      \"owner_user_id\": 1\n    },\n    \"owner\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"protected_date\": 1,\n    \"question_id\": 1,\n    \"reopen_vote_count\": 1,\n    \"score\": 1,\n    \"share_link\": \"some string\",\n    \"tags\": [\n    ],\n    \"title\": \"some string\",\n    \"up_vote_count\": 1,\n    \"upvoted\": true,\n    \"view_count\": 1\n  }\n]",
                                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"accepted_answer_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answer_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answers\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"bounty_amount\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_closes_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"can_close\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"can_flag\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"close_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_details\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"by_users\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"description\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"on_hold\": {\n            \"required\": false,\n            \"type\": \"boolean\"\n          },\n          \"original_questions\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"reason\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"closed_reason\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"comment_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"comments\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"community_owned_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"delete_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"down_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"downvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"favorite_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"favorited\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"is_answered\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"last_activity_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_edit_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_editor\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"locked_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"migrated_from\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"migrated_to\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"notice\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"body\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"creation_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"owner_user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"protected_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"question_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"reopen_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"share_link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"tags\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"up_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"view_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "description": "Gets questions which link to those questions identified in {ids}.\n \nThis method only considers questions that are linked within a site, and will never return questions from another Stack Exchange site.\n \nA question is considered \"linked\" when it explicitly includes a hyperlink to another question, there are no other heuristics.\n \n{ids} can contain up to 100 semicolon delimited ids, to find ids programatically look for question_id on question objects.\n \nThe sorts accepted by this method operate on the follow fields of the question object:\n - activity - last_activity_date\n - creation - creation_date\n - votes - score\n - rank - a priority sort by site applies, subject to change at any time Does not accept min or max\n  activity is the default sort.\n \n It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\n \nThis method returns a list of questions.\n",
                                    "method": "get",
                                    "is": [
                                        "perSiteMethod",
                                        "base",
                                        "pageable",
                                        "filterableByDate",
                                        "linkedOrRelated",
                                        "ordering"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/linked",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "linked"
                            ]
                        },
                        {
                            "relativeUri": "/related",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "questions",
                                                    "example": "[\n  {\n    \"accepted_answer_id\": 1,\n    \"answer_count\": 1,\n    \"answers\": [\n    ],\n    \"body\": \"some string\",\n    \"body_markdown\": \"some string\",\n    \"bounty_amount\": 1,\n    \"bounty_closes_date\": 1,\n    \"bounty_user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"can_close\": true,\n    \"can_flag\": true,\n    \"close_vote_count\": 1,\n    \"closed_date\": 1,\n    \"closed_details\": {\n      \"by_users\": [\n      ],\n      \"description\": \"some string\",\n      \"on_hold\": true,\n      \"original_questions\": [\n      ],\n      \"reason\": \"some string\"\n    },\n    \"closed_reason\": \"some string\",\n    \"comment_count\": 1,\n    \"comments\": [\n    ],\n    \"community_owned_date\": 1,\n    \"creation_date\": 1,\n    \"delete_vote_count\": 1,\n    \"down_vote_count\": 1,\n    \"downvoted\": true,\n    \"favorite_count\": 1,\n    \"favorited\": true,\n    \"is_answered\": true,\n    \"last_activity_date\": 1,\n    \"last_edit_date\": 1,\n    \"last_editor\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"link\": \"some string\",\n    \"locked_date\": 1,\n    \"migrated_from\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"migrated_to\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"notice\": {\n      \"body\": \"some string\",\n      \"creation_date\": 1,\n      \"owner_user_id\": 1\n    },\n    \"owner\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"protected_date\": 1,\n    \"question_id\": 1,\n    \"reopen_vote_count\": 1,\n    \"score\": 1,\n    \"share_link\": \"some string\",\n    \"tags\": [\n    ],\n    \"title\": \"some string\",\n    \"up_vote_count\": 1,\n    \"upvoted\": true,\n    \"view_count\": 1\n  }\n]",
                                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"accepted_answer_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answer_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answers\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"bounty_amount\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_closes_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"can_close\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"can_flag\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"close_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_details\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"by_users\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"description\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"on_hold\": {\n            \"required\": false,\n            \"type\": \"boolean\"\n          },\n          \"original_questions\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"reason\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"closed_reason\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"comment_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"comments\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"community_owned_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"delete_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"down_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"downvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"favorite_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"favorited\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"is_answered\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"last_activity_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_edit_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_editor\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"locked_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"migrated_from\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"migrated_to\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"notice\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"body\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"creation_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"owner_user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"protected_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"question_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"reopen_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"share_link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"tags\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"up_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"view_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "description": "Returns questions that the site considers related to those identified in {ids}.\n \nThe algorithm for determining if questions are related is not documented, and subject to change at any time. Futhermore, these values are very heavily cached, and may not update immediately after a question has been editted. It is also not guaranteed that a question will be considered related to any number (even non-zero) of questions, and a consumer should be able to handle a variable number of returned questions.\n \n{ids} can contain up to 100 semicolon delimited ids, to find ids programatically look for question_id on question objects.\n \nThe sorts accepted by this method operate on the follow fields of the question object:\n - activity - last_activity_date\n - creation - creation_date\n - votes - score\n - rank - a priority sort by site applies, subject to change at any time Does not accept min or max\n  activity is the default sort.\n \n It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\n \nThis method returns a list of questions.\n",
                                    "method": "get",
                                    "is": [
                                        "perSiteMethod",
                                        "base",
                                        "pageable",
                                        "filterableByDate",
                                        "linkedOrRelated",
                                        "ordering"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/related",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "related"
                            ]
                        },
                        {
                            "relativeUri": "/timeline",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "question_timeline_events",
                                                    "example": "[\n  {\n    \"comment_id\": 1,\n    \"creation_date\": 1,\n    \"down_vote_count\": 1,\n    \"owner\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"post_id\": 1,\n    \"question_id\": 1,\n    \"revision_guid\": \"some string\",\n    \"timeline_type\": \"some string\",\n    \"up_vote_count\": 1,\n    \"user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    }\n  }\n]",
                                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"comment_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"down_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"post_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"question_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"revision_guid\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"timeline_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"up_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "description": "Returns a subset of the events that have happened to the questions identified in id.\n \nThis provides data similar to that found on a question's timeline page.\n \nVoting data is scrubbed to deter inferencing of voter identity.\n \n{ids} can contain up to 100 semicolon delimited ids, to find ids programatically look for question_id on question objects.\n \nThis method returns a list of question timeline events.\n",
                                    "method": "get",
                                    "is": [
                                        "perSiteMethod",
                                        "base",
                                        "pageable",
                                        "filterableByDate"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/timeline",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "timeline"
                            ]
                        }
                    ],
                    "displayName": "/{ids}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{ids}"
                    ]
                },
                {
                    "relativeUri": "/featured",
                    "type": "stackexchangeResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "questions",
                                            "example": "[\n  {\n    \"accepted_answer_id\": 1,\n    \"answer_count\": 1,\n    \"answers\": [\n    ],\n    \"body\": \"some string\",\n    \"body_markdown\": \"some string\",\n    \"bounty_amount\": 1,\n    \"bounty_closes_date\": 1,\n    \"bounty_user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"can_close\": true,\n    \"can_flag\": true,\n    \"close_vote_count\": 1,\n    \"closed_date\": 1,\n    \"closed_details\": {\n      \"by_users\": [\n      ],\n      \"description\": \"some string\",\n      \"on_hold\": true,\n      \"original_questions\": [\n      ],\n      \"reason\": \"some string\"\n    },\n    \"closed_reason\": \"some string\",\n    \"comment_count\": 1,\n    \"comments\": [\n    ],\n    \"community_owned_date\": 1,\n    \"creation_date\": 1,\n    \"delete_vote_count\": 1,\n    \"down_vote_count\": 1,\n    \"downvoted\": true,\n    \"favorite_count\": 1,\n    \"favorited\": true,\n    \"is_answered\": true,\n    \"last_activity_date\": 1,\n    \"last_edit_date\": 1,\n    \"last_editor\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"link\": \"some string\",\n    \"locked_date\": 1,\n    \"migrated_from\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"migrated_to\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"notice\": {\n      \"body\": \"some string\",\n      \"creation_date\": 1,\n      \"owner_user_id\": 1\n    },\n    \"owner\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"protected_date\": 1,\n    \"question_id\": 1,\n    \"reopen_vote_count\": 1,\n    \"score\": 1,\n    \"share_link\": \"some string\",\n    \"tags\": [\n    ],\n    \"title\": \"some string\",\n    \"up_vote_count\": 1,\n    \"upvoted\": true,\n    \"view_count\": 1\n  }\n]",
                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"accepted_answer_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answer_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answers\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"bounty_amount\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_closes_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"can_close\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"can_flag\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"close_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_details\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"by_users\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"description\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"on_hold\": {\n            \"required\": false,\n            \"type\": \"boolean\"\n          },\n          \"original_questions\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"reason\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"closed_reason\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"comment_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"comments\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"community_owned_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"delete_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"down_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"downvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"favorite_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"favorited\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"is_answered\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"last_activity_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_edit_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_editor\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"locked_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"migrated_from\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"migrated_to\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"notice\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"body\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"creation_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"owner_user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"protected_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"question_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"reopen_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"share_link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"tags\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"up_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"view_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Returns all the questions with active bounties in the system.\n \nThe sorts accepted by this method operate on the follow fields of the question object:\n - activity - last_activity_date\n - creation - creation_date\n - votes - score\n  activity is the default sort.\n \n It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\n \nThis method returns a list of questions.\n",
                            "method": "get",
                            "is": [
                                "perSiteMethod",
                                "base",
                                "pageable",
                                "filterableByDate",
                                "sortableByActivityCreationVotes",
                                "ordering",
                                "searchesByTag"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/featured",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "featured"
                    ]
                },
                {
                    "relativeUri": "/unanswered",
                    "type": "stackexchangeResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "questions",
                                            "example": "[\n  {\n    \"accepted_answer_id\": 1,\n    \"answer_count\": 1,\n    \"answers\": [\n    ],\n    \"body\": \"some string\",\n    \"body_markdown\": \"some string\",\n    \"bounty_amount\": 1,\n    \"bounty_closes_date\": 1,\n    \"bounty_user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"can_close\": true,\n    \"can_flag\": true,\n    \"close_vote_count\": 1,\n    \"closed_date\": 1,\n    \"closed_details\": {\n      \"by_users\": [\n      ],\n      \"description\": \"some string\",\n      \"on_hold\": true,\n      \"original_questions\": [\n      ],\n      \"reason\": \"some string\"\n    },\n    \"closed_reason\": \"some string\",\n    \"comment_count\": 1,\n    \"comments\": [\n    ],\n    \"community_owned_date\": 1,\n    \"creation_date\": 1,\n    \"delete_vote_count\": 1,\n    \"down_vote_count\": 1,\n    \"downvoted\": true,\n    \"favorite_count\": 1,\n    \"favorited\": true,\n    \"is_answered\": true,\n    \"last_activity_date\": 1,\n    \"last_edit_date\": 1,\n    \"last_editor\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"link\": \"some string\",\n    \"locked_date\": 1,\n    \"migrated_from\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"migrated_to\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"notice\": {\n      \"body\": \"some string\",\n      \"creation_date\": 1,\n      \"owner_user_id\": 1\n    },\n    \"owner\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"protected_date\": 1,\n    \"question_id\": 1,\n    \"reopen_vote_count\": 1,\n    \"score\": 1,\n    \"share_link\": \"some string\",\n    \"tags\": [\n    ],\n    \"title\": \"some string\",\n    \"up_vote_count\": 1,\n    \"upvoted\": true,\n    \"view_count\": 1\n  }\n]",
                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"accepted_answer_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answer_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answers\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"bounty_amount\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_closes_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"can_close\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"can_flag\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"close_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_details\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"by_users\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"description\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"on_hold\": {\n            \"required\": false,\n            \"type\": \"boolean\"\n          },\n          \"original_questions\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"reason\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"closed_reason\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"comment_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"comments\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"community_owned_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"delete_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"down_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"downvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"favorite_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"favorited\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"is_answered\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"last_activity_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_edit_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_editor\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"locked_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"migrated_from\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"migrated_to\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"notice\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"body\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"creation_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"owner_user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"protected_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"question_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"reopen_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"share_link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"tags\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"up_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"view_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Returns questions the site considers to be unanswered.\n \nNote that just because a question has an answer, that does not mean it is considered answered. While the rules are subject to change, at this time a question must have at least one upvoted answer to be considered answered.\n \nTo constrain questions returned to those with a set of tags, use the tagged parameter with a semi-colon delimited list of tags. This is an and contraint, passing tagged=c;java will return only those questions with both tags. As such, passing more than 5 tags will always return zero results.\n \nCompare with /questions/no-answers.\n \nThis method corresponds roughly with the unanswered tab.\n \nThe sorts accepted by this method operate on the follow fields of the question object:\n - activity - last_activity_date\n - creation - creation_date\n - votes - score\n  activity is the default sort.\n \n It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\n \nThis method returns a list of questions.\n",
                            "method": "get",
                            "is": [
                                "perSiteMethod",
                                "base",
                                "pageable",
                                "filterableByDate",
                                "sortableByActivityCreationVotes",
                                "ordering",
                                "searchesByTag"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/unanswered",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "unanswered"
                    ]
                },
                {
                    "relativeUri": "/no-answers",
                    "type": "stackexchangeResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "questions",
                                            "example": "[\n  {\n    \"accepted_answer_id\": 1,\n    \"answer_count\": 1,\n    \"answers\": [\n    ],\n    \"body\": \"some string\",\n    \"body_markdown\": \"some string\",\n    \"bounty_amount\": 1,\n    \"bounty_closes_date\": 1,\n    \"bounty_user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"can_close\": true,\n    \"can_flag\": true,\n    \"close_vote_count\": 1,\n    \"closed_date\": 1,\n    \"closed_details\": {\n      \"by_users\": [\n      ],\n      \"description\": \"some string\",\n      \"on_hold\": true,\n      \"original_questions\": [\n      ],\n      \"reason\": \"some string\"\n    },\n    \"closed_reason\": \"some string\",\n    \"comment_count\": 1,\n    \"comments\": [\n    ],\n    \"community_owned_date\": 1,\n    \"creation_date\": 1,\n    \"delete_vote_count\": 1,\n    \"down_vote_count\": 1,\n    \"downvoted\": true,\n    \"favorite_count\": 1,\n    \"favorited\": true,\n    \"is_answered\": true,\n    \"last_activity_date\": 1,\n    \"last_edit_date\": 1,\n    \"last_editor\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"link\": \"some string\",\n    \"locked_date\": 1,\n    \"migrated_from\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"migrated_to\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"notice\": {\n      \"body\": \"some string\",\n      \"creation_date\": 1,\n      \"owner_user_id\": 1\n    },\n    \"owner\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"protected_date\": 1,\n    \"question_id\": 1,\n    \"reopen_vote_count\": 1,\n    \"score\": 1,\n    \"share_link\": \"some string\",\n    \"tags\": [\n    ],\n    \"title\": \"some string\",\n    \"up_vote_count\": 1,\n    \"upvoted\": true,\n    \"view_count\": 1\n  }\n]",
                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"accepted_answer_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answer_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answers\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"bounty_amount\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_closes_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"can_close\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"can_flag\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"close_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_details\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"by_users\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"description\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"on_hold\": {\n            \"required\": false,\n            \"type\": \"boolean\"\n          },\n          \"original_questions\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"reason\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"closed_reason\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"comment_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"comments\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"community_owned_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"delete_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"down_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"downvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"favorite_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"favorited\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"is_answered\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"last_activity_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_edit_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_editor\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"locked_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"migrated_from\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"migrated_to\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"notice\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"body\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"creation_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"owner_user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"protected_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"question_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"reopen_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"share_link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"tags\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"up_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"view_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Returns questions which have received no answers.\n \nCompare with /questions/unanswered which mearly returns questions that the sites consider insufficiently well answered.\n \nThis method corresponds roughly with the this site tab.\n \nTo constrain questions returned to those with a set of tags, use the tagged parameter with a semi-colon delimited list of tags. This is an and contraint, passing tagged=c;java will return only those questions with both tags. As such, passing more than 5 tags will always return zero results.\n \nThe sorts accepted by this method operate on the follow fields of the question object:\n - activity - last_activity_date\n - creation - creation_date\n - votes - score\n  activity is the default sort.\n \n It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\n \nThis method returns a list of questions.\n",
                            "method": "get",
                            "is": [
                                "perSiteMethod",
                                "base",
                                "pageable",
                                "filterableByDate",
                                "sortableByActivityCreationVotes",
                                "ordering",
                                "searchesByTag"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/no-answers",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "no-answers"
                    ]
                }
            ],
            "displayName": "/questions",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "questions"
            ]
        },
        {
            "relativeUri": "/revisions",
            "securedBy": [
                "oauth_2_0"
            ],
            "resources": [
                {
                    "relativeUri": "/{ids}",
                    "type": "stackexchangeResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "uriParameters": {
                        "ids": {
                            "name": "ids",
                            "displayName": "ids",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "description": "Guid list (semicolon delimited).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "revisions",
                                            "example": "[\n  {\n    \"body\": \"some string\",\n    \"comment\": \"some string\",\n    \"creation_date\": 1,\n    \"is_rollback\": true,\n    \"last_body\": \"some string\",\n    \"last_tags\": [\n    ],\n    \"last_title\": \"some string\",\n    \"post_id\": 1,\n    \"post_type\": \"some string\",\n    \"revision_guid\": \"some string\",\n    \"revision_number\": 1,\n    \"revision_type\": \"some string\",\n    \"set_community_wiki\": true,\n    \"tags\": [\n    ],\n    \"title\": \"some string\",\n    \"user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    }\n  }\n]",
                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"comment\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"is_rollback\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"last_body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"last_tags\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"last_title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"post_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"post_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"revision_guid\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"revision_number\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"revision_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"set_community_wiki\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"tags\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Returns edit revisions identified by ids in {ids}.\n \n{ids} can contain up to 20 semicolon delimited ids, to find ids programatically look for revision_guid on revision objects. Note that unlike most other id types in the API, revision_guid is a string.\n \nThis method returns a list of revisions.\n",
                            "method": "get",
                            "is": [
                                "perSiteMethod",
                                "base",
                                "pageable",
                                "filterableByDate"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/{ids}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{ids}"
                    ]
                }
            ],
            "displayName": "/revisions",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "revisions"
            ]
        },
        {
            "relativeUri": "/search",
            "type": "stackexchangeResource",
            "securedBy": [
                "oauth_2_0"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "questions",
                                    "example": "[\n  {\n    \"accepted_answer_id\": 1,\n    \"answer_count\": 1,\n    \"answers\": [\n    ],\n    \"body\": \"some string\",\n    \"body_markdown\": \"some string\",\n    \"bounty_amount\": 1,\n    \"bounty_closes_date\": 1,\n    \"bounty_user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"can_close\": true,\n    \"can_flag\": true,\n    \"close_vote_count\": 1,\n    \"closed_date\": 1,\n    \"closed_details\": {\n      \"by_users\": [\n      ],\n      \"description\": \"some string\",\n      \"on_hold\": true,\n      \"original_questions\": [\n      ],\n      \"reason\": \"some string\"\n    },\n    \"closed_reason\": \"some string\",\n    \"comment_count\": 1,\n    \"comments\": [\n    ],\n    \"community_owned_date\": 1,\n    \"creation_date\": 1,\n    \"delete_vote_count\": 1,\n    \"down_vote_count\": 1,\n    \"downvoted\": true,\n    \"favorite_count\": 1,\n    \"favorited\": true,\n    \"is_answered\": true,\n    \"last_activity_date\": 1,\n    \"last_edit_date\": 1,\n    \"last_editor\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"link\": \"some string\",\n    \"locked_date\": 1,\n    \"migrated_from\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"migrated_to\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"notice\": {\n      \"body\": \"some string\",\n      \"creation_date\": 1,\n      \"owner_user_id\": 1\n    },\n    \"owner\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"protected_date\": 1,\n    \"question_id\": 1,\n    \"reopen_vote_count\": 1,\n    \"score\": 1,\n    \"share_link\": \"some string\",\n    \"tags\": [\n    ],\n    \"title\": \"some string\",\n    \"up_vote_count\": 1,\n    \"upvoted\": true,\n    \"view_count\": 1\n  }\n]",
                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"accepted_answer_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answer_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answers\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"bounty_amount\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_closes_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"can_close\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"can_flag\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"close_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_details\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"by_users\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"description\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"on_hold\": {\n            \"required\": false,\n            \"type\": \"boolean\"\n          },\n          \"original_questions\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"reason\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"closed_reason\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"comment_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"comments\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"community_owned_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"delete_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"down_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"downvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"favorite_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"favorited\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"is_answered\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"last_activity_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_edit_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_editor\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"locked_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"migrated_from\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"migrated_to\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"notice\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"body\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"creation_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"owner_user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"protected_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"question_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"reopen_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"share_link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"tags\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"up_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"view_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "queryParameters": {
                        "intitle": {
                            "name": "intitle",
                            "displayName": "intitle",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "nottagged": {
                            "name": "nottagged",
                            "displayName": "nottagged",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "String list (semicolon delimited).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Searches a site for any questions which fit the given criteria.\n \nThis method is intentionally quite limited. For more general searching, you should use a proper internet search engine restricted to the domain of the site in question.\n \nAt least one of tagged or intitle must be set on this method. nottagged is only used if tagged is also set, for performance reasons.\n \ntagged and nottagged are semi-colon delimited list of tags. At least 1 tag in tagged will be on each returned question if it is passed, making it the OR equivalent of the AND version of tagged on /questions.\n \nThe sorts accepted by this method operate on the follow fields of the question object:\n - activity - last_activity_date\n - creation - creation_date\n - votes - score\n - relevance - matches the relevance tab on the site itself Does not accept min or max\n  activity is the default sort.\n \n It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\n \nThis method returns a list of questions.\n",
                    "method": "get",
                    "is": [
                        "perSiteMethod",
                        "base",
                        "pageable",
                        "filterableByDate",
                        "questionsByRelevance",
                        "ordering",
                        "searchesByTag"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/advanced",
                    "type": "stackexchangeResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "questions",
                                            "example": "[\n  {\n    \"accepted_answer_id\": 1,\n    \"answer_count\": 1,\n    \"answers\": [\n    ],\n    \"body\": \"some string\",\n    \"body_markdown\": \"some string\",\n    \"bounty_amount\": 1,\n    \"bounty_closes_date\": 1,\n    \"bounty_user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"can_close\": true,\n    \"can_flag\": true,\n    \"close_vote_count\": 1,\n    \"closed_date\": 1,\n    \"closed_details\": {\n      \"by_users\": [\n      ],\n      \"description\": \"some string\",\n      \"on_hold\": true,\n      \"original_questions\": [\n      ],\n      \"reason\": \"some string\"\n    },\n    \"closed_reason\": \"some string\",\n    \"comment_count\": 1,\n    \"comments\": [\n    ],\n    \"community_owned_date\": 1,\n    \"creation_date\": 1,\n    \"delete_vote_count\": 1,\n    \"down_vote_count\": 1,\n    \"downvoted\": true,\n    \"favorite_count\": 1,\n    \"favorited\": true,\n    \"is_answered\": true,\n    \"last_activity_date\": 1,\n    \"last_edit_date\": 1,\n    \"last_editor\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"link\": \"some string\",\n    \"locked_date\": 1,\n    \"migrated_from\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"migrated_to\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"notice\": {\n      \"body\": \"some string\",\n      \"creation_date\": 1,\n      \"owner_user_id\": 1\n    },\n    \"owner\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"protected_date\": 1,\n    \"question_id\": 1,\n    \"reopen_vote_count\": 1,\n    \"score\": 1,\n    \"share_link\": \"some string\",\n    \"tags\": [\n    ],\n    \"title\": \"some string\",\n    \"up_vote_count\": 1,\n    \"upvoted\": true,\n    \"view_count\": 1\n  }\n]",
                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"accepted_answer_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answer_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answers\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"bounty_amount\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_closes_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"can_close\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"can_flag\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"close_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_details\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"by_users\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"description\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"on_hold\": {\n            \"required\": false,\n            \"type\": \"boolean\"\n          },\n          \"original_questions\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"reason\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"closed_reason\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"comment_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"comments\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"community_owned_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"delete_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"down_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"downvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"favorite_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"favorited\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"is_answered\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"last_activity_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_edit_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_editor\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"locked_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"migrated_from\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"migrated_to\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"notice\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"body\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"creation_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"owner_user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"protected_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"question_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"reopen_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"share_link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"tags\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"up_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"view_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "queryParameters": {
                                "accepted": {
                                    "name": "accepted",
                                    "displayName": "accepted",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "enum": [
                                        "True",
                                        "False"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "answers": {
                                    "name": "answers",
                                    "displayName": "answers",
                                    "type": "integer",
                                    "required": false,
                                    "repeat": false,
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "body": {
                                    "name": "body",
                                    "displayName": "body",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "closed": {
                                    "name": "closed",
                                    "displayName": "closed",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "enum": [
                                        "True",
                                        "False"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "migrated": {
                                    "name": "migrated",
                                    "displayName": "migrated",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "enum": [
                                        "True",
                                        "False"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "notice": {
                                    "name": "notice",
                                    "displayName": "notice",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "enum": [
                                        "True",
                                        "False"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "nottagged": {
                                    "name": "nottagged",
                                    "displayName": "nottagged",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "String list (semicolon delimited).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "q": {
                                    "name": "q",
                                    "displayName": "q",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "title": {
                                    "name": "title",
                                    "displayName": "title",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "url": {
                                    "name": "url",
                                    "displayName": "url",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "user": {
                                    "name": "user",
                                    "displayName": "user",
                                    "type": "integer",
                                    "required": false,
                                    "repeat": false,
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "views": {
                                    "name": "views",
                                    "displayName": "views",
                                    "type": "integer",
                                    "required": false,
                                    "repeat": false,
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "wiki": {
                                    "name": "wiki",
                                    "displayName": "wiki",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "enum": [
                                        "True",
                                        "False"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Searches a site for any questions which fit the given criteria.\n \nSearch criteria are expressed using the following parameters:\n  - q - a free form text parameter, will match all question properties based on an undocumented algorithm.\n - accepted - true to return only questions with accepted answers, false to return only those without. Omit to elide constraint.\n - answers - the minimum number of answers returned questions must have.\n - body - text which must appear in returned questions' bodies.\n - closed - true to return only closed questions, false to return only open ones. Omit to elide constraint.\n - migrated - true to return only questions migrated away from a site, false to return only those not. Omit to elide constraint.\n - notice - true to return only questions with post notices, false to return only those without. Omit to elide constraint.\n - nottagged - a semicolon delimited list of tags, none of which will be present on returned questions.\n - tagged - a semicolon delimited list of tags, of which at least one will be present on all returned questions.\n - title - text which must appear in returned questions' titles.\n - user - the id of the user who must own the questions returned.\n - url - a url which must be contained in a post, may include a wildcard.\n - views - the minimum number of views returned questions must have.\n - wiki - true to return only community wiki questions, false to return only non-community wiki ones. Omit to elide constraint.\n  \nAt least one additional parameter must be set if nottagged is set, for performance reasons.\n \nThe sorts accepted by this method operate on the follow fields of the question object:\n - activity - last_activity_date\n - creation - creation_date\n - votes - score\n - relevance - matches the relevance tab on the site itself Does not accept min or max\n  activity is the default sort.\n \n It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\n \nThis method returns a list of questions.\n",
                            "method": "get",
                            "is": [
                                "perSiteMethod",
                                "base",
                                "pageable",
                                "filterableByDate",
                                "questionsByRelevance",
                                "ordering",
                                "searchesByTag"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/advanced",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "advanced"
                    ]
                }
            ],
            "displayName": "/search",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "search"
            ]
        },
        {
            "relativeUri": "/similar",
            "type": "stackexchangeResource",
            "securedBy": [
                "oauth_2_0"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "questions",
                                    "example": "[\n  {\n    \"accepted_answer_id\": 1,\n    \"answer_count\": 1,\n    \"answers\": [\n    ],\n    \"body\": \"some string\",\n    \"body_markdown\": \"some string\",\n    \"bounty_amount\": 1,\n    \"bounty_closes_date\": 1,\n    \"bounty_user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"can_close\": true,\n    \"can_flag\": true,\n    \"close_vote_count\": 1,\n    \"closed_date\": 1,\n    \"closed_details\": {\n      \"by_users\": [\n      ],\n      \"description\": \"some string\",\n      \"on_hold\": true,\n      \"original_questions\": [\n      ],\n      \"reason\": \"some string\"\n    },\n    \"closed_reason\": \"some string\",\n    \"comment_count\": 1,\n    \"comments\": [\n    ],\n    \"community_owned_date\": 1,\n    \"creation_date\": 1,\n    \"delete_vote_count\": 1,\n    \"down_vote_count\": 1,\n    \"downvoted\": true,\n    \"favorite_count\": 1,\n    \"favorited\": true,\n    \"is_answered\": true,\n    \"last_activity_date\": 1,\n    \"last_edit_date\": 1,\n    \"last_editor\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"link\": \"some string\",\n    \"locked_date\": 1,\n    \"migrated_from\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"migrated_to\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"notice\": {\n      \"body\": \"some string\",\n      \"creation_date\": 1,\n      \"owner_user_id\": 1\n    },\n    \"owner\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"protected_date\": 1,\n    \"question_id\": 1,\n    \"reopen_vote_count\": 1,\n    \"score\": 1,\n    \"share_link\": \"some string\",\n    \"tags\": [\n    ],\n    \"title\": \"some string\",\n    \"up_vote_count\": 1,\n    \"upvoted\": true,\n    \"view_count\": 1\n  }\n]",
                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"accepted_answer_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answer_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answers\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"bounty_amount\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_closes_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"can_close\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"can_flag\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"close_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_details\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"by_users\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"description\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"on_hold\": {\n            \"required\": false,\n            \"type\": \"boolean\"\n          },\n          \"original_questions\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"reason\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"closed_reason\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"comment_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"comments\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"community_owned_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"delete_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"down_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"downvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"favorite_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"favorited\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"is_answered\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"last_activity_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_edit_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_editor\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"locked_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"migrated_from\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"migrated_to\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"notice\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"body\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"creation_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"owner_user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"protected_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"question_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"reopen_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"share_link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"tags\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"up_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"view_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "queryParameters": {
                        "nottagged": {
                            "name": "nottagged",
                            "displayName": "nottagged",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "String list (semicolon delimited).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "title": {
                            "name": "title",
                            "displayName": "title",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Returns questions which are similar to a hypothetical one based on a title and tag combination.\n \nThis method is roughly equivalent to a site's related questions suggestion on the ask page.\n \nThis method is useful for correlating data outside of a Stack Exchange site with similar content within one.\n \nNote that title must always be passed as a parameter. tagged and nottagged are optional, semi-colon delimited lists of tags.\n \nIf tagged is passed it is treated as a preference, there is no guarantee that questions returned will have any of those tags. nottagged is treated as a requirement, no questions will be returned with those tags.\n \nThe sorts accepted by this method operate on the follow fields of the question object:\n - activity - last_activity_date\n - creation - creation_date\n - votes - score\n - relevance - order by \"how similar\" the questions are, most likely candidate first with a descending order Does not accept min or max\n  activity is the default sort.\n \n It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\n \nThis method returns a list of questions.\n",
                    "method": "get",
                    "is": [
                        "perSiteMethod",
                        "base",
                        "pageable",
                        "filterableByDate",
                        "questionsByRelevance",
                        "ordering",
                        "searchesByTag"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/similar",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "similar"
            ]
        },
        {
            "relativeUri": "/suggested-edits",
            "type": "stackexchangeResource",
            "securedBy": [
                "oauth_2_0"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "suggested-edits",
                                    "example": "[\n  {\n    \"approval_date\": 1,\n    \"body\": \"some string\",\n    \"comment\": \"some string\",\n    \"creation_date\": 1,\n    \"post_id\": 1,\n    \"post_type\": \"some string\",\n    \"proposing_user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"rejection_date\": 1,\n    \"suggested_edit_id\": 1,\n    \"tags\": [\n    ],\n    \"title\": \"some string\"\n  }\n]",
                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"approval_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"comment\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"post_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"post_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"proposing_user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"rejection_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"suggested_edit_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"tags\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      }\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "description": "Returns all the suggested edits in the systems.\n \nThis method returns a list of suggested-edits.\n \nThe sorts accepted by this method operate on the follow fields of the suggested_edit object:\n - creation - creation_date\n - approval - approval_date Does not return unapproved suggested_edits\n - rejection - rejection_date Does not return unrejected suggested_edits\n  creation is the default sort.\n \n It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\n",
                    "method": "get",
                    "is": [
                        "perSiteMethod",
                        "base",
                        "pageable",
                        "filterableByDate",
                        "suggestedEdits",
                        "ordering"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/{ids}",
                    "type": "stackexchangeResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "uriParameters": {
                        "ids": {
                            "name": "ids",
                            "displayName": "ids",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "description": "Number list (semicolon delimited).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "suggested-edits",
                                            "example": "[\n  {\n    \"approval_date\": 1,\n    \"body\": \"some string\",\n    \"comment\": \"some string\",\n    \"creation_date\": 1,\n    \"post_id\": 1,\n    \"post_type\": \"some string\",\n    \"proposing_user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"rejection_date\": 1,\n    \"suggested_edit_id\": 1,\n    \"tags\": [\n    ],\n    \"title\": \"some string\"\n  }\n]",
                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"approval_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"comment\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"post_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"post_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"proposing_user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"rejection_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"suggested_edit_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"tags\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Returns suggested edits identified in ids.\n \n{ids} can contain up to 100 semicolon delimited ids, to find ids programatically look for suggested_edit_id on suggested_edit objects.\n \nThe sorts accepted by this method operate on the follow fields of the suggested_edit object:\n - creation - creation_date\n - approval - approval_date Does not return unapproved suggested_edits\n - rejection - rejection_date Does not return unrejected suggested_edits\n  creation is the default sort.\n \n It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\n \nThis method returns a list of suggested-edits.\n",
                            "method": "get",
                            "is": [
                                "perSiteMethod",
                                "base",
                                "pageable",
                                "filterableByDate",
                                "suggestedEdits",
                                "ordering"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/{ids}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{ids}"
                    ]
                }
            ],
            "displayName": "/suggested-edits",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "suggested-edits"
            ]
        },
        {
            "relativeUri": "/tags",
            "type": "stackexchangeResource",
            "securedBy": [
                "oauth_2_0"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "tags",
                                    "example": "[\n  {\n    \"count\": 1,\n    \"has_synonyms\": true,\n    \"is_moderator_only\": true,\n    \"is_required\": true,\n    \"last_activity_date\": 1,\n    \"name\": \"some string\",\n    \"synonyms\": [\n    ],\n    \"user_id\": 1\n  }\n]",
                                    "schemaContent": "tags"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "description": "Returns the tags found on a site.\n \nThe inname parameter lets a consumer filter down to tags that contain a certain substring. For example, inname=own would return both \"download\" and \"owner\" amongst others.\n \nThis method returns a list of tags.\n \nThe sorts accepted by this method operate on the follow fields of the tag object:\n - popular - count\n - activity - the creation_date of the last question asked with the tag\n - name - name\n  popular is the default sort.\n \n It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\n",
                    "method": "get",
                    "is": [
                        "perSiteMethod",
                        "base",
                        "pageable",
                        "filterableByDate",
                        "tags",
                        "ordering",
                        "searchesByName"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/{tags}",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "uriParameters": {
                        "tags": {
                            "name": "tags",
                            "displayName": "tags",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "description": "String list (semicolon delimited).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "resources": [
                        {
                            "relativeUri": "/info",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "tags",
                                                    "example": "[\n  {\n    \"count\": 1,\n    \"has_synonyms\": true,\n    \"is_moderator_only\": true,\n    \"is_required\": true,\n    \"last_activity_date\": 1,\n    \"name\": \"some string\",\n    \"synonyms\": [\n    ],\n    \"user_id\": 1\n  }\n]",
                                                    "schemaContent": "tags"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "description": "Returns tag objects representing the tags in {tags} found on the site.\n \nThis method diverges from the standard naming patterns to avoid to conflicting with existing methods, due to the free form nature of tag names.\n \nThis method returns a list of tags.\n \nThe sorts accepted by this method operate on the follow fields of the tag object:\n - popular - count\n - activity - the creation_date of the last question asked with the tag\n - name - name\n  popular is the default sort.\n \n It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\n",
                                    "method": "get",
                                    "is": [
                                        "perSiteMethod",
                                        "base",
                                        "pageable",
                                        "filterableByDate",
                                        "tags",
                                        "ordering"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/info",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "info"
                            ]
                        },
                        {
                            "relativeUri": "/faq",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "questions",
                                                    "example": "[\n  {\n    \"accepted_answer_id\": 1,\n    \"answer_count\": 1,\n    \"answers\": [\n    ],\n    \"body\": \"some string\",\n    \"body_markdown\": \"some string\",\n    \"bounty_amount\": 1,\n    \"bounty_closes_date\": 1,\n    \"bounty_user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"can_close\": true,\n    \"can_flag\": true,\n    \"close_vote_count\": 1,\n    \"closed_date\": 1,\n    \"closed_details\": {\n      \"by_users\": [\n      ],\n      \"description\": \"some string\",\n      \"on_hold\": true,\n      \"original_questions\": [\n      ],\n      \"reason\": \"some string\"\n    },\n    \"closed_reason\": \"some string\",\n    \"comment_count\": 1,\n    \"comments\": [\n    ],\n    \"community_owned_date\": 1,\n    \"creation_date\": 1,\n    \"delete_vote_count\": 1,\n    \"down_vote_count\": 1,\n    \"downvoted\": true,\n    \"favorite_count\": 1,\n    \"favorited\": true,\n    \"is_answered\": true,\n    \"last_activity_date\": 1,\n    \"last_edit_date\": 1,\n    \"last_editor\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"link\": \"some string\",\n    \"locked_date\": 1,\n    \"migrated_from\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"migrated_to\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"notice\": {\n      \"body\": \"some string\",\n      \"creation_date\": 1,\n      \"owner_user_id\": 1\n    },\n    \"owner\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"protected_date\": 1,\n    \"question_id\": 1,\n    \"reopen_vote_count\": 1,\n    \"score\": 1,\n    \"share_link\": \"some string\",\n    \"tags\": [\n    ],\n    \"title\": \"some string\",\n    \"up_vote_count\": 1,\n    \"upvoted\": true,\n    \"view_count\": 1\n  }\n]",
                                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"accepted_answer_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answer_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answers\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"bounty_amount\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_closes_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"can_close\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"can_flag\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"close_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_details\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"by_users\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"description\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"on_hold\": {\n            \"required\": false,\n            \"type\": \"boolean\"\n          },\n          \"original_questions\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"reason\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"closed_reason\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"comment_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"comments\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"community_owned_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"delete_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"down_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"downvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"favorite_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"favorited\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"is_answered\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"last_activity_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_edit_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_editor\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"locked_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"migrated_from\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"migrated_to\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"notice\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"body\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"creation_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"owner_user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"protected_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"question_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"reopen_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"share_link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"tags\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"up_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"view_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "description": "Returns the frequently asked questions for the given set of tags in {tags}.\n \nFor a question to be returned, it must have all the tags in {tags} and be considered \"frequently asked\". The exact algorithm for determining whether a question is considered a FAQ is subject to change at any time.\n \n{tags} can contain up to 5 individual tags per request.\n \nThis method returns a list of questions.\n",
                                    "method": "get",
                                    "is": [
                                        "perSiteMethod",
                                        "base",
                                        "pageable"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/faq",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "faq"
                            ]
                        },
                        {
                            "relativeUri": "/related",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "tags",
                                                    "example": "[\n  {\n    \"count\": 1,\n    \"has_synonyms\": true,\n    \"is_moderator_only\": true,\n    \"is_required\": true,\n    \"last_activity_date\": 1,\n    \"name\": \"some string\",\n    \"synonyms\": [\n    ],\n    \"user_id\": 1\n  }\n]",
                                                    "schemaContent": "tags"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "description": "Returns the tags that are most related to those in {tags}.\n \nIncluding multiple tags in {tags} is equivalent to asking for \"tags related to tag #1 and tag #2\" not \"tags related to tag #1 or tag #2\".\n \ncount on tag objects returned is the number of question with that tag that also share all those in {tags}.\n \n{tags} can contain up to 4 individual tags per request.\n \nThis method returns a list of tags.\n",
                                    "method": "get",
                                    "is": [
                                        "perSiteMethod",
                                        "base",
                                        "pageable"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/related",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "related"
                            ]
                        },
                        {
                            "relativeUri": "/synonyms",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "tag_synonyms",
                                                    "example": "[\n  {\n    \"applied_count\": 1,\n    \"creation_date\": 1,\n    \"from_tag\": \"some string\",\n    \"last_applied_date\": 1,\n    \"to_tag\": \"some string\"\n  }\n]",
                                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"applied_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"from_tag\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"last_applied_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"to_tag\": {\n        \"required\": false,\n        \"type\": \"string\"\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "description": "Gets all the synonyms that point to the tags identified in {tags}. If you're looking to discover all the tag synonyms on a site, use the /tags/synonyms methods instead of call this method on all tags.\n \n{tags} can contain up to 20 individual tags per request.\n \nThe sorts accepted by this method operate on the follow fields of the tag_synonym object:\n - creation - creation_date\n - applied - applied_count\n - activity - last_applied_date\n  creation is the default sort.\n \n It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\n \nThis method returns a list of tag synonyms.\n",
                                    "method": "get",
                                    "is": [
                                        "perSiteMethod",
                                        "base",
                                        "pageable",
                                        "filterableByDate",
                                        "synonyms",
                                        "ordering"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/synonyms",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "synonyms"
                            ]
                        },
                        {
                            "relativeUri": "/wikis",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "tag_wikis",
                                                    "example": "[\n  {\n    \"body\": \"some string\",\n    \"body_last_edit_date\": 1,\n    \"excerpt\": \"some string\",\n    \"excerpt_last_edit_date\": 1,\n    \"last_body_editor\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"last_excerpt_editor\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"tag_name\": \"some string\"\n  }\n]",
                                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_last_edit_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"excerpt\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"excerpt_last_edit_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_body_editor\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"last_excerpt_editor\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"tag_name\": {\n        \"required\": false,\n        \"type\": \"string\"\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "description": "Returns the wikis that go with the given set of tags in {tags}.\n \nBe aware that not all tags have wikis.\n \n{tags} can contain up to 20 individual tags per request.\n \nThis method returns a list of tag wikis.\n",
                                    "method": "get",
                                    "is": [
                                        "perSiteMethod",
                                        "base",
                                        "pageable"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/wikis",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "wikis"
                            ]
                        }
                    ],
                    "displayName": "/{tags}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{tags}"
                    ]
                },
                {
                    "relativeUri": "/moderator-only",
                    "type": "stackexchangeResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "tags",
                                            "example": "[\n  {\n    \"count\": 1,\n    \"has_synonyms\": true,\n    \"is_moderator_only\": true,\n    \"is_required\": true,\n    \"last_activity_date\": 1,\n    \"name\": \"some string\",\n    \"synonyms\": [\n    ],\n    \"user_id\": 1\n  }\n]",
                                            "schemaContent": "tags"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Returns the tags found on a site that only moderators can use.\n \nThe inname parameter lets a consumer filter down to tags that contain a certain substring. For example, inname=own would return both \"download\" and \"owner\" amongst others.\n \nThis method returns a list of tags.\n \nThe sorts accepted by this method operate on the follow fields of the tag object:\n - popular - count\n - activity - the creation_date of the last question asked with the tag\n - name - name\n  popular is the default sort.\n \n It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\n",
                            "method": "get",
                            "is": [
                                "perSiteMethod",
                                "base",
                                "pageable",
                                "filterableByDate",
                                "tags",
                                "ordering",
                                "searchesByName"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/moderator-only",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "moderator-only"
                    ]
                },
                {
                    "relativeUri": "/required",
                    "type": "stackexchangeResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "tags",
                                            "example": "[\n  {\n    \"count\": 1,\n    \"has_synonyms\": true,\n    \"is_moderator_only\": true,\n    \"is_required\": true,\n    \"last_activity_date\": 1,\n    \"name\": \"some string\",\n    \"synonyms\": [\n    ],\n    \"user_id\": 1\n  }\n]",
                                            "schemaContent": "tags"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Returns the tags found on a site that fulfill required tag constraints on questions.\n \nThe inname parameter lets a consumer filter down to tags that contain a certain substring. For example, inname=own would return both \"download\" and \"owner\" amongst others.\n \nThis method returns a list of tags.\n \nThe sorts accepted by this method operate on the follow fields of the tag object:\n - popular - count\n - activity - the creation_date of the last question asked with the tag\n - name - name\n  popular is the default sort.\n \n It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\n",
                            "method": "get",
                            "is": [
                                "perSiteMethod",
                                "base",
                                "pageable",
                                "filterableByDate",
                                "tags",
                                "ordering",
                                "searchesByName"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/required",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "required"
                    ]
                },
                {
                    "relativeUri": "/synonyms",
                    "type": "stackexchangeResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "tag_synonyms",
                                            "example": "[\n  {\n    \"applied_count\": 1,\n    \"creation_date\": 1,\n    \"from_tag\": \"some string\",\n    \"last_applied_date\": 1,\n    \"to_tag\": \"some string\"\n  }\n]",
                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"applied_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"from_tag\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"last_applied_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"to_tag\": {\n        \"required\": false,\n        \"type\": \"string\"\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Returns all tag synonyms found a site.\n \nWhen searching for synonyms of specific tags, it is better to use /tags/{tags}/synonyms over this method.\n \nThe sorts accepted by this method operate on the follow fields of the tag_synonym object:\n - creation - creation_date\n - applied - applied_count\n - activity - last_applied_date\n  creation is the default sort.\n \n It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\n \nThis method returns a list of tag_synonyms.\n",
                            "method": "get",
                            "is": [
                                "perSiteMethod",
                                "base",
                                "pageable",
                                "filterableByDate",
                                "synonyms",
                                "ordering"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/synonyms",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "synonyms"
                    ]
                },
                {
                    "relativeUri": "/{tag}",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "uriParameters": {
                        "tag": {
                            "name": "tag",
                            "displayName": "tag",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "resources": [
                        {
                            "relativeUri": "/top-answerers",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "resources": [
                                {
                                    "relativeUri": "/{period}",
                                    "type": "stackexchangeResource",
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "uriParameters": {
                                        "period": {
                                            "name": "period",
                                            "displayName": "period",
                                            "type": "string",
                                            "required": true,
                                            "repeat": false,
                                            "enum": [
                                                "all_time",
                                                "month"
                                            ],
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "methods": [
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "tag_score_objects",
                                                            "example": "[\n  {\n    \"post_count\": 1,\n    \"score\": 1,\n    \"user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    }\n  }\n]",
                                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"post_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}"
                                                        }
                                                    }
                                                }
                                            },
                                            "protocols": [
                                                "HTTPS"
                                            ],
                                            "securedBy": [
                                                "oauth_2_0"
                                            ],
                                            "description": "Returns the top 30 answerers active in a single tag, of either all-time or the last 30 days.\n \nThis is a view onto the data presented on the tag info page on the sites.\n \nThis method returns a list of tag score objects.\n",
                                            "method": "get",
                                            "is": [
                                                "perSiteMethod",
                                                "base",
                                                "pageable"
                                            ],
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/{period}",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "securedBy": {
                                                "calculated": true
                                            },
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "{period}"
                                    ]
                                }
                            ],
                            "displayName": "/top-answerers",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "top-answerers"
                            ]
                        },
                        {
                            "relativeUri": "/top-askers",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "resources": [
                                {
                                    "relativeUri": "/{period}",
                                    "type": "stackexchangeResource",
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "uriParameters": {
                                        "period": {
                                            "name": "period",
                                            "displayName": "period",
                                            "type": "string",
                                            "required": true,
                                            "repeat": false,
                                            "enum": [
                                                "all_time",
                                                "month"
                                            ],
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "methods": [
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "tag_score_objects",
                                                            "example": "[\n  {\n    \"post_count\": 1,\n    \"score\": 1,\n    \"user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    }\n  }\n]",
                                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"post_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}"
                                                        }
                                                    }
                                                }
                                            },
                                            "protocols": [
                                                "HTTPS"
                                            ],
                                            "securedBy": [
                                                "oauth_2_0"
                                            ],
                                            "description": "Returns the top 30 askers active in a single tag, of either all-time or the last 30 days.\n \nThis is a view onto the data presented on the tag info page on the sites.\n \nThis method returns a list of tag score objects.\n",
                                            "method": "get",
                                            "is": [
                                                "perSiteMethod",
                                                "base",
                                                "pageable"
                                            ],
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/{period}",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "securedBy": {
                                                "calculated": true
                                            },
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "{period}"
                                    ]
                                }
                            ],
                            "displayName": "/top-askers",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "top-askers"
                            ]
                        }
                    ],
                    "displayName": "/{tag}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{tag}"
                    ]
                }
            ],
            "displayName": "/tags",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "tags"
            ]
        },
        {
            "relativeUri": "/users",
            "type": "stackexchangeResource",
            "securedBy": [
                "oauth_2_0"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "users",
                                    "example": "[\n  {\n    \"about_me\": \"some string\",\n    \"accept_rate\": 1,\n    \"account_id\": 1,\n    \"age\": 1,\n    \"answer_count\": 1,\n    \"badge_counts\": {\n      \"bronze\": 1,\n      \"gold\": 1,\n      \"silver\": 1\n    },\n    \"creation_date\": 1,\n    \"display_name\": \"some string\",\n    \"down_vote_count\": 1,\n    \"is_employee\": true,\n    \"last_access_date\": 1,\n    \"last_modified_date\": 1,\n    \"link\": \"some string\",\n    \"location\": \"some string\",\n    \"profile_image\": \"some string\",\n    \"question_count\": 1,\n    \"reputation\": 1,\n    \"reputation_change_day\": 1,\n    \"reputation_change_month\": 1,\n    \"reputation_change_quarter\": 1,\n    \"reputation_change_week\": 1,\n    \"reputation_change_year\": 1,\n    \"timed_penalty_date\": 1,\n    \"up_vote_count\": 1,\n    \"user_id\": 1,\n    \"user_type\": \"some string\",\n    \"view_count\": 1,\n    \"website_url\": \"some string\"\n  }\n]",
                                    "schemaContent": "users"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "description": "Returns all users on a site.\n \nThis method returns a list of users.\n \nThe sorts accepted by this method operate on the follow fields of the user object:\n - reputation - reputation\n - creation - creation_date\n - name - display_name\n - modified - last_modified_date\n  reputation is the default sort.\n \n It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\n \nThe inname parameter lets consumers filter the results down to just those users with a certain substring in their display name. For example, inname=kevin will return all users with both users named simply \"Kevin\" or those with Kevin as one of (or part of) their names; such as \"Kevin Montrose\".\n",
                    "method": "get",
                    "is": [
                        "perSiteMethod",
                        "base",
                        "pageable",
                        "filterableByDate",
                        "users",
                        "ordering",
                        "searchesByName"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/{ids}",
                    "type": "stackexchangeResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "uriParameters": {
                        "ids": {
                            "name": "ids",
                            "displayName": "ids",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "description": "Number list (semicolon delimited).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "users",
                                            "example": "[\n  {\n    \"about_me\": \"some string\",\n    \"accept_rate\": 1,\n    \"account_id\": 1,\n    \"age\": 1,\n    \"answer_count\": 1,\n    \"badge_counts\": {\n      \"bronze\": 1,\n      \"gold\": 1,\n      \"silver\": 1\n    },\n    \"creation_date\": 1,\n    \"display_name\": \"some string\",\n    \"down_vote_count\": 1,\n    \"is_employee\": true,\n    \"last_access_date\": 1,\n    \"last_modified_date\": 1,\n    \"link\": \"some string\",\n    \"location\": \"some string\",\n    \"profile_image\": \"some string\",\n    \"question_count\": 1,\n    \"reputation\": 1,\n    \"reputation_change_day\": 1,\n    \"reputation_change_month\": 1,\n    \"reputation_change_quarter\": 1,\n    \"reputation_change_week\": 1,\n    \"reputation_change_year\": 1,\n    \"timed_penalty_date\": 1,\n    \"up_vote_count\": 1,\n    \"user_id\": 1,\n    \"user_type\": \"some string\",\n    \"view_count\": 1,\n    \"website_url\": \"some string\"\n  }\n]",
                                            "schemaContent": "users"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Gets the users identified in ids in {ids}.\n \nTypically this method will be called to fetch user profiles when you have obtained user ids from some other source, such as /questions.\n \n{ids} can contain up to 100 semicolon delimited ids, to find ids programatically look for user_id on user or shallow_user objects.\n \nThe sorts accepted by this method operate on the follow fields of the user object:\n - reputation - reputation\n - creation - creation_date\n - name - display_name\n - modified - last_modified_date\n  reputation is the default sort.\n \n It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\n \nThis method returns a list of users.\n",
                            "method": "get",
                            "is": [
                                "perSiteMethod",
                                "base",
                                "pageable",
                                "filterableByDate",
                                "users",
                                "ordering"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/answers",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "answers",
                                                    "example": "[\n  {\n    \"accepted\": true,\n    \"answer_id\": 1,\n    \"awarded_bounty_amount\": 1,\n    \"awarded_bounty_users\": [\n    ],\n    \"body\": \"some string\",\n    \"body_markdown\": \"some string\",\n    \"can_flag\": true,\n    \"comment_count\": 1,\n    \"comments\": [\n    ],\n    \"community_owned_date\": 1,\n    \"creation_date\": 1,\n    \"down_vote_count\": 1,\n    \"downvoted\": true,\n    \"is_accepted\": true,\n    \"last_activity_date\": 1,\n    \"last_edit_date\": 1,\n    \"last_editor\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"link\": \"some string\",\n    \"locked_date\": 1,\n    \"owner\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"question_id\": 1,\n    \"score\": 1,\n    \"share_link\": \"some string\",\n    \"tags\": [\n    ],\n    \"title\": \"some string\",\n    \"up_vote_count\": 1,\n    \"upvoted\": true\n  }\n]",
                                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"accepted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"answer_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"awarded_bounty_amount\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"awarded_bounty_users\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"can_flag\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"comment_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"comments\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"community_owned_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"down_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"downvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"is_accepted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"last_activity_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_edit_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_editor\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"locked_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"question_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"share_link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"tags\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"up_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "description": "Returns the answers the users in {ids} have posted.\n \n{ids} can contain up to 100 semicolon delimited ids, to find ids programatically look for user_id on user or shallow_user objects.\n \nThe sorts accepted by this method operate on the follow fields of the answer object:\n - activity - last_activity_date\n - creation - creation_date\n - votes - score\n  activity is the default sort.\n \n It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\n \nThis method returns a list of answers.\n",
                                    "method": "get",
                                    "is": [
                                        "perSiteMethod",
                                        "base",
                                        "pageable",
                                        "filterableByDate",
                                        "sortableByActivityCreationVotes",
                                        "ordering"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/answers",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "answers"
                            ]
                        },
                        {
                            "relativeUri": "/badges",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "badges",
                                                    "example": "[\n  {\n    \"award_count\": 1,\n    \"badge_id\": 1,\n    \"badge_type\": \"some string\",\n    \"description\": \"some string\",\n    \"link\": \"some string\",\n    \"name\": \"some string\",\n    \"rank\": \"some string\",\n    \"user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    }\n  }\n]",
                                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"award_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"badge_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"badge_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"description\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"name\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"rank\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "description": "Get the badges the users in {ids} have earned.\n \nBadge sorts are a tad complicated. For the purposes of sorting (and min/max) tag_based is considered to be greater than named.\n \nThis means that you can get a list of all tag based badges a user has by passing min=tag_based, and conversely all the named badges by passing max=named, with sort=type.\n \nFor ranks, bronze is greater than silver which is greater than gold. Along with sort=rank, set max=gold for just gold badges, max=silver&min=silver for just silver, and min=bronze for just bronze.\n \nrank is the default sort.\n \n{ids} can contain up to 100 semicolon delimited ids, to find ids programatically look for user_id on user or shallow_user objects.\n \nThis method returns a list of badges.\n",
                                    "method": "get",
                                    "is": [
                                        "perSiteMethod",
                                        "base",
                                        "pageable",
                                        "filterableByDate",
                                        "badges2",
                                        "ordering"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/badges",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "badges"
                            ]
                        },
                        {
                            "relativeUri": "/comments",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "comments",
                                                    "example": "[\n  {\n    \"body\": \"some string\",\n    \"body_markdown\": \"some string\",\n    \"can_flag\": true,\n    \"comment_id\": 1,\n    \"creation_date\": 1,\n    \"edited\": true,\n    \"link\": \"some string\",\n    \"owner\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"post_id\": 1,\n    \"post_type\": \"some string\",\n    \"reply_to_user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"score\": 1,\n    \"upvoted\": true\n  }\n]",
                                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"can_flag\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"comment_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"edited\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"post_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"post_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"reply_to_user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "description": "Get the comments posted by users in {ids}.\n \n{ids} can contain up to 100 semicolon delimited ids, to find ids programatically look for user_id on user or shallow_user objects.\n \nThe sorts accepted by this method operate on the follow fields of the comment object:\n - creation - creation_date\n - votes - score\n  creation is the default sort.\n \n It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\n \nThis method returns a list of comments.\n",
                                    "method": "get",
                                    "is": [
                                        "perSiteMethod",
                                        "base",
                                        "pageable",
                                        "filterableByDate",
                                        "sortableByCreationVotes",
                                        "ordering"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "resources": [
                                {
                                    "relativeUri": "/{toid}",
                                    "type": "stackexchangeResource",
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "uriParameters": {
                                        "toid": {
                                            "name": "toid",
                                            "displayName": "toid",
                                            "type": "integer",
                                            "required": true,
                                            "repeat": false,
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "methods": [
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "comments",
                                                            "example": "[\n  {\n    \"body\": \"some string\",\n    \"body_markdown\": \"some string\",\n    \"can_flag\": true,\n    \"comment_id\": 1,\n    \"creation_date\": 1,\n    \"edited\": true,\n    \"link\": \"some string\",\n    \"owner\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"post_id\": 1,\n    \"post_type\": \"some string\",\n    \"reply_to_user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"score\": 1,\n    \"upvoted\": true\n  }\n]",
                                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"can_flag\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"comment_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"edited\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"post_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"post_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"reply_to_user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      }\n    }\n  }\n}"
                                                        }
                                                    }
                                                }
                                            },
                                            "protocols": [
                                                "HTTPS"
                                            ],
                                            "securedBy": [
                                                "oauth_2_0"
                                            ],
                                            "description": "Get the comments that the users in {ids} have posted in reply to the single user identified in {toid}.\n \nThis method is useful for extracting conversations, especially over time or across multiple posts.\n \n{ids} can contain up to 100 semicolon delimited ids, to find ids programatically look for user_id on user or shallow_user objects. {toid} can contain only 1 id, found in the same manner as those in {ids}.\n \nThe sorts accepted by this method operate on the follow fields of the comment object:\n - creation - creation_date\n - votes - score\n  creation is the default sort.\n \n It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\n \nThis method returns a list of comments.\n",
                                            "method": "get",
                                            "is": [
                                                "perSiteMethod",
                                                "base",
                                                "pageable",
                                                "filterableByDate",
                                                "sortableByCreationVotes",
                                                "ordering"
                                            ],
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/{toid}",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "securedBy": {
                                                "calculated": true
                                            },
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "{toid}"
                                    ]
                                }
                            ],
                            "displayName": "/comments",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "comments"
                            ]
                        },
                        {
                            "relativeUri": "/favorites",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "questions",
                                                    "example": "[\n  {\n    \"accepted_answer_id\": 1,\n    \"answer_count\": 1,\n    \"answers\": [\n    ],\n    \"body\": \"some string\",\n    \"body_markdown\": \"some string\",\n    \"bounty_amount\": 1,\n    \"bounty_closes_date\": 1,\n    \"bounty_user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"can_close\": true,\n    \"can_flag\": true,\n    \"close_vote_count\": 1,\n    \"closed_date\": 1,\n    \"closed_details\": {\n      \"by_users\": [\n      ],\n      \"description\": \"some string\",\n      \"on_hold\": true,\n      \"original_questions\": [\n      ],\n      \"reason\": \"some string\"\n    },\n    \"closed_reason\": \"some string\",\n    \"comment_count\": 1,\n    \"comments\": [\n    ],\n    \"community_owned_date\": 1,\n    \"creation_date\": 1,\n    \"delete_vote_count\": 1,\n    \"down_vote_count\": 1,\n    \"downvoted\": true,\n    \"favorite_count\": 1,\n    \"favorited\": true,\n    \"is_answered\": true,\n    \"last_activity_date\": 1,\n    \"last_edit_date\": 1,\n    \"last_editor\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"link\": \"some string\",\n    \"locked_date\": 1,\n    \"migrated_from\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"migrated_to\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"notice\": {\n      \"body\": \"some string\",\n      \"creation_date\": 1,\n      \"owner_user_id\": 1\n    },\n    \"owner\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"protected_date\": 1,\n    \"question_id\": 1,\n    \"reopen_vote_count\": 1,\n    \"score\": 1,\n    \"share_link\": \"some string\",\n    \"tags\": [\n    ],\n    \"title\": \"some string\",\n    \"up_vote_count\": 1,\n    \"upvoted\": true,\n    \"view_count\": 1\n  }\n]",
                                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"accepted_answer_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answer_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answers\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"bounty_amount\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_closes_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"can_close\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"can_flag\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"close_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_details\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"by_users\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"description\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"on_hold\": {\n            \"required\": false,\n            \"type\": \"boolean\"\n          },\n          \"original_questions\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"reason\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"closed_reason\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"comment_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"comments\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"community_owned_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"delete_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"down_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"downvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"favorite_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"favorited\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"is_answered\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"last_activity_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_edit_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_editor\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"locked_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"migrated_from\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"migrated_to\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"notice\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"body\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"creation_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"owner_user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"protected_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"question_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"reopen_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"share_link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"tags\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"up_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"view_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "description": "Get the questions that users in {ids} have favorited.\n \nThis method is effectively a view onto a user's favorites tab.\n \n{ids} can contain up to 100 semicolon delimited ids, to find ids programatically look for user_id on user or shallow_user objects.\n \nThe sorts accepted by this method operate on the follow fields of the question object:\n - activity - last_activity_date\n - creation - creation_date\n - votes - score\n - added - when the user favorited the question\n  activity is the default sort.\n \n It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\n \nThis method returns a list of questions.\n",
                                    "method": "get",
                                    "is": [
                                        "perSiteMethod",
                                        "base",
                                        "pageable",
                                        "filterableByDate",
                                        "favorites",
                                        "ordering"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/favorites",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "favorites"
                            ]
                        },
                        {
                            "relativeUri": "/mentioned",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "comments",
                                                    "example": "[\n  {\n    \"body\": \"some string\",\n    \"body_markdown\": \"some string\",\n    \"can_flag\": true,\n    \"comment_id\": 1,\n    \"creation_date\": 1,\n    \"edited\": true,\n    \"link\": \"some string\",\n    \"owner\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"post_id\": 1,\n    \"post_type\": \"some string\",\n    \"reply_to_user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"score\": 1,\n    \"upvoted\": true\n  }\n]",
                                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"can_flag\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"comment_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"edited\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"post_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"post_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"reply_to_user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "description": "Gets all the comments that the users in {ids} were mentioned in.\n \nNote, to count as a mention the comment must be considered to be \"in reply to\" a user. Most importantly, this means that a comment can only be in reply to a single user.\n \n{ids} can contain up to 100 semicolon delimited ids, to find ids programatically look for user_id on user or shallow_user objects.\n \nThe sorts accepted by this method operate on the follow fields of the comment object:\n - creation - creation_date\n - votes - score\n  It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\n \nThis method returns a list of comments.\n",
                                    "method": "get",
                                    "is": [
                                        "perSiteMethod",
                                        "base",
                                        "pageable",
                                        "filterableByDate",
                                        "sortableByCreationVotes",
                                        "ordering"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/mentioned",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "mentioned"
                            ]
                        },
                        {
                            "relativeUri": "/questions",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "questions",
                                                    "example": "[\n  {\n    \"accepted_answer_id\": 1,\n    \"answer_count\": 1,\n    \"answers\": [\n    ],\n    \"body\": \"some string\",\n    \"body_markdown\": \"some string\",\n    \"bounty_amount\": 1,\n    \"bounty_closes_date\": 1,\n    \"bounty_user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"can_close\": true,\n    \"can_flag\": true,\n    \"close_vote_count\": 1,\n    \"closed_date\": 1,\n    \"closed_details\": {\n      \"by_users\": [\n      ],\n      \"description\": \"some string\",\n      \"on_hold\": true,\n      \"original_questions\": [\n      ],\n      \"reason\": \"some string\"\n    },\n    \"closed_reason\": \"some string\",\n    \"comment_count\": 1,\n    \"comments\": [\n    ],\n    \"community_owned_date\": 1,\n    \"creation_date\": 1,\n    \"delete_vote_count\": 1,\n    \"down_vote_count\": 1,\n    \"downvoted\": true,\n    \"favorite_count\": 1,\n    \"favorited\": true,\n    \"is_answered\": true,\n    \"last_activity_date\": 1,\n    \"last_edit_date\": 1,\n    \"last_editor\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"link\": \"some string\",\n    \"locked_date\": 1,\n    \"migrated_from\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"migrated_to\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"notice\": {\n      \"body\": \"some string\",\n      \"creation_date\": 1,\n      \"owner_user_id\": 1\n    },\n    \"owner\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"protected_date\": 1,\n    \"question_id\": 1,\n    \"reopen_vote_count\": 1,\n    \"score\": 1,\n    \"share_link\": \"some string\",\n    \"tags\": [\n    ],\n    \"title\": \"some string\",\n    \"up_vote_count\": 1,\n    \"upvoted\": true,\n    \"view_count\": 1\n  }\n]",
                                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"accepted_answer_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answer_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answers\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"bounty_amount\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_closes_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"can_close\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"can_flag\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"close_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_details\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"by_users\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"description\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"on_hold\": {\n            \"required\": false,\n            \"type\": \"boolean\"\n          },\n          \"original_questions\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"reason\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"closed_reason\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"comment_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"comments\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"community_owned_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"delete_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"down_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"downvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"favorite_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"favorited\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"is_answered\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"last_activity_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_edit_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_editor\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"locked_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"migrated_from\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"migrated_to\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"notice\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"body\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"creation_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"owner_user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"protected_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"question_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"reopen_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"share_link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"tags\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"up_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"view_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "description": "Gets the questions asked by the users in {ids}.\n \n{ids} can contain up to 100 semicolon delimited ids, to find ids programatically look for user_id on user or shallow_user objects.\n \nThe sorts accepted by this method operate on the follow fields of the question object:\n - activity - last_activity_date\n - creation - creation_date\n - votes - score\n  activity is the default sort.\n \n It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\n \nThis method returns a list of questions.\n",
                                    "method": "get",
                                    "is": [
                                        "perSiteMethod",
                                        "base",
                                        "pageable",
                                        "filterableByDate",
                                        "sortableByActivityCreationVotes",
                                        "ordering"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "resources": [
                                {
                                    "relativeUri": "/featured",
                                    "type": "stackexchangeResource",
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "methods": [
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "questions",
                                                            "example": "[\n  {\n    \"accepted_answer_id\": 1,\n    \"answer_count\": 1,\n    \"answers\": [\n    ],\n    \"body\": \"some string\",\n    \"body_markdown\": \"some string\",\n    \"bounty_amount\": 1,\n    \"bounty_closes_date\": 1,\n    \"bounty_user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"can_close\": true,\n    \"can_flag\": true,\n    \"close_vote_count\": 1,\n    \"closed_date\": 1,\n    \"closed_details\": {\n      \"by_users\": [\n      ],\n      \"description\": \"some string\",\n      \"on_hold\": true,\n      \"original_questions\": [\n      ],\n      \"reason\": \"some string\"\n    },\n    \"closed_reason\": \"some string\",\n    \"comment_count\": 1,\n    \"comments\": [\n    ],\n    \"community_owned_date\": 1,\n    \"creation_date\": 1,\n    \"delete_vote_count\": 1,\n    \"down_vote_count\": 1,\n    \"downvoted\": true,\n    \"favorite_count\": 1,\n    \"favorited\": true,\n    \"is_answered\": true,\n    \"last_activity_date\": 1,\n    \"last_edit_date\": 1,\n    \"last_editor\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"link\": \"some string\",\n    \"locked_date\": 1,\n    \"migrated_from\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"migrated_to\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"notice\": {\n      \"body\": \"some string\",\n      \"creation_date\": 1,\n      \"owner_user_id\": 1\n    },\n    \"owner\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"protected_date\": 1,\n    \"question_id\": 1,\n    \"reopen_vote_count\": 1,\n    \"score\": 1,\n    \"share_link\": \"some string\",\n    \"tags\": [\n    ],\n    \"title\": \"some string\",\n    \"up_vote_count\": 1,\n    \"upvoted\": true,\n    \"view_count\": 1\n  }\n]",
                                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"accepted_answer_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answer_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answers\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"bounty_amount\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_closes_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"can_close\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"can_flag\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"close_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_details\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"by_users\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"description\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"on_hold\": {\n            \"required\": false,\n            \"type\": \"boolean\"\n          },\n          \"original_questions\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"reason\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"closed_reason\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"comment_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"comments\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"community_owned_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"delete_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"down_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"downvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"favorite_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"favorited\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"is_answered\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"last_activity_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_edit_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_editor\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"locked_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"migrated_from\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"migrated_to\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"notice\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"body\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"creation_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"owner_user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"protected_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"question_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"reopen_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"share_link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"tags\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"up_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"view_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
                                                        }
                                                    }
                                                }
                                            },
                                            "protocols": [
                                                "HTTPS"
                                            ],
                                            "securedBy": [
                                                "oauth_2_0"
                                            ],
                                            "description": "Gets the questions on which the users in {ids} have active bounties.\n \n{ids} can contain up to 100 semicolon delimited ids, to find ids programatically look for user_id on user or shallow_user objects.\n \nThe sorts accepted by this method operate on the follow fields of the question object:\n - activity - last_activity_date\n - creation - creation_date\n - votes - score\n  activity is the default sort.\n \n It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\n \nThis method returns a list of questions.\n",
                                            "method": "get",
                                            "is": [
                                                "perSiteMethod",
                                                "base",
                                                "pageable",
                                                "filterableByDate",
                                                "sortableByActivityCreationVotes",
                                                "ordering"
                                            ],
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/featured",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "securedBy": {
                                                "calculated": true
                                            },
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "featured"
                                    ]
                                },
                                {
                                    "relativeUri": "/no-answers",
                                    "type": "stackexchangeResource",
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "methods": [
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "questions",
                                                            "example": "[\n  {\n    \"accepted_answer_id\": 1,\n    \"answer_count\": 1,\n    \"answers\": [\n    ],\n    \"body\": \"some string\",\n    \"body_markdown\": \"some string\",\n    \"bounty_amount\": 1,\n    \"bounty_closes_date\": 1,\n    \"bounty_user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"can_close\": true,\n    \"can_flag\": true,\n    \"close_vote_count\": 1,\n    \"closed_date\": 1,\n    \"closed_details\": {\n      \"by_users\": [\n      ],\n      \"description\": \"some string\",\n      \"on_hold\": true,\n      \"original_questions\": [\n      ],\n      \"reason\": \"some string\"\n    },\n    \"closed_reason\": \"some string\",\n    \"comment_count\": 1,\n    \"comments\": [\n    ],\n    \"community_owned_date\": 1,\n    \"creation_date\": 1,\n    \"delete_vote_count\": 1,\n    \"down_vote_count\": 1,\n    \"downvoted\": true,\n    \"favorite_count\": 1,\n    \"favorited\": true,\n    \"is_answered\": true,\n    \"last_activity_date\": 1,\n    \"last_edit_date\": 1,\n    \"last_editor\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"link\": \"some string\",\n    \"locked_date\": 1,\n    \"migrated_from\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"migrated_to\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"notice\": {\n      \"body\": \"some string\",\n      \"creation_date\": 1,\n      \"owner_user_id\": 1\n    },\n    \"owner\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"protected_date\": 1,\n    \"question_id\": 1,\n    \"reopen_vote_count\": 1,\n    \"score\": 1,\n    \"share_link\": \"some string\",\n    \"tags\": [\n    ],\n    \"title\": \"some string\",\n    \"up_vote_count\": 1,\n    \"upvoted\": true,\n    \"view_count\": 1\n  }\n]",
                                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"accepted_answer_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answer_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answers\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"bounty_amount\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_closes_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"can_close\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"can_flag\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"close_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_details\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"by_users\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"description\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"on_hold\": {\n            \"required\": false,\n            \"type\": \"boolean\"\n          },\n          \"original_questions\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"reason\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"closed_reason\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"comment_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"comments\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"community_owned_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"delete_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"down_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"downvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"favorite_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"favorited\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"is_answered\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"last_activity_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_edit_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_editor\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"locked_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"migrated_from\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"migrated_to\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"notice\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"body\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"creation_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"owner_user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"protected_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"question_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"reopen_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"share_link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"tags\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"up_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"view_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
                                                        }
                                                    }
                                                }
                                            },
                                            "protocols": [
                                                "HTTPS"
                                            ],
                                            "securedBy": [
                                                "oauth_2_0"
                                            ],
                                            "description": "Gets the questions asked by the users in {ids} which have no answers.\n \nQuestions returns by this method actually have zero undeleted answers. It is completely disjoint /users/{ids}/questions/unanswered and /users/{ids}/questions/unaccepted, which only return questions with at least one answer, subject to other contraints.\n \n{ids} can contain up to 100 semicolon delimited ids, to find ids programatically look for user_id on user or shallow_user objects.\n \nThe sorts accepted by this method operate on the follow fields of the question object:\n - activity - last_activity_date\n - creation - creation_date\n - votes - score\n  activity is the default sort.\n \n It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\n \nThis method returns a list of questions.\n",
                                            "method": "get",
                                            "is": [
                                                "perSiteMethod",
                                                "base",
                                                "pageable",
                                                "filterableByDate",
                                                "sortableByActivityCreationVotes",
                                                "ordering"
                                            ],
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/no-answers",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "securedBy": {
                                                "calculated": true
                                            },
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "no-answers"
                                    ]
                                },
                                {
                                    "relativeUri": "/unaccepted",
                                    "type": "stackexchangeResource",
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "methods": [
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "questions",
                                                            "example": "[\n  {\n    \"accepted_answer_id\": 1,\n    \"answer_count\": 1,\n    \"answers\": [\n    ],\n    \"body\": \"some string\",\n    \"body_markdown\": \"some string\",\n    \"bounty_amount\": 1,\n    \"bounty_closes_date\": 1,\n    \"bounty_user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"can_close\": true,\n    \"can_flag\": true,\n    \"close_vote_count\": 1,\n    \"closed_date\": 1,\n    \"closed_details\": {\n      \"by_users\": [\n      ],\n      \"description\": \"some string\",\n      \"on_hold\": true,\n      \"original_questions\": [\n      ],\n      \"reason\": \"some string\"\n    },\n    \"closed_reason\": \"some string\",\n    \"comment_count\": 1,\n    \"comments\": [\n    ],\n    \"community_owned_date\": 1,\n    \"creation_date\": 1,\n    \"delete_vote_count\": 1,\n    \"down_vote_count\": 1,\n    \"downvoted\": true,\n    \"favorite_count\": 1,\n    \"favorited\": true,\n    \"is_answered\": true,\n    \"last_activity_date\": 1,\n    \"last_edit_date\": 1,\n    \"last_editor\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"link\": \"some string\",\n    \"locked_date\": 1,\n    \"migrated_from\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"migrated_to\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"notice\": {\n      \"body\": \"some string\",\n      \"creation_date\": 1,\n      \"owner_user_id\": 1\n    },\n    \"owner\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"protected_date\": 1,\n    \"question_id\": 1,\n    \"reopen_vote_count\": 1,\n    \"score\": 1,\n    \"share_link\": \"some string\",\n    \"tags\": [\n    ],\n    \"title\": \"some string\",\n    \"up_vote_count\": 1,\n    \"upvoted\": true,\n    \"view_count\": 1\n  }\n]",
                                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"accepted_answer_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answer_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answers\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"bounty_amount\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_closes_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"can_close\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"can_flag\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"close_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_details\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"by_users\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"description\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"on_hold\": {\n            \"required\": false,\n            \"type\": \"boolean\"\n          },\n          \"original_questions\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"reason\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"closed_reason\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"comment_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"comments\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"community_owned_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"delete_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"down_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"downvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"favorite_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"favorited\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"is_answered\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"last_activity_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_edit_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_editor\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"locked_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"migrated_from\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"migrated_to\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"notice\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"body\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"creation_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"owner_user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"protected_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"question_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"reopen_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"share_link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"tags\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"up_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"view_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
                                                        }
                                                    }
                                                }
                                            },
                                            "protocols": [
                                                "HTTPS"
                                            ],
                                            "securedBy": [
                                                "oauth_2_0"
                                            ],
                                            "description": "Gets the questions asked by the users in {ids} which have at least one answer, but no accepted answer.\n \nQuestions returned by this method have answers, but the owner has not opted to accept any of them.\n \n{ids} can contain up to 100 semicolon delimited ids, to find ids programatically look for user_id on user or shallow_user objects.\n \nThe sorts accepted by this method operate on the follow fields of the question object:\n - activity - last_activity_date\n - creation - creation_date\n - votes - score\n  activity is the default sort.\n \n It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\n \nThis method returns a list of questions.\n",
                                            "method": "get",
                                            "is": [
                                                "perSiteMethod",
                                                "base",
                                                "pageable",
                                                "filterableByDate",
                                                "sortableByActivityCreationVotes",
                                                "ordering"
                                            ],
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/unaccepted",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "securedBy": {
                                                "calculated": true
                                            },
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "unaccepted"
                                    ]
                                },
                                {
                                    "relativeUri": "/unanswered",
                                    "type": "stackexchangeResource",
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "methods": [
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "questions",
                                                            "example": "[\n  {\n    \"accepted_answer_id\": 1,\n    \"answer_count\": 1,\n    \"answers\": [\n    ],\n    \"body\": \"some string\",\n    \"body_markdown\": \"some string\",\n    \"bounty_amount\": 1,\n    \"bounty_closes_date\": 1,\n    \"bounty_user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"can_close\": true,\n    \"can_flag\": true,\n    \"close_vote_count\": 1,\n    \"closed_date\": 1,\n    \"closed_details\": {\n      \"by_users\": [\n      ],\n      \"description\": \"some string\",\n      \"on_hold\": true,\n      \"original_questions\": [\n      ],\n      \"reason\": \"some string\"\n    },\n    \"closed_reason\": \"some string\",\n    \"comment_count\": 1,\n    \"comments\": [\n    ],\n    \"community_owned_date\": 1,\n    \"creation_date\": 1,\n    \"delete_vote_count\": 1,\n    \"down_vote_count\": 1,\n    \"downvoted\": true,\n    \"favorite_count\": 1,\n    \"favorited\": true,\n    \"is_answered\": true,\n    \"last_activity_date\": 1,\n    \"last_edit_date\": 1,\n    \"last_editor\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"link\": \"some string\",\n    \"locked_date\": 1,\n    \"migrated_from\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"migrated_to\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"notice\": {\n      \"body\": \"some string\",\n      \"creation_date\": 1,\n      \"owner_user_id\": 1\n    },\n    \"owner\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"protected_date\": 1,\n    \"question_id\": 1,\n    \"reopen_vote_count\": 1,\n    \"score\": 1,\n    \"share_link\": \"some string\",\n    \"tags\": [\n    ],\n    \"title\": \"some string\",\n    \"up_vote_count\": 1,\n    \"upvoted\": true,\n    \"view_count\": 1\n  }\n]",
                                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"accepted_answer_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answer_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answers\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"bounty_amount\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_closes_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"can_close\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"can_flag\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"close_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_details\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"by_users\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"description\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"on_hold\": {\n            \"required\": false,\n            \"type\": \"boolean\"\n          },\n          \"original_questions\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"reason\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"closed_reason\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"comment_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"comments\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"community_owned_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"delete_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"down_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"downvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"favorite_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"favorited\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"is_answered\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"last_activity_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_edit_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_editor\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"locked_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"migrated_from\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"migrated_to\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"notice\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"body\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"creation_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"owner_user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"protected_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"question_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"reopen_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"share_link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"tags\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"up_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"view_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
                                                        }
                                                    }
                                                }
                                            },
                                            "protocols": [
                                                "HTTPS"
                                            ],
                                            "securedBy": [
                                                "oauth_2_0"
                                            ],
                                            "description": "Gets the questions asked by the users in {ids} which the site consideres unanswered, while still having at least one answer posted.\n \nThese rules are subject to change, but currently any question without at least one upvoted or accepted answer is considered unanswered.\n \nTo get the set of questions that a user probably considers unanswered, the returned questions should be unioned with those returned by /users/{id}/questions/no-answers. These methods are distinct so that truly unanswered (that is, zero posted answers) questions can be easily separated from mearly poorly or inadequately answered ones.\n \n{ids} can contain up to 100 semicolon delimited ids, to find ids programatically look for user_id on user or shallow_user objects.\n \nThe sorts accepted by this method operate on the follow fields of the question object:\n - activity - last_activity_date\n - creation - creation_date\n - votes - score\n  activity is the default sort.\n \n It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\n \nThis method returns a list of questions.\n",
                                            "method": "get",
                                            "is": [
                                                "perSiteMethod",
                                                "base",
                                                "pageable",
                                                "filterableByDate",
                                                "sortableByActivityCreationVotes",
                                                "ordering"
                                            ],
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/unanswered",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "securedBy": {
                                                "calculated": true
                                            },
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "unanswered"
                                    ]
                                }
                            ],
                            "displayName": "/questions",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "questions"
                            ]
                        },
                        {
                            "relativeUri": "/reputation",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "reputation_objects",
                                                    "example": "[\n  {\n    \"link\": \"some string\",\n    \"on_date\": 1,\n    \"post_id\": 1,\n    \"post_type\": \"some string\",\n    \"reputation_change\": 1,\n    \"title\": \"some string\",\n    \"user_id\": 1,\n    \"vote_type\": \"some string\"\n  }\n]",
                                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"on_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"post_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"post_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"reputation_change\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"user_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"vote_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "description": "Gets a subset of the reputation changes for users in {ids}.\n \nReputation changes are intentionally scrubbed of some data to make it difficult to correlate votes on particular posts with user reputation changes. That being said, this method returns enough data for reasonable display of reputation trends.\n \n{ids} can contain up to 100 semicolon delimited ids, to find ids programatically look for user_id on user or shallow_user objects.\n \nThis method returns a list of reputation objects.\n",
                                    "method": "get",
                                    "is": [
                                        "perSiteMethod",
                                        "base",
                                        "pageable",
                                        "filterableByDate"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/reputation",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "reputation"
                            ]
                        },
                        {
                            "relativeUri": "/reputation-history",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "reputation_history",
                                                    "example": "[\n  {\n    \"creation_date\": 1,\n    \"post_id\": 1,\n    \"reputation_change\": 1,\n    \"reputation_history_type\": \"some string\",\n    \"user_id\": 1\n  }\n]",
                                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"post_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"reputation_change\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"reputation_history_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"user_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "description": "Returns users' public reputation history.\n \nThis method returns a list of reputation_history.\n",
                                    "method": "get",
                                    "is": [
                                        "perSiteMethod",
                                        "base",
                                        "pageable"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/reputation-history",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "reputation-history"
                            ]
                        },
                        {
                            "relativeUri": "/suggested-edits",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "suggested-edits",
                                                    "example": "[\n  {\n    \"approval_date\": 1,\n    \"body\": \"some string\",\n    \"comment\": \"some string\",\n    \"creation_date\": 1,\n    \"post_id\": 1,\n    \"post_type\": \"some string\",\n    \"proposing_user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"rejection_date\": 1,\n    \"suggested_edit_id\": 1,\n    \"tags\": [\n    ],\n    \"title\": \"some string\"\n  }\n]",
                                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"approval_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"comment\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"post_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"post_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"proposing_user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"rejection_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"suggested_edit_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"tags\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "description": "Returns the suggested edits a users in {ids} have submitted.\n \n{ids} can contain up to 100 semicolon delimited ids, to find ids programatically look for user_id on user or shallow_user objects.\n \nThe sorts accepted by this method operate on the follow fields of the suggested_edit object:\n - creation - creation_date\n - approval - approval_date Does not return unapproved suggested_edits\n - rejection - rejection_date Does not return unrejected suggested_edits\n  creation is the default sort.\n \n It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\n \nThis method returns a list of suggested-edits.\n",
                                    "method": "get",
                                    "is": [
                                        "perSiteMethod",
                                        "base",
                                        "pageable",
                                        "filterableByDate",
                                        "suggestedEdits",
                                        "ordering"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/suggested-edits",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "suggested-edits"
                            ]
                        },
                        {
                            "relativeUri": "/tags",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "tags",
                                                    "example": "[\n  {\n    \"count\": 1,\n    \"has_synonyms\": true,\n    \"is_moderator_only\": true,\n    \"is_required\": true,\n    \"last_activity_date\": 1,\n    \"name\": \"some string\",\n    \"synonyms\": [\n    ],\n    \"user_id\": 1\n  }\n]",
                                                    "schemaContent": "tags"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "description": "Returns the tags the users identified in {ids} have been active in.\n \nThis route corresponds roughly to user's stats tab, but does not include tag scores. A subset of tag scores are available (on a single user basis) in /users/{id}/top-answer-tags and /users/{id}/top-question-tags.\n \n{ids} can contain up to 100 semicolon delimited ids, to find ids programatically look for user_id on user or shallow_user objects.\n \nThe sorts accepted by this method operate on the follow fields of the tag object:\n - popular - count\n - activity - the creation_date of the last question asked with the tag\n - name - name\n  popular is the default sort.\n \n It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\n \nThis method returns a list of tags.\n",
                                    "method": "get",
                                    "is": [
                                        "perSiteMethod",
                                        "base",
                                        "pageable",
                                        "filterableByDate",
                                        "tags",
                                        "ordering"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/tags",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "tags"
                            ]
                        },
                        {
                            "relativeUri": "/timeline",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "user_timeline_objects",
                                                    "example": "[\n  {\n    \"badge_id\": 1,\n    \"comment_id\": 1,\n    \"creation_date\": 1,\n    \"detail\": \"some string\",\n    \"link\": \"some string\",\n    \"post_id\": 1,\n    \"post_type\": \"some string\",\n    \"suggested_edit_id\": 1,\n    \"timeline_type\": \"some string\",\n    \"title\": \"some string\",\n    \"user_id\": 1\n  }\n]",
                                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"badge_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"comment_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"detail\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"post_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"post_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"suggested_edit_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"timeline_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"user_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "description": "Returns a subset of the actions the users in {ids} have taken on the site.\n \nThis method returns users' posts, edits, and earned badges in the order they were accomplished. It is possible to filter to just a window of activity using the fromdate and todate parameters.\n \n{ids} can contain up to 100 semicolon delimited ids, to find ids programatically look for user_id on user or shallow_user objects.\n \nThis method returns a list of user timeline objects.\n",
                                    "method": "get",
                                    "is": [
                                        "perSiteMethod",
                                        "base",
                                        "pageable",
                                        "filterableByDate"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/timeline",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "timeline"
                            ]
                        },
                        {
                            "relativeUri": "/associated",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "network_users",
                                                    "example": "[\n  {\n    \"account_id\": 1,\n    \"answer_count\": 1,\n    \"badge_counts\": {\n      \"bronze\": 1,\n      \"gold\": 1,\n      \"silver\": 1\n    },\n    \"creation_date\": 1,\n    \"last_access_date\": 1,\n    \"question_count\": 1,\n    \"reputation\": 1,\n    \"site_name\": \"some string\",\n    \"site_url\": \"some string\",\n    \"top_answers\": [\n    ],\n    \"top_questions\": [\n    ],\n    \"user_id\": 1,\n    \"user_type\": \"some string\"\n  }\n]",
                                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"account_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answer_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"badge_counts\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"bronze\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"gold\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"silver\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_access_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"question_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"reputation\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"site_name\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"site_url\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"top_answers\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"top_questions\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"user_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"user_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "description": "Returns all of a user's associated accounts, given their account_ids in {ids}.\n \n{ids} can contain up to 100 semicolon delimited ids, to find ids programatically look for account_id on user objects.\n \nThis method returns a list of network_users.\n",
                                    "method": "get",
                                    "is": [
                                        "base",
                                        "pageable"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/associated",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "associated"
                            ]
                        },
                        {
                            "relativeUri": "/merges",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "account_merge",
                                                    "example": "[\n  {\n    \"merge_date\": 1,\n    \"new_account_id\": 1,\n    \"old_account_id\": 1\n  }\n]",
                                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"merge_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"new_account_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"old_account_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "description": "Returns a record of merges that have occurred involving the passed account ids.\n \nThis method allows you to take now invalid account ids and find what account they've become, or take currently valid account ids and find which ids were equivalent in the past.\n \nThis is most useful when confirming that an account_id is in fact \"new\" to an application.\n \nAccount merges can happen for a wide range of reasons, applications should not make assumptions that merges have particular causes.\n \nNote that accounts are managed at a network level, users on a site may be merged due to an account level merge but there is no guarantee that a merge has an effect on any particular site.\n \nThis method returns a list of account_merge.\n",
                                    "method": "get",
                                    "is": [
                                        "base",
                                        "pageable"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/merges",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "merges"
                            ]
                        }
                    ],
                    "displayName": "/{ids}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{ids}"
                    ]
                },
                {
                    "relativeUri": "/{id}",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "uriParameters": {
                        "id": {
                            "name": "id",
                            "displayName": "id",
                            "type": "integer",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "resources": [
                        {
                            "relativeUri": "/notifications",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "notifications",
                                                    "example": "[\n  {\n    \"body\": \"some string\",\n    \"creation_date\": 1,\n    \"is_unread\": true,\n    \"notification_type\": \"some string\",\n    \"post_id\": 1,\n    \"site\": {\n      \"aliases\": [\n      ],\n      \"api_site_parameter\": \"some string\",\n      \"audience\": \"some string\",\n      \"closed_beta_date\": 1,\n      \"favicon_url\": \"some string\",\n      \"high_resolution_icon_url\": \"some string\",\n      \"icon_url\": \"some string\",\n      \"launch_date\": 1,\n      \"logo_url\": \"some string\",\n      \"markdown_extensions\": [\n      ],\n      \"name\": \"some string\",\n      \"open_beta_date\": 1,\n      \"related_sites\": [\n      ],\n      \"site_state\": \"some string\",\n      \"site_type\": \"some string\",\n      \"site_url\": \"some string\",\n      \"styling\": {\n        \"link_color\": \"some string\",\n        \"tag_background_color\": \"some string\",\n        \"tag_foreground_color\": \"some string\"\n      },\n      \"twitter_account\": \"some string\"\n    }\n  }\n]",
                                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"is_unread\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"notification_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"post_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"site\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"aliases\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"api_site_parameter\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"audience\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"closed_beta_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"favicon_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"high_resolution_icon_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"icon_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"launch_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"logo_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"markdown_extensions\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"open_beta_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"related_sites\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"site_state\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"site_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"site_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"styling\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"link_color\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"tag_background_color\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"tag_foreground_color\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"twitter_account\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "description": "Returns a user's notifications.\n \nThis method requires an access_token, with a scope containing \"read_inbox\".\n \nThis method returns a list of notifications.\n",
                                    "method": "get",
                                    "is": [
                                        "perSiteMethod",
                                        "base",
                                        "pageable"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "resources": [
                                {
                                    "relativeUri": "/unread",
                                    "type": "stackexchangeResource",
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "methods": [
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "notifications",
                                                            "example": "[\n  {\n    \"body\": \"some string\",\n    \"creation_date\": 1,\n    \"is_unread\": true,\n    \"notification_type\": \"some string\",\n    \"post_id\": 1,\n    \"site\": {\n      \"aliases\": [\n      ],\n      \"api_site_parameter\": \"some string\",\n      \"audience\": \"some string\",\n      \"closed_beta_date\": 1,\n      \"favicon_url\": \"some string\",\n      \"high_resolution_icon_url\": \"some string\",\n      \"icon_url\": \"some string\",\n      \"launch_date\": 1,\n      \"logo_url\": \"some string\",\n      \"markdown_extensions\": [\n      ],\n      \"name\": \"some string\",\n      \"open_beta_date\": 1,\n      \"related_sites\": [\n      ],\n      \"site_state\": \"some string\",\n      \"site_type\": \"some string\",\n      \"site_url\": \"some string\",\n      \"styling\": {\n        \"link_color\": \"some string\",\n        \"tag_background_color\": \"some string\",\n        \"tag_foreground_color\": \"some string\"\n      },\n      \"twitter_account\": \"some string\"\n    }\n  }\n]",
                                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"is_unread\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"notification_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"post_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"site\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"aliases\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"api_site_parameter\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"audience\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"closed_beta_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"favicon_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"high_resolution_icon_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"icon_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"launch_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"logo_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"markdown_extensions\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"open_beta_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"related_sites\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"site_state\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"site_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"site_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"styling\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"link_color\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"tag_background_color\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"tag_foreground_color\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"twitter_account\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}"
                                                        }
                                                    }
                                                }
                                            },
                                            "protocols": [
                                                "HTTPS"
                                            ],
                                            "securedBy": [
                                                "oauth_2_0"
                                            ],
                                            "description": "Returns a user's unread notifications.\n \nThis method requires an access_token, with a scope containing \"read_inbox\".\n \nThis method returns a list of notifications.\n",
                                            "method": "get",
                                            "is": [
                                                "perSiteMethod",
                                                "base",
                                                "pageable"
                                            ],
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/unread",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "securedBy": {
                                                "calculated": true
                                            },
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "unread"
                                    ]
                                }
                            ],
                            "displayName": "/notifications",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "notifications"
                            ]
                        },
                        {
                            "relativeUri": "/privileges",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "privileges",
                                                    "example": "[\n  {\n    \"description\": \"some string\",\n    \"reputation\": 1,\n    \"short_description\": \"some string\"\n  }\n]",
                                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"description\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"reputation\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"short_description\": {\n        \"required\": false,\n        \"type\": \"string\"\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "description": "Returns the privileges a user has.\n \nApplications are encouraged to calculate privileges themselves, without repeated queries to this method. A simple check against the results returned by /privileges and user.user_type would be sufficient.\n \n{id} can contain only a single, to find it programatically look for user_id on user or shallow_user objects.\n \nThis method returns a list of privileges.\n",
                                    "method": "get",
                                    "is": [
                                        "perSiteMethod",
                                        "base",
                                        "pageable"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/privileges",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "privileges"
                            ]
                        },
                        {
                            "relativeUri": "/reputation-history",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "resources": [
                                {
                                    "relativeUri": "/full",
                                    "type": "stackexchangeResource",
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "methods": [
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "reputation_history",
                                                            "example": "[\n  {\n    \"creation_date\": 1,\n    \"post_id\": 1,\n    \"reputation_change\": 1,\n    \"reputation_history_type\": \"some string\",\n    \"user_id\": 1\n  }\n]",
                                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"post_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"reputation_change\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"reputation_history_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"user_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
                                                        }
                                                    }
                                                }
                                            },
                                            "protocols": [
                                                "HTTPS"
                                            ],
                                            "securedBy": [
                                                "oauth_2_0"
                                            ],
                                            "description": "Returns a user's full reputation history, including private events.\n \nThis method requires an access_token, with a scope containing \"private_info\".\n \nThis method returns a list of reputation_history.\n",
                                            "method": "get",
                                            "is": [
                                                "perSiteMethod",
                                                "base",
                                                "pageable"
                                            ],
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/full",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "securedBy": {
                                                "calculated": true
                                            },
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "full"
                                    ]
                                }
                            ],
                            "displayName": "/reputation-history",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "reputation-history"
                            ]
                        },
                        {
                            "relativeUri": "/tags",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "resources": [
                                {
                                    "relativeUri": "/{tags}",
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "uriParameters": {
                                        "tags": {
                                            "name": "tags",
                                            "displayName": "tags",
                                            "type": "string",
                                            "required": true,
                                            "repeat": false,
                                            "description": "String list (semicolon delimited).",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "resources": [
                                        {
                                            "relativeUri": "/top-answers",
                                            "type": "stackexchangeResource",
                                            "securedBy": [
                                                "oauth_2_0"
                                            ],
                                            "methods": [
                                                {
                                                    "responses": {
                                                        "200": {
                                                            "code": "200",
                                                            "body": {
                                                                "application/json": {
                                                                    "name": "application/json",
                                                                    "schema": "answers",
                                                                    "example": "[\n  {\n    \"accepted\": true,\n    \"answer_id\": 1,\n    \"awarded_bounty_amount\": 1,\n    \"awarded_bounty_users\": [\n    ],\n    \"body\": \"some string\",\n    \"body_markdown\": \"some string\",\n    \"can_flag\": true,\n    \"comment_count\": 1,\n    \"comments\": [\n    ],\n    \"community_owned_date\": 1,\n    \"creation_date\": 1,\n    \"down_vote_count\": 1,\n    \"downvoted\": true,\n    \"is_accepted\": true,\n    \"last_activity_date\": 1,\n    \"last_edit_date\": 1,\n    \"last_editor\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"link\": \"some string\",\n    \"locked_date\": 1,\n    \"owner\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"question_id\": 1,\n    \"score\": 1,\n    \"share_link\": \"some string\",\n    \"tags\": [\n    ],\n    \"title\": \"some string\",\n    \"up_vote_count\": 1,\n    \"upvoted\": true\n  }\n]",
                                                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"accepted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"answer_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"awarded_bounty_amount\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"awarded_bounty_users\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"can_flag\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"comment_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"comments\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"community_owned_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"down_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"downvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"is_accepted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"last_activity_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_edit_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_editor\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"locked_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"question_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"share_link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"tags\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"up_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      }\n    }\n  }\n}"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "protocols": [
                                                        "HTTPS"
                                                    ],
                                                    "securedBy": [
                                                        "oauth_2_0"
                                                    ],
                                                    "description": "Returns the top 30 answers a user has posted in response to questions with the given tags.\n \n{id} can contain a single id, to find it programatically look for user_id on user or shallow_user objects. {tags} is limited to 5 tags, passing more will result in an error.\n \nThe sorts accepted by this method operate on the follow fields of the answer object:\n - activity - last_activity_date\n - creation - creation_date\n - votes - score\n  activity is the default sort.\n \n It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\n \nThis method returns a list of answers.\n",
                                                    "method": "get",
                                                    "is": [
                                                        "perSiteMethod",
                                                        "base",
                                                        "pageable",
                                                        "filterableByDate",
                                                        "sortableByActivityCreationVotes",
                                                        "ordering"
                                                    ],
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "protocols": {
                                                                "calculated": true
                                                            },
                                                            "securedBy": {
                                                                "calculated": true
                                                            }
                                                        }
                                                    }
                                                }
                                            ],
                                            "displayName": "/top-answers",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "securedBy": {
                                                        "calculated": true
                                                    },
                                                    "displayName": {
                                                        "calculated": true
                                                    }
                                                }
                                            },
                                            "relativeUriPathSegments": [
                                                "top-answers"
                                            ]
                                        },
                                        {
                                            "relativeUri": "/top-questions",
                                            "type": "stackexchangeResource",
                                            "securedBy": [
                                                "oauth_2_0"
                                            ],
                                            "methods": [
                                                {
                                                    "responses": {
                                                        "200": {
                                                            "code": "200",
                                                            "body": {
                                                                "application/json": {
                                                                    "name": "application/json",
                                                                    "schema": "questions",
                                                                    "example": "[\n  {\n    \"accepted_answer_id\": 1,\n    \"answer_count\": 1,\n    \"answers\": [\n    ],\n    \"body\": \"some string\",\n    \"body_markdown\": \"some string\",\n    \"bounty_amount\": 1,\n    \"bounty_closes_date\": 1,\n    \"bounty_user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"can_close\": true,\n    \"can_flag\": true,\n    \"close_vote_count\": 1,\n    \"closed_date\": 1,\n    \"closed_details\": {\n      \"by_users\": [\n      ],\n      \"description\": \"some string\",\n      \"on_hold\": true,\n      \"original_questions\": [\n      ],\n      \"reason\": \"some string\"\n    },\n    \"closed_reason\": \"some string\",\n    \"comment_count\": 1,\n    \"comments\": [\n    ],\n    \"community_owned_date\": 1,\n    \"creation_date\": 1,\n    \"delete_vote_count\": 1,\n    \"down_vote_count\": 1,\n    \"downvoted\": true,\n    \"favorite_count\": 1,\n    \"favorited\": true,\n    \"is_answered\": true,\n    \"last_activity_date\": 1,\n    \"last_edit_date\": 1,\n    \"last_editor\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"link\": \"some string\",\n    \"locked_date\": 1,\n    \"migrated_from\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"migrated_to\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"notice\": {\n      \"body\": \"some string\",\n      \"creation_date\": 1,\n      \"owner_user_id\": 1\n    },\n    \"owner\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"protected_date\": 1,\n    \"question_id\": 1,\n    \"reopen_vote_count\": 1,\n    \"score\": 1,\n    \"share_link\": \"some string\",\n    \"tags\": [\n    ],\n    \"title\": \"some string\",\n    \"up_vote_count\": 1,\n    \"upvoted\": true,\n    \"view_count\": 1\n  }\n]",
                                                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"accepted_answer_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answer_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answers\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"bounty_amount\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_closes_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"can_close\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"can_flag\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"close_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_details\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"by_users\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"description\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"on_hold\": {\n            \"required\": false,\n            \"type\": \"boolean\"\n          },\n          \"original_questions\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"reason\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"closed_reason\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"comment_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"comments\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"community_owned_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"delete_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"down_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"downvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"favorite_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"favorited\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"is_answered\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"last_activity_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_edit_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_editor\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"locked_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"migrated_from\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"migrated_to\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"notice\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"body\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"creation_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"owner_user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"protected_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"question_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"reopen_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"share_link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"tags\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"up_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"view_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "protocols": [
                                                        "HTTPS"
                                                    ],
                                                    "securedBy": [
                                                        "oauth_2_0"
                                                    ],
                                                    "description": "Returns the top 30 questions a user has asked with the given tags.\n \n{id} can contain a single id, to find it programatically look for user_id on user or shallow_user objects. {tags} is limited to 5 tags, passing more will result in an error.\n \nThe sorts accepted by this method operate on the follow fields of the question object:\n - activity - last_activity_date\n - creation - creation_date\n - votes - score\n  activity is the default sort.\n \n It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\n \nThis method returns a list of questions.\n",
                                                    "method": "get",
                                                    "is": [
                                                        "perSiteMethod",
                                                        "base",
                                                        "pageable",
                                                        "filterableByDate",
                                                        "sortableByActivityCreationVotes",
                                                        "ordering"
                                                    ],
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "protocols": {
                                                                "calculated": true
                                                            },
                                                            "securedBy": {
                                                                "calculated": true
                                                            }
                                                        }
                                                    }
                                                }
                                            ],
                                            "displayName": "/top-questions",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "securedBy": {
                                                        "calculated": true
                                                    },
                                                    "displayName": {
                                                        "calculated": true
                                                    }
                                                }
                                            },
                                            "relativeUriPathSegments": [
                                                "top-questions"
                                            ]
                                        }
                                    ],
                                    "displayName": "/{tags}",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "securedBy": {
                                                "calculated": true
                                            },
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "{tags}"
                                    ]
                                }
                            ],
                            "displayName": "/tags",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "tags"
                            ]
                        },
                        {
                            "relativeUri": "/top-answer-tags",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "top_tag_objects",
                                                    "example": "[\n  {\n    \"answer_count\": 1,\n    \"answer_score\": 1,\n    \"question_count\": 1,\n    \"question_score\": 1,\n    \"tag_name\": \"some string\",\n    \"user_id\": 1\n  }\n]",
                                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"answer_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answer_score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"question_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"question_score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"tag_name\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"user_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "description": "Returns a single user's top tags by answer score.\n \nThis a subset of the data returned on a user's tags tab.\n \n{id} can contain a single id, to find it programatically look for user_id on user or shallow_user objects.\n \nThis method returns a list of top_tag objects.\n",
                                    "method": "get",
                                    "is": [
                                        "perSiteMethod",
                                        "base",
                                        "pageable"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/top-answer-tags",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "top-answer-tags"
                            ]
                        },
                        {
                            "relativeUri": "/top-question-tags",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "top_tag_objects",
                                                    "example": "[\n  {\n    \"answer_count\": 1,\n    \"answer_score\": 1,\n    \"question_count\": 1,\n    \"question_score\": 1,\n    \"tag_name\": \"some string\",\n    \"user_id\": 1\n  }\n]",
                                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"answer_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answer_score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"question_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"question_score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"tag_name\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"user_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "description": "Returns a single user's top tags by question score.\n \nThis a subset of the data returned on a user's tags tab.\n \n{id} can contain a single id, to find it programatically look for user_id on user or shallow_user objects.\n \nThis method returns a list of top_tag objects.\n",
                                    "method": "get",
                                    "is": [
                                        "perSiteMethod",
                                        "base",
                                        "pageable"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/top-question-tags",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "top-question-tags"
                            ]
                        },
                        {
                            "relativeUri": "/write-permissions",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "write_permissions",
                                                    "example": "[\n  {\n    \"can_add\": true,\n    \"can_delete\": true,\n    \"can_edit\": true,\n    \"max_daily_actions\": 1,\n    \"min_seconds_between_actions\": 1,\n    \"object_type\": \"some string\",\n    \"user_id\": 1\n  }\n]",
                                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"can_add\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"can_delete\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"can_edit\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"max_daily_actions\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"min_seconds_between_actions\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"object_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"user_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "description": "Returns the write permissions a user has via the api.\n \nThe Stack Exchange API gives users the ability to create, edit, and delete certain types. This method returns whether the passed user is capable of performing those actions at all, as well as how many times a day they can.\n \nThis method does not consider the user's current quota (ie. if they've already exhausted it for today) nor any additional restrictions on write access, such as editing deleted comments.\n \nThis method returns a list of write_permissions.\n",
                                    "method": "get",
                                    "is": [
                                        "perSiteMethod",
                                        "base",
                                        "pageable"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/write-permissions",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "write-permissions"
                            ]
                        },
                        {
                            "relativeUri": "/inbox",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "inbox_items",
                                                    "example": "[\n  {\n    \"answer_id\": 1,\n    \"body\": \"some string\",\n    \"comment_id\": 1,\n    \"creation_date\": 1,\n    \"is_unread\": true,\n    \"item_type\": \"some string\",\n    \"link\": \"some string\",\n    \"question_id\": 1,\n    \"site\": {\n      \"aliases\": [\n      ],\n      \"api_site_parameter\": \"some string\",\n      \"audience\": \"some string\",\n      \"closed_beta_date\": 1,\n      \"favicon_url\": \"some string\",\n      \"high_resolution_icon_url\": \"some string\",\n      \"icon_url\": \"some string\",\n      \"launch_date\": 1,\n      \"logo_url\": \"some string\",\n      \"markdown_extensions\": [\n      ],\n      \"name\": \"some string\",\n      \"open_beta_date\": 1,\n      \"related_sites\": [\n      ],\n      \"site_state\": \"some string\",\n      \"site_type\": \"some string\",\n      \"site_url\": \"some string\",\n      \"styling\": {\n        \"link_color\": \"some string\",\n        \"tag_background_color\": \"some string\",\n        \"tag_foreground_color\": \"some string\"\n      },\n      \"twitter_account\": \"some string\"\n    },\n    \"title\": \"some string\"\n  }\n]",
                                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"answer_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"comment_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"is_unread\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"item_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"question_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"site\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"aliases\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"api_site_parameter\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"audience\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"closed_beta_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"favicon_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"high_resolution_icon_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"icon_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"launch_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"logo_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"markdown_extensions\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"open_beta_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"related_sites\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"site_state\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"site_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"site_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"styling\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"link_color\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"tag_background_color\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"tag_foreground_color\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"twitter_account\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "description": "Returns a user's inbox.\n \nThis method requires an access_token, with a scope containing \"read_inbox\".\n \nThis method is effectively an alias for /inbox. It is provided for consumers who make strong assumptions about operating within the context of a single site rather than the Stack Exchange network as a whole.\n \n{id} can contain a single id, to find it programatically look for user_id on user or shallow_user objects.\n \nThis method returns a list of inbox items.\n",
                                    "method": "get",
                                    "is": [
                                        "perSiteMethod",
                                        "base",
                                        "pageable"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "resources": [
                                {
                                    "relativeUri": "/unread",
                                    "type": "stackexchangeResource",
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "methods": [
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "inbox_items",
                                                            "example": "[\n  {\n    \"answer_id\": 1,\n    \"body\": \"some string\",\n    \"comment_id\": 1,\n    \"creation_date\": 1,\n    \"is_unread\": true,\n    \"item_type\": \"some string\",\n    \"link\": \"some string\",\n    \"question_id\": 1,\n    \"site\": {\n      \"aliases\": [\n      ],\n      \"api_site_parameter\": \"some string\",\n      \"audience\": \"some string\",\n      \"closed_beta_date\": 1,\n      \"favicon_url\": \"some string\",\n      \"high_resolution_icon_url\": \"some string\",\n      \"icon_url\": \"some string\",\n      \"launch_date\": 1,\n      \"logo_url\": \"some string\",\n      \"markdown_extensions\": [\n      ],\n      \"name\": \"some string\",\n      \"open_beta_date\": 1,\n      \"related_sites\": [\n      ],\n      \"site_state\": \"some string\",\n      \"site_type\": \"some string\",\n      \"site_url\": \"some string\",\n      \"styling\": {\n        \"link_color\": \"some string\",\n        \"tag_background_color\": \"some string\",\n        \"tag_foreground_color\": \"some string\"\n      },\n      \"twitter_account\": \"some string\"\n    },\n    \"title\": \"some string\"\n  }\n]",
                                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"answer_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"comment_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"is_unread\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"item_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"question_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"site\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"aliases\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"api_site_parameter\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"audience\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"closed_beta_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"favicon_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"high_resolution_icon_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"icon_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"launch_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"logo_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"markdown_extensions\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"open_beta_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"related_sites\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"site_state\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"site_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"site_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"styling\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"link_color\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"tag_background_color\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"tag_foreground_color\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"twitter_account\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      }\n    }\n  }\n}"
                                                        }
                                                    }
                                                }
                                            },
                                            "protocols": [
                                                "HTTPS"
                                            ],
                                            "securedBy": [
                                                "oauth_2_0"
                                            ],
                                            "queryParameters": {
                                                "since": {
                                                    "name": "since",
                                                    "displayName": "since",
                                                    "type": "integer",
                                                    "required": false,
                                                    "repeat": false,
                                                    "description": "Unix date.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "description": "Returns the unread items in a user's inbox.\n \nThis method requires an access_token, with a scope containing \"read_inbox\".\n \nThis method is effectively an alias for /inbox/unread. It is provided for consumers who make strong assumptions about operating within the context of a single site rather than the Stack Exchange network as a whole.\n \n{id} can contain a single id, to find it programatically look for user_id on user or shallow_user objects.\n \nThis method returns a list of inbox items.\n",
                                            "method": "get",
                                            "is": [
                                                "perSiteMethod",
                                                "base",
                                                "pageable"
                                            ],
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/unread",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "securedBy": {
                                                "calculated": true
                                            },
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "unread"
                                    ]
                                }
                            ],
                            "displayName": "/inbox",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "inbox"
                            ]
                        }
                    ],
                    "displayName": "/{id}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{id}"
                    ]
                },
                {
                    "relativeUri": "/moderators",
                    "type": "stackexchangeResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "users",
                                            "example": "[\n  {\n    \"about_me\": \"some string\",\n    \"accept_rate\": 1,\n    \"account_id\": 1,\n    \"age\": 1,\n    \"answer_count\": 1,\n    \"badge_counts\": {\n      \"bronze\": 1,\n      \"gold\": 1,\n      \"silver\": 1\n    },\n    \"creation_date\": 1,\n    \"display_name\": \"some string\",\n    \"down_vote_count\": 1,\n    \"is_employee\": true,\n    \"last_access_date\": 1,\n    \"last_modified_date\": 1,\n    \"link\": \"some string\",\n    \"location\": \"some string\",\n    \"profile_image\": \"some string\",\n    \"question_count\": 1,\n    \"reputation\": 1,\n    \"reputation_change_day\": 1,\n    \"reputation_change_month\": 1,\n    \"reputation_change_quarter\": 1,\n    \"reputation_change_week\": 1,\n    \"reputation_change_year\": 1,\n    \"timed_penalty_date\": 1,\n    \"up_vote_count\": 1,\n    \"user_id\": 1,\n    \"user_type\": \"some string\",\n    \"view_count\": 1,\n    \"website_url\": \"some string\"\n  }\n]",
                                            "schemaContent": "users"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Gets those users on a site who can exercise moderation powers.\n \nNote, employees of Stack Exchange Inc. will be returned if they have been granted moderation powers on a site even if they have never been appointed or elected explicitly. This method checks abilities, not the manner in which they were obtained.\n \nThe sorts accepted by this method operate on the follow fields of the user object:\n - reputation - reputation\n - creation - creation_date\n - name - display_name\n - modified - last_modified_date\n  reputation is the default sort.\n \n It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\n \nThis method returns a list of users.\n",
                            "method": "get",
                            "is": [
                                "perSiteMethod",
                                "base",
                                "pageable",
                                "filterableByDate",
                                "users",
                                "ordering"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/elected",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "users",
                                                    "example": "[\n  {\n    \"about_me\": \"some string\",\n    \"accept_rate\": 1,\n    \"account_id\": 1,\n    \"age\": 1,\n    \"answer_count\": 1,\n    \"badge_counts\": {\n      \"bronze\": 1,\n      \"gold\": 1,\n      \"silver\": 1\n    },\n    \"creation_date\": 1,\n    \"display_name\": \"some string\",\n    \"down_vote_count\": 1,\n    \"is_employee\": true,\n    \"last_access_date\": 1,\n    \"last_modified_date\": 1,\n    \"link\": \"some string\",\n    \"location\": \"some string\",\n    \"profile_image\": \"some string\",\n    \"question_count\": 1,\n    \"reputation\": 1,\n    \"reputation_change_day\": 1,\n    \"reputation_change_month\": 1,\n    \"reputation_change_quarter\": 1,\n    \"reputation_change_week\": 1,\n    \"reputation_change_year\": 1,\n    \"timed_penalty_date\": 1,\n    \"up_vote_count\": 1,\n    \"user_id\": 1,\n    \"user_type\": \"some string\",\n    \"view_count\": 1,\n    \"website_url\": \"some string\"\n  }\n]",
                                                    "schemaContent": "users"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "description": "Returns those users on a site who both have moderator powers, and were actually elected.\n \nThis method excludes Stack Exchange Inc. employees, unless they were actually elected moderators on a site (which can only have happened prior to their employment).\n \nThe sorts accepted by this method operate on the follow fields of the user object:\n - reputation - reputation\n - creation - creation_date\n - name - display_name\n - modified - last_modified_date\n  reputation is the default sort.\n \n It is possible to create moderately complex queries using sort, min, max, fromdate, and todate.\n \nThis method returns a list of users.\n",
                                    "method": "get",
                                    "is": [
                                        "perSiteMethod",
                                        "base",
                                        "pageable",
                                        "filterableByDate",
                                        "users",
                                        "ordering"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/elected",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "elected"
                            ]
                        }
                    ],
                    "displayName": "/moderators",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "moderators"
                    ]
                }
            ],
            "displayName": "/users",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "users"
            ]
        },
        {
            "relativeUri": "/me",
            "type": "stackexchangeResource",
            "securedBy": [
                "oauth_2_0"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "user",
                                    "example": "{\n  \"about_me\": \"some string\",\n  \"accept_rate\": 1,\n  \"account_id\": 1,\n  \"age\": 1,\n  \"answer_count\": 1,\n  \"badge_counts\": {\n    \"bronze\": 1,\n    \"gold\": 1,\n    \"silver\": 1\n  },\n  \"creation_date\": 1,\n  \"display_name\": \"some string\",\n  \"down_vote_count\": 1,\n  \"is_employee\": true,\n  \"last_access_date\": 1,\n  \"last_modified_date\": 1,\n  \"link\": \"some string\",\n  \"location\": \"some string\",\n  \"profile_image\": \"some string\",\n  \"question_count\": 1,\n  \"reputation\": 1,\n  \"reputation_change_day\": 1,\n  \"reputation_change_month\": 1,\n  \"reputation_change_quarter\": 1,\n  \"reputation_change_week\": 1,\n  \"reputation_change_year\": 1,\n  \"timed_penalty_date\": 1,\n  \"up_vote_count\": 1,\n  \"user_id\": 1,\n  \"user_type\": \"some string\",\n  \"view_count\": 1,\n  \"website_url\": \"some string\"\n}",
                                    "schemaContent": "user"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "description": "Returns the user associated with the passed access_token.\n \nThis method returns a user.\n",
                    "method": "get",
                    "is": [
                        "perSiteMethod",
                        "base",
                        "pageable",
                        "filterableByDate",
                        "users",
                        "ordering"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/answers",
                    "type": "stackexchangeResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "answers",
                                            "example": "[\n  {\n    \"accepted\": true,\n    \"answer_id\": 1,\n    \"awarded_bounty_amount\": 1,\n    \"awarded_bounty_users\": [\n    ],\n    \"body\": \"some string\",\n    \"body_markdown\": \"some string\",\n    \"can_flag\": true,\n    \"comment_count\": 1,\n    \"comments\": [\n    ],\n    \"community_owned_date\": 1,\n    \"creation_date\": 1,\n    \"down_vote_count\": 1,\n    \"downvoted\": true,\n    \"is_accepted\": true,\n    \"last_activity_date\": 1,\n    \"last_edit_date\": 1,\n    \"last_editor\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"link\": \"some string\",\n    \"locked_date\": 1,\n    \"owner\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"question_id\": 1,\n    \"score\": 1,\n    \"share_link\": \"some string\",\n    \"tags\": [\n    ],\n    \"title\": \"some string\",\n    \"up_vote_count\": 1,\n    \"upvoted\": true\n  }\n]",
                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"accepted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"answer_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"awarded_bounty_amount\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"awarded_bounty_users\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"can_flag\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"comment_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"comments\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"community_owned_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"down_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"downvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"is_accepted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"last_activity_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_edit_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_editor\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"locked_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"question_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"share_link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"tags\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"up_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Returns the answers owned by the user associated with the given access_token.\n \nThis method returns a list of answers.\n",
                            "method": "get",
                            "is": [
                                "perSiteMethod",
                                "base",
                                "pageable",
                                "filterableByDate",
                                "sortableByActivityCreationVotes",
                                "ordering"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/answers",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "answers"
                    ]
                },
                {
                    "relativeUri": "/badges",
                    "type": "stackexchangeResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "badges",
                                            "example": "[\n  {\n    \"award_count\": 1,\n    \"badge_id\": 1,\n    \"badge_type\": \"some string\",\n    \"description\": \"some string\",\n    \"link\": \"some string\",\n    \"name\": \"some string\",\n    \"rank\": \"some string\",\n    \"user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    }\n  }\n]",
                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"award_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"badge_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"badge_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"description\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"name\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"rank\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Returns the badges earned by the user associated with the given access_token.\n \nThis method returns a list of badges.\n",
                            "method": "get",
                            "is": [
                                "perSiteMethod",
                                "base",
                                "pageable",
                                "filterableByDate",
                                "badges",
                                "ordering"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/badges",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "badges"
                    ]
                },
                {
                    "relativeUri": "/comments",
                    "type": "stackexchangeResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "comments",
                                            "example": "[\n  {\n    \"body\": \"some string\",\n    \"body_markdown\": \"some string\",\n    \"can_flag\": true,\n    \"comment_id\": 1,\n    \"creation_date\": 1,\n    \"edited\": true,\n    \"link\": \"some string\",\n    \"owner\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"post_id\": 1,\n    \"post_type\": \"some string\",\n    \"reply_to_user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"score\": 1,\n    \"upvoted\": true\n  }\n]",
                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"can_flag\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"comment_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"edited\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"post_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"post_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"reply_to_user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Returns the comments owned by the user associated with the given access_token.\n \nThis method returns a list of comments.\n",
                            "method": "get",
                            "is": [
                                "perSiteMethod",
                                "base",
                                "pageable",
                                "filterableByDate",
                                "sortableByCreationVotes",
                                "ordering"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/{toId}",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "uriParameters": {
                                "toId": {
                                    "name": "toId",
                                    "displayName": "toId",
                                    "type": "integer",
                                    "required": true,
                                    "repeat": false,
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "comments",
                                                    "example": "[\n  {\n    \"body\": \"some string\",\n    \"body_markdown\": \"some string\",\n    \"can_flag\": true,\n    \"comment_id\": 1,\n    \"creation_date\": 1,\n    \"edited\": true,\n    \"link\": \"some string\",\n    \"owner\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"post_id\": 1,\n    \"post_type\": \"some string\",\n    \"reply_to_user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"score\": 1,\n    \"upvoted\": true\n  }\n]",
                                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"can_flag\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"comment_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"edited\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"post_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"post_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"reply_to_user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "description": "Returns the comments owned by the user associated with the given access_token that are in reply to the user identified by {toId}.\n \nThis method returns a list of comments.\n",
                                    "method": "get",
                                    "is": [
                                        "perSiteMethod",
                                        "base",
                                        "pageable",
                                        "filterableByDate",
                                        "sortableByCreationVotes",
                                        "ordering"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/{toId}",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "{toId}"
                            ]
                        }
                    ],
                    "displayName": "/comments",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "comments"
                    ]
                },
                {
                    "relativeUri": "/favorites",
                    "type": "stackexchangeResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "questions",
                                            "example": "[\n  {\n    \"accepted_answer_id\": 1,\n    \"answer_count\": 1,\n    \"answers\": [\n    ],\n    \"body\": \"some string\",\n    \"body_markdown\": \"some string\",\n    \"bounty_amount\": 1,\n    \"bounty_closes_date\": 1,\n    \"bounty_user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"can_close\": true,\n    \"can_flag\": true,\n    \"close_vote_count\": 1,\n    \"closed_date\": 1,\n    \"closed_details\": {\n      \"by_users\": [\n      ],\n      \"description\": \"some string\",\n      \"on_hold\": true,\n      \"original_questions\": [\n      ],\n      \"reason\": \"some string\"\n    },\n    \"closed_reason\": \"some string\",\n    \"comment_count\": 1,\n    \"comments\": [\n    ],\n    \"community_owned_date\": 1,\n    \"creation_date\": 1,\n    \"delete_vote_count\": 1,\n    \"down_vote_count\": 1,\n    \"downvoted\": true,\n    \"favorite_count\": 1,\n    \"favorited\": true,\n    \"is_answered\": true,\n    \"last_activity_date\": 1,\n    \"last_edit_date\": 1,\n    \"last_editor\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"link\": \"some string\",\n    \"locked_date\": 1,\n    \"migrated_from\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"migrated_to\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"notice\": {\n      \"body\": \"some string\",\n      \"creation_date\": 1,\n      \"owner_user_id\": 1\n    },\n    \"owner\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"protected_date\": 1,\n    \"question_id\": 1,\n    \"reopen_vote_count\": 1,\n    \"score\": 1,\n    \"share_link\": \"some string\",\n    \"tags\": [\n    ],\n    \"title\": \"some string\",\n    \"up_vote_count\": 1,\n    \"upvoted\": true,\n    \"view_count\": 1\n  }\n]",
                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"accepted_answer_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answer_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answers\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"bounty_amount\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_closes_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"can_close\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"can_flag\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"close_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_details\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"by_users\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"description\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"on_hold\": {\n            \"required\": false,\n            \"type\": \"boolean\"\n          },\n          \"original_questions\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"reason\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"closed_reason\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"comment_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"comments\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"community_owned_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"delete_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"down_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"downvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"favorite_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"favorited\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"is_answered\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"last_activity_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_edit_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_editor\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"locked_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"migrated_from\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"migrated_to\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"notice\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"body\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"creation_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"owner_user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"protected_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"question_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"reopen_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"share_link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"tags\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"up_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"view_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Returns the questions favorites by the user associated with the given access_token.\n \nThis method returns a list of questions.\n",
                            "method": "get",
                            "is": [
                                "perSiteMethod",
                                "base",
                                "pageable",
                                "filterableByDate",
                                "favorites",
                                "ordering"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/favorites",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "favorites"
                    ]
                },
                {
                    "relativeUri": "/mentioned",
                    "type": "stackexchangeResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "comments",
                                            "example": "[\n  {\n    \"body\": \"some string\",\n    \"body_markdown\": \"some string\",\n    \"can_flag\": true,\n    \"comment_id\": 1,\n    \"creation_date\": 1,\n    \"edited\": true,\n    \"link\": \"some string\",\n    \"owner\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"post_id\": 1,\n    \"post_type\": \"some string\",\n    \"reply_to_user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"score\": 1,\n    \"upvoted\": true\n  }\n]",
                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"can_flag\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"comment_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"edited\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"post_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"post_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"reply_to_user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Returns the comments mentioning the user associated with the given access_token.\n \nThis method returns a list of comments.\n",
                            "method": "get",
                            "is": [
                                "perSiteMethod",
                                "base",
                                "pageable",
                                "filterableByDate",
                                "sortableByCreationVotes",
                                "ordering"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/mentioned",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "mentioned"
                    ]
                },
                {
                    "relativeUri": "/notifications",
                    "type": "stackexchangeResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "notifications",
                                            "example": "[\n  {\n    \"body\": \"some string\",\n    \"creation_date\": 1,\n    \"is_unread\": true,\n    \"notification_type\": \"some string\",\n    \"post_id\": 1,\n    \"site\": {\n      \"aliases\": [\n      ],\n      \"api_site_parameter\": \"some string\",\n      \"audience\": \"some string\",\n      \"closed_beta_date\": 1,\n      \"favicon_url\": \"some string\",\n      \"high_resolution_icon_url\": \"some string\",\n      \"icon_url\": \"some string\",\n      \"launch_date\": 1,\n      \"logo_url\": \"some string\",\n      \"markdown_extensions\": [\n      ],\n      \"name\": \"some string\",\n      \"open_beta_date\": 1,\n      \"related_sites\": [\n      ],\n      \"site_state\": \"some string\",\n      \"site_type\": \"some string\",\n      \"site_url\": \"some string\",\n      \"styling\": {\n        \"link_color\": \"some string\",\n        \"tag_background_color\": \"some string\",\n        \"tag_foreground_color\": \"some string\"\n      },\n      \"twitter_account\": \"some string\"\n    }\n  }\n]",
                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"is_unread\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"notification_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"post_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"site\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"aliases\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"api_site_parameter\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"audience\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"closed_beta_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"favicon_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"high_resolution_icon_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"icon_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"launch_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"logo_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"markdown_extensions\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"open_beta_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"related_sites\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"site_state\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"site_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"site_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"styling\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"link_color\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"tag_background_color\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"tag_foreground_color\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"twitter_account\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Returns a user's notifications, given an access_token.\n \nThis method requires an access_token, with a scope containing \"read_inbox\".\n \nThis method returns a list of notifications.\n",
                            "method": "get",
                            "is": [
                                "perSiteMethod",
                                "base",
                                "pageable"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/unread",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "notifications",
                                                    "example": "[\n  {\n    \"body\": \"some string\",\n    \"creation_date\": 1,\n    \"is_unread\": true,\n    \"notification_type\": \"some string\",\n    \"post_id\": 1,\n    \"site\": {\n      \"aliases\": [\n      ],\n      \"api_site_parameter\": \"some string\",\n      \"audience\": \"some string\",\n      \"closed_beta_date\": 1,\n      \"favicon_url\": \"some string\",\n      \"high_resolution_icon_url\": \"some string\",\n      \"icon_url\": \"some string\",\n      \"launch_date\": 1,\n      \"logo_url\": \"some string\",\n      \"markdown_extensions\": [\n      ],\n      \"name\": \"some string\",\n      \"open_beta_date\": 1,\n      \"related_sites\": [\n      ],\n      \"site_state\": \"some string\",\n      \"site_type\": \"some string\",\n      \"site_url\": \"some string\",\n      \"styling\": {\n        \"link_color\": \"some string\",\n        \"tag_background_color\": \"some string\",\n        \"tag_foreground_color\": \"some string\"\n      },\n      \"twitter_account\": \"some string\"\n    }\n  }\n]",
                                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"is_unread\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"notification_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"post_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"site\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"aliases\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"api_site_parameter\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"audience\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"closed_beta_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"favicon_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"high_resolution_icon_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"icon_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"launch_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"logo_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"markdown_extensions\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"open_beta_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"related_sites\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"site_state\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"site_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"site_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"styling\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"link_color\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"tag_background_color\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"tag_foreground_color\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"twitter_account\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "description": "Returns a user's unread notifications, given an access_token.\n \nThis method requires an access_token, with a scope containing \"read_inbox\".\n \nThis method returns a list of notifications.\n",
                                    "method": "get",
                                    "is": [
                                        "perSiteMethod",
                                        "base",
                                        "pageable"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/unread",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "unread"
                            ]
                        }
                    ],
                    "displayName": "/notifications",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "notifications"
                    ]
                },
                {
                    "relativeUri": "/privileges",
                    "type": "stackexchangeResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "privileges",
                                            "example": "[\n  {\n    \"description\": \"some string\",\n    \"reputation\": 1,\n    \"short_description\": \"some string\"\n  }\n]",
                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"description\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"reputation\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"short_description\": {\n        \"required\": false,\n        \"type\": \"string\"\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Returns the privileges the user identified by access_token has.\n \nThis method returns a list of privileges.\n",
                            "method": "get",
                            "is": [
                                "perSiteMethod",
                                "base",
                                "pageable"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/privileges",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "privileges"
                    ]
                },
                {
                    "relativeUri": "/questions",
                    "type": "stackexchangeResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "questions",
                                            "example": "[\n  {\n    \"accepted_answer_id\": 1,\n    \"answer_count\": 1,\n    \"answers\": [\n    ],\n    \"body\": \"some string\",\n    \"body_markdown\": \"some string\",\n    \"bounty_amount\": 1,\n    \"bounty_closes_date\": 1,\n    \"bounty_user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"can_close\": true,\n    \"can_flag\": true,\n    \"close_vote_count\": 1,\n    \"closed_date\": 1,\n    \"closed_details\": {\n      \"by_users\": [\n      ],\n      \"description\": \"some string\",\n      \"on_hold\": true,\n      \"original_questions\": [\n      ],\n      \"reason\": \"some string\"\n    },\n    \"closed_reason\": \"some string\",\n    \"comment_count\": 1,\n    \"comments\": [\n    ],\n    \"community_owned_date\": 1,\n    \"creation_date\": 1,\n    \"delete_vote_count\": 1,\n    \"down_vote_count\": 1,\n    \"downvoted\": true,\n    \"favorite_count\": 1,\n    \"favorited\": true,\n    \"is_answered\": true,\n    \"last_activity_date\": 1,\n    \"last_edit_date\": 1,\n    \"last_editor\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"link\": \"some string\",\n    \"locked_date\": 1,\n    \"migrated_from\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"migrated_to\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"notice\": {\n      \"body\": \"some string\",\n      \"creation_date\": 1,\n      \"owner_user_id\": 1\n    },\n    \"owner\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"protected_date\": 1,\n    \"question_id\": 1,\n    \"reopen_vote_count\": 1,\n    \"score\": 1,\n    \"share_link\": \"some string\",\n    \"tags\": [\n    ],\n    \"title\": \"some string\",\n    \"up_vote_count\": 1,\n    \"upvoted\": true,\n    \"view_count\": 1\n  }\n]",
                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"accepted_answer_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answer_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answers\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"bounty_amount\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_closes_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"can_close\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"can_flag\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"close_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_details\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"by_users\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"description\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"on_hold\": {\n            \"required\": false,\n            \"type\": \"boolean\"\n          },\n          \"original_questions\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"reason\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"closed_reason\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"comment_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"comments\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"community_owned_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"delete_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"down_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"downvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"favorite_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"favorited\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"is_answered\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"last_activity_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_edit_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_editor\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"locked_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"migrated_from\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"migrated_to\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"notice\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"body\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"creation_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"owner_user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"protected_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"question_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"reopen_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"share_link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"tags\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"up_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"view_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Returns the questions owned by the user associated with the given access_token.\n \nThis method returns a list of questions.\n",
                            "method": "get",
                            "is": [
                                "perSiteMethod",
                                "base",
                                "pageable",
                                "filterableByDate",
                                "sortableByActivityCreationVotes",
                                "ordering"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/featured",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "questions",
                                                    "example": "[\n  {\n    \"accepted_answer_id\": 1,\n    \"answer_count\": 1,\n    \"answers\": [\n    ],\n    \"body\": \"some string\",\n    \"body_markdown\": \"some string\",\n    \"bounty_amount\": 1,\n    \"bounty_closes_date\": 1,\n    \"bounty_user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"can_close\": true,\n    \"can_flag\": true,\n    \"close_vote_count\": 1,\n    \"closed_date\": 1,\n    \"closed_details\": {\n      \"by_users\": [\n      ],\n      \"description\": \"some string\",\n      \"on_hold\": true,\n      \"original_questions\": [\n      ],\n      \"reason\": \"some string\"\n    },\n    \"closed_reason\": \"some string\",\n    \"comment_count\": 1,\n    \"comments\": [\n    ],\n    \"community_owned_date\": 1,\n    \"creation_date\": 1,\n    \"delete_vote_count\": 1,\n    \"down_vote_count\": 1,\n    \"downvoted\": true,\n    \"favorite_count\": 1,\n    \"favorited\": true,\n    \"is_answered\": true,\n    \"last_activity_date\": 1,\n    \"last_edit_date\": 1,\n    \"last_editor\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"link\": \"some string\",\n    \"locked_date\": 1,\n    \"migrated_from\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"migrated_to\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"notice\": {\n      \"body\": \"some string\",\n      \"creation_date\": 1,\n      \"owner_user_id\": 1\n    },\n    \"owner\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"protected_date\": 1,\n    \"question_id\": 1,\n    \"reopen_vote_count\": 1,\n    \"score\": 1,\n    \"share_link\": \"some string\",\n    \"tags\": [\n    ],\n    \"title\": \"some string\",\n    \"up_vote_count\": 1,\n    \"upvoted\": true,\n    \"view_count\": 1\n  }\n]",
                                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"accepted_answer_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answer_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answers\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"bounty_amount\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_closes_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"can_close\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"can_flag\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"close_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_details\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"by_users\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"description\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"on_hold\": {\n            \"required\": false,\n            \"type\": \"boolean\"\n          },\n          \"original_questions\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"reason\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"closed_reason\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"comment_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"comments\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"community_owned_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"delete_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"down_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"downvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"favorite_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"favorited\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"is_answered\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"last_activity_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_edit_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_editor\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"locked_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"migrated_from\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"migrated_to\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"notice\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"body\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"creation_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"owner_user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"protected_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"question_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"reopen_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"share_link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"tags\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"up_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"view_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "description": "Returns the questions that have active bounties offered by the user associated with the given access_token.\n \nThis method returns a list of questions.\n",
                                    "method": "get",
                                    "is": [
                                        "perSiteMethod",
                                        "base",
                                        "pageable",
                                        "filterableByDate",
                                        "sortableByActivityCreationVotes",
                                        "ordering"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/featured",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "featured"
                            ]
                        },
                        {
                            "relativeUri": "/no-answers",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "questions",
                                                    "example": "[\n  {\n    \"accepted_answer_id\": 1,\n    \"answer_count\": 1,\n    \"answers\": [\n    ],\n    \"body\": \"some string\",\n    \"body_markdown\": \"some string\",\n    \"bounty_amount\": 1,\n    \"bounty_closes_date\": 1,\n    \"bounty_user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"can_close\": true,\n    \"can_flag\": true,\n    \"close_vote_count\": 1,\n    \"closed_date\": 1,\n    \"closed_details\": {\n      \"by_users\": [\n      ],\n      \"description\": \"some string\",\n      \"on_hold\": true,\n      \"original_questions\": [\n      ],\n      \"reason\": \"some string\"\n    },\n    \"closed_reason\": \"some string\",\n    \"comment_count\": 1,\n    \"comments\": [\n    ],\n    \"community_owned_date\": 1,\n    \"creation_date\": 1,\n    \"delete_vote_count\": 1,\n    \"down_vote_count\": 1,\n    \"downvoted\": true,\n    \"favorite_count\": 1,\n    \"favorited\": true,\n    \"is_answered\": true,\n    \"last_activity_date\": 1,\n    \"last_edit_date\": 1,\n    \"last_editor\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"link\": \"some string\",\n    \"locked_date\": 1,\n    \"migrated_from\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"migrated_to\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"notice\": {\n      \"body\": \"some string\",\n      \"creation_date\": 1,\n      \"owner_user_id\": 1\n    },\n    \"owner\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"protected_date\": 1,\n    \"question_id\": 1,\n    \"reopen_vote_count\": 1,\n    \"score\": 1,\n    \"share_link\": \"some string\",\n    \"tags\": [\n    ],\n    \"title\": \"some string\",\n    \"up_vote_count\": 1,\n    \"upvoted\": true,\n    \"view_count\": 1\n  }\n]",
                                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"accepted_answer_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answer_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answers\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"bounty_amount\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_closes_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"can_close\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"can_flag\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"close_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_details\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"by_users\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"description\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"on_hold\": {\n            \"required\": false,\n            \"type\": \"boolean\"\n          },\n          \"original_questions\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"reason\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"closed_reason\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"comment_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"comments\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"community_owned_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"delete_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"down_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"downvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"favorite_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"favorited\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"is_answered\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"last_activity_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_edit_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_editor\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"locked_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"migrated_from\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"migrated_to\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"notice\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"body\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"creation_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"owner_user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"protected_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"question_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"reopen_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"share_link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"tags\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"up_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"view_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "description": "Returns the questions owned by the user associated with the given access_token that have no answers.\n \nThis method returns a list of questions.\n",
                                    "method": "get",
                                    "is": [
                                        "perSiteMethod",
                                        "base",
                                        "pageable",
                                        "filterableByDate",
                                        "sortableByActivityCreationVotes",
                                        "ordering"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/no-answers",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "no-answers"
                            ]
                        },
                        {
                            "relativeUri": "/unaccepted",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "questions",
                                                    "example": "[\n  {\n    \"accepted_answer_id\": 1,\n    \"answer_count\": 1,\n    \"answers\": [\n    ],\n    \"body\": \"some string\",\n    \"body_markdown\": \"some string\",\n    \"bounty_amount\": 1,\n    \"bounty_closes_date\": 1,\n    \"bounty_user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"can_close\": true,\n    \"can_flag\": true,\n    \"close_vote_count\": 1,\n    \"closed_date\": 1,\n    \"closed_details\": {\n      \"by_users\": [\n      ],\n      \"description\": \"some string\",\n      \"on_hold\": true,\n      \"original_questions\": [\n      ],\n      \"reason\": \"some string\"\n    },\n    \"closed_reason\": \"some string\",\n    \"comment_count\": 1,\n    \"comments\": [\n    ],\n    \"community_owned_date\": 1,\n    \"creation_date\": 1,\n    \"delete_vote_count\": 1,\n    \"down_vote_count\": 1,\n    \"downvoted\": true,\n    \"favorite_count\": 1,\n    \"favorited\": true,\n    \"is_answered\": true,\n    \"last_activity_date\": 1,\n    \"last_edit_date\": 1,\n    \"last_editor\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"link\": \"some string\",\n    \"locked_date\": 1,\n    \"migrated_from\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"migrated_to\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"notice\": {\n      \"body\": \"some string\",\n      \"creation_date\": 1,\n      \"owner_user_id\": 1\n    },\n    \"owner\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"protected_date\": 1,\n    \"question_id\": 1,\n    \"reopen_vote_count\": 1,\n    \"score\": 1,\n    \"share_link\": \"some string\",\n    \"tags\": [\n    ],\n    \"title\": \"some string\",\n    \"up_vote_count\": 1,\n    \"upvoted\": true,\n    \"view_count\": 1\n  }\n]",
                                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"accepted_answer_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answer_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answers\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"bounty_amount\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_closes_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"can_close\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"can_flag\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"close_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_details\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"by_users\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"description\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"on_hold\": {\n            \"required\": false,\n            \"type\": \"boolean\"\n          },\n          \"original_questions\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"reason\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"closed_reason\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"comment_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"comments\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"community_owned_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"delete_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"down_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"downvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"favorite_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"favorited\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"is_answered\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"last_activity_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_edit_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_editor\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"locked_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"migrated_from\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"migrated_to\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"notice\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"body\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"creation_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"owner_user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"protected_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"question_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"reopen_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"share_link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"tags\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"up_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"view_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "description": "Returns the questions owned by the user associated with the given access_token that have no accepted answer.\n \nThis method returns a list of questions.\n",
                                    "method": "get",
                                    "is": [
                                        "perSiteMethod",
                                        "base",
                                        "pageable",
                                        "filterableByDate",
                                        "sortableByActivityCreationVotes",
                                        "ordering"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/unaccepted",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "unaccepted"
                            ]
                        },
                        {
                            "relativeUri": "/unanswered",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "questions",
                                                    "example": "[\n  {\n    \"accepted_answer_id\": 1,\n    \"answer_count\": 1,\n    \"answers\": [\n    ],\n    \"body\": \"some string\",\n    \"body_markdown\": \"some string\",\n    \"bounty_amount\": 1,\n    \"bounty_closes_date\": 1,\n    \"bounty_user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"can_close\": true,\n    \"can_flag\": true,\n    \"close_vote_count\": 1,\n    \"closed_date\": 1,\n    \"closed_details\": {\n      \"by_users\": [\n      ],\n      \"description\": \"some string\",\n      \"on_hold\": true,\n      \"original_questions\": [\n      ],\n      \"reason\": \"some string\"\n    },\n    \"closed_reason\": \"some string\",\n    \"comment_count\": 1,\n    \"comments\": [\n    ],\n    \"community_owned_date\": 1,\n    \"creation_date\": 1,\n    \"delete_vote_count\": 1,\n    \"down_vote_count\": 1,\n    \"downvoted\": true,\n    \"favorite_count\": 1,\n    \"favorited\": true,\n    \"is_answered\": true,\n    \"last_activity_date\": 1,\n    \"last_edit_date\": 1,\n    \"last_editor\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"link\": \"some string\",\n    \"locked_date\": 1,\n    \"migrated_from\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"migrated_to\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"notice\": {\n      \"body\": \"some string\",\n      \"creation_date\": 1,\n      \"owner_user_id\": 1\n    },\n    \"owner\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"protected_date\": 1,\n    \"question_id\": 1,\n    \"reopen_vote_count\": 1,\n    \"score\": 1,\n    \"share_link\": \"some string\",\n    \"tags\": [\n    ],\n    \"title\": \"some string\",\n    \"up_vote_count\": 1,\n    \"upvoted\": true,\n    \"view_count\": 1\n  }\n]",
                                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"accepted_answer_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answer_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answers\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"bounty_amount\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_closes_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"can_close\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"can_flag\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"close_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_details\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"by_users\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"description\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"on_hold\": {\n            \"required\": false,\n            \"type\": \"boolean\"\n          },\n          \"original_questions\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"reason\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"closed_reason\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"comment_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"comments\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"community_owned_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"delete_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"down_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"downvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"favorite_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"favorited\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"is_answered\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"last_activity_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_edit_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_editor\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"locked_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"migrated_from\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"migrated_to\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"notice\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"body\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"creation_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"owner_user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"protected_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"question_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"reopen_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"share_link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"tags\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"up_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"view_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "description": "Returns the questions owned by the user associated with the given access_token that are not considered answered.\n \nThis method returns a list of questions.\n",
                                    "method": "get",
                                    "is": [
                                        "perSiteMethod",
                                        "base",
                                        "pageable",
                                        "filterableByDate",
                                        "sortableByActivityCreationVotes",
                                        "ordering"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/unanswered",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "unanswered"
                            ]
                        }
                    ],
                    "displayName": "/questions",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "questions"
                    ]
                },
                {
                    "relativeUri": "/reputation",
                    "type": "stackexchangeResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "reputation_changes",
                                            "example": "[\n  {\n    \"link\": \"some string\",\n    \"on_date\": 1,\n    \"post_id\": 1,\n    \"post_type\": \"some string\",\n    \"reputation_change\": 1,\n    \"title\": \"some string\",\n    \"user_id\": 1,\n    \"vote_type\": \"some string\"\n  }\n]",
                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"on_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"post_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"post_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"reputation_change\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"user_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"vote_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Returns the reputation changed for the user associated with the given access_token.\n \nThis method returns a list of reputation changes.\n",
                            "method": "get",
                            "is": [
                                "perSiteMethod",
                                "base"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/reputation",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "reputation"
                    ]
                },
                {
                    "relativeUri": "/reputation-history",
                    "type": "stackexchangeResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "reputation_history",
                                            "example": "[\n  {\n    \"creation_date\": 1,\n    \"post_id\": 1,\n    \"reputation_change\": 1,\n    \"reputation_history_type\": \"some string\",\n    \"user_id\": 1\n  }\n]",
                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"post_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"reputation_change\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"reputation_history_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"user_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Returns user's public reputation history.\n \nThis method returns a list of reputation_history.\n",
                            "method": "get",
                            "is": [
                                "perSiteMethod",
                                "base",
                                "pageable"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/full",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "reputation_history",
                                                    "example": "[\n  {\n    \"creation_date\": 1,\n    \"post_id\": 1,\n    \"reputation_change\": 1,\n    \"reputation_history_type\": \"some string\",\n    \"user_id\": 1\n  }\n]",
                                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"post_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"reputation_change\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"reputation_history_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"user_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "description": "Returns user's full reputation history, including private events.\n \n This method requires an access_token, with a scope containing \"private_info\".\n \nThis method returns a list of reputation_history.\n",
                                    "method": "get",
                                    "is": [
                                        "perSiteMethod",
                                        "base",
                                        "pageable"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/full",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "full"
                            ]
                        }
                    ],
                    "displayName": "/reputation-history",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "reputation-history"
                    ]
                },
                {
                    "relativeUri": "/suggested-edits",
                    "type": "stackexchangeResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "suggested-edits",
                                            "example": "[\n  {\n    \"approval_date\": 1,\n    \"body\": \"some string\",\n    \"comment\": \"some string\",\n    \"creation_date\": 1,\n    \"post_id\": 1,\n    \"post_type\": \"some string\",\n    \"proposing_user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"rejection_date\": 1,\n    \"suggested_edit_id\": 1,\n    \"tags\": [\n    ],\n    \"title\": \"some string\"\n  }\n]",
                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"approval_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"comment\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"post_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"post_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"proposing_user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"rejection_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"suggested_edit_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"tags\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Returns the suggested edits the user identified by access_token has submitted.\n \nThis method returns a list of suggested-edits.\n",
                            "method": "get",
                            "is": [
                                "perSiteMethod",
                                "base",
                                "pageable",
                                "filterableByDate",
                                "suggestedEdits",
                                "ordering"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/suggested-edits",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "suggested-edits"
                    ]
                },
                {
                    "relativeUri": "/tags",
                    "type": "stackexchangeResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "tags",
                                            "example": "[\n  {\n    \"count\": 1,\n    \"has_synonyms\": true,\n    \"is_moderator_only\": true,\n    \"is_required\": true,\n    \"last_activity_date\": 1,\n    \"name\": \"some string\",\n    \"synonyms\": [\n    ],\n    \"user_id\": 1\n  }\n]",
                                            "schemaContent": "tags"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Returns the tags the user identified by the access_token passed is active in.\n \nThis method returns a list of tags.\n",
                            "method": "get",
                            "is": [
                                "perSiteMethod",
                                "base",
                                "pageable",
                                "filterableByDate",
                                "tags",
                                "ordering"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/{tags}",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "uriParameters": {
                                "tags": {
                                    "name": "tags",
                                    "displayName": "tags",
                                    "type": "string",
                                    "required": true,
                                    "repeat": false,
                                    "description": "String list (semicolon delimited).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "resources": [
                                {
                                    "relativeUri": "/top-answers",
                                    "type": "stackexchangeResource",
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "methods": [
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "answers",
                                                            "example": "[\n  {\n    \"accepted\": true,\n    \"answer_id\": 1,\n    \"awarded_bounty_amount\": 1,\n    \"awarded_bounty_users\": [\n    ],\n    \"body\": \"some string\",\n    \"body_markdown\": \"some string\",\n    \"can_flag\": true,\n    \"comment_count\": 1,\n    \"comments\": [\n    ],\n    \"community_owned_date\": 1,\n    \"creation_date\": 1,\n    \"down_vote_count\": 1,\n    \"downvoted\": true,\n    \"is_accepted\": true,\n    \"last_activity_date\": 1,\n    \"last_edit_date\": 1,\n    \"last_editor\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"link\": \"some string\",\n    \"locked_date\": 1,\n    \"owner\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"question_id\": 1,\n    \"score\": 1,\n    \"share_link\": \"some string\",\n    \"tags\": [\n    ],\n    \"title\": \"some string\",\n    \"up_vote_count\": 1,\n    \"upvoted\": true\n  }\n]",
                                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"accepted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"answer_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"awarded_bounty_amount\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"awarded_bounty_users\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"can_flag\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"comment_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"comments\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"community_owned_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"down_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"downvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"is_accepted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"last_activity_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_edit_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_editor\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"locked_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"question_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"share_link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"tags\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"up_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      }\n    }\n  }\n}"
                                                        }
                                                    }
                                                }
                                            },
                                            "protocols": [
                                                "HTTPS"
                                            ],
                                            "securedBy": [
                                                "oauth_2_0"
                                            ],
                                            "description": "Returns the top 30 answers the user associated with the given access_token has posted in response to questions with the given tags.\n \nThis method returns a list of answers.\n",
                                            "method": "get",
                                            "is": [
                                                "perSiteMethod",
                                                "base",
                                                "pageable",
                                                "filterableByDate",
                                                "sortableByActivityCreationVotes",
                                                "ordering"
                                            ],
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/top-answers",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "securedBy": {
                                                "calculated": true
                                            },
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "top-answers"
                                    ]
                                },
                                {
                                    "relativeUri": "/top-questions",
                                    "type": "stackexchangeResource",
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "methods": [
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "questions",
                                                            "example": "[\n  {\n    \"accepted_answer_id\": 1,\n    \"answer_count\": 1,\n    \"answers\": [\n    ],\n    \"body\": \"some string\",\n    \"body_markdown\": \"some string\",\n    \"bounty_amount\": 1,\n    \"bounty_closes_date\": 1,\n    \"bounty_user\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"can_close\": true,\n    \"can_flag\": true,\n    \"close_vote_count\": 1,\n    \"closed_date\": 1,\n    \"closed_details\": {\n      \"by_users\": [\n      ],\n      \"description\": \"some string\",\n      \"on_hold\": true,\n      \"original_questions\": [\n      ],\n      \"reason\": \"some string\"\n    },\n    \"closed_reason\": \"some string\",\n    \"comment_count\": 1,\n    \"comments\": [\n    ],\n    \"community_owned_date\": 1,\n    \"creation_date\": 1,\n    \"delete_vote_count\": 1,\n    \"down_vote_count\": 1,\n    \"downvoted\": true,\n    \"favorite_count\": 1,\n    \"favorited\": true,\n    \"is_answered\": true,\n    \"last_activity_date\": 1,\n    \"last_edit_date\": 1,\n    \"last_editor\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"link\": \"some string\",\n    \"locked_date\": 1,\n    \"migrated_from\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"migrated_to\": {\n      \"on_date\": 1,\n      \"other_site\": {\n        \"aliases\": [\n        ],\n        \"api_site_parameter\": \"some string\",\n        \"audience\": \"some string\",\n        \"closed_beta_date\": 1,\n        \"favicon_url\": \"some string\",\n        \"high_resolution_icon_url\": \"some string\",\n        \"icon_url\": \"some string\",\n        \"launch_date\": 1,\n        \"logo_url\": \"some string\",\n        \"markdown_extensions\": [\n        ],\n        \"name\": \"some string\",\n        \"open_beta_date\": 1,\n        \"related_sites\": [\n        ],\n        \"site_state\": \"some string\",\n        \"site_type\": \"some string\",\n        \"site_url\": \"some string\",\n        \"styling\": {\n          \"link_color\": \"some string\",\n          \"tag_background_color\": \"some string\",\n          \"tag_foreground_color\": \"some string\"\n        },\n        \"twitter_account\": \"some string\"\n      },\n      \"question_id\": 1\n    },\n    \"notice\": {\n      \"body\": \"some string\",\n      \"creation_date\": 1,\n      \"owner_user_id\": 1\n    },\n    \"owner\": {\n      \"accept_rate\": 1,\n      \"badge_counts\": {\n        \"bronze\": 1,\n        \"gold\": 1,\n        \"silver\": 1\n      },\n      \"display_name\": \"some string\",\n      \"link\": \"some string\",\n      \"profile_image\": \"some string\",\n      \"reputation\": 1,\n      \"user_id\": 1,\n      \"user_type\": \"some string\"\n    },\n    \"protected_date\": 1,\n    \"question_id\": 1,\n    \"reopen_vote_count\": 1,\n    \"score\": 1,\n    \"share_link\": \"some string\",\n    \"tags\": [\n    ],\n    \"title\": \"some string\",\n    \"up_vote_count\": 1,\n    \"upvoted\": true,\n    \"view_count\": 1\n  }\n]",
                                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"accepted_answer_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answer_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answers\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"body_markdown\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"bounty_amount\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_closes_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"bounty_user\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"can_close\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"can_flag\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"close_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"closed_details\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"by_users\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"description\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"on_hold\": {\n            \"required\": false,\n            \"type\": \"boolean\"\n          },\n          \"original_questions\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"reason\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"closed_reason\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"comment_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"comments\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"community_owned_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"delete_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"down_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"downvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"favorite_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"favorited\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"is_answered\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"last_activity_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_edit_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_editor\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"locked_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"migrated_from\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"migrated_to\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"on_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"other_site\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"aliases\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"api_site_parameter\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"audience\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"closed_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"favicon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"high_resolution_icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"icon_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"launch_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"logo_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"markdown_extensions\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"name\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"open_beta_date\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"related_sites\": {\n                \"required\": false,\n                \"type\": \"array\"\n              },\n              \"site_state\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_type\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"site_url\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"styling\": {\n                \"required\": false,\n                \"type\": \"object\",\n                \"properties\": {\n                  \"link_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_background_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  },\n                  \"tag_foreground_color\": {\n                    \"required\": false,\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"twitter_account\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"question_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"notice\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"body\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"creation_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"owner_user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"owner\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"accept_rate\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"badge_counts\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"bronze\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"gold\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              },\n              \"silver\": {\n                \"required\": false,\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"display_name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"profile_image\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"reputation\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_id\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"user_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"protected_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"question_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"reopen_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"share_link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"tags\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"up_vote_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"upvoted\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"view_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
                                                        }
                                                    }
                                                }
                                            },
                                            "protocols": [
                                                "HTTPS"
                                            ],
                                            "securedBy": [
                                                "oauth_2_0"
                                            ],
                                            "description": "Returns the top 30 questions the user associated with the given access_token has posted in response to questions with the given tags.\n \nThis method returns a list of questions.\n",
                                            "method": "get",
                                            "is": [
                                                "perSiteMethod",
                                                "base",
                                                "pageable",
                                                "filterableByDate",
                                                "questions",
                                                "ordering"
                                            ],
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/top-questions",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "securedBy": {
                                                "calculated": true
                                            },
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "top-questions"
                                    ]
                                }
                            ],
                            "displayName": "/{tags}",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "{tags}"
                            ]
                        }
                    ],
                    "displayName": "/tags",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "tags"
                    ]
                },
                {
                    "relativeUri": "/timeline",
                    "type": "stackexchangeResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "user_timeline_objects",
                                            "example": "[\n  {\n    \"badge_id\": 1,\n    \"comment_id\": 1,\n    \"creation_date\": 1,\n    \"detail\": \"some string\",\n    \"link\": \"some string\",\n    \"post_id\": 1,\n    \"post_type\": \"some string\",\n    \"suggested_edit_id\": 1,\n    \"timeline_type\": \"some string\",\n    \"title\": \"some string\",\n    \"user_id\": 1\n  }\n]",
                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"badge_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"comment_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"detail\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"post_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"post_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"suggested_edit_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"timeline_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"user_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Returns a subset of the actions the user identified by the passed access_token has taken on the site.\n \nThis method returns a list of user timeline objects.\n",
                            "method": "get",
                            "is": [
                                "perSiteMethod",
                                "base",
                                "pageable",
                                "filterableByDate"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/timeline",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "timeline"
                    ]
                },
                {
                    "relativeUri": "/top-answer-tags",
                    "type": "stackexchangeResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "top_tag_objects",
                                            "example": "[\n  {\n    \"answer_count\": 1,\n    \"answer_score\": 1,\n    \"question_count\": 1,\n    \"question_score\": 1,\n    \"tag_name\": \"some string\",\n    \"user_id\": 1\n  }\n]",
                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"answer_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answer_score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"question_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"question_score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"tag_name\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"user_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Returns the user identified by access_token's top 30 tags by answer score.\n \nThis method returns a list of top tag objects.\n",
                            "method": "get",
                            "is": [
                                "perSiteMethod",
                                "base",
                                "pageable"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/top-answer-tags",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "top-answer-tags"
                    ]
                },
                {
                    "relativeUri": "/top-question-tags",
                    "type": "stackexchangeResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "top_tag_objects",
                                            "example": "[\n  {\n    \"answer_count\": 1,\n    \"answer_score\": 1,\n    \"question_count\": 1,\n    \"question_score\": 1,\n    \"tag_name\": \"some string\",\n    \"user_id\": 1\n  }\n]",
                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"answer_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answer_score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"question_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"question_score\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"tag_name\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"user_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Returns the user identified by access_token's top 30 tags by question score.\n \nThis method returns a list of top tag objects.\n",
                            "method": "get",
                            "is": [
                                "perSiteMethod",
                                "base",
                                "pageable"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/top-question-tags",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "top-question-tags"
                    ]
                },
                {
                    "relativeUri": "/write-permissions",
                    "type": "stackexchangeResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "write_permissions",
                                            "example": "[\n  {\n    \"can_add\": true,\n    \"can_delete\": true,\n    \"can_edit\": true,\n    \"max_daily_actions\": 1,\n    \"min_seconds_between_actions\": 1,\n    \"object_type\": \"some string\",\n    \"user_id\": 1\n  }\n]",
                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"can_add\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"can_delete\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"can_edit\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"max_daily_actions\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"min_seconds_between_actions\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"object_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"user_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Returns the write permissions a user has via the api, given an access token.\n \nThe Stack Exchange API gives users the ability to create, edit, and delete certain types. This method returns whether the passed user is capable of performing those actions at all, as well as how many times a day they can.\n \nThis method does not consider the user's current quota (ie. if they've already exhausted it for today) nor any additional restrictions on write access, such as editing deleted comments.\n \nThis method returns a list of write_permissions.\n",
                            "method": "get",
                            "is": [
                                "perSiteMethod",
                                "base",
                                "pageable"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/write-permissions",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "write-permissions"
                    ]
                },
                {
                    "relativeUri": "/inbox",
                    "type": "stackexchangeResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "inbox_items",
                                            "example": "[\n  {\n    \"answer_id\": 1,\n    \"body\": \"some string\",\n    \"comment_id\": 1,\n    \"creation_date\": 1,\n    \"is_unread\": true,\n    \"item_type\": \"some string\",\n    \"link\": \"some string\",\n    \"question_id\": 1,\n    \"site\": {\n      \"aliases\": [\n      ],\n      \"api_site_parameter\": \"some string\",\n      \"audience\": \"some string\",\n      \"closed_beta_date\": 1,\n      \"favicon_url\": \"some string\",\n      \"high_resolution_icon_url\": \"some string\",\n      \"icon_url\": \"some string\",\n      \"launch_date\": 1,\n      \"logo_url\": \"some string\",\n      \"markdown_extensions\": [\n      ],\n      \"name\": \"some string\",\n      \"open_beta_date\": 1,\n      \"related_sites\": [\n      ],\n      \"site_state\": \"some string\",\n      \"site_type\": \"some string\",\n      \"site_url\": \"some string\",\n      \"styling\": {\n        \"link_color\": \"some string\",\n        \"tag_background_color\": \"some string\",\n        \"tag_foreground_color\": \"some string\"\n      },\n      \"twitter_account\": \"some string\"\n    },\n    \"title\": \"some string\"\n  }\n]",
                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"answer_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"comment_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"is_unread\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"item_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"question_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"site\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"aliases\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"api_site_parameter\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"audience\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"closed_beta_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"favicon_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"high_resolution_icon_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"icon_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"launch_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"logo_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"markdown_extensions\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"open_beta_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"related_sites\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"site_state\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"site_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"site_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"styling\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"link_color\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"tag_background_color\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"tag_foreground_color\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"twitter_account\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Returns the user identified by access_token's inbox.\n \nThis method requires an access_token, with a scope containing \"read_inbox\".\n \nThis method returns a list of inbox items.\n",
                            "method": "get",
                            "is": [
                                "perSiteMethod",
                                "base",
                                "pageable"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/unread",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "inbox_items",
                                                    "example": "[\n  {\n    \"answer_id\": 1,\n    \"body\": \"some string\",\n    \"comment_id\": 1,\n    \"creation_date\": 1,\n    \"is_unread\": true,\n    \"item_type\": \"some string\",\n    \"link\": \"some string\",\n    \"question_id\": 1,\n    \"site\": {\n      \"aliases\": [\n      ],\n      \"api_site_parameter\": \"some string\",\n      \"audience\": \"some string\",\n      \"closed_beta_date\": 1,\n      \"favicon_url\": \"some string\",\n      \"high_resolution_icon_url\": \"some string\",\n      \"icon_url\": \"some string\",\n      \"launch_date\": 1,\n      \"logo_url\": \"some string\",\n      \"markdown_extensions\": [\n      ],\n      \"name\": \"some string\",\n      \"open_beta_date\": 1,\n      \"related_sites\": [\n      ],\n      \"site_state\": \"some string\",\n      \"site_type\": \"some string\",\n      \"site_url\": \"some string\",\n      \"styling\": {\n        \"link_color\": \"some string\",\n        \"tag_background_color\": \"some string\",\n        \"tag_foreground_color\": \"some string\"\n      },\n      \"twitter_account\": \"some string\"\n    },\n    \"title\": \"some string\"\n  }\n]",
                                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"answer_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"comment_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"is_unread\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"item_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"question_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"site\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"aliases\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"api_site_parameter\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"audience\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"closed_beta_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"favicon_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"high_resolution_icon_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"icon_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"launch_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"logo_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"markdown_extensions\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"open_beta_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"related_sites\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"site_state\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"site_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"site_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"styling\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"link_color\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"tag_background_color\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"tag_foreground_color\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"twitter_account\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "queryParameters": {
                                        "since": {
                                            "name": "since",
                                            "displayName": "since",
                                            "type": "integer",
                                            "required": false,
                                            "repeat": false,
                                            "description": "Unix date.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Returns the unread items in the user identified by access_token's inbox.\n \nThis method requires an access_token, with a scope containing \"read_inbox\".\n \nThis method returns a list of inbox items.\n",
                                    "method": "get",
                                    "is": [
                                        "perSiteMethod",
                                        "base",
                                        "pageable"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/unread",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "unread"
                            ]
                        }
                    ],
                    "displayName": "/inbox",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "inbox"
                    ]
                },
                {
                    "relativeUri": "/associated",
                    "type": "stackexchangeResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "network_users",
                                            "example": "[\n  {\n    \"account_id\": 1,\n    \"answer_count\": 1,\n    \"badge_counts\": {\n      \"bronze\": 1,\n      \"gold\": 1,\n      \"silver\": 1\n    },\n    \"creation_date\": 1,\n    \"last_access_date\": 1,\n    \"question_count\": 1,\n    \"reputation\": 1,\n    \"site_name\": \"some string\",\n    \"site_url\": \"some string\",\n    \"top_answers\": [\n    ],\n    \"top_questions\": [\n    ],\n    \"user_id\": 1,\n    \"user_type\": \"some string\"\n  }\n]",
                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"account_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"answer_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"badge_counts\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"bronze\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"gold\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"silver\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"last_access_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"question_count\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"reputation\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"site_name\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"site_url\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"top_answers\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"top_questions\": {\n        \"required\": false,\n        \"type\": \"array\"\n      },\n      \"user_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"user_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Returns all of a user's associated accounts, given an access_token for them.\n \nThis method returns a list of network users.\n",
                            "method": "get",
                            "is": [
                                "base",
                                "pageable"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/associated",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "associated"
                    ]
                },
                {
                    "relativeUri": "/merges",
                    "type": "stackexchangeResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "account_merge",
                                            "example": "[\n  {\n    \"merge_date\": 1,\n    \"new_account_id\": 1,\n    \"old_account_id\": 1\n  }\n]",
                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"merge_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"new_account_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"old_account_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Returns a record of merges that have occurred involving a user identified by an access_token.\n \nThis method allows you to take now invalid account ids and find what account they've become, or take currently valid account ids and find which ids were equivalent in the past.\n \nThis is most useful when confirming that an account_id is in fact \"new\" to an application.\n \nAccount merges can happen for a wide range of reasons, applications should not make assumptions that merges have particular causes.\n \nNote that accounts are managed at a network level, users on a site may be merged due to an account level merge but there is no guarantee that a merge has an effect on any particular site.\n \nThis method returns a list of account_merge.\n",
                            "method": "get",
                            "is": [
                                "base",
                                "pageable"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/merges",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "merges"
                    ]
                }
            ],
            "displayName": "/me",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "me"
            ]
        },
        {
            "relativeUri": "/access-tokens",
            "securedBy": [
                "oauth_2_0"
            ],
            "resources": [
                {
                    "relativeUri": "/{accessTokens}",
                    "type": "stackexchangeResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "uriParameters": {
                        "accessTokens": {
                            "name": "accessTokens",
                            "displayName": "accessTokens",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "description": "String list (semicolon delimited).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "access_tokens",
                                            "example": "[\n  {\n    \"access_token\": \"some string\",\n    \"account_id\": 1,\n    \"expires_on_date\": 1,\n    \"scope\": [\n    ]\n  }\n]",
                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"access_token\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"account_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"expires_on_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"scope\": {\n        \"required\": false,\n        \"type\": \"array\"\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Reads the properties for a set of access tokens.\n \n{accessTokens} can contain up to 20 access tokens. These are obtained by authenticating a user using OAuth 2.0.\n \nThis method returns a list of access_tokens.\n",
                            "method": "get",
                            "is": [
                                "base",
                                "pageable"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/invalidate",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "access_tokens",
                                                    "example": "[\n  {\n    \"access_token\": \"some string\",\n    \"account_id\": 1,\n    \"expires_on_date\": 1,\n    \"scope\": [\n    ]\n  }\n]",
                                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"access_token\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"account_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"expires_on_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"scope\": {\n        \"required\": false,\n        \"type\": \"array\"\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "description": "Immediately expires the access tokens passed. This method is meant to allow an application to discard any active access tokens it no longer needs.\n \n{accessTokens} can contain up to 20 access tokens. These are obtained by authenticating a user using OAuth 2.0.\n \nThis method returns a list of access_tokens.\n",
                                    "method": "get",
                                    "is": [
                                        "base",
                                        "pageable"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/invalidate",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "invalidate"
                            ]
                        }
                    ],
                    "displayName": "/{accessTokens}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{accessTokens}"
                    ]
                }
            ],
            "displayName": "/access-tokens",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "access-tokens"
            ]
        },
        {
            "relativeUri": "/apps",
            "securedBy": [
                "oauth_2_0"
            ],
            "resources": [
                {
                    "relativeUri": "/{accessTokens}",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "uriParameters": {
                        "accessTokens": {
                            "name": "accessTokens",
                            "displayName": "accessTokens",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "description": "String list (semicolon delimited).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "resources": [
                        {
                            "relativeUri": "/de-authenticate",
                            "type": "stackexchangeResource",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "access_tokens",
                                                    "example": "[\n  {\n    \"access_token\": \"some string\",\n    \"account_id\": 1,\n    \"expires_on_date\": 1,\n    \"scope\": [\n    ]\n  }\n]",
                                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"access_token\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"account_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"expires_on_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"scope\": {\n        \"required\": false,\n        \"type\": \"array\"\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "description": "Passing valid access_tokens to this method causes the application that created them to be de-authorized by the user associated with each access_token. This will remove the application from their apps tab, and cause all other existing access_tokens to be destroyed.\n \nThis method is meant for uninstalling applications, recovering from access_token leaks, or simply as a stronger form of /access-tokens/{accessTokens}/invalidate.\n \nNothing prevents a user from re-authenticate to an application that has de-authenticated itself, the user will be prompted to approve the application again however.\n \n{accessTokens} can contain up to 20 access tokens. These are obtained by authenticating a user using OAuth 2.0.\n \nThis method returns a list of access_tokens.\n",
                                    "method": "get",
                                    "is": [
                                        "base",
                                        "pageable"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/de-authenticate",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "de-authenticate"
                            ]
                        }
                    ],
                    "displayName": "/{accessTokens}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{accessTokens}"
                    ]
                }
            ],
            "displayName": "/apps",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "apps"
            ]
        },
        {
            "relativeUri": "/errors",
            "type": "stackexchangeResource",
            "securedBy": [
                "oauth_2_0"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "errors",
                                    "example": "[\n  {\n    \"description\": \"some string\",\n    \"error_id\": 1,\n    \"error_name\": \"some string\"\n  }\n]",
                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"description\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"error_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"error_name\": {\n        \"required\": false,\n        \"type\": \"string\"\n      }\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "description": "Returns the various error codes that can be produced by the API.\n \nThis method is provided for discovery, documentation, and testing purposes, it is not expected many applications will consume it during normal operation.\n \nFor testing purposes, look into the /errors/{id} method which simulates errors given a code.\n \nThis method returns a list of errors.\n",
                    "method": "get",
                    "is": [
                        "base",
                        "pageable"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/{id}",
                    "type": "stackexchangeResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "uriParameters": {
                        "id": {
                            "name": "id",
                            "displayName": "id",
                            "type": "integer",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "error",
                                            "example": "{\n  \"error_id\" : 400 ,\n  \"error_message\" : \"simulated\" ,\n  \"error_name\" : \"bad_parameter\"\n}",
                                            "schemaContent": "error"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "This method allows you to generate an error.\n \nThis method is only intended for use when testing an application or library. Unlike other methods in the API, its contract is not frozen, and new error codes may be added at any time.\n \nThis method results in an error, which will be expressed with a 400 HTTP status code and setting the error* properties on the wrapper object.\n",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/{id}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{id}"
                    ]
                }
            ],
            "displayName": "/errors",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "errors"
            ]
        },
        {
            "relativeUri": "/filters",
            "securedBy": [
                "oauth_2_0"
            ],
            "resources": [
                {
                    "relativeUri": "/create",
                    "type": "stackexchangeResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "single_filter",
                                            "example": "{\n  \"filter\": \"some string\",\n  \"filter_type\": \"some string\",\n  \"included_fields\": [\n  ]\n}",
                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"filter\": {\n      \"required\": false,\n      \"type\": \"string\"\n    },\n    \"filter_type\": {\n      \"required\": false,\n      \"type\": \"string\"\n    },\n    \"included_fields\": {\n      \"required\": false,\n      \"type\": \"array\"\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "queryParameters": {
                                "base": {
                                    "name": "base",
                                    "displayName": "base",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "exclude": {
                                    "name": "exclude",
                                    "displayName": "exclude",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "String list (semicolon delimited).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "include": {
                                    "name": "include",
                                    "displayName": "include",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "String list (semicolon delimited).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "unsafe": {
                                    "name": "unsafe",
                                    "displayName": "unsafe",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Creates a new filter given a list of includes, excludes, a base filter, and whether or not this filter should be \"unsafe\".\n \nFilter \"safety\" is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.\n \nIf no base filter is specified, the default filter is assumed. When building a filter from scratch, the none built-in filter is useful.\n \nWhen the size of the parameters being sent to this method grows to large, problems can occur. This method will accept POST requests to mitigate this.\n \nIt is not expected that many applications will call this method at runtime, filters should be pre-calculated and \"baked in\" in the common cases. Furthermore, there are a number of built-in filters which cover common use cases.\n \nThis method returns a single filter.\n",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/create",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "create"
                    ]
                },
                {
                    "relativeUri": "/{filters}",
                    "type": "stackexchangeResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "uriParameters": {
                        "filters": {
                            "name": "filters",
                            "displayName": "filters",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "description": "String list (semicolon delimited).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "filters",
                                            "example": "[\n  {\n    \"filter\": \"some string\",\n    \"filter_type\": \"some string\",\n    \"included_fields\": [\n    ]\n  }\n]",
                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"filter\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"filter_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"included_fields\": {\n        \"required\": false,\n        \"type\": \"array\"\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Returns the fields included by the given filters, and the \"safeness\" of those filters.\n \nIt is not expected that this method will be consumed by many applications at runtime, it is provided to aid in debugging.\n \n{filters} can contain up to 20 semicolon delimited filters. Filters are obtained via calls to /filters/create, or by using a built-in filter.\n \nThis method returns a list of filters.\n",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/{filters}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{filters}"
                    ]
                }
            ],
            "displayName": "/filters",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "filters"
            ]
        },
        {
            "relativeUri": "/inbox",
            "type": "stackexchangeResource",
            "securedBy": [
                "oauth_2_0"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "inbox_items",
                                    "example": "[\n  {\n    \"answer_id\": 1,\n    \"body\": \"some string\",\n    \"comment_id\": 1,\n    \"creation_date\": 1,\n    \"is_unread\": true,\n    \"item_type\": \"some string\",\n    \"link\": \"some string\",\n    \"question_id\": 1,\n    \"site\": {\n      \"aliases\": [\n      ],\n      \"api_site_parameter\": \"some string\",\n      \"audience\": \"some string\",\n      \"closed_beta_date\": 1,\n      \"favicon_url\": \"some string\",\n      \"high_resolution_icon_url\": \"some string\",\n      \"icon_url\": \"some string\",\n      \"launch_date\": 1,\n      \"logo_url\": \"some string\",\n      \"markdown_extensions\": [\n      ],\n      \"name\": \"some string\",\n      \"open_beta_date\": 1,\n      \"related_sites\": [\n      ],\n      \"site_state\": \"some string\",\n      \"site_type\": \"some string\",\n      \"site_url\": \"some string\",\n      \"styling\": {\n        \"link_color\": \"some string\",\n        \"tag_background_color\": \"some string\",\n        \"tag_foreground_color\": \"some string\"\n      },\n      \"twitter_account\": \"some string\"\n    },\n    \"title\": \"some string\"\n  }\n]",
                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"answer_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"comment_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"is_unread\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"item_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"question_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"site\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"aliases\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"api_site_parameter\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"audience\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"closed_beta_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"favicon_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"high_resolution_icon_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"icon_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"launch_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"logo_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"markdown_extensions\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"open_beta_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"related_sites\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"site_state\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"site_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"site_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"styling\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"link_color\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"tag_background_color\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"tag_foreground_color\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"twitter_account\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      }\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "description": "Returns a user's inbox.\n \nThis method requires an access_token, with a scope containing \"read_inbox\".\n \nThis method returns a list of inbox items.\n",
                    "method": "get",
                    "is": [
                        "base",
                        "pageable"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/unread",
                    "type": "stackexchangeResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "inbox_items",
                                            "example": "[\n  {\n    \"answer_id\": 1,\n    \"body\": \"some string\",\n    \"comment_id\": 1,\n    \"creation_date\": 1,\n    \"is_unread\": true,\n    \"item_type\": \"some string\",\n    \"link\": \"some string\",\n    \"question_id\": 1,\n    \"site\": {\n      \"aliases\": [\n      ],\n      \"api_site_parameter\": \"some string\",\n      \"audience\": \"some string\",\n      \"closed_beta_date\": 1,\n      \"favicon_url\": \"some string\",\n      \"high_resolution_icon_url\": \"some string\",\n      \"icon_url\": \"some string\",\n      \"launch_date\": 1,\n      \"logo_url\": \"some string\",\n      \"markdown_extensions\": [\n      ],\n      \"name\": \"some string\",\n      \"open_beta_date\": 1,\n      \"related_sites\": [\n      ],\n      \"site_state\": \"some string\",\n      \"site_type\": \"some string\",\n      \"site_url\": \"some string\",\n      \"styling\": {\n        \"link_color\": \"some string\",\n        \"tag_background_color\": \"some string\",\n        \"tag_foreground_color\": \"some string\"\n      },\n      \"twitter_account\": \"some string\"\n    },\n    \"title\": \"some string\"\n  }\n]",
                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"answer_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"comment_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"is_unread\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"item_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"link\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"question_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"site\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"aliases\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"api_site_parameter\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"audience\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"closed_beta_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"favicon_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"high_resolution_icon_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"icon_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"launch_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"logo_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"markdown_extensions\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"open_beta_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"related_sites\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"site_state\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"site_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"site_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"styling\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"link_color\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"tag_background_color\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"tag_foreground_color\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"twitter_account\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"title\": {\n        \"required\": false,\n        \"type\": \"string\"\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "queryParameters": {
                                "since": {
                                    "name": "since",
                                    "displayName": "since",
                                    "type": "integer",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Unix date.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Returns the unread items in a user's inbox.\n \nThis method requires an access_token, with a scope containing \"read_inbox\".\n \nThis method returns a list of inbox items.\n",
                            "method": "get",
                            "is": [
                                "base",
                                "pageable"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/unread",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "unread"
                    ]
                }
            ],
            "displayName": "/inbox",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "inbox"
            ]
        },
        {
            "relativeUri": "/notifications",
            "type": "stackexchangeResource",
            "securedBy": [
                "oauth_2_0"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "notifications",
                                    "example": "[\n  {\n    \"body\": \"some string\",\n    \"creation_date\": 1,\n    \"is_unread\": true,\n    \"notification_type\": \"some string\",\n    \"post_id\": 1,\n    \"site\": {\n      \"aliases\": [\n      ],\n      \"api_site_parameter\": \"some string\",\n      \"audience\": \"some string\",\n      \"closed_beta_date\": 1,\n      \"favicon_url\": \"some string\",\n      \"high_resolution_icon_url\": \"some string\",\n      \"icon_url\": \"some string\",\n      \"launch_date\": 1,\n      \"logo_url\": \"some string\",\n      \"markdown_extensions\": [\n      ],\n      \"name\": \"some string\",\n      \"open_beta_date\": 1,\n      \"related_sites\": [\n      ],\n      \"site_state\": \"some string\",\n      \"site_type\": \"some string\",\n      \"site_url\": \"some string\",\n      \"styling\": {\n        \"link_color\": \"some string\",\n        \"tag_background_color\": \"some string\",\n        \"tag_foreground_color\": \"some string\"\n      },\n      \"twitter_account\": \"some string\"\n    }\n  }\n]",
                                    "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"is_unread\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"notification_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"post_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"site\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"aliases\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"api_site_parameter\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"audience\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"closed_beta_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"favicon_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"high_resolution_icon_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"icon_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"launch_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"logo_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"markdown_extensions\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"open_beta_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"related_sites\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"site_state\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"site_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"site_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"styling\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"link_color\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"tag_background_color\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"tag_foreground_color\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"twitter_account\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "description": "Returns a user's notifications.\n \nThis method requires an access_token, with a scope containing \"read_inbox\".\n \nThis method returns a list of notifications.\n",
                    "method": "get",
                    "is": [
                        "base",
                        "pageable"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/unread",
                    "type": "stackexchangeResource",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "notifications",
                                            "example": "[\n  {\n    \"body\": \"some string\",\n    \"creation_date\": 1,\n    \"is_unread\": true,\n    \"notification_type\": \"some string\",\n    \"post_id\": 1,\n    \"site\": {\n      \"aliases\": [\n      ],\n      \"api_site_parameter\": \"some string\",\n      \"audience\": \"some string\",\n      \"closed_beta_date\": 1,\n      \"favicon_url\": \"some string\",\n      \"high_resolution_icon_url\": \"some string\",\n      \"icon_url\": \"some string\",\n      \"launch_date\": 1,\n      \"logo_url\": \"some string\",\n      \"markdown_extensions\": [\n      ],\n      \"name\": \"some string\",\n      \"open_beta_date\": 1,\n      \"related_sites\": [\n      ],\n      \"site_state\": \"some string\",\n      \"site_type\": \"some string\",\n      \"site_url\": \"some string\",\n      \"styling\": {\n        \"link_color\": \"some string\",\n        \"tag_background_color\": \"some string\",\n        \"tag_foreground_color\": \"some string\"\n      },\n      \"twitter_account\": \"some string\"\n    }\n  }\n]",
                                            "schemaContent": "{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"required\": false,\n    \"type\": \"object\",\n    \"properties\": {\n      \"body\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"creation_date\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"is_unread\": {\n        \"required\": false,\n        \"type\": \"boolean\"\n      },\n      \"notification_type\": {\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      \"post_id\": {\n        \"required\": false,\n        \"type\": \"integer\"\n      },\n      \"site\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"aliases\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"api_site_parameter\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"audience\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"closed_beta_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"favicon_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"high_resolution_icon_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"icon_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"launch_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"logo_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"markdown_extensions\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"open_beta_date\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"related_sites\": {\n            \"required\": false,\n            \"type\": \"array\"\n          },\n          \"site_state\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"site_type\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"site_url\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"styling\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"link_color\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"tag_background_color\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"tag_foreground_color\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"twitter_account\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "description": "Returns a user's unread notifications.\n \nThis method requires an access_token, with a scope containing \"read_inbox\".\n \nThis method returns a list of notifications.\n",
                            "method": "get",
                            "is": [
                                "base",
                                "pageable"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/unread",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "unread"
                    ]
                }
            ],
            "displayName": "/notifications",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "notifications"
            ]
        },
        {
            "relativeUri": "/sites",
            "type": "stackexchangeResource",
            "securedBy": [
                "oauth_2_0"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "sites",
                                    "example": "[\n  {\n    \"aliases\": [\n    ],\n    \"api_site_parameter\": \"some string\",\n    \"audience\": \"some string\",\n    \"closed_beta_date\": 1,\n    \"favicon_url\": \"some string\",\n    \"high_resolution_icon_url\": \"some string\",\n    \"icon_url\": \"some string\",\n    \"launch_date\": 1,\n    \"logo_url\": \"some string\",\n    \"markdown_extensions\": [\n    ],\n    \"name\": \"some string\",\n    \"open_beta_date\": 1,\n    \"related_sites\": [\n    ],\n    \"site_state\": \"some string\",\n    \"site_type\": \"some string\",\n    \"site_url\": \"some string\",\n    \"styling\": {\n      \"link_color\": \"some string\",\n      \"tag_background_color\": \"some string\",\n      \"tag_foreground_color\": \"some string\"\n    },\n    \"twitter_account\": \"some string\"\n  }\n]",
                                    "schemaContent": "sites"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "HTTPS"
                    ],
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "description": "Returns all sites in the network.\n \nThis method allows for discovery of new sites, and changes to existing ones. Be aware that unlike normal API methods, this method should be fetched very infrequently, it is very unusual for these values to change more than once on any given day. It is suggested that you cache its return for at least one day, unless your app encounters evidence that it has changed (such as from the /info method).\n \nThe pagesize parameter for this method is unbounded, in acknowledgement that for many applications repeatedly fetching from /sites would complicate start-up tasks needlessly.\n \nThis method returns a list of sites.\n",
                    "method": "get",
                    "is": [
                        "base",
                        "pageable"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/sites",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "sites"
            ]
        }
    ],
    "documentation": [
        {
            "title": "Headline",
            "content": "Stack Exchange is a network of 125 communities that are created and run by experts and enthusiasts like you who are passionate about a specific topic. We build libraries of high-quality questions and answers, focused on each community's area of expertise."
        }
    ],
    "__METADATA__": {
        "primitiveValuesMeta": {
            "protocols": {
                "calculated": true
            }
        }
    }
}