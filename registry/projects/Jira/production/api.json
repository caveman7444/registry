{
    "title": "Jira",
    "version": "2",
    "baseUri": "{protocol}://{domain}/rest/api/{version}",
    "baseUriParameters": {
        "protocol": {
            "name": "protocol",
            "displayName": "protocol",
            "type": "string",
            "required": true,
            "repeat": false,
            "__METADATA__": {
                "calculated": true,
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    },
                    "type": {
                        "insertedAsDefault": true
                    },
                    "required": {
                        "insertedAsDefault": true
                    },
                    "repeat": {
                        "insertedAsDefault": true
                    }
                }
            }
        },
        "domain": {
            "name": "domain",
            "displayName": "domain",
            "type": "string",
            "required": true,
            "repeat": false,
            "__METADATA__": {
                "calculated": true,
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    },
                    "type": {
                        "insertedAsDefault": true
                    },
                    "required": {
                        "insertedAsDefault": true
                    },
                    "repeat": {
                        "insertedAsDefault": true
                    }
                }
            }
        },
        "version": {
            "name": "version",
            "displayName": "version",
            "type": "string",
            "required": true,
            "repeat": false,
            "enum": [
                "2"
            ],
            "__METADATA__": {
                "calculated": true,
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    },
                    "type": {
                        "insertedAsDefault": true
                    },
                    "required": {
                        "insertedAsDefault": true
                    },
                    "repeat": {
                        "insertedAsDefault": true
                    },
                    "enum": {
                        "calculated": true
                    }
                }
            }
        }
    },
    "protocols": [
        "{PROTOCOL}"
    ],
    "schemas": [
        {
            "appProperties": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"key\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"value\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"desc\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"type\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"defaultValue\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "appPropertyReq": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"value\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "attachment": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"filename\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"author\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"avatarUrls\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"24x24\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"16x16\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"32x32\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"48x48\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"displayName\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"active\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"created\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"size\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"mimeType\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"content\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"thumbnail\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "attachmentMeta": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"enabled\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"uploadLimit\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "settings": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"enabled\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "cropInstructions": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"cropperWidth\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"cropperOffsetX\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"cropperOffsetY\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"needsCropping\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "systemAvatar": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"system\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"owner\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"isSystemAvatar\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"isSelected\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"selected\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "commentPropertiesKeys": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"keys\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"key\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "commentProperty": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"key\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"value\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "componentViaPostReq": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"leadUserName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"assigneeType\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"isAssigneeTypeValid\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"project\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "componentViaPost": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"lead\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"avatarUrls\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"24x24\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"16x16\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"32x32\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"48x48\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"displayName\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"active\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"assigneeType\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"assignee\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"avatarUrls\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"24x24\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"16x16\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"32x32\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"48x48\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"displayName\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"active\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"realAssigneeType\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"realAssignee\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"avatarUrls\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"24x24\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"16x16\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"32x32\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"48x48\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"displayName\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"active\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"isAssigneeTypeValid\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "componentViaPutReq": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"leadUserName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"assigneeType\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"isAssigneeTypeValid\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "issueCountBean": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"issueCount\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "customFieldOption": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"value\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "dashboards": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"startAt\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"maxResults\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"total\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"prev\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"next\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"dashboards\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"view\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "dashboard": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"view\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "fields": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"array\" ,\n  \"items\" : [\n    {\n      \"type\" : \"object\" ,\n      \"properties\" : {\n        \"id\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"custom\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"orderable\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"navigable\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"searchable\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"clauseNames\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"string\"\n            }\n          ]\n        } ,\n        \"schema\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"type\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"system\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      }\n    }\n  ]\n}"
        },
        {
            "fieldReq": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"type\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"searcherKey\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "filterReq": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"jql\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"favourite\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "filter": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"owner\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"avatarUrls\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"24x24\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"16x16\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"32x32\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"48x48\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"displayName\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"active\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"jql\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"viewUrl\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"searchUrl\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"favourite\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"sharePermissions\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n      ]\n    } ,\n    \"subscriptions\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"size\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"items\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n          ]\n        } ,\n        \"max-results\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"start-index\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"end-index\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
        },
        {
            "scope": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"scope\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "filters": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"array\" ,\n  \"items\" : [\n    {\n      \"type\" : \"object\" ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"id\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"description\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"owner\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"avatarUrls\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"24x24\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"16x16\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"32x32\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"48x48\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"displayName\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"active\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"jql\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"viewUrl\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"searchUrl\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"favourite\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"sharePermissions\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n          ]\n        } ,\n        \"subscriptions\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"size\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"items\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n              ]\n            } ,\n            \"max-results\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"start-index\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"end-index\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            }\n          }\n        }\n      }\n    }\n  ]\n}"
        },
        {
            "group": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"users\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"size\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"items\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"self\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"displayName\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"active\" : {\n                  \"type\" : \"boolean\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          ]\n        } ,\n        \"max-results\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"start-index\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"end-index\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"expand\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "groupsuggestions": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"header\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"total\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"groups\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"html\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "issueReq": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"update\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"worklog\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"add\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"started\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"timeSpent\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                }\n              }\n            }\n          ]\n        }\n      }\n    } ,\n    \"fields\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"project\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"summary\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"issuetype\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"assignee\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"reporter\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"priority\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"labels\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"string\"\n            }\n          ]\n        } ,\n        \"timetracking\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"originalEstimate\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"remainingEstimate\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"security\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"versions\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"id\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          ]\n        } ,\n        \"environment\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"description\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"duedate\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"fixVersions\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"id\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          ]\n        } ,\n        \"components\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"id\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          ]\n        } ,\n        \"customfield_60000\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"customfield_20000\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"customfield_80000\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"value\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"customfield_40000\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"customfield_30000\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"string\"\n            }\n          ]\n        } ,\n        \"customfield_70000\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"string\"\n            }\n          ]\n        } ,\n        \"customfield_50000\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"customfield_10000\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
        },
        {
            "issue": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"key\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "errorMessages": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"errorMessages\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n      ]\n    } ,\n    \"errors\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"title\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
        },
        {
            "issuesReq": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"issueUpdates\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"update\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"worklog\" : {\n                  \"type\" : \"array\" ,\n                  \"required\" : false ,\n                  \"items\" : [\n                    {\n                      \"type\" : \"object\" ,\n                      \"properties\" : {\n                        \"add\" : {\n                          \"type\" : \"object\" ,\n                          \"required\" : false ,\n                          \"properties\" : {\n                            \"started\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            } ,\n                            \"timeSpent\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            }\n                          }\n                        }\n                      }\n                    }\n                  ]\n                }\n              }\n            } ,\n            \"fields\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"project\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"id\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"summary\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"issuetype\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"id\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"assignee\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"name\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"reporter\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"name\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"priority\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"id\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"labels\" : {\n                  \"type\" : \"array\" ,\n                  \"required\" : false ,\n                  \"items\" : [\n                    {\n                      \"type\" : \"string\"\n                    }\n                  ]\n                } ,\n                \"timetracking\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"originalEstimate\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"remainingEstimate\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"security\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"id\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"versions\" : {\n                  \"type\" : \"array\" ,\n                  \"required\" : false ,\n                  \"items\" : [\n                    {\n                      \"type\" : \"object\" ,\n                      \"properties\" : {\n                        \"id\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        }\n                      }\n                    }\n                  ]\n                } ,\n                \"environment\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"description\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"duedate\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"fixVersions\" : {\n                  \"type\" : \"array\" ,\n                  \"required\" : false ,\n                  \"items\" : [\n                    {\n                      \"type\" : \"object\" ,\n                      \"properties\" : {\n                        \"id\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        }\n                      }\n                    }\n                  ]\n                } ,\n                \"components\" : {\n                  \"type\" : \"array\" ,\n                  \"required\" : false ,\n                  \"items\" : [\n                    {\n                      \"type\" : \"object\" ,\n                      \"properties\" : {\n                        \"id\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        }\n                      }\n                    }\n                  ]\n                } ,\n                \"customfield_60000\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"customfield_20000\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"customfield_80000\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"value\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"customfield_40000\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"customfield_30000\" : {\n                  \"type\" : \"array\" ,\n                  \"required\" : false ,\n                  \"items\" : [\n                    {\n                      \"type\" : \"string\"\n                    }\n                  ]\n                } ,\n                \"customfield_70000\" : {\n                  \"type\" : \"array\" ,\n                  \"required\" : false ,\n                  \"items\" : [\n                    {\n                      \"type\" : \"string\"\n                    }\n                  ]\n                } ,\n                \"customfield_50000\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"customfield_10000\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        } , {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"update\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false\n            } ,\n            \"fields\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"project\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"id\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"summary\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"issuetype\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"id\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"assignee\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"name\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"reporter\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"name\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"priority\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"id\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"labels\" : {\n                  \"type\" : \"array\" ,\n                  \"required\" : false ,\n                  \"items\" : [\n                    {\n                      \"type\" : \"string\"\n                    }\n                  ]\n                } ,\n                \"timetracking\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"originalEstimate\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"remainingEstimate\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"security\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"id\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"versions\" : {\n                  \"type\" : \"array\" ,\n                  \"required\" : false ,\n                  \"items\" : [\n                    {\n                      \"type\" : \"object\" ,\n                      \"properties\" : {\n                        \"id\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        }\n                      }\n                    }\n                  ]\n                } ,\n                \"environment\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"description\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"duedate\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"fixVersions\" : {\n                  \"type\" : \"array\" ,\n                  \"required\" : false ,\n                  \"items\" : [\n                    {\n                      \"type\" : \"object\" ,\n                      \"properties\" : {\n                        \"id\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        }\n                      }\n                    }\n                  ]\n                } ,\n                \"components\" : {\n                  \"type\" : \"array\" ,\n                  \"required\" : false ,\n                  \"items\" : [\n                    {\n                      \"type\" : \"object\" ,\n                      \"properties\" : {\n                        \"id\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        }\n                      }\n                    }\n                  ]\n                } ,\n                \"customfield_60000\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"customfield_20000\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"customfield_80000\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"value\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"customfield_40000\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"customfield_30000\" : {\n                  \"type\" : \"array\" ,\n                  \"required\" : false ,\n                  \"items\" : [\n                    {\n                      \"type\" : \"string\"\n                    }\n                  ]\n                } ,\n                \"customfield_70000\" : {\n                  \"type\" : \"array\" ,\n                  \"required\" : false ,\n                  \"items\" : [\n                    {\n                      \"type\" : \"string\"\n                    }\n                  ]\n                } ,\n                \"customfield_50000\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"customfield_10000\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "issues": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"issues\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"key\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    } ,\n    \"errors\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n      ]\n    }\n  }\n}"
        },
        {
            "elementErrors": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"status\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"elementErrors\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"errorMessages\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"string\"\n            }\n          ]\n        } ,\n        \"errors\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"failedElementNumber\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "updateIssueReq": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"update\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"summary\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"set\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          ]\n        } ,\n        \"timetracking\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"edit\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"originalEstimate\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"remainingEstimate\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                }\n              }\n            }\n          ]\n        } ,\n        \"labels\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"add\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } , {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"remove\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          ]\n        } ,\n        \"components\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"set\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          ]\n        }\n      }\n    } ,\n    \"fields\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"summary\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"customfield_10010\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"customfield_10000\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
        },
        {
            "representationIssue": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"expand\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"key\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"fields\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"sub-tasks\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"id\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"type\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"id\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"name\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"inward\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"outward\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"outwardIssue\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"id\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"key\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"self\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"fields\" : {\n                      \"type\" : \"object\" ,\n                      \"required\" : false ,\n                      \"properties\" : {\n                        \"status\" : {\n                          \"type\" : \"object\" ,\n                          \"required\" : false ,\n                          \"properties\" : {\n                            \"iconUrl\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            } ,\n                            \"name\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          ]\n        } ,\n        \"timetracking\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"originalEstimate\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"remainingEstimate\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"timeSpent\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"originalEstimateSeconds\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"remainingEstimateSeconds\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"timeSpentSeconds\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"project\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"key\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"avatarUrls\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"24x24\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"16x16\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"32x32\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"48x48\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        } ,\n        \"updated\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"description\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"issuelinks\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"id\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"type\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"id\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"name\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"inward\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"outward\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"outwardIssue\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"id\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"key\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"self\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"fields\" : {\n                      \"type\" : \"object\" ,\n                      \"required\" : false ,\n                      \"properties\" : {\n                        \"status\" : {\n                          \"type\" : \"object\" ,\n                          \"required\" : false ,\n                          \"properties\" : {\n                            \"iconUrl\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            } ,\n                            \"name\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            } , {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"id\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"type\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"id\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"name\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"inward\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"outward\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"inwardIssue\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"id\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"key\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"self\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"fields\" : {\n                      \"type\" : \"object\" ,\n                      \"required\" : false ,\n                      \"properties\" : {\n                        \"status\" : {\n                          \"type\" : \"object\" ,\n                          \"required\" : false ,\n                          \"properties\" : {\n                            \"iconUrl\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            } ,\n                            \"name\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          ]\n        } ,\n        \"attachment\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"self\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"filename\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"author\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"self\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"name\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"avatarUrls\" : {\n                      \"type\" : \"object\" ,\n                      \"required\" : false ,\n                      \"properties\" : {\n                        \"24x24\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"16x16\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"32x32\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"48x48\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        }\n                      }\n                    } ,\n                    \"displayName\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"active\" : {\n                      \"type\" : \"boolean\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"created\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"size\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"mimeType\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"content\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"thumbnail\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          ]\n        } ,\n        \"watcher\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"isWatching\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"watchCount\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"watchers\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"object\" ,\n                  \"properties\" : {\n                    \"self\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"name\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"avatarUrls\" : {\n                      \"type\" : \"object\" ,\n                      \"required\" : false ,\n                      \"properties\" : {\n                        \"24x24\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"16x16\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"32x32\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"48x48\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        }\n                      }\n                    } ,\n                    \"displayName\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"active\" : {\n                      \"type\" : \"boolean\" ,\n                      \"required\" : false\n                    }\n                  }\n                }\n              ]\n            }\n          }\n        } ,\n        \"comment\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"self\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"id\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"author\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"self\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"name\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"displayName\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"active\" : {\n                      \"type\" : \"boolean\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"body\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"updateAuthor\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"self\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"name\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"displayName\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"active\" : {\n                      \"type\" : \"boolean\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"created\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"updated\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"visibility\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"type\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"value\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                }\n              }\n            }\n          ]\n        } ,\n        \"worklog\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"self\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"author\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"self\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"name\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"displayName\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"active\" : {\n                      \"type\" : \"boolean\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"updateAuthor\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"self\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"name\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"displayName\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"active\" : {\n                      \"type\" : \"boolean\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"comment\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"visibility\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"type\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"value\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"started\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"timeSpent\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"timeSpentSeconds\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"id\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          ]\n        }\n      }\n    } ,\n    \"names\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"sub-tasks\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"timetracking\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"project\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"updated\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"description\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"issuelinks\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"attachment\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"watcher\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"comment\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"worklog\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"schema\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "assignee": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "issueComments": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"startAt\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"maxResults\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"total\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"comments\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"author\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"self\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"displayName\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"active\" : {\n                  \"type\" : \"boolean\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"body\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"updateAuthor\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"self\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"displayName\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"active\" : {\n                  \"type\" : \"boolean\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"created\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"updated\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"visibility\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"type\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"value\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "commentReq": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"body\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"visibility\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"type\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"value\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
        },
        {
            "comment": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"author\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"displayName\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"active\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"body\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"updateAuthor\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"displayName\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"active\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"created\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"updated\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"visibility\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"type\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"value\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
        },
        {
            "issueMeta": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"fields\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"summary\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"required\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"schema\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"type\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"items\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"custom\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"customId\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"hasDefaultValue\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"operations\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"string\"\n                }\n              ]\n            } ,\n            \"allowedValues\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"string\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    }\n  }\n}"
        },
        {
            "notification": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"subject\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"textBody\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"htmlBody\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"to\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"reporter\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"assignee\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"watchers\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"voters\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"users\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"active\" : {\n                  \"type\" : \"boolean\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          ]\n        } ,\n        \"groups\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"self\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          ]\n        }\n      }\n    } ,\n    \"restrict\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"groups\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"self\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          ]\n        } ,\n        \"permissions\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"id\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"key\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          ]\n        }\n      }\n    }\n  }\n}"
        },
        {
            "remotelink": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"array\" ,\n  \"items\" : [\n    {\n      \"type\" : \"object\" ,\n      \"properties\" : {\n        \"id\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"globalId\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"application\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"type\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"relationship\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"object\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"url\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"title\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"summary\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"icon\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"url16x16\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"title\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"status\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"resolved\" : {\n                  \"type\" : \"boolean\" ,\n                  \"required\" : false\n                } ,\n                \"icon\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"url16x16\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"title\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"link\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ]\n}"
        },
        {
            "remoteReq": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"globalId\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"application\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"type\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"relationship\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"object\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"url\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"title\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"summary\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"icon\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"url16x16\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"title\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"status\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"resolved\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"icon\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"url16x16\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"title\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"link\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
        },
        {
            "remoteIssueLink": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "issueLink": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"globalId\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"application\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"type\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"relationship\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"object\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"url\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"title\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"summary\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"icon\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"url16x16\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"title\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"status\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"resolved\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"icon\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"url16x16\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"title\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"link\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
        },
        {
            "transitions": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"expand\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"transitions\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"to\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"self\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"description\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"iconUrl\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"id\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"statusCategory\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"self\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"id\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"key\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"colorName\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"name\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                }\n              }\n            } ,\n            \"fields\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"summary\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"required\" : {\n                      \"type\" : \"boolean\" ,\n                      \"required\" : false\n                    } ,\n                    \"schema\" : {\n                      \"type\" : \"object\" ,\n                      \"required\" : false ,\n                      \"properties\" : {\n                        \"type\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"items\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"custom\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"customId\" : {\n                          \"type\" : \"number\" ,\n                          \"required\" : false\n                        }\n                      }\n                    } ,\n                    \"name\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"hasDefaultValue\" : {\n                      \"type\" : \"boolean\" ,\n                      \"required\" : false\n                    } ,\n                    \"operations\" : {\n                      \"type\" : \"array\" ,\n                      \"required\" : false ,\n                      \"items\" : [\n                        {\n                          \"type\" : \"string\"\n                        }\n                      ]\n                    } ,\n                    \"allowedValues\" : {\n                      \"type\" : \"array\" ,\n                      \"required\" : false ,\n                      \"items\" : [\n                        {\n                          \"type\" : \"string\"\n                        }\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          }\n        } , {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"to\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"self\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"description\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"iconUrl\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"id\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"statusCategory\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"self\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"id\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"key\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"colorName\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                }\n              }\n            } ,\n            \"fields\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"colour\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"required\" : {\n                      \"type\" : \"boolean\" ,\n                      \"required\" : false\n                    } ,\n                    \"schema\" : {\n                      \"type\" : \"object\" ,\n                      \"required\" : false ,\n                      \"properties\" : {\n                        \"type\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"items\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"custom\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"customId\" : {\n                          \"type\" : \"number\" ,\n                          \"required\" : false\n                        }\n                      }\n                    } ,\n                    \"name\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"hasDefaultValue\" : {\n                      \"type\" : \"boolean\" ,\n                      \"required\" : false\n                    } ,\n                    \"operations\" : {\n                      \"type\" : \"array\" ,\n                      \"required\" : false ,\n                      \"items\" : [\n                        {\n                          \"type\" : \"string\"\n                        }\n                      ]\n                    } ,\n                    \"allowedValues\" : {\n                      \"type\" : \"array\" ,\n                      \"required\" : false ,\n                      \"items\" : [\n                        {\n                          \"type\" : \"string\"\n                        }\n                      ]\n                    }\n                  }\n                } ,\n                \"summary\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"required\" : {\n                      \"type\" : \"boolean\" ,\n                      \"required\" : false\n                    } ,\n                    \"schema\" : {\n                      \"type\" : \"object\" ,\n                      \"required\" : false ,\n                      \"properties\" : {\n                        \"type\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"items\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"custom\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"customId\" : {\n                          \"type\" : \"number\" ,\n                          \"required\" : false\n                        }\n                      }\n                    } ,\n                    \"name\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"hasDefaultValue\" : {\n                      \"type\" : \"boolean\" ,\n                      \"required\" : false\n                    } ,\n                    \"operations\" : {\n                      \"type\" : \"array\" ,\n                      \"required\" : false ,\n                      \"items\" : [\n                        {\n                          \"type\" : \"string\"\n                        }\n                      ]\n                    } ,\n                    \"allowedValues\" : {\n                      \"type\" : \"array\" ,\n                      \"required\" : false ,\n                      \"items\" : [\n                        {\n                          \"type\" : \"string\"\n                        }\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "transitionReq": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"update\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"comment\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"add\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"body\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                }\n              }\n            }\n          ]\n        }\n      }\n    } ,\n    \"fields\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"assignee\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"resolution\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      }\n    } ,\n    \"transition\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"id\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
        },
        {
            "voters": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"votes\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"hasVoted\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"voters\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"avatarUrls\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"24x24\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"16x16\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"32x32\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"48x48\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"displayName\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"active\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "watchers": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"isWatching\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"watchCount\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"watchers\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"avatarUrls\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"24x24\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"16x16\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"32x32\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"48x48\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"displayName\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"active\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "worklogs": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"startAt\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"maxResults\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"total\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"worklogs\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"author\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"self\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"displayName\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"active\" : {\n                  \"type\" : \"boolean\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"updateAuthor\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"self\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"displayName\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"active\" : {\n                  \"type\" : \"boolean\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"comment\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"visibility\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"type\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"value\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"started\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"timeSpent\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"timeSpentSeconds\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "worklog": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"author\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"displayName\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"active\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"updateAuthor\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"displayName\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"active\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"comment\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"visibility\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"type\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"value\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"started\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"timeSpent\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"timeSpentSeconds\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "issueProjects": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"expand\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"projects\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"key\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"avatarUrls\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"24x24\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"16x16\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"32x32\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"48x48\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"issuetypes\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"object\" ,\n                  \"properties\" : {\n                    \"self\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"id\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"description\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"iconUrl\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"name\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"subtask\" : {\n                      \"type\" : \"boolean\" ,\n                      \"required\" : false\n                    } ,\n                    \"fields\" : {\n                      \"type\" : \"object\" ,\n                      \"required\" : false ,\n                      \"properties\" : {\n                        \"issuetype\" : {\n                          \"type\" : \"object\" ,\n                          \"required\" : false ,\n                          \"properties\" : {\n                            \"required\" : {\n                              \"type\" : \"boolean\" ,\n                              \"required\" : false\n                            } ,\n                            \"name\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            } ,\n                            \"hasDefaultValue\" : {\n                              \"type\" : \"boolean\" ,\n                              \"required\" : false\n                            } ,\n                            \"operations\" : {\n                              \"type\" : \"array\" ,\n                              \"required\" : false ,\n                              \"items\" : [\n                                {\n                                  \"type\" : \"string\"\n                                }\n                              ]\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              ]\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "attachments": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"array\" ,\n  \"items\" : [\n    {\n      \"type\" : \"object\" ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"filename\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"author\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"avatarUrls\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"24x24\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"16x16\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"32x32\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"48x48\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"displayName\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"active\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"created\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"size\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"mimeType\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"content\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"thumbnail\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  ]\n}"
        },
        {
            "issueLinkReq": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"type\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"inwardIssue\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"key\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"outwardIssue\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"key\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"comment\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"body\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"visibility\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"type\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"value\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      }\n    }\n  }\n}"
        },
        {
            "link": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"type\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"id\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"inward\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"outward\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"inwardIssue\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"id\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"key\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"fields\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"status\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"iconUrl\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        }\n      }\n    } ,\n    \"outwardIssue\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"id\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"key\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"fields\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"status\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"iconUrl\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
        },
        {
            "issueLinkTypes": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"issueLinkTypes\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"inward\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"outward\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "issueLinkTypesReq": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"inward\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"outward\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "issueLinkType": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"inward\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"outward\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "issueTypes": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"array\" ,\n  \"items\" : [\n    {\n      \"type\" : \"object\" ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"id\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"description\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"iconUrl\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"subtask\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        }\n      }\n    }\n  ]\n}"
        },
        {
            "issueType": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"iconUrl\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"subtask\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "autoCompleteData": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"visibleFieldNames\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"value\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"displayName\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"auto\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"orderable\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"searchable\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"operators\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"string\"\n                }\n              ]\n            } ,\n            \"types\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"string\"\n                }\n              ]\n            }\n          }\n        }\n      ]\n    } ,\n    \"visibleFunctionNames\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"value\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"displayName\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"types\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"string\"\n                }\n              ]\n            }\n          }\n        }\n      ]\n    } ,\n    \"jqlReservedWords\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"string\"\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "permission": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"permissions\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"EDIT_ISSUE\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"key\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"description\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"havePermission\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            }\n          }\n        }\n      }\n    }\n  }\n}"
        },
        {
            "user": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"emailAddress\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"avatarUrls\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"24x24\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"16x16\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"32x32\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"48x48\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"displayName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"active\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"timeZone\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"groups\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"size\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"items\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"self\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          ]\n        }\n      }\n    } ,\n    \"expand\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "userPutReq": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"emailAddress\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"displayName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "userPutRes": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"key\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"emailAddress\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"displayName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "priorities": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"array\" ,\n  \"items\" : [\n    {\n      \"type\" : \"object\" ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"statusColor\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"description\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"iconUrl\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  ]\n}"
        },
        {
            "issuePriority": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"statusColor\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"iconUrl\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "projects": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"array\" ,\n  \"items\" : [\n    {\n      \"type\" : \"object\" ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"id\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"key\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"avatarUrls\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"24x24\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"16x16\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"32x32\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"48x48\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      }\n    }\n  ]\n}"
        },
        {
            "projectRepresentation": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"key\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"lead\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"avatarUrls\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"24x24\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"16x16\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"32x32\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"48x48\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"displayName\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"active\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"components\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"description\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"lead\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"self\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"avatarUrls\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"24x24\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"16x16\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"32x32\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"48x48\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"displayName\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"active\" : {\n                  \"type\" : \"boolean\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"assigneeType\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"assignee\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"self\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"avatarUrls\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"24x24\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"16x16\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"32x32\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"48x48\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"displayName\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"active\" : {\n                  \"type\" : \"boolean\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"realAssigneeType\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"realAssignee\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"self\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"avatarUrls\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"24x24\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"16x16\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"32x32\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"48x48\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"displayName\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"active\" : {\n                  \"type\" : \"boolean\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"isAssigneeTypeValid\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    } ,\n    \"issueTypes\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"description\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"iconUrl\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"subtask\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    } ,\n    \"url\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"email\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"assigneeType\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"versions\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n      ]\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"roles\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"Developers\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"avatarUrls\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"24x24\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"16x16\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"32x32\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"48x48\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
        },
        {
            "avatar": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"owner\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"isSystemAvatar\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"isSelected\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"selected\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "temporaryAvatar": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"cropperWidth\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"cropperOffsetX\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"cropperOffsetY\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"url\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"needsCropping\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "avatars": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"system\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"owner\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"isSystemAvatar\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"isSelected\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"selected\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    } ,\n    \"custom\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"owner\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"isSystemAvatar\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"isSelected\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"selected\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "components": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"array\" ,\n  \"items\" : [\n    {\n      \"type\" : \"object\" ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"id\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"description\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"lead\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"avatarUrls\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"24x24\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"16x16\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"32x32\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"48x48\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"displayName\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"active\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"assigneeType\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"assignee\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"avatarUrls\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"24x24\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"16x16\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"32x32\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"48x48\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"displayName\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"active\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"realAssigneeType\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"realAssignee\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"avatarUrls\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"24x24\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"16x16\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"32x32\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"48x48\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"displayName\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"active\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"isAssigneeTypeValid\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        }\n      }\n    }\n  ]\n}"
        },
        {
            "statuses": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"array\" ,\n  \"items\" : [\n    {\n      \"type\" : \"object\" ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"id\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"subtask\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"statuses\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"self\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"description\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"iconUrl\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"id\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          ]\n        }\n      }\n    }\n  ]\n}"
        },
        {
            "versions": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"array\" ,\n  \"items\" : [\n    {\n      \"type\" : \"object\" ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"id\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"description\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"archived\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"released\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"releaseDate\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"overdue\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"userReleaseDate\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"projectId\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        }\n      }\n    } , {\n      \"type\" : \"object\" ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"id\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"description\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"archived\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"released\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"overdue\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"projectId\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        }\n      }\n    }\n  ]\n}"
        },
        {
            "role": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"Users\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"Administrators\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"Developers\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "addActor": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"group\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"string\"\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "actor": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"id\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"actors\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"id\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"displayName\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"type\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "errorCollection": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"errorMessages\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n      ]\n    } ,\n    \"errors\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"projectKey\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
        },
        {
            "reindex": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"progressUrl\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"currentProgress\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"type\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"submittedTime\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"startTime\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"finishTime\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"success\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "resolutions": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"array\" ,\n  \"items\" : [\n    {\n      \"type\" : \"object\" ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"description\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"iconUrl\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } , {\n      \"type\" : \"object\" ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"description\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  ]\n}"
        },
        {
            "resolution": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"iconUrl\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "tab": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "tabFields": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "searchResults": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"expand\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"startAt\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"maxResults\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"total\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"issues\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"expand\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"key\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "searchRequest": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"jql\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"startAt\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"maxResults\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"fields\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"string\"\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "securitylevel": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "serverInfo": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"baseUrl\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"version\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"versionNumbers\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"number\"\n        }\n      ]\n    } ,\n    \"buildNumber\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"buildDate\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"serverTime\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"scmInfo\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"buildPartnerName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"serverTitle\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "issueStatuses": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"array\" ,\n  \"items\" : [\n    {\n      \"type\" : \"object\" ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"description\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"iconUrl\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"id\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"statusCategory\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"id\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"key\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"colorName\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      }\n    } , {\n      \"type\" : \"object\" ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"description\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"iconUrl\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"id\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"statusCategory\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"id\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"key\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"colorName\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      }\n    }\n  ]\n}"
        },
        {
            "issueStatus": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"iconUrl\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"statusCategory\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"id\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"key\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"colorName\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
        },
        {
            "statusCategories": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"array\" ,\n  \"items\" : [\n    {\n      \"type\" : \"object\" ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"id\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"key\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"colorName\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } , {\n      \"type\" : \"object\" ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"id\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"key\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"colorName\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  ]\n}"
        },
        {
            "statusCategory": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"id\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"key\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"colorName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "userPostReq": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"password\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"emailAddress\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"displayName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "users": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"array\" ,\n  \"items\" : [\n    {\n      \"type\" : \"object\" ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"avatarUrls\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"24x24\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"16x16\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"32x32\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"48x48\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"displayName\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"active\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        }\n      }\n    }\n  ]\n}"
        },
        {
            "password": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"password\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "usersList": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"users\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"key\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"html\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"displayName\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"avatarUrl\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    } ,\n    \"total\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"header\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "versionReq": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"archived\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"released\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"releaseDate\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"userReleaseDate\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"project\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"projectId\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "positionReq": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"after\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "version": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"archived\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"released\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"releaseDate\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"overdue\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"userReleaseDate\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"projectId\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "issuesUnresolvedCount": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"issuesUnresolvedCount\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "remoteVersionLinks": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"links\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"link\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"globalId\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"myCustomLinkProperty\" : {\n                  \"type\" : \"boolean\" ,\n                  \"required\" : false\n                } ,\n                \"colors\" : {\n                  \"type\" : \"array\" ,\n                  \"required\" : false ,\n                  \"items\" : [\n                    {\n                      \"type\" : \"string\"\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        } , {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"link\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"globalId\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "remoteVersionLinksReq": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"globalId\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"myCustomLinkProperty\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"colors\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"string\"\n        }\n      ]\n    } ,\n    \"notes\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"string\"\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "transitionProperties": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"key\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"value\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "transitionPropertyReq": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"value\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "workflowschemeReq": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"defaultWorkflow\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"issueTypeMappings\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"IsueTypeId\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
        },
        {
            "workflowscheme": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"defaultWorkflow\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"issueTypeMappings\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"IsueTypeId2\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"IsueTypeId\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"draft\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "workflowschemePutReq": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"defaultWorkflow\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"issueTypeMappings\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"IsueTypeId\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"updateDraftIfNeeded\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "draft": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"defaultWorkflow\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"issueTypeMappings\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"IsueTypeId2\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"IsueTypeId\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"originalDefaultWorkflow\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"originalIssueTypeMappings\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"IssueTypeId\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"draft\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"lastModifiedUser\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"emailAddress\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"avatarUrls\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"24x24\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"16x16\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"32x32\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"48x48\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"displayName\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"active\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"timeZone\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"groups\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"size\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"items\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n              ]\n            }\n          }\n        }\n      }\n    } ,\n    \"lastModified\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "workflowName": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"workflow\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "workflowNameReq": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"workflow\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"updateDraftIfNeeded\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "workflowIssueTypeReq": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"issueType\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"workflow\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"updateDraftIfNeeded\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "workflowIssueType": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"issueType\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"workflow\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "workflowMappings": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"workflow\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"issueTypes\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"string\"\n        }\n      ]\n    } ,\n    \"defaultMapping\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "workflowMappingsReq": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"workflow\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"issueTypes\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"string\"\n        }\n      ]\n    } ,\n    \"updateDraftIfNeeded\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "credentialsReq": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"username\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"password\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "credentials": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"session\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"value\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"loginInfo\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"failedLoginCount\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"loginCount\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"lastFailedLoginTime\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"previousLoginTime\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
        },
        {
            "userSession": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"loginInfo\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"failedLoginCount\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"loginCount\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"lastFailedLoginTime\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"previousLoginTime\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
        },
        {
            "remoteVersionLink": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"link\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"globalId\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"myCustomLinkProperty\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"colors\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"string\"\n            }\n          ]\n        }\n      }\n    }\n  }\n}"
        },
        {
            "remoteVersionLinkReq": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"globalId\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"myCustomLinkProperty\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"colors\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"string\"\n        }\n      ]\n    } ,\n    \"notes\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"string\"\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "avatarTemporary": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"cropperWidth\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"cropperOffsetX\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"cropperOffsetY\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"url\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"needsCropping\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
        }
    ],
    "traits": [
        {
            "hasUsername": {
                "securedBy": [
                    "basic"
                ],
                "queryParameters": {
                    "username": {
                        "name": "username",
                        "displayName": "username",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "The name of user",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "name": "hasUsername",
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                }
            }
        },
        {
            "hasKey": {
                "securedBy": [
                    "basic"
                ],
                "queryParameters": {
                    "key": {
                        "name": "key",
                        "displayName": "key",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "a String containing the property key",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "name": "hasKey",
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                }
            }
        },
        {
            "hasExpand": {
                "securedBy": [
                    "basic"
                ],
                "queryParameters": {
                    "expand": {
                        "name": "expand",
                        "displayName": "expand",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "the parameters to expand",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "name": "hasExpand",
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                }
            }
        },
        {
            "hasMaxResults": {
                "securedBy": [
                    "basic"
                ],
                "queryParameters": {
                    "maxResults": {
                        "name": "maxResults",
                        "displayName": "maxResults",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "the maximum number of users to return (defaults to 50). The maximum allowed value is 1000. If you specify a value that is higher than this number, your search results will be truncated.",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "name": "hasMaxResults",
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                }
            }
        },
        {
            "hasWorkflowName": {
                "securedBy": [
                    "basic"
                ],
                "queryParameters": {
                    "workflowName": {
                        "name": "workflowName",
                        "displayName": "workflowName",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "the name of the workflow to use.",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "name": "hasWorkflowName",
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                }
            }
        },
        {
            "hasStartAt": {
                "securedBy": [
                    "basic"
                ],
                "queryParameters": {
                    "startAt": {
                        "name": "startAt",
                        "displayName": "startAt",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "the index of the first dashboard to return (0-based). must be 0 or a multiple of maxResults",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "name": "hasStartAt",
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                }
            }
        }
    ],
    "securedBy": [
        "basic"
    ],
    "securitySchemes": [
        {
            "basic": {
                "name": "basic",
                "type": "Basic Authentication"
            }
        }
    ],
    "resourceTypes": [
        {
            "base": {
                "name": "base",
                "securedBy": [
                    "basic"
                ],
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                },
                "delete": {
                    "responses": {
                        "200": {
                            "code": "200",
                            "description": "Returned if successful."
                        },
                        "204": {
                            "code": "204",
                            "description": "Returned if successful."
                        },
                        "400": {
                            "code": "400",
                            "description": "Returned if the the request is invalid."
                        },
                        "401": {
                            "code": "401",
                            "description": "Returned if the calling user is not authenticated."
                        },
                        "403": {
                            "code": "403",
                            "description": "Returned if the object is disabled or if you don't have permission to remove."
                        },
                        "404": {
                            "code": "404",
                            "description": "Returned if the object is not found."
                        },
                        "500": {
                            "code": "500",
                            "description": "Returned if an error occurs while retrieving."
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json"
                        }
                    },
                    "securedBy": [
                        "basic"
                    ],
                    "method": "delete",
                    "__METADATA__": {
                        "optional": true,
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                },
                "post": {
                    "responses": {
                        "200": {
                            "code": "200",
                            "description": "Returned if the object was retrieved successful."
                        },
                        "201": {
                            "code": "201",
                            "description": "Returned if the object was created successful."
                        },
                        "400": {
                            "code": "400",
                            "description": "Returned if the the request is invalid."
                        },
                        "401": {
                            "code": "401",
                            "description": "Returned if the calling user is not authenticated."
                        },
                        "403": {
                            "code": "403",
                            "description": "Returned if the object is disabled or if you don't have permission to retrieve."
                        },
                        "404": {
                            "code": "404",
                            "description": "Returned if the object is not found."
                        },
                        "500": {
                            "code": "500",
                            "description": "Returned if an error occurs while retrieving."
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json"
                        }
                    },
                    "securedBy": [
                        "basic"
                    ],
                    "method": "post",
                    "__METADATA__": {
                        "optional": true,
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                },
                "get": {
                    "responses": {
                        "200": {
                            "code": "200"
                        },
                        "400": {
                            "code": "400",
                            "description": "Returned if the the request is invalid."
                        },
                        "401": {
                            "code": "401",
                            "description": "Returned if the calling user is not authenticated."
                        },
                        "403": {
                            "code": "403",
                            "description": "Returned if the object is disabled or if you don't have permission to retrieve."
                        },
                        "404": {
                            "code": "404",
                            "description": "Returned if the object is not found."
                        },
                        "500": {
                            "code": "500",
                            "description": "Returned if an error occurs while retrieving."
                        }
                    },
                    "securedBy": [
                        "basic"
                    ],
                    "method": "get",
                    "__METADATA__": {
                        "optional": true,
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                },
                "put": {
                    "responses": {
                        "200": {
                            "code": "200",
                            "description": "Returned if the object was retrieved successful."
                        },
                        "201": {
                            "code": "201",
                            "description": "Returned if the object was created successful."
                        },
                        "400": {
                            "code": "400",
                            "description": "Returned if the the request is invalid."
                        },
                        "401": {
                            "code": "401",
                            "description": "Returned if the calling user is not authenticated."
                        },
                        "403": {
                            "code": "403",
                            "description": "Returned if the object is disabled or if you don't have permission to retrieve."
                        },
                        "404": {
                            "code": "404",
                            "description": "Returned if the object is not found."
                        },
                        "500": {
                            "code": "500",
                            "description": "Returned if an error occurs while retrieving."
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json"
                        }
                    },
                    "securedBy": [
                        "basic"
                    ],
                    "method": "put",
                    "__METADATA__": {
                        "optional": true,
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            }
        },
        {
            "workflowschemeReturned": {
                "name": "workflowschemeReturned",
                "type": "base",
                "securedBy": [
                    "basic"
                ],
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                },
                "delete": {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            }
                        }
                    },
                    "securedBy": [
                        "basic"
                    ],
                    "method": "delete",
                    "__METADATA__": {
                        "optional": true,
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                },
                "post": {
                    "responses": {
                        "201": {
                            "code": "201",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "workflowscheme",
                                    "example": "can not resolve examples/workflowscheme-example.json",
                                    "schemaContent": "workflowscheme"
                                }
                            }
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json",
                            "schema": "workflowschemeReq",
                            "example": "can not resolve examples/workflowschemeReq-example.json",
                            "schemaContent": "workflowschemeReq"
                        }
                    },
                    "securedBy": [
                        "basic"
                    ],
                    "method": "post",
                    "__METADATA__": {
                        "optional": true,
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                },
                "get": {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "workflowscheme",
                                    "example": "can not resolve examples/workflowscheme-example.json",
                                    "schemaContent": "workflowscheme"
                                }
                            }
                        }
                    },
                    "securedBy": [
                        "basic"
                    ],
                    "method": "get",
                    "__METADATA__": {
                        "optional": true,
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                },
                "put": {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "workflowscheme",
                                    "example": "can not resolve examples/workflowscheme-example.json",
                                    "schemaContent": "workflowscheme"
                                }
                            }
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json",
                            "schema": "workflowschemePutReq",
                            "example": "can not resolve examples/workflowschemePutReq-example.json",
                            "schemaContent": "workflowschemePutReq"
                        }
                    },
                    "securedBy": [
                        "basic"
                    ],
                    "method": "put",
                    "__METADATA__": {
                        "optional": true,
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            }
        }
    ],
    "resources": [
        {
            "relativeUri": "/application-properties",
            "type": "base",
            "securedBy": [
                "basic"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "appProperties",
                                    "example": "{\n  \"id\" : \"jira.home\" ,\n  \"key\" : \"jira.home\" ,\n  \"value\" : \"/var/jira/jira-home\" ,\n  \"name\" : \"jira.home\" ,\n  \"desc\" : \"JIRA home directory\" ,\n  \"type\" : \"string\" ,\n  \"defaultValue\" : \"\"\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"key\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"value\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"desc\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"type\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"defaultValue\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                }
                            }
                        },
                        "400": {
                            "code": "400",
                            "description": "Returned if the property does not exist or the currently authenticated user does not have permission to view it."
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "queryParameters": {
                        "permissionLevel": {
                            "name": "permissionLevel",
                            "displayName": "permissionLevel",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "when fetching a list specifies the permission level of all items in the list see {@link com.atlassian.jira.bc.admin.ApplicationPropertiesService.EditPermissionLevel}",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "keyFilter": {
                            "name": "keyFilter",
                            "displayName": "keyFilter",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "when fetching a list allows the list to be filtered by the property's start of key e.g. \"jira.lf.*\" whould fetch only those permissions that are editable and whose keys start with \"jira.lf.\". This is a regex.\n",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "key": {
                            "name": "key",
                            "displayName": "key",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "a String containing the property key",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Returns an application property.",
                    "method": "get",
                    "is": [
                        "hasKey"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/{id}",
                    "type": "base",
                    "securedBy": [
                        "basic"
                    ],
                    "uriParameters": {
                        "id": {
                            "name": "id",
                            "displayName": "id",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "description": "Returned if the version exists and the currently authenticated user has permission to edit it."
                                },
                                "403": {
                                    "code": "403",
                                    "description": "Returned if the currently authenticated user does not have permission to edit the version."
                                },
                                "404": {
                                    "code": "404",
                                    "description": "Returned if the version does not exist or the currently authenticated user does not have permission to view it."
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "appPropertyReq",
                                    "example": "{\n  \"id\" : \"jira.home\" ,\n  \"value\" : \"/var/jira/jira-home\"\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"value\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "description": "Modify an application property via PUT. The \"value\" field present in the PUT will override thee existing value.",
                            "method": "put",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/{id}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{id}"
                    ]
                }
            ],
            "displayName": "/application-properties",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "application-properties"
            ]
        },
        {
            "relativeUri": "/attachment",
            "securedBy": [
                "basic"
            ],
            "resources": [
                {
                    "relativeUri": "/{id}",
                    "type": "base",
                    "securedBy": [
                        "basic"
                    ],
                    "uriParameters": {
                        "id": {
                            "name": "id",
                            "displayName": "id",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "description": "The id of the attachment to delete.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "attachment",
                                            "example": "{\n  \"self\" : \"http://www.example.com/jira/rest/api/2.0/attachments/10000\" ,\n  \"filename\" : \"picture.jpg\" ,\n  \"author\" : {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n    \"name\" : \"fred\" ,\n    \"avatarUrls\" : {\n      \"24x24\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=fred\" ,\n      \"16x16\" : \"http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=fred\" ,\n      \"32x32\" : \"http://www.example.com/jira/secure/useravatar?size=medium&ownerId=fred\" ,\n      \"48x48\" : \"http://www.example.com/jira/secure/useravatar?size=large&ownerId=fred\"\n    } ,\n    \"displayName\" : \"Fred F. User\" ,\n    \"active\" : false\n  } ,\n  \"created\" : \"2014-05-27T08:32:06.728+0000\" ,\n  \"size\" : 23123 ,\n  \"mimeType\" : \"image/jpeg\" ,\n  \"content\" : \"http://www.example.com/jira/attachments/10000\" ,\n  \"thumbnail\" : \"http://www.example.com/jira/secure/thumbnail/10000\"\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"filename\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"author\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"avatarUrls\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"24x24\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"16x16\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"32x32\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"48x48\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"displayName\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"active\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"created\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"size\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"mimeType\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"content\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"thumbnail\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                        }
                                    }
                                },
                                "404": {
                                    "code": "404",
                                    "description": "Returned if the attachment with the given id does not exist, or is not accessible by the calling user."
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "description": "Returns the meta-data for an attachment, including the URI of the actual attached file.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "204": {
                                    "code": "204",
                                    "description": "Returned if successful."
                                },
                                "403": {
                                    "code": "403",
                                    "description": "Returned if attachments is disabled or if you don't have permission to remove attachments from this issue."
                                },
                                "404": {
                                    "code": "404",
                                    "description": "Returned if the attachment is not found"
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "description": "Remove an attachment from an issue.",
                            "method": "delete",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/{id}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{id}"
                    ]
                },
                {
                    "relativeUri": "/meta",
                    "type": "base",
                    "securedBy": [
                        "basic"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "attachmentMeta",
                                            "example": "{\n  \"enabled\" : true ,\n  \"uploadLimit\" : 1000000\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"enabled\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"uploadLimit\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "description": "Returns the meta informations for an attachments, specifically if they are enabled and the maximum upload size allowed.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/meta",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "meta"
                    ]
                }
            ],
            "displayName": "/attachment",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "attachment"
            ]
        },
        {
            "relativeUri": "/auditing/settings",
            "type": "base",
            "securedBy": [
                "basic"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "settings",
                                    "example": "{\n  \"enabled\" : true\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"enabled\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "description": "Returns current Auditing settings.",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                },
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "settings",
                                    "example": "{\n  \"enabled\" : true\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"enabled\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
                                }
                            },
                            "description": "Returned if the object was retrieved successful."
                        },
                        "401": {
                            "code": "401",
                            "description": "Returned if the current user is not a sysadmin."
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json"
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "description": "Changed current Auditing settings Returns REST representation for the requested group.",
                    "method": "put",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/auditing/settings",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "auditing",
                "settings"
            ]
        },
        {
            "relativeUri": "/avatar/{type}",
            "securedBy": [
                "basic"
            ],
            "uriParameters": {
                "type": {
                    "name": "type",
                    "displayName": "type",
                    "type": "string",
                    "required": true,
                    "repeat": false,
                    "description": "the avatar type",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            },
                            "type": {
                                "insertedAsDefault": true
                            },
                            "required": {
                                "insertedAsDefault": true
                            },
                            "repeat": {
                                "insertedAsDefault": true
                            }
                        }
                    }
                }
            },
            "resources": [
                {
                    "relativeUri": "/temporaryCrop",
                    "type": "base",
                    "securedBy": [
                        "basic"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "201": {
                                    "code": "201",
                                    "description": "Returned if the object was created successful."
                                },
                                "400": {
                                    "code": "400",
                                    "description": "Returned if the cropping coordinates are invalid"
                                },
                                "500": {
                                    "code": "500",
                                    "description": "Returned if an error occurs while cropping the temporary avatar"
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "cropInstructions",
                                    "example": "{\n  \"cropperWidth\" : 120 ,\n  \"cropperOffsetX\" : 50 ,\n  \"cropperOffsetY\" : 50 ,\n  \"needsCropping\" : false\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"cropperWidth\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"cropperOffsetX\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"cropperOffsetY\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"needsCropping\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "description": "Updates the cropping instructions of the temporary avatar.",
                            "method": "post",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/temporaryCrop",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "temporaryCrop"
                    ]
                },
                {
                    "relativeUri": "/temporary",
                    "type": "base",
                    "securedBy": [
                        "basic"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "201": {
                                    "code": "201",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "avatarTemporary",
                                            "example": "{\n  \"cropperWidth\" : 120 ,\n  \"cropperOffsetX\" : 50 ,\n  \"cropperOffsetY\" : 50 ,\n  \"url\" : \"http://example.com/jira/secure/temporaryavatar?cropped=true\" ,\n  \"needsCropping\" : true\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"cropperWidth\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"cropperOffsetX\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"cropperOffsetY\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"url\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"needsCropping\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
                                        }
                                    },
                                    "description": "Returned if the object was created successful."
                                },
                                "400": {
                                    "code": "400",
                                    "description": "Valiation failed. For example filesize is beyond max attachment size."
                                },
                                "403": {
                                    "code": "403",
                                    "description": "Returned if the request does not conain a valid XSRF token"
                                },
                                "500": {
                                    "code": "500",
                                    "description": "Returned if an error occurs while converting temporary avatar to real avatar"
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "queryParameters": {
                                "filename": {
                                    "name": "filename",
                                    "displayName": "filename",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "name of file being uploaded",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "size": {
                                    "name": "size",
                                    "displayName": "size",
                                    "type": "number",
                                    "required": false,
                                    "repeat": false,
                                    "description": "size of file",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Creates temporary avatar",
                            "method": "post",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/temporary",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "temporary"
                    ]
                },
                {
                    "relativeUri": "/system",
                    "type": "base",
                    "securedBy": [
                        "basic"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "systemAvatar",
                                            "example": "{\n  \"system\" : [\n    {\n      \"id\" : \"1000\" ,\n      \"owner\" : \"fred\" ,\n      \"isSystemAvatar\" : true ,\n      \"isSelected\" : true ,\n      \"selected\" : true\n    }\n  ]\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"system\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"owner\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"isSystemAvatar\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"isSelected\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"selected\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                        }
                                    }
                                },
                                "500": {
                                    "code": "500",
                                    "description": "Returned if an error occurs while retrieving the list of avatars."
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "description": "Returns all system avatars of the given type.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/system",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "system"
                    ]
                }
            ],
            "displayName": "/avatar/{type}",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "avatar",
                "{type}"
            ]
        },
        {
            "relativeUri": "/comment/{commentId}/properties",
            "type": "base",
            "securedBy": [
                "basic"
            ],
            "uriParameters": {
                "commentId": {
                    "name": "commentId",
                    "displayName": "commentId",
                    "type": "string",
                    "required": true,
                    "repeat": false,
                    "description": "The comment from which keys will be returned.",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            },
                            "type": {
                                "insertedAsDefault": true
                            },
                            "required": {
                                "insertedAsDefault": true
                            },
                            "repeat": {
                                "insertedAsDefault": true
                            }
                        }
                    }
                }
            },
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "commentPropertiesKeys",
                                    "example": "{\n  \"keys\" : [\n    {\n      \"self\" : \"http://www.example.com/jira/rest/api/2/issue/EX-2/properties/issue.support\" ,\n      \"key\" : \"issue.support\"\n    }\n  ]\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"keys\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"key\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                }
                            }
                        },
                        "400": {
                            "code": "400",
                            "description": "Returned if the comment key or id is invalid."
                        },
                        "401": {
                            "code": "401",
                            "description": "Returned if the calling user is not authenticated."
                        },
                        "403": {
                            "code": "403",
                            "description": "Returned if the calling user does not have permission to browse the comment."
                        },
                        "404": {
                            "code": "404",
                            "description": "Returned if the comment with given key or id does not exist or if the property with given key is not found."
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "description": "Returns the keys of all properties for the comment identified by the key or by the id.",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/{propertyKey}",
                    "type": "base",
                    "securedBy": [
                        "basic"
                    ],
                    "uriParameters": {
                        "propertyKey": {
                            "name": "propertyKey",
                            "displayName": "propertyKey",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "description": "The key of the property to remove.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "commentProperty",
                                            "example": "{\n  \"key\" : \"issue.support\" ,\n  \"value\" : {\n  }\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"key\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"value\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false\n    }\n  }\n}"
                                        }
                                    }
                                },
                                "400": {
                                    "code": "400",
                                    "description": "Returned if the comment key or id is invalid."
                                },
                                "401": {
                                    "code": "401",
                                    "description": "Returned if the calling user is not authenticated."
                                },
                                "403": {
                                    "code": "403",
                                    "description": "Returned if the calling user does not have permission to browse the comment."
                                },
                                "404": {
                                    "code": "404",
                                    "description": "Returned if the comment with given key or id does not exist or if the property with given key is not found."
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "description": "Returns the value of the property with a given key from the comment identified by the key or by the id. The user who retrieves the property is required to have permissions to read the comment.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "description": "Returned if the comment property is successfully updated."
                                },
                                "201": {
                                    "code": "201",
                                    "description": "Returned if the comment property is successfully created."
                                },
                                "400": {
                                    "code": "400",
                                    "description": "Returned if the comment key or id is invalid."
                                },
                                "401": {
                                    "code": "401",
                                    "description": "Returned if the calling user is not authenticated."
                                },
                                "403": {
                                    "code": "403",
                                    "description": "Returned if the calling user does not have permission to administer the comment."
                                },
                                "404": {
                                    "code": "404",
                                    "description": "Returned if the comment with given key or id does not exist."
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "description": "You can use this resource to store a custom data against the comment identified by the key or by the id. The user who stores the data is required to have permissions to administer the comment.",
                            "method": "put",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "204": {
                                    "code": "204",
                                    "description": "Returned if successful."
                                },
                                "400": {
                                    "code": "400",
                                    "description": "Returned if the comment key or id is invalid."
                                },
                                "401": {
                                    "code": "401",
                                    "description": "Returned if the calling user is not authenticated."
                                },
                                "403": {
                                    "code": "403",
                                    "description": "Returned if the calling user does not have permission to edit the comment."
                                },
                                "404": {
                                    "code": "404",
                                    "description": "Returned if the comment with given key or id does not exist or if the property with given key is not found."
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "description": "Removes the property from the comment identified by the key or by the id. Ths user removing the property is required to have permissions to administer the comment.",
                            "method": "delete",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/{propertyKey}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{propertyKey}"
                    ]
                }
            ],
            "displayName": "/comment/{commentId}/properties",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "comment",
                "{commentId}",
                "properties"
            ]
        },
        {
            "relativeUri": "/component",
            "type": "base",
            "securedBy": [
                "basic"
            ],
            "methods": [
                {
                    "responses": {
                        "201": {
                            "code": "201",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "componentViaPost",
                                    "example": "{\n  \"self\" : \"http://www.example.com/jira/rest/api/2/component/10000\" ,\n  \"id\" : \"10000\" ,\n  \"name\" : \"Component 1\" ,\n  \"description\" : \"This is a JIRA component\" ,\n  \"lead\" : {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n    \"name\" : \"fred\" ,\n    \"avatarUrls\" : {\n      \"24x24\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=fred\" ,\n      \"16x16\" : \"http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=fred\" ,\n      \"32x32\" : \"http://www.example.com/jira/secure/useravatar?size=medium&ownerId=fred\" ,\n      \"48x48\" : \"http://www.example.com/jira/secure/useravatar?size=large&ownerId=fred\"\n    } ,\n    \"displayName\" : \"Fred F. User\" ,\n    \"active\" : false\n  } ,\n  \"assigneeType\" : \"PROJECT_LEAD\" ,\n  \"assignee\" : {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n    \"name\" : \"fred\" ,\n    \"avatarUrls\" : {\n      \"24x24\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=fred\" ,\n      \"16x16\" : \"http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=fred\" ,\n      \"32x32\" : \"http://www.example.com/jira/secure/useravatar?size=medium&ownerId=fred\" ,\n      \"48x48\" : \"http://www.example.com/jira/secure/useravatar?size=large&ownerId=fred\"\n    } ,\n    \"displayName\" : \"Fred F. User\" ,\n    \"active\" : false\n  } ,\n  \"realAssigneeType\" : \"PROJECT_LEAD\" ,\n  \"realAssignee\" : {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n    \"name\" : \"fred\" ,\n    \"avatarUrls\" : {\n      \"24x24\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=fred\" ,\n      \"16x16\" : \"http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=fred\" ,\n      \"32x32\" : \"http://www.example.com/jira/secure/useravatar?size=medium&ownerId=fred\" ,\n      \"48x48\" : \"http://www.example.com/jira/secure/useravatar?size=large&ownerId=fred\"\n    } ,\n    \"displayName\" : \"Fred F. User\" ,\n    \"active\" : false\n  } ,\n  \"isAssigneeTypeValid\" : false\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"lead\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"avatarUrls\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"24x24\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"16x16\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"32x32\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"48x48\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"displayName\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"active\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"assigneeType\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"assignee\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"avatarUrls\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"24x24\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"16x16\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"32x32\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"48x48\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"displayName\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"active\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"realAssigneeType\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"realAssignee\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"avatarUrls\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"24x24\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"16x16\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"32x32\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"48x48\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"displayName\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"active\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"isAssigneeTypeValid\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
                                }
                            },
                            "description": "Returned if the object was created successful."
                        },
                        "401": {
                            "code": "401",
                            "description": "Returned if the caller is not logged in and does not have permission to create components in the project."
                        },
                        "403": {
                            "code": "403",
                            "description": "Returned if the caller is authenticated and does not have permission to create components in the project."
                        },
                        "404": {
                            "code": "404",
                            "description": "Returned if the project does not exist or the currently authenticated user does not have permission to view it."
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json",
                            "schema": "componentViaPostReq",
                            "example": "{\n  \"name\" : \"Component 1\" ,\n  \"description\" : \"This is a JIRA component\" ,\n  \"leadUserName\" : \"fred\" ,\n  \"assigneeType\" : \"PROJECT_LEAD\" ,\n  \"isAssigneeTypeValid\" : false ,\n  \"project\" : \"PXA\"\n}",
                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"leadUserName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"assigneeType\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"isAssigneeTypeValid\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"project\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "description": "Create a component via POST.",
                    "method": "post",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/{id}",
                    "type": "base",
                    "securedBy": [
                        "basic"
                    ],
                    "uriParameters": {
                        "id": {
                            "name": "id",
                            "displayName": "id",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "description": "a String containing the component id",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "componentViaPost",
                                            "example": "{\n  \"self\" : \"http://www.example.com/jira/rest/api/2/component/10000\" ,\n  \"id\" : \"10000\" ,\n  \"name\" : \"Component 1\" ,\n  \"description\" : \"This is a JIRA component\" ,\n  \"lead\" : {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n    \"name\" : \"fred\" ,\n    \"avatarUrls\" : {\n      \"24x24\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=fred\" ,\n      \"16x16\" : \"http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=fred\" ,\n      \"32x32\" : \"http://www.example.com/jira/secure/useravatar?size=medium&ownerId=fred\" ,\n      \"48x48\" : \"http://www.example.com/jira/secure/useravatar?size=large&ownerId=fred\"\n    } ,\n    \"displayName\" : \"Fred F. User\" ,\n    \"active\" : false\n  } ,\n  \"assigneeType\" : \"PROJECT_LEAD\" ,\n  \"assignee\" : {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n    \"name\" : \"fred\" ,\n    \"avatarUrls\" : {\n      \"24x24\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=fred\" ,\n      \"16x16\" : \"http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=fred\" ,\n      \"32x32\" : \"http://www.example.com/jira/secure/useravatar?size=medium&ownerId=fred\" ,\n      \"48x48\" : \"http://www.example.com/jira/secure/useravatar?size=large&ownerId=fred\"\n    } ,\n    \"displayName\" : \"Fred F. User\" ,\n    \"active\" : false\n  } ,\n  \"realAssigneeType\" : \"PROJECT_LEAD\" ,\n  \"realAssignee\" : {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n    \"name\" : \"fred\" ,\n    \"avatarUrls\" : {\n      \"24x24\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=fred\" ,\n      \"16x16\" : \"http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=fred\" ,\n      \"32x32\" : \"http://www.example.com/jira/secure/useravatar?size=medium&ownerId=fred\" ,\n      \"48x48\" : \"http://www.example.com/jira/secure/useravatar?size=large&ownerId=fred\"\n    } ,\n    \"displayName\" : \"Fred F. User\" ,\n    \"active\" : false\n  } ,\n  \"isAssigneeTypeValid\" : false\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"lead\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"avatarUrls\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"24x24\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"16x16\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"32x32\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"48x48\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"displayName\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"active\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"assigneeType\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"assignee\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"avatarUrls\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"24x24\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"16x16\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"32x32\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"48x48\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"displayName\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"active\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"realAssigneeType\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"realAssignee\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"avatarUrls\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"24x24\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"16x16\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"32x32\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"48x48\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"displayName\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"active\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"isAssigneeTypeValid\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
                                        }
                                    }
                                },
                                "404": {
                                    "code": "404",
                                    "description": "Returned if there is no component with the given key, or if the calling user does not have permission to view the component."
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "description": "Returns a project component.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "description": "Returned if the component exists and the currently authenticated user has permission to edit it."
                                },
                                "403": {
                                    "code": "403",
                                    "description": "Returned if the currently authenticated user does not have permission to edit the component."
                                },
                                "404": {
                                    "code": "404",
                                    "description": "Returned if the component does not exist or the currently authenticated user does not have permission to view it."
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "componentViaPutReq",
                                    "example": "{\r\n    \"name\": \"Component 1\",\r\n    \"description\": \"This is a JIRA component\",\r\n    \"leadUserName\": \"fred\",\r\n    \"assigneeType\": \"PROJECT_LEAD\",\r\n    \"isAssigneeTypeValid\": false\r\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"leadUserName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"assigneeType\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"isAssigneeTypeValid\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "description": "Modify a component via PUT. Any fields present in the PUT will override existing values. As a convenience, if a field is not present, it is silently ignored. If leadUserName is an empty string (\"\") the component lead will be removed.",
                            "method": "put",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "204": {
                                    "code": "204",
                                    "description": "Returned if the component is successfully deleted."
                                },
                                "403": {
                                    "code": "403",
                                    "description": "Returned if the currently authenticated user does not have permission to delete the component."
                                },
                                "404": {
                                    "code": "404",
                                    "description": "Returned if the component does not exist or the currently authenticated user does not have permission to view it."
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "queryParameters": {
                                "moveIssuesTo": {
                                    "name": "moveIssuesTo",
                                    "displayName": "moveIssuesTo",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The new component applied to issues whose 'id' component will be deleted. If this value is null, then the 'id' component is simply removed from the related isues.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Delete a project component.",
                            "method": "delete",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/relatedIssueCounts",
                            "type": "base",
                            "securedBy": [
                                "basic"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "issueCountBean",
                                                    "example": "{\n  \"self\" : \"http://www.example.com/jira/rest/api/2/version/10000\" ,\n  \"issuesFixedCount\" : 23 ,\n  \"issuesAffectedCount\" : 101\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"issueCount\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    }\n  }\n}"
                                                }
                                            }
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "Returned if the component does not exist or the currently authenticated user does not have permission to view it."
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "description": "Returns counts of issues related to this component.",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/relatedIssueCounts",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "relatedIssueCounts"
                            ]
                        }
                    ],
                    "displayName": "/{id}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{id}"
                    ]
                }
            ],
            "displayName": "/component",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "component"
            ]
        },
        {
            "relativeUri": "/customFieldOption/{id}",
            "type": "base",
            "securedBy": [
                "basic"
            ],
            "uriParameters": {
                "id": {
                    "name": "id",
                    "displayName": "id",
                    "type": "string",
                    "required": true,
                    "repeat": false,
                    "description": "a String containing an Custom Field Option id",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            },
                            "type": {
                                "insertedAsDefault": true
                            },
                            "required": {
                                "insertedAsDefault": true
                            },
                            "repeat": {
                                "insertedAsDefault": true
                            }
                        }
                    }
                }
            },
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "customFieldOption",
                                    "example": "{\n  \"self\" : \"http://localhost:8090/jira/rest/api/2.0/customFieldOption/3\" ,\n  \"value\" : \"Blue\"\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"value\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                }
                            }
                        },
                        "404": {
                            "code": "404",
                            "description": "Returned if the Custom Field Option does not exist, or is not visible to the calling user."
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "description": "Returns a full representation of the Custom Field Option that has the given id.",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/customFieldOption/{id}",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "customFieldOption",
                "{id}"
            ]
        },
        {
            "relativeUri": "/dashboard",
            "type": "base",
            "securedBy": [
                "basic"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "dashboards",
                                    "example": "{\n  \"startAt\" : 10 ,\n  \"maxResults\" : 10 ,\n  \"total\" : 143 ,\n  \"prev\" : \"http://www.example.com/jira/rest/api/2/dashboard?startAt=0\" ,\n  \"next\" : \"http://www.example.com/jira/rest/api/2/dashboard?startAt=10\" ,\n  \"dashboards\" : [\n    {\n      \"id\" : \"10000\" ,\n      \"name\" : \"System Dashboard\" ,\n      \"self\" : \"http://www.example.com/jira/rest/api/2/dashboard/10000\" ,\n      \"view\" : \"http://www.example.com/jira/secure/Dashboard.jspa?selectPageId=10000\"\n    } , {\n      \"id\" : \"20000\" ,\n      \"name\" : \"Build Engineering\" ,\n      \"self\" : \"http://www.example.com/jira/rest/api/2/dashboard/20000\" ,\n      \"view\" : \"http://www.example.com/jira/secure/Dashboard.jspa?selectPageId=20000\"\n    }\n  ]\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"startAt\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"maxResults\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"total\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"prev\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"next\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"dashboards\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"view\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "queryParameters": {
                        "filter": {
                            "name": "filter",
                            "displayName": "filter",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "an optional filter that is applied to the list of dashboards. Valid values include \"favourite\" for returning only favourite dashboards, and \"my\" for returning dashboards that are owned by the calling user.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "maxResults": {
                            "name": "maxResults",
                            "displayName": "maxResults",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "the maximum number of users to return (defaults to 50). The maximum allowed value is 1000. If you specify a value that is higher than this number, your search results will be truncated.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "startAt": {
                            "name": "startAt",
                            "displayName": "startAt",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "the index of the first dashboard to return (0-based). must be 0 or a multiple of maxResults",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Returns a list of all dashboards, optionally filtering them.",
                    "method": "get",
                    "is": [
                        "hasMaxResults",
                        "hasStartAt"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/{id}",
                    "type": "base",
                    "securedBy": [
                        "basic"
                    ],
                    "uriParameters": {
                        "id": {
                            "name": "id",
                            "displayName": "id",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "dashboard",
                                            "example": "{\n  \"id\" : \"10000\" ,\n  \"name\" : \"System Dashboard\" ,\n  \"self\" : \"http://www.example.com/jira/rest/api/2/dashboard/10000\" ,\n  \"view\" : \"http://www.example.com/jira/secure/Dashboard.jspa?selectPageId=10000\"\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"view\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                        }
                                    }
                                },
                                "404": {
                                    "code": "404",
                                    "description": "Returned if there is no dashboard with the specified id, or if the user does not have permission to see it."
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "description": "Returns a single dashboard.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/{id}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{id}"
                    ]
                }
            ],
            "displayName": "/dashboard",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "dashboard"
            ]
        },
        {
            "relativeUri": "/field",
            "type": "base",
            "securedBy": [
                "basic"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "fields",
                                    "example": "[\n  {\n    \"id\" : \"description\" ,\n    \"name\" : \"Description\" ,\n    \"custom\" : false ,\n    \"orderable\" : true ,\n    \"navigable\" : true ,\n    \"searchable\" : true ,\n    \"clauseNames\" : [\n      \"description\"\n    ] ,\n    \"schema\" : {\n      \"type\" : \"string\" ,\n      \"system\" : \"description\"\n    }\n  } , {\n    \"id\" : \"summary\" ,\n    \"name\" : \"Summary\" ,\n    \"custom\" : false ,\n    \"orderable\" : true ,\n    \"navigable\" : true ,\n    \"searchable\" : true ,\n    \"clauseNames\" : [\n      \"summary\"\n    ] ,\n    \"schema\" : {\n      \"type\" : \"string\" ,\n      \"system\" : \"summary\"\n    }\n  }\n]",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"array\" ,\n  \"items\" : [\n    {\n      \"type\" : \"object\" ,\n      \"properties\" : {\n        \"id\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"custom\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"orderable\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"navigable\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"searchable\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"clauseNames\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"string\"\n            }\n          ]\n        } ,\n        \"schema\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"type\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"system\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      }\n    }\n  ]\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "description": "Returns a list of all fields, both System and Custom",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                },
                {
                    "responses": {
                        "201": {
                            "code": "201",
                            "description": "Returned if custom field was created. {@link FieldBean#DOC_EXAMPLE_CF}"
                        },
                        "400": {
                            "code": "400",
                            "description": "Returned if the input is invalid (e.g. invalid values)."
                        },
                        "500": {
                            "code": "500",
                            "description": "Returned if exception occured during custom field creation."
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json",
                            "schema": "fieldReq",
                            "example": "{\n  \"name\" : \"New custom field\" ,\n  \"description\" : \"Custom field for picking groups\" ,\n  \"type\" : \"com.atlassian.jira.plugin.system.customfieldtypes:grouppicker\" ,\n  \"searcherKey\" : \"com.atlassian.jira.plugin.system.customfieldtypes:grouppickersearcher\"\n}",
                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"type\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"searcherKey\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "description": "Creates a custom field using a definition (object encapsulating custom field data)",
                    "method": "post",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/field",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "field"
            ]
        },
        {
            "relativeUri": "/filter",
            "type": "base",
            "securedBy": [
                "basic"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "filter",
                                    "example": "{\n  \"self\" : \"http://www.example.com/jira/rest/api/2/filter/10000\" ,\n  \"id\" : \"10000\" ,\n  \"name\" : \"All Open Bugs\" ,\n  \"description\" : \"Lists all open bugs\" ,\n  \"owner\" : {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n    \"name\" : \"fred\" ,\n    \"avatarUrls\" : {\n      \"24x24\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=fred\" ,\n      \"16x16\" : \"http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=fred\" ,\n      \"32x32\" : \"http://www.example.com/jira/secure/useravatar?size=medium&ownerId=fred\" ,\n      \"48x48\" : \"http://www.example.com/jira/secure/useravatar?size=large&ownerId=fred\"\n    } ,\n    \"displayName\" : \"Fred F. User\" ,\n    \"active\" : false\n  } ,\n  \"jql\" : \"type = Bug and resolution is empty\" ,\n  \"viewUrl\" : \"http://www.example.com/jira/secure/IssueNavigator.jspa?mode=hide&requestId=10000\" ,\n  \"searchUrl\" : \"http://www.example.com/jira/rest/api/2/search?jql=type%20%3D%20Bug%20and%20resolutino%20is%20empty\" ,\n  \"favourite\" : true ,\n  \"sharePermissions\" : [\n  ] ,\n  \"subscriptions\" : {\n    \"size\" : 0 ,\n    \"items\" : [\n    ] ,\n    \"max-results\" : 1000 ,\n    \"start-index\" : 0 ,\n    \"end-index\" : 0\n  }\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"owner\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"avatarUrls\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"24x24\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"16x16\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"32x32\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"48x48\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"displayName\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"active\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"jql\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"viewUrl\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"searchUrl\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"favourite\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"sharePermissions\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n      ]\n    } ,\n    \"subscriptions\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"size\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"items\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n          ]\n        } ,\n        \"max-results\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"start-index\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"end-index\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
                                }
                            },
                            "description": "Returned if the object was retrieved successful."
                        },
                        "400": {
                            "code": "400",
                            "description": "Returned if the input is invalid (e.g. filter name was not provided)."
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json",
                            "schema": "filterReq",
                            "example": "{\n  \"name\" : \"All Open Bugs\" ,\n  \"description\" : \"Lists all open bugs\" ,\n  \"jql\" : \"type = Bug and resolution is empty\" ,\n  \"favourite\" : true\n}",
                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"jql\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"favourite\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "queryParameters": {
                        "expand": {
                            "name": "expand",
                            "displayName": "expand",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "the parameters to expand",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Creates a new filter, and returns newly created filter. Currently sets permissions just using the users default sharing permissions",
                    "method": "post",
                    "is": [
                        "hasExpand"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/{id}",
                    "type": "base",
                    "securedBy": [
                        "basic"
                    ],
                    "uriParameters": {
                        "id": {
                            "name": "id",
                            "displayName": "id",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "filter",
                                            "example": "{\n  \"self\" : \"http://www.example.com/jira/rest/api/2/filter/10000\" ,\n  \"id\" : \"10000\" ,\n  \"name\" : \"All Open Bugs\" ,\n  \"description\" : \"Lists all open bugs\" ,\n  \"owner\" : {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n    \"name\" : \"fred\" ,\n    \"avatarUrls\" : {\n      \"24x24\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=fred\" ,\n      \"16x16\" : \"http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=fred\" ,\n      \"32x32\" : \"http://www.example.com/jira/secure/useravatar?size=medium&ownerId=fred\" ,\n      \"48x48\" : \"http://www.example.com/jira/secure/useravatar?size=large&ownerId=fred\"\n    } ,\n    \"displayName\" : \"Fred F. User\" ,\n    \"active\" : false\n  } ,\n  \"jql\" : \"type = Bug and resolution is empty\" ,\n  \"viewUrl\" : \"http://www.example.com/jira/secure/IssueNavigator.jspa?mode=hide&requestId=10000\" ,\n  \"searchUrl\" : \"http://www.example.com/jira/rest/api/2/search?jql=type%20%3D%20Bug%20and%20resolutino%20is%20empty\" ,\n  \"favourite\" : true ,\n  \"sharePermissions\" : [\n  ] ,\n  \"subscriptions\" : {\n    \"size\" : 0 ,\n    \"items\" : [\n    ] ,\n    \"max-results\" : 1000 ,\n    \"start-index\" : 0 ,\n    \"end-index\" : 0\n  }\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"owner\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"avatarUrls\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"24x24\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"16x16\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"32x32\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"48x48\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"displayName\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"active\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"jql\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"viewUrl\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"searchUrl\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"favourite\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"sharePermissions\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n      ]\n    } ,\n    \"subscriptions\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"size\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"items\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n          ]\n        } ,\n        \"max-results\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"start-index\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"end-index\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
                                        }
                                    }
                                },
                                "400": {
                                    "code": "400",
                                    "description": "Returned if there is a problem looking up the filter given the id"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "queryParameters": {
                                "expand": {
                                    "name": "expand",
                                    "displayName": "expand",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "the parameters to expand",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Returns a filter given an id",
                            "method": "get",
                            "is": [
                                "hasExpand"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "filter",
                                            "example": "{\n  \"self\" : \"http://www.example.com/jira/rest/api/2/filter/10000\" ,\n  \"id\" : \"10000\" ,\n  \"name\" : \"All Open Bugs\" ,\n  \"description\" : \"Lists all open bugs\" ,\n  \"owner\" : {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n    \"name\" : \"fred\" ,\n    \"avatarUrls\" : {\n      \"24x24\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=fred\" ,\n      \"16x16\" : \"http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=fred\" ,\n      \"32x32\" : \"http://www.example.com/jira/secure/useravatar?size=medium&ownerId=fred\" ,\n      \"48x48\" : \"http://www.example.com/jira/secure/useravatar?size=large&ownerId=fred\"\n    } ,\n    \"displayName\" : \"Fred F. User\" ,\n    \"active\" : false\n  } ,\n  \"jql\" : \"type = Bug and resolution is empty\" ,\n  \"viewUrl\" : \"http://www.example.com/jira/secure/IssueNavigator.jspa?mode=hide&requestId=10000\" ,\n  \"searchUrl\" : \"http://www.example.com/jira/rest/api/2/search?jql=type%20%3D%20Bug%20and%20resolutino%20is%20empty\" ,\n  \"favourite\" : true ,\n  \"sharePermissions\" : [\n  ] ,\n  \"subscriptions\" : {\n    \"size\" : 0 ,\n    \"items\" : [\n    ] ,\n    \"max-results\" : 1000 ,\n    \"start-index\" : 0 ,\n    \"end-index\" : 0\n  }\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"owner\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"avatarUrls\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"24x24\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"16x16\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"32x32\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"48x48\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"displayName\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"active\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"jql\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"viewUrl\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"searchUrl\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"favourite\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"sharePermissions\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n      ]\n    } ,\n    \"subscriptions\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"size\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"items\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n          ]\n        } ,\n        \"max-results\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"start-index\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"end-index\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
                                        }
                                    },
                                    "description": "Returned if the object was retrieved successful."
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "filterReq",
                                    "example": "{\n  \"name\" : \"All Open Bugs\" ,\n  \"description\" : \"Lists all open bugs\" ,\n  \"jql\" : \"type = Bug and resolution is empty\" ,\n  \"favourite\" : true\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"jql\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"favourite\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "queryParameters": {
                                "expand": {
                                    "name": "expand",
                                    "displayName": "expand",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "the parameters to expand",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Updates an existing filter, and returns its new value.",
                            "method": "put",
                            "is": [
                                "hasExpand"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "204": {
                                    "code": "204",
                                    "description": "Returned if the filter was removed successfully."
                                },
                                "400": {
                                    "code": "400",
                                    "description": "Returned if an error occurs."
                                },
                                "401": {
                                    "code": "401",
                                    "description": "Returned if the calling user is not authenticated."
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "description": "Delete a filter.",
                            "method": "delete",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/columns",
                            "type": "base",
                            "securedBy": [
                                "basic"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "description": "Returns a list of columns for configured for the given user"
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "Returned if the filter does not have any columns."
                                        },
                                        "500": {
                                            "code": "500",
                                            "description": "Returned if an error occurs while retrieving the column configuration."
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "description": "Returns the default columns for the given filter. Currently logged in user will be used as the user making such request.",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "description": "Returned when the columns are saved successfully"
                                        },
                                        "500": {
                                            "code": "500",
                                            "description": "Returned if an error occurs while retrieving the column configuration."
                                        }
                                    },
                                    "body": {
                                        "application/x-www-form-urlencoded": {
                                            "name": "application/x-www-form-urlencoded"
                                        },
                                        "application/json": {
                                            "name": "application/json"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "description": "Sets the default columns for the given filter.",
                                    "method": "put",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "204": {
                                            "code": "204",
                                            "description": "Returned when the columns are reset/removed successfully"
                                        },
                                        "500": {
                                            "code": "500",
                                            "description": "Returned if an error occurs while retrieving the column configuration."
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "description": "Resets the columns for the given filter such that the filter no longer has its own column config.",
                                    "method": "delete",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/columns",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "columns"
                            ]
                        }
                    ],
                    "displayName": "/{id}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{id}"
                    ]
                },
                {
                    "relativeUri": "/defaultShareScope",
                    "type": "base",
                    "securedBy": [
                        "basic"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "scope",
                                            "example": "{\n  \"scope\" : \"GLOBAL\"\n}",
                                            "schemaContent": "scope"
                                        }
                                    }
                                },
                                "400": {
                                    "code": "400",
                                    "description": "Returned if there is a problem looking up preferences for the logged-in user"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "description": "Returns the default share scope of the logged-in user.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "scope",
                                            "example": "{\n  \"scope\" : \"GLOBAL\"\n}",
                                            "schemaContent": "scope"
                                        }
                                    },
                                    "description": "Returned if the object was retrieved successful."
                                },
                                "400": {
                                    "code": "400",
                                    "description": "Returned if there is a problem setting the preferences for the logged-in user"
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "scope",
                                    "example": "{\n  \"scope\" : \"GLOBAL\"\n}",
                                    "schemaContent": "scope"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "description": "Sets the default share scope of the logged-in user. Available values are GLOBAL and PRIVATE.",
                            "method": "put",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/defaultShareScope",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "defaultShareScope"
                    ]
                },
                {
                    "relativeUri": "/favourite",
                    "type": "base",
                    "securedBy": [
                        "basic"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "filters",
                                            "example": "[\n  {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/filter/10000\" ,\n    \"id\" : \"10000\" ,\n    \"name\" : \"All Open Bugs\" ,\n    \"description\" : \"Lists all open bugs\" ,\n    \"owner\" : {\n      \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n      \"name\" : \"fred\" ,\n      \"avatarUrls\" : {\n        \"24x24\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=fred\" ,\n        \"16x16\" : \"http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=fred\" ,\n        \"32x32\" : \"http://www.example.com/jira/secure/useravatar?size=medium&ownerId=fred\" ,\n        \"48x48\" : \"http://www.example.com/jira/secure/useravatar?size=large&ownerId=fred\"\n      } ,\n      \"displayName\" : \"Fred F. User\" ,\n      \"active\" : false\n    } ,\n    \"jql\" : \"type = Bug and resolution is empty\" ,\n    \"viewUrl\" : \"http://www.example.com/jira/secure/IssueNavigator.jspa?mode=hide&requestId=10000\" ,\n    \"searchUrl\" : \"http://www.example.com/jira/rest/api/2/search?jql=type%20%3D%20Bug%20and%20resolutino%20is%20empty\" ,\n    \"favourite\" : true ,\n    \"sharePermissions\" : [\n    ] ,\n    \"subscriptions\" : {\n      \"size\" : 0 ,\n      \"items\" : [\n      ] ,\n      \"max-results\" : 1000 ,\n      \"start-index\" : 0 ,\n      \"end-index\" : 0\n    }\n  } , {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/filter/10010\" ,\n    \"id\" : \"10010\" ,\n    \"name\" : \"My issues\" ,\n    \"description\" : \"Issues assigned to me\" ,\n    \"owner\" : {\n      \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n      \"name\" : \"fred\" ,\n      \"avatarUrls\" : {\n        \"24x24\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=fred\" ,\n        \"16x16\" : \"http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=fred\" ,\n        \"32x32\" : \"http://www.example.com/jira/secure/useravatar?size=medium&ownerId=fred\" ,\n        \"48x48\" : \"http://www.example.com/jira/secure/useravatar?size=large&ownerId=fred\"\n      } ,\n      \"displayName\" : \"Fred F. User\" ,\n      \"active\" : false\n    } ,\n    \"jql\" : \"assignee = currentUser() and resolution is empty\" ,\n    \"viewUrl\" : \"http://www.example.com/jira/secure/IssueNavigator.jspa?mode=hide&requestId=10010\" ,\n    \"searchUrl\" : \"http://www.example.com/jira/rest/api/2/search?jql=assignee+%3D+currentUser%28%29+and+resolution+is+empty\" ,\n    \"favourite\" : true ,\n    \"sharePermissions\" : [\n      {\n        \"id\" : 10000 ,\n        \"type\" : \"global\"\n      } , {\n        \"id\" : 10010 ,\n        \"type\" : \"project\" ,\n        \"project\" : {\n          \"self\" : \"http://www.example.com/jira/rest/api/2/project/EX\" ,\n          \"id\" : \"10000\" ,\n          \"key\" : \"EX\" ,\n          \"name\" : \"Example\" ,\n          \"avatarUrls\" : {\n            \"24x24\" : \"http://www.example.com/jira/secure/projectavatar?size=small&pid=10000\" ,\n            \"16x16\" : \"http://www.example.com/jira/secure/projectavatar?size=xsmall&pid=10000\" ,\n            \"32x32\" : \"http://www.example.com/jira/secure/projectavatar?size=medium&pid=10000\" ,\n            \"48x48\" : \"http://www.example.com/jira/secure/projectavatar?size=large&pid=10000\"\n          }\n        }\n      }\n    ] ,\n    \"subscriptions\" : {\n      \"size\" : 0 ,\n      \"items\" : [\n      ] ,\n      \"max-results\" : 1000 ,\n      \"start-index\" : 0 ,\n      \"end-index\" : 0\n    }\n  }\n]",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"array\" ,\n  \"items\" : [\n    {\n      \"type\" : \"object\" ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"id\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"description\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"owner\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"avatarUrls\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"24x24\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"16x16\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"32x32\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"48x48\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"displayName\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"active\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"jql\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"viewUrl\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"searchUrl\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"favourite\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"sharePermissions\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n          ]\n        } ,\n        \"subscriptions\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"size\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"items\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n              ]\n            } ,\n            \"max-results\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"start-index\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"end-index\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            }\n          }\n        }\n      }\n    }\n  ]\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "queryParameters": {
                                "expand": {
                                    "name": "expand",
                                    "displayName": "expand",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "the parameters to expand",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Returns the favourite filters of the logged-in user.",
                            "method": "get",
                            "is": [
                                "hasExpand"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/favourite",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "favourite"
                    ]
                }
            ],
            "displayName": "/filter",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "filter"
            ]
        },
        {
            "relativeUri": "/group",
            "type": "base",
            "securedBy": [
                "basic"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "group",
                                    "example": "{\n  \"name\" : \"jira-administrators\" ,\n  \"self\" : \"http://www.example.com/jira/rest/api/2/group?groupname=jira-administrators\" ,\n  \"users\" : {\n    \"size\" : 1 ,\n    \"items\" : [\n      {\n        \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n        \"name\" : \"fred\" ,\n        \"displayName\" : \"Fred F. User\" ,\n        \"active\" : false\n      }\n    ] ,\n    \"max-results\" : 50 ,\n    \"start-index\" : 0 ,\n    \"end-index\" : 0\n  } ,\n  \"expand\" : \"users\"\n}",
                                    "schemaContent": "group"
                                }
                            }
                        },
                        "400": {
                            "code": "400",
                            "description": "Returned if user requested an empty group name."
                        },
                        "401": {
                            "code": "401",
                            "description": "Returned if the current user is not authenticated."
                        },
                        "403": {
                            "code": "403",
                            "description": "Returned if the current user does not have administrator permissions."
                        },
                        "404": {
                            "code": "404",
                            "description": "Returned if the requested group was not found."
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "queryParameters": {
                        "groupname": {
                            "name": "groupname",
                            "displayName": "groupname",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "A name of requested group.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "expand": {
                            "name": "expand",
                            "displayName": "expand",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "the parameters to expand",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Returns REST representation for the requested group. Allows to get list of active users belonging to the specified group and its subgroups if \"users\" expand option is provided. You can page through users list by using indexes in expand param. For example to get users from index 10 to index 15 use \"users[10:15]\" expand value. This will return 6 users (if there are at least 16 users in this group). Indexes are 0-based and inclusive.",
                    "method": "get",
                    "is": [
                        "hasExpand"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                },
                {
                    "responses": {
                        "201": {
                            "code": "201",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "group",
                                    "example": "{\n  \"name\" : \"jira-administrators\" ,\n  \"self\" : \"http://www.example.com/jira/rest/api/2/group?groupname=jira-administrators\" ,\n  \"users\" : {\n    \"size\" : 1 ,\n    \"items\" : [\n      {\n        \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n        \"name\" : \"fred\" ,\n        \"displayName\" : \"Fred F. User\" ,\n        \"active\" : false\n      }\n    ] ,\n    \"max-results\" : 50 ,\n    \"start-index\" : 0 ,\n    \"end-index\" : 0\n  } ,\n  \"expand\" : \"users\"\n}",
                                    "schemaContent": "group"
                                }
                            },
                            "description": "Returned if the object was created successful."
                        },
                        "400": {
                            "code": "400",
                            "description": "Returned if user requested an empty group name or group already exists"
                        },
                        "401": {
                            "code": "401",
                            "description": "Returned if the current user is not authenticated."
                        },
                        "403": {
                            "code": "403",
                            "description": "Returned if the current user does not have administrator permissions."
                        },
                        "500": {
                            "code": "500",
                            "description": "Returned if the operation is not permitted or error occurs while creating the group."
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json"
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "description": "Creates a group by given group parameter Returns REST representation for the requested group.",
                    "method": "post",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                },
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "description": "Returned if the group was deleted."
                        },
                        "400": {
                            "code": "400",
                            "description": "Returned if user requested an group that does not exist."
                        },
                        "401": {
                            "code": "401",
                            "description": "Returned if the current user is not authenticated."
                        },
                        "403": {
                            "code": "403",
                            "description": "Returned if the current user does not have administrator permissions."
                        },
                        "404": {
                            "code": "404",
                            "description": "Returned if the requested group was not found."
                        },
                        "500": {
                            "code": "500",
                            "description": "Returned if the operation is not permitted or error occurs while deleting the group."
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json"
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "queryParameters": {
                        "groupname": {
                            "name": "groupname",
                            "displayName": "groupname",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "a group to delete",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "swapGroup": {
                            "name": "swapGroup",
                            "displayName": "swapGroup",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "a group to transfer visibility restrictions of the group that is being deleted",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Deletes a group by given group parameter. Returns no content",
                    "method": "delete",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/user",
                    "type": "base",
                    "securedBy": [
                        "basic"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "201": {
                                    "code": "201",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "group",
                                            "example": "{\n  \"name\" : \"jira-administrators\" ,\n  \"self\" : \"http://www.example.com/jira/rest/api/2/group?groupname=jira-administrators\" ,\n  \"users\" : {\n    \"size\" : 1 ,\n    \"items\" : [\n      {\n        \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n        \"name\" : \"fred\" ,\n        \"displayName\" : \"Fred F. User\" ,\n        \"active\" : false\n      }\n    ] ,\n    \"max-results\" : 50 ,\n    \"start-index\" : 0 ,\n    \"end-index\" : 0\n  } ,\n  \"expand\" : \"users\"\n}",
                                            "schemaContent": "group"
                                        }
                                    },
                                    "description": "Returned if the object was created successful."
                                },
                                "400": {
                                    "code": "400",
                                    "description": "Returned if user requested an empty group name or the user already belongs to the group."
                                },
                                "401": {
                                    "code": "401",
                                    "description": "Returned if the current user is not authenticated."
                                },
                                "403": {
                                    "code": "403",
                                    "description": "Returned if the current user does not have administrator permissions."
                                },
                                "404": {
                                    "code": "404",
                                    "description": "Returned if the requested group was not found or requested user was not found."
                                },
                                "500": {
                                    "code": "500",
                                    "description": "Returned if the operation is not permitted or error occurs while adding user the group."
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "queryParameters": {
                                "groupname": {
                                    "name": "groupname",
                                    "displayName": "groupname",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "A name of requested group.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Adds given user to a group. Returns the current state of the group.",
                            "method": "post",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "group",
                                            "example": "{\n  \"name\" : \"jira-administrators\" ,\n  \"self\" : \"http://www.example.com/jira/rest/api/2/group?groupname=jira-administrators\" ,\n  \"users\" : {\n    \"size\" : 1 ,\n    \"items\" : [\n      {\n        \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n        \"name\" : \"fred\" ,\n        \"displayName\" : \"Fred F. User\" ,\n        \"active\" : false\n      }\n    ] ,\n    \"max-results\" : 50 ,\n    \"start-index\" : 0 ,\n    \"end-index\" : 0\n  } ,\n  \"expand\" : \"users\"\n}",
                                            "schemaContent": "group"
                                        }
                                    },
                                    "description": "Returned if successful."
                                },
                                "400": {
                                    "code": "400",
                                    "description": "Returned if user requested an empty group name"
                                },
                                "401": {
                                    "code": "401",
                                    "description": "Returned if the current user is not authenticated."
                                },
                                "403": {
                                    "code": "403",
                                    "description": "Returned if the current user does not have administrator permissions."
                                },
                                "404": {
                                    "code": "404",
                                    "description": "Returned if the requested group was not found or the requested user wan not foundor permissions."
                                },
                                "500": {
                                    "code": "500",
                                    "description": "Returned if the operation is not permitted or error occurs while removing user from the group."
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "queryParameters": {
                                "groupname": {
                                    "name": "groupname",
                                    "displayName": "groupname",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "A name of requested group.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "username": {
                                    "name": "username",
                                    "displayName": "username",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The name of user",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Removes given user from a group. Returns no content",
                            "method": "delete",
                            "is": [
                                "hasUsername"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/user",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "user"
                    ]
                }
            ],
            "displayName": "/group",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "group"
            ]
        },
        {
            "relativeUri": "/groups/picker",
            "type": "base",
            "securedBy": [
                "basic"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "groupsuggestions",
                                    "example": "{\n  \"header\" : \"Showing 20 of 25 matching groups\" ,\n  \"total\" : 25 ,\n  \"groups\" : [\n    {\n      \"name\" : \"jdog-developers\" ,\n      \"html\" : \"<b>j</b>dog-developers\"\n    } , {\n      \"name\" : \"juvenal-bot\" ,\n      \"html\" : \"<b>j</b>uvenal-bot\"\n    }\n  ]\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"header\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"total\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"groups\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"html\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "queryParameters": {
                        "query": {
                            "name": "query",
                            "displayName": "query",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "a String to match groups agains",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "exclude": {
                            "name": "exclude",
                            "displayName": "exclude",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "maxResults": {
                            "name": "maxResults",
                            "displayName": "maxResults",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "the maximum number of users to return (defaults to 50). The maximum allowed value is 1000. If you specify a value that is higher than this number, your search results will be truncated.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Returns groups with substrings matching a given query. This is mainly for use with the group picker, so the returned groups contain html to be used as picker suggestions. The groups are also wrapped in a single response object that also contains a header for use in the picker, specifically Showing X of Y matching groups. The number of groups returned is limited by the system property \"jira.ajax.autocomplete.limit\" The groups will be unique and sorted.",
                    "method": "get",
                    "is": [
                        "hasMaxResults"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/groups/picker",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "groups",
                "picker"
            ]
        },
        {
            "relativeUri": "/groupuserpicker",
            "type": "base",
            "securedBy": [
                "basic"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "queryParameters": {
                        "query": {
                            "name": "query",
                            "displayName": "query",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "A string used to search username, Name or e-mail address",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "showAvatar": {
                            "name": "showAvatar",
                            "displayName": "showAvatar",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "fieldId": {
                            "name": "fieldId",
                            "displayName": "fieldId",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "The custom field id, if this request comes from a custom field, such as a user picker. Optional.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "projectId": {
                            "name": "projectId",
                            "displayName": "projectId",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "The list of project ids to further restrict the search This parameter can occur multiple times to pass in multiple project ids. Comma separated value is not supported. This parameter is only used when fieldId is present.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "issueTypeId": {
                            "name": "issueTypeId",
                            "displayName": "issueTypeId",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "The list of issue type ids to further restrict the search. This parameter can occur multiple times to pass in multiple issue type ids. Comma separated value is not supported. Special values such as -1 (all standard issue types), -2 (all subtask issue types) are supported. This parameter is only used when fieldId is present.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "maxResults": {
                            "name": "maxResults",
                            "displayName": "maxResults",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "the maximum number of users to return (defaults to 50). The maximum allowed value is 1000. If you specify a value that is higher than this number, your search results will be truncated.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Returns a list of users and groups matching query with highlighting. This resource cannot be accessed anonymously.",
                    "method": "get",
                    "is": [
                        "hasMaxResults"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/groupuserpicker",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "groupuserpicker"
            ]
        },
        {
            "relativeUri": "/issue",
            "type": "base",
            "securedBy": [
                "basic"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "issue",
                                    "example": "{\n  \"id\" : \"10000\" ,\n  \"key\" : \"TST-24\" ,\n  \"self\" : \"http://www.example.com/jira/rest/api/2/issue/10000\"\n}",
                                    "schemaContent": "issue"
                                }
                            },
                            "description": "Returned if the object was retrieved successful."
                        },
                        "400": {
                            "code": "400",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "errorMessages",
                                    "example": "{\n  \"errorMessages\" : [\n  ] ,\n  \"errors\" : {\n    \"title\" : \"'title' is required.\"\n  }\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"errorMessages\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n      ]\n    } ,\n    \"errors\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"title\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
                                }
                            },
                            "description": ""
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json",
                            "schema": "issueReq",
                            "example": "{\n  \"update\" : {\n    \"worklog\" : [\n      {\n        \"add\" : {\n          \"started\" : \"2011-07-05T11:05:00.000+0000\" ,\n          \"timeSpent\" : \"60m\"\n        }\n      }\n    ]\n  } ,\n  \"fields\" : {\n    \"project\" : {\n      \"id\" : \"10000\"\n    } ,\n    \"summary\" : \"something's wrong\" ,\n    \"issuetype\" : {\n      \"id\" : \"10000\"\n    } ,\n    \"assignee\" : {\n      \"name\" : \"homer\"\n    } ,\n    \"reporter\" : {\n      \"name\" : \"smithers\"\n    } ,\n    \"priority\" : {\n      \"id\" : \"20000\"\n    } ,\n    \"labels\" : [\n      \"bugfix\" ,\n      \"blitz_test\"\n    ] ,\n    \"timetracking\" : {\n      \"originalEstimate\" : \"10\" ,\n      \"remainingEstimate\" : \"5\"\n    } ,\n    \"security\" : {\n      \"id\" : \"10000\"\n    } ,\n    \"versions\" : [\n      {\n        \"id\" : \"10000\"\n      }\n    ] ,\n    \"environment\" : \"environment\" ,\n    \"description\" : \"description\" ,\n    \"duedate\" : \"2011-03-11\" ,\n    \"fixVersions\" : [\n      {\n        \"id\" : \"10001\"\n      }\n    ] ,\n    \"components\" : [\n      {\n        \"id\" : \"10000\"\n      }\n    ] ,\n    \"customfield_60000\" : \"jira-developers\" ,\n    \"customfield_20000\" : \"06/Jul/11 3:25 PM\" ,\n    \"customfield_80000\" : {\n      \"value\" : \"red\"\n    } ,\n    \"customfield_40000\" : \"this is a text field\" ,\n    \"customfield_30000\" : [\n      \"10000\" ,\n      \"10002\"\n    ] ,\n    \"customfield_70000\" : [\n      \"jira-administrators\" ,\n      \"jira-users\"\n    ] ,\n    \"customfield_50000\" : \"this is a text area. big text.\" ,\n    \"customfield_10000\" : \"09/Jun/81\"\n  }\n}",
                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"update\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"worklog\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"add\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"started\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"timeSpent\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                }\n              }\n            }\n          ]\n        }\n      }\n    } ,\n    \"fields\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"project\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"summary\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"issuetype\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"assignee\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"reporter\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"priority\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"labels\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"string\"\n            }\n          ]\n        } ,\n        \"timetracking\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"originalEstimate\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"remainingEstimate\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"security\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"versions\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"id\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          ]\n        } ,\n        \"environment\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"description\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"duedate\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"fixVersions\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"id\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          ]\n        } ,\n        \"components\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"id\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          ]\n        } ,\n        \"customfield_60000\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"customfield_20000\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"customfield_80000\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"value\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"customfield_40000\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"customfield_30000\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"string\"\n            }\n          ]\n        } ,\n        \"customfield_70000\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"string\"\n            }\n          ]\n        } ,\n        \"customfield_50000\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"customfield_10000\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "description": "Creates an issue or a sub-task from a JSON representation.",
                    "method": "post",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/bulk",
                    "type": "base",
                    "securedBy": [
                        "basic"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "issues",
                                            "example": "{\n  \"issues\" : [\n    {\n      \"id\" : \"10000\" ,\n      \"key\" : \"TST-24\" ,\n      \"self\" : \"http://www.example.com/jira/rest/api/2/issue/10000\"\n    } , {\n      \"id\" : \"10001\" ,\n      \"key\" : \"TST-25\" ,\n      \"self\" : \"http://www.example.com/jira/rest/api/2/issue/10001\"\n    }\n  ] ,\n  \"errors\" : [\n  ]\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"issues\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"key\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    } ,\n    \"errors\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n      ]\n    }\n  }\n}"
                                        }
                                    },
                                    "description": "Returned if the object was retrieved successful."
                                },
                                "400": {
                                    "code": "400",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "elementErrors",
                                            "example": "{\n  \"status\" : 400 ,\n  \"elementErrors\" : {\n    \"errorMessages\" : [\n      \"Field 'priority' is required\"\n    ] ,\n    \"errors\" : {\n    }\n  } ,\n  \"failedElementNumber\" : 3\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"status\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"elementErrors\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"errorMessages\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"string\"\n            }\n          ]\n        } ,\n        \"errors\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"failedElementNumber\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    }\n  }\n}"
                                        }
                                    },
                                    "description": "Returned if the the request is invalid."
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "issuesReq",
                                    "example": "{\n  \"issueUpdates\" : [\n    {\n      \"update\" : {\n        \"worklog\" : [\n          {\n            \"add\" : {\n              \"started\" : \"2011-07-05T11:05:00.000+0000\" ,\n              \"timeSpent\" : \"60m\"\n            }\n          }\n        ]\n      } ,\n      \"fields\" : {\n        \"project\" : {\n          \"id\" : \"10000\"\n        } ,\n        \"summary\" : \"something's wrong\" ,\n        \"issuetype\" : {\n          \"id\" : \"10000\"\n        } ,\n        \"assignee\" : {\n          \"name\" : \"homer\"\n        } ,\n        \"reporter\" : {\n          \"name\" : \"smithers\"\n        } ,\n        \"priority\" : {\n          \"id\" : \"20000\"\n        } ,\n        \"labels\" : [\n          \"bugfix\" ,\n          \"blitz_test\"\n        ] ,\n        \"timetracking\" : {\n          \"originalEstimate\" : \"10\" ,\n          \"remainingEstimate\" : \"5\"\n        } ,\n        \"security\" : {\n          \"id\" : \"10000\"\n        } ,\n        \"versions\" : [\n          {\n            \"id\" : \"10000\"\n          }\n        ] ,\n        \"environment\" : \"environment\" ,\n        \"description\" : \"description\" ,\n        \"duedate\" : \"2011-03-11\" ,\n        \"fixVersions\" : [\n          {\n            \"id\" : \"10001\"\n          }\n        ] ,\n        \"components\" : [\n          {\n            \"id\" : \"10000\"\n          }\n        ] ,\n        \"customfield_60000\" : \"jira-developers\" ,\n        \"customfield_20000\" : \"06/Jul/11 3:25 PM\" ,\n        \"customfield_80000\" : {\n          \"value\" : \"red\"\n        } ,\n        \"customfield_40000\" : \"this is a text field\" ,\n        \"customfield_30000\" : [\n          \"10000\" ,\n          \"10002\"\n        ] ,\n        \"customfield_70000\" : [\n          \"jira-administrators\" ,\n          \"jira-users\"\n        ] ,\n        \"customfield_50000\" : \"this is a text area. big text.\" ,\n        \"customfield_10000\" : \"09/Jun/81\"\n      }\n    } , {\n      \"update\" : {\n      } ,\n      \"fields\" : {\n        \"project\" : {\n          \"id\" : \"1000\"\n        } ,\n        \"summary\" : \"something's very wrong\" ,\n        \"issuetype\" : {\n          \"id\" : \"10000\"\n        } ,\n        \"assignee\" : {\n          \"name\" : \"jerry\"\n        } ,\n        \"reporter\" : {\n          \"name\" : \"kosecki\"\n        } ,\n        \"priority\" : {\n          \"id\" : \"20000\"\n        } ,\n        \"labels\" : [\n          \"new_release\"\n        ] ,\n        \"timetracking\" : {\n          \"originalEstimate\" : \"15\" ,\n          \"remainingEstimate\" : \"5\"\n        } ,\n        \"security\" : {\n          \"id\" : \"10000\"\n        } ,\n        \"versions\" : [\n          {\n            \"id\" : \"10000\"\n          }\n        ] ,\n        \"environment\" : \"environment\" ,\n        \"description\" : \"description\" ,\n        \"duedate\" : \"2011-04-16\" ,\n        \"fixVersions\" : [\n          {\n            \"id\" : \"10001\"\n          }\n        ] ,\n        \"components\" : [\n          {\n            \"id\" : \"10000\"\n          }\n        ] ,\n        \"customfield_60000\" : \"jira-developers\" ,\n        \"customfield_20000\" : \"06/Jul/11 3:25 PM\" ,\n        \"customfield_80000\" : {\n          \"value\" : \"red\"\n        } ,\n        \"customfield_40000\" : \"this is a text field\" ,\n        \"customfield_30000\" : [\n          \"10000\" ,\n          \"10002\"\n        ] ,\n        \"customfield_70000\" : [\n          \"jira-administrators\" ,\n          \"jira-users\"\n        ] ,\n        \"customfield_50000\" : \"this is a text area. big text.\" ,\n        \"customfield_10000\" : \"09/Jun/81\"\n      }\n    }\n  ]\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"issueUpdates\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"update\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"worklog\" : {\n                  \"type\" : \"array\" ,\n                  \"required\" : false ,\n                  \"items\" : [\n                    {\n                      \"type\" : \"object\" ,\n                      \"properties\" : {\n                        \"add\" : {\n                          \"type\" : \"object\" ,\n                          \"required\" : false ,\n                          \"properties\" : {\n                            \"started\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            } ,\n                            \"timeSpent\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            }\n                          }\n                        }\n                      }\n                    }\n                  ]\n                }\n              }\n            } ,\n            \"fields\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"project\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"id\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"summary\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"issuetype\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"id\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"assignee\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"name\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"reporter\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"name\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"priority\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"id\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"labels\" : {\n                  \"type\" : \"array\" ,\n                  \"required\" : false ,\n                  \"items\" : [\n                    {\n                      \"type\" : \"string\"\n                    }\n                  ]\n                } ,\n                \"timetracking\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"originalEstimate\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"remainingEstimate\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"security\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"id\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"versions\" : {\n                  \"type\" : \"array\" ,\n                  \"required\" : false ,\n                  \"items\" : [\n                    {\n                      \"type\" : \"object\" ,\n                      \"properties\" : {\n                        \"id\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        }\n                      }\n                    }\n                  ]\n                } ,\n                \"environment\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"description\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"duedate\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"fixVersions\" : {\n                  \"type\" : \"array\" ,\n                  \"required\" : false ,\n                  \"items\" : [\n                    {\n                      \"type\" : \"object\" ,\n                      \"properties\" : {\n                        \"id\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        }\n                      }\n                    }\n                  ]\n                } ,\n                \"components\" : {\n                  \"type\" : \"array\" ,\n                  \"required\" : false ,\n                  \"items\" : [\n                    {\n                      \"type\" : \"object\" ,\n                      \"properties\" : {\n                        \"id\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        }\n                      }\n                    }\n                  ]\n                } ,\n                \"customfield_60000\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"customfield_20000\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"customfield_80000\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"value\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"customfield_40000\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"customfield_30000\" : {\n                  \"type\" : \"array\" ,\n                  \"required\" : false ,\n                  \"items\" : [\n                    {\n                      \"type\" : \"string\"\n                    }\n                  ]\n                } ,\n                \"customfield_70000\" : {\n                  \"type\" : \"array\" ,\n                  \"required\" : false ,\n                  \"items\" : [\n                    {\n                      \"type\" : \"string\"\n                    }\n                  ]\n                } ,\n                \"customfield_50000\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"customfield_10000\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        } , {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"update\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false\n            } ,\n            \"fields\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"project\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"id\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"summary\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"issuetype\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"id\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"assignee\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"name\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"reporter\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"name\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"priority\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"id\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"labels\" : {\n                  \"type\" : \"array\" ,\n                  \"required\" : false ,\n                  \"items\" : [\n                    {\n                      \"type\" : \"string\"\n                    }\n                  ]\n                } ,\n                \"timetracking\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"originalEstimate\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"remainingEstimate\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"security\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"id\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"versions\" : {\n                  \"type\" : \"array\" ,\n                  \"required\" : false ,\n                  \"items\" : [\n                    {\n                      \"type\" : \"object\" ,\n                      \"properties\" : {\n                        \"id\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        }\n                      }\n                    }\n                  ]\n                } ,\n                \"environment\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"description\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"duedate\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"fixVersions\" : {\n                  \"type\" : \"array\" ,\n                  \"required\" : false ,\n                  \"items\" : [\n                    {\n                      \"type\" : \"object\" ,\n                      \"properties\" : {\n                        \"id\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        }\n                      }\n                    }\n                  ]\n                } ,\n                \"components\" : {\n                  \"type\" : \"array\" ,\n                  \"required\" : false ,\n                  \"items\" : [\n                    {\n                      \"type\" : \"object\" ,\n                      \"properties\" : {\n                        \"id\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        }\n                      }\n                    }\n                  ]\n                } ,\n                \"customfield_60000\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"customfield_20000\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"customfield_80000\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"value\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"customfield_40000\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"customfield_30000\" : {\n                  \"type\" : \"array\" ,\n                  \"required\" : false ,\n                  \"items\" : [\n                    {\n                      \"type\" : \"string\"\n                    }\n                  ]\n                } ,\n                \"customfield_70000\" : {\n                  \"type\" : \"array\" ,\n                  \"required\" : false ,\n                  \"items\" : [\n                    {\n                      \"type\" : \"string\"\n                    }\n                  ]\n                } ,\n                \"customfield_50000\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"customfield_10000\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "description": "Creates issues or sub-tasks from a JSON representation.\nCreates many issues in one bulk operation.\n",
                            "method": "post",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/bulk",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "bulk"
                    ]
                },
                {
                    "relativeUri": "/{issueIdOrKey}",
                    "type": "base",
                    "securedBy": [
                        "basic"
                    ],
                    "uriParameters": {
                        "issueIdOrKey": {
                            "name": "issueIdOrKey",
                            "displayName": "issueIdOrKey",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "description": "a String containing an issue key",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "representationIssue",
                                            "example": "{\n  \"expand\" : \"renderedFields,names,schema,transitions,operations,editmeta,changelog\" ,\n  \"id\" : \"10002\" ,\n  \"self\" : \"http://www.example.com/jira/rest/api/2/issue/10002\" ,\n  \"key\" : \"EX-1\" ,\n  \"fields\" : {\n    \"sub-tasks\" : [\n      {\n        \"id\" : \"10000\" ,\n        \"type\" : {\n          \"id\" : \"10000\" ,\n          \"name\" : \"\" ,\n          \"inward\" : \"Parent\" ,\n          \"outward\" : \"Sub-task\"\n        } ,\n        \"outwardIssue\" : {\n          \"id\" : \"10003\" ,\n          \"key\" : \"EX-2\" ,\n          \"self\" : \"http://www.example.com/jira/rest/api/2/issue/EX-2\" ,\n          \"fields\" : {\n            \"status\" : {\n              \"iconUrl\" : \"http://www.example.com/jira//images/icons/statuses/open.png\" ,\n              \"name\" : \"Open\"\n            }\n          }\n        }\n      }\n    ] ,\n    \"timetracking\" : {\n      \"originalEstimate\" : \"10m\" ,\n      \"remainingEstimate\" : \"3m\" ,\n      \"timeSpent\" : \"6m\" ,\n      \"originalEstimateSeconds\" : 600 ,\n      \"remainingEstimateSeconds\" : 200 ,\n      \"timeSpentSeconds\" : 400\n    } ,\n    \"project\" : {\n      \"self\" : \"http://www.example.com/jira/rest/api/2/project/EX\" ,\n      \"id\" : \"10000\" ,\n      \"key\" : \"EX\" ,\n      \"name\" : \"Example\" ,\n      \"avatarUrls\" : {\n        \"24x24\" : \"http://www.example.com/jira/secure/projectavatar?size=small&pid=10000\" ,\n        \"16x16\" : \"http://www.example.com/jira/secure/projectavatar?size=xsmall&pid=10000\" ,\n        \"32x32\" : \"http://www.example.com/jira/secure/projectavatar?size=medium&pid=10000\" ,\n        \"48x48\" : \"http://www.example.com/jira/secure/projectavatar?size=large&pid=10000\"\n      }\n    } ,\n    \"updated\" : 1 ,\n    \"description\" : \"example bug report\" ,\n    \"issuelinks\" : [\n      {\n        \"id\" : \"10001\" ,\n        \"type\" : {\n          \"id\" : \"10000\" ,\n          \"name\" : \"Dependent\" ,\n          \"inward\" : \"depends on\" ,\n          \"outward\" : \"is depended by\"\n        } ,\n        \"outwardIssue\" : {\n          \"id\" : \"10004L\" ,\n          \"key\" : \"PRJ-2\" ,\n          \"self\" : \"http://www.example.com/jira/rest/api/2/issue/PRJ-2\" ,\n          \"fields\" : {\n            \"status\" : {\n              \"iconUrl\" : \"http://www.example.com/jira//images/icons/statuses/open.png\" ,\n              \"name\" : \"Open\"\n            }\n          }\n        }\n      } , {\n        \"id\" : \"10002\" ,\n        \"type\" : {\n          \"id\" : \"10000\" ,\n          \"name\" : \"Dependent\" ,\n          \"inward\" : \"depends on\" ,\n          \"outward\" : \"is depended by\"\n        } ,\n        \"inwardIssue\" : {\n          \"id\" : \"10004\" ,\n          \"key\" : \"PRJ-3\" ,\n          \"self\" : \"http://www.example.com/jira/rest/api/2/issue/PRJ-3\" ,\n          \"fields\" : {\n            \"status\" : {\n              \"iconUrl\" : \"http://www.example.com/jira//images/icons/statuses/open.png\" ,\n              \"name\" : \"Open\"\n            }\n          }\n        }\n      }\n    ] ,\n    \"attachment\" : [\n      {\n        \"self\" : \"http://www.example.com/jira/rest/api/2.0/attachments/10000\" ,\n        \"filename\" : \"picture.jpg\" ,\n        \"author\" : {\n          \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n          \"name\" : \"fred\" ,\n          \"avatarUrls\" : {\n            \"24x24\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=fred\" ,\n            \"16x16\" : \"http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=fred\" ,\n            \"32x32\" : \"http://www.example.com/jira/secure/useravatar?size=medium&ownerId=fred\" ,\n            \"48x48\" : \"http://www.example.com/jira/secure/useravatar?size=large&ownerId=fred\"\n          } ,\n          \"displayName\" : \"Fred F. User\" ,\n          \"active\" : false\n        } ,\n        \"created\" : \"2014-05-27T08:32:06.728+0000\" ,\n        \"size\" : 23123 ,\n        \"mimeType\" : \"image/jpeg\" ,\n        \"content\" : \"http://www.example.com/jira/attachments/10000\" ,\n        \"thumbnail\" : \"http://www.example.com/jira/secure/thumbnail/10000\"\n      }\n    ] ,\n    \"watcher\" : {\n      \"self\" : \"http://www.example.com/jira/rest/api/2/issue/EX-1/watchers\" ,\n      \"isWatching\" : false ,\n      \"watchCount\" : 1 ,\n      \"watchers\" : [\n        {\n          \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n          \"name\" : \"fred\" ,\n          \"avatarUrls\" : {\n            \"24x24\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=fred\" ,\n            \"16x16\" : \"http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=fred\" ,\n            \"32x32\" : \"http://www.example.com/jira/secure/useravatar?size=medium&ownerId=fred\" ,\n            \"48x48\" : \"http://www.example.com/jira/secure/useravatar?size=large&ownerId=fred\"\n          } ,\n          \"displayName\" : \"Fred F. User\" ,\n          \"active\" : false\n        }\n      ]\n    } ,\n    \"comment\" : [\n      {\n        \"self\" : \"http://www.example.com/jira/rest/api/2/issue/10010/comment/10000\" ,\n        \"id\" : \"10000\" ,\n        \"author\" : {\n          \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n          \"name\" : \"fred\" ,\n          \"displayName\" : \"Fred F. User\" ,\n          \"active\" : false\n        } ,\n        \"body\" : \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\" ,\n        \"updateAuthor\" : {\n          \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n          \"name\" : \"fred\" ,\n          \"displayName\" : \"Fred F. User\" ,\n          \"active\" : false\n        } ,\n        \"created\" : \"2014-05-27T08:32:06.445+0000\" ,\n        \"updated\" : \"2014-05-27T08:32:06.445+0000\" ,\n        \"visibility\" : {\n          \"type\" : \"role\" ,\n          \"value\" : \"Administrators\"\n        }\n      }\n    ] ,\n    \"worklog\" : [\n      {\n        \"self\" : \"http://www.example.com/jira/rest/api/2/issue/10010/worklog/10000\" ,\n        \"author\" : {\n          \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n          \"name\" : \"fred\" ,\n          \"displayName\" : \"Fred F. User\" ,\n          \"active\" : false\n        } ,\n        \"updateAuthor\" : {\n          \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n          \"name\" : \"fred\" ,\n          \"displayName\" : \"Fred F. User\" ,\n          \"active\" : false\n        } ,\n        \"comment\" : \"I did some work here.\" ,\n        \"visibility\" : {\n          \"type\" : \"group\" ,\n          \"value\" : \"jira-developers\"\n        } ,\n        \"started\" : \"2014-05-27T08:32:06.865+0000\" ,\n        \"timeSpent\" : \"3h 20m\" ,\n        \"timeSpentSeconds\" : 12000 ,\n        \"id\" : \"100028\"\n      }\n    ]\n  } ,\n  \"names\" : {\n    \"sub-tasks\" : \"sub-tasks\" ,\n    \"timetracking\" : \"timetracking\" ,\n    \"project\" : \"project\" ,\n    \"updated\" : \"updated\" ,\n    \"description\" : \"description\" ,\n    \"issuelinks\" : \"issuelinks\" ,\n    \"attachment\" : \"attachment\" ,\n    \"watcher\" : \"watcher\" ,\n    \"comment\" : \"comment\" ,\n    \"worklog\" : \"worklog\"\n  } ,\n  \"schema\" : {\n  }\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"expand\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"key\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"fields\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"sub-tasks\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"id\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"type\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"id\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"name\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"inward\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"outward\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"outwardIssue\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"id\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"key\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"self\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"fields\" : {\n                      \"type\" : \"object\" ,\n                      \"required\" : false ,\n                      \"properties\" : {\n                        \"status\" : {\n                          \"type\" : \"object\" ,\n                          \"required\" : false ,\n                          \"properties\" : {\n                            \"iconUrl\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            } ,\n                            \"name\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          ]\n        } ,\n        \"timetracking\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"originalEstimate\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"remainingEstimate\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"timeSpent\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"originalEstimateSeconds\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"remainingEstimateSeconds\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"timeSpentSeconds\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"project\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"key\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"avatarUrls\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"24x24\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"16x16\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"32x32\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"48x48\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        } ,\n        \"updated\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"description\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"issuelinks\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"id\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"type\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"id\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"name\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"inward\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"outward\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"outwardIssue\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"id\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"key\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"self\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"fields\" : {\n                      \"type\" : \"object\" ,\n                      \"required\" : false ,\n                      \"properties\" : {\n                        \"status\" : {\n                          \"type\" : \"object\" ,\n                          \"required\" : false ,\n                          \"properties\" : {\n                            \"iconUrl\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            } ,\n                            \"name\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            } , {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"id\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"type\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"id\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"name\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"inward\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"outward\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"inwardIssue\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"id\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"key\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"self\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"fields\" : {\n                      \"type\" : \"object\" ,\n                      \"required\" : false ,\n                      \"properties\" : {\n                        \"status\" : {\n                          \"type\" : \"object\" ,\n                          \"required\" : false ,\n                          \"properties\" : {\n                            \"iconUrl\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            } ,\n                            \"name\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          ]\n        } ,\n        \"attachment\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"self\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"filename\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"author\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"self\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"name\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"avatarUrls\" : {\n                      \"type\" : \"object\" ,\n                      \"required\" : false ,\n                      \"properties\" : {\n                        \"24x24\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"16x16\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"32x32\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"48x48\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        }\n                      }\n                    } ,\n                    \"displayName\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"active\" : {\n                      \"type\" : \"boolean\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"created\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"size\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"mimeType\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"content\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"thumbnail\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          ]\n        } ,\n        \"watcher\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"isWatching\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"watchCount\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"watchers\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"object\" ,\n                  \"properties\" : {\n                    \"self\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"name\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"avatarUrls\" : {\n                      \"type\" : \"object\" ,\n                      \"required\" : false ,\n                      \"properties\" : {\n                        \"24x24\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"16x16\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"32x32\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"48x48\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        }\n                      }\n                    } ,\n                    \"displayName\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"active\" : {\n                      \"type\" : \"boolean\" ,\n                      \"required\" : false\n                    }\n                  }\n                }\n              ]\n            }\n          }\n        } ,\n        \"comment\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"self\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"id\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"author\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"self\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"name\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"displayName\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"active\" : {\n                      \"type\" : \"boolean\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"body\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"updateAuthor\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"self\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"name\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"displayName\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"active\" : {\n                      \"type\" : \"boolean\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"created\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"updated\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"visibility\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"type\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"value\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                }\n              }\n            }\n          ]\n        } ,\n        \"worklog\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"self\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"author\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"self\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"name\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"displayName\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"active\" : {\n                      \"type\" : \"boolean\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"updateAuthor\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"self\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"name\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"displayName\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"active\" : {\n                      \"type\" : \"boolean\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"comment\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"visibility\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"type\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"value\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"started\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"timeSpent\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"timeSpentSeconds\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"id\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          ]\n        }\n      }\n    } ,\n    \"names\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"sub-tasks\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"timetracking\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"project\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"updated\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"description\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"issuelinks\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"attachment\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"watcher\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"comment\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"worklog\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"schema\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "queryParameters": {
                                "fields": {
                                    "name": "fields",
                                    "displayName": "fields",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "the list of fields to return for the issue. By default, all fields are returned.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "expand": {
                                    "name": "expand",
                                    "displayName": "expand",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "the parameters to expand",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Returns a full representation of the issue for the given issue key.",
                            "method": "get",
                            "is": [
                                "hasExpand"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "description": "Returned if it updated the issue succesfully."
                                },
                                "400": {
                                    "code": "400",
                                    "description": "Returned if the requested issue update failed."
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "updateIssueReq",
                                    "example": "{\n  \"update\" : {\n    \"summary\" : [\n      {\n        \"set\" : \"Bug in business logic\"\n      }\n    ] ,\n    \"timetracking\" : [\n      {\n        \"edit\" : {\n          \"originalEstimate\" : \"1w 1d\" ,\n          \"remainingEstimate\" : \"4d\"\n        }\n      }\n    ] ,\n    \"labels\" : [\n      {\n        \"add\" : \"triaged\"\n      } , {\n        \"remove\" : \"blocker\"\n      }\n    ] ,\n    \"components\" : [\n      {\n        \"set\" : \"\"\n      }\n    ]\n  } ,\n  \"fields\" : {\n    \"summary\" : \"This is a shorthand for a set operation on the summary field\" ,\n    \"customfield_10010\" : 1 ,\n    \"customfield_10000\" : \"This is a shorthand for a set operation on a text custom field\"\n  }\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"update\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"summary\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"set\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          ]\n        } ,\n        \"timetracking\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"edit\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"originalEstimate\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"remainingEstimate\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                }\n              }\n            }\n          ]\n        } ,\n        \"labels\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"add\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } , {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"remove\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          ]\n        } ,\n        \"components\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"set\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          ]\n        }\n      }\n    } ,\n    \"fields\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"summary\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"customfield_10010\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"customfield_10000\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "description": "Edits an issue from a JSON representation.",
                            "method": "put",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "204": {
                                    "code": "204",
                                    "description": "Returned if the issue was removed successfully."
                                },
                                "400": {
                                    "code": "400",
                                    "description": "Returned if an error occurs."
                                },
                                "401": {
                                    "code": "401",
                                    "description": "Returned if the calling user is not authenticated."
                                },
                                "403": {
                                    "code": "403",
                                    "description": "Returned if the calling user does not have permission to delete the issue."
                                },
                                "404": {
                                    "code": "404",
                                    "description": "Returned if the issue does not exist."
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "queryParameters": {
                                "deleteSubtasks": {
                                    "name": "deleteSubtasks",
                                    "displayName": "deleteSubtasks",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "a String of true or false indicating that any subtasks should also be deleted. If the issue has no subtasks this parameter is ignored. If the issue has subtasks and this parameter is missing or false, then the issue will not be deleted and an error will be returned.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Delete an issue. If the issue has subtasks you must set the parameter deleteSubtasks=true to delete the issue. You cannot delete an issue without its subtasks also being deleted.",
                            "method": "delete",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/assignee",
                            "type": "base",
                            "securedBy": [
                                "basic"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "204": {
                                            "code": "204",
                                            "description": "Returned if the issue is successfully assigned."
                                        },
                                        "400": {
                                            "code": "400",
                                            "description": "Returned if there is a problem with the received user representation."
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "Returned if the calling user does not have permission to assign the issue."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "Returned if either the issue or the user does not exist."
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "assignee",
                                            "example": "{\n  \"name\" : \"harry\"\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "description": "Assigns an issue to a user. You can use this resource to assign issues when the user submitting the request has the assign permission but not the edit issue permission. If the name is \"-1\" automatic assignee is used. A null name will remove the assignee.",
                                    "method": "put",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/assignee",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "assignee"
                            ]
                        },
                        {
                            "relativeUri": "/comment",
                            "type": "base",
                            "securedBy": [
                                "basic"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "issueComments",
                                                    "example": "{\n  \"startAt\" : 0 ,\n  \"maxResults\" : 1 ,\n  \"total\" : 1 ,\n  \"comments\" : [\n    {\n      \"self\" : \"http://www.example.com/jira/rest/api/2/issue/10010/comment/10000\" ,\n      \"id\" : \"10000\" ,\n      \"author\" : {\n        \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n        \"name\" : \"fred\" ,\n        \"displayName\" : \"Fred F. User\" ,\n        \"active\" : false\n      } ,\n      \"body\" : \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\" ,\n      \"updateAuthor\" : {\n        \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n        \"name\" : \"fred\" ,\n        \"displayName\" : \"Fred F. User\" ,\n        \"active\" : false\n      } ,\n      \"created\" : \"2014-05-27T08:32:06.445+0000\" ,\n      \"updated\" : \"2014-05-27T08:32:06.445+0000\" ,\n      \"visibility\" : {\n        \"type\" : \"role\" ,\n        \"value\" : \"Administrators\"\n      }\n    }\n  ]\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"startAt\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"maxResults\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"total\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"comments\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"author\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"self\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"displayName\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"active\" : {\n                  \"type\" : \"boolean\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"body\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"updateAuthor\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"self\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"displayName\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"active\" : {\n                  \"type\" : \"boolean\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"created\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"updated\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"visibility\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"type\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"value\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                                }
                                            }
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "Returned if the issue with the given id/key does not exist or if the currently authenticated user does not have permission to view it."
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "queryParameters": {
                                        "expand": {
                                            "name": "expand",
                                            "displayName": "expand",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "the parameters to expand",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Returns all comments for an issue.",
                                    "method": "get",
                                    "is": [
                                        "hasExpand"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "201": {
                                            "code": "201",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "issueComments",
                                                    "example": "{\n  \"startAt\" : 0 ,\n  \"maxResults\" : 1 ,\n  \"total\" : 1 ,\n  \"comments\" : [\n    {\n      \"self\" : \"http://www.example.com/jira/rest/api/2/issue/10010/comment/10000\" ,\n      \"id\" : \"10000\" ,\n      \"author\" : {\n        \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n        \"name\" : \"fred\" ,\n        \"displayName\" : \"Fred F. User\" ,\n        \"active\" : false\n      } ,\n      \"body\" : \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\" ,\n      \"updateAuthor\" : {\n        \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n        \"name\" : \"fred\" ,\n        \"displayName\" : \"Fred F. User\" ,\n        \"active\" : false\n      } ,\n      \"created\" : \"2014-05-27T08:32:06.445+0000\" ,\n      \"updated\" : \"2014-05-27T08:32:06.445+0000\" ,\n      \"visibility\" : {\n        \"type\" : \"role\" ,\n        \"value\" : \"Administrators\"\n      }\n    }\n  ]\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"startAt\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"maxResults\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"total\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"comments\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"author\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"self\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"displayName\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"active\" : {\n                  \"type\" : \"boolean\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"body\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"updateAuthor\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"self\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"displayName\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"active\" : {\n                  \"type\" : \"boolean\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"created\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"updated\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"visibility\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"type\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"value\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                                }
                                            },
                                            "description": "Returned if the object was created successful."
                                        },
                                        "400": {
                                            "code": "400",
                                            "description": "Returned if the input is invalid (e.g. missing required fields, invalid values, and so forth)."
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "commentReq",
                                            "example": "{\n  \"body\" : \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\" ,\n  \"visibility\" : {\n    \"type\" : \"role\" ,\n    \"value\" : \"Administrators\"\n  }\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"body\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"visibility\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"type\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"value\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "queryParameters": {
                                        "expand": {
                                            "name": "expand",
                                            "displayName": "expand",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "the parameters to expand",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Adds a new comment to an issue.",
                                    "method": "post",
                                    "is": [
                                        "hasExpand"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "resources": [
                                {
                                    "relativeUri": "/{id}",
                                    "type": "base",
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "uriParameters": {
                                        "id": {
                                            "name": "id",
                                            "displayName": "id",
                                            "type": "string",
                                            "required": true,
                                            "repeat": false,
                                            "__METADATA__": {
                                                "calculated": true,
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "methods": [
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "issueComments",
                                                            "example": "{\n  \"startAt\" : 0 ,\n  \"maxResults\" : 1 ,\n  \"total\" : 1 ,\n  \"comments\" : [\n    {\n      \"self\" : \"http://www.example.com/jira/rest/api/2/issue/10010/comment/10000\" ,\n      \"id\" : \"10000\" ,\n      \"author\" : {\n        \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n        \"name\" : \"fred\" ,\n        \"displayName\" : \"Fred F. User\" ,\n        \"active\" : false\n      } ,\n      \"body\" : \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\" ,\n      \"updateAuthor\" : {\n        \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n        \"name\" : \"fred\" ,\n        \"displayName\" : \"Fred F. User\" ,\n        \"active\" : false\n      } ,\n      \"created\" : \"2014-05-27T08:32:06.445+0000\" ,\n      \"updated\" : \"2014-05-27T08:32:06.445+0000\" ,\n      \"visibility\" : {\n        \"type\" : \"role\" ,\n        \"value\" : \"Administrators\"\n      }\n    }\n  ]\n}",
                                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"startAt\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"maxResults\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"total\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"comments\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"author\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"self\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"displayName\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"active\" : {\n                  \"type\" : \"boolean\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"body\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"updateAuthor\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"self\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"displayName\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"active\" : {\n                  \"type\" : \"boolean\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"created\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"updated\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"visibility\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"type\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"value\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                                        }
                                                    }
                                                },
                                                "404": {
                                                    "code": "404",
                                                    "description": "Returned if the issue with the given id/key does not exist or if the currently authenticated user does not have permission to view it."
                                                }
                                            },
                                            "protocols": [
                                                "{PROTOCOL}"
                                            ],
                                            "securedBy": [
                                                "basic"
                                            ],
                                            "queryParameters": {
                                                "expand": {
                                                    "name": "expand",
                                                    "displayName": "expand",
                                                    "type": "string",
                                                    "required": false,
                                                    "repeat": false,
                                                    "description": "the parameters to expand",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "description": "Returns all comments for an issue.",
                                            "method": "get",
                                            "is": [
                                                "hasExpand"
                                            ],
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "comment",
                                                            "example": "{\n  \"self\" : \"http://www.example.com/jira/rest/api/2/issue/10010/comment/10000\" ,\n  \"id\" : \"10000\" ,\n  \"author\" : {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n    \"name\" : \"fred\" ,\n    \"displayName\" : \"Fred F. User\" ,\n    \"active\" : false\n  } ,\n  \"body\" : \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\" ,\n  \"updateAuthor\" : {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n    \"name\" : \"fred\" ,\n    \"displayName\" : \"Fred F. User\" ,\n    \"active\" : false\n  } ,\n  \"created\" : \"2014-05-27T08:32:06.445+0000\" ,\n  \"updated\" : \"2014-05-27T08:32:06.445+0000\" ,\n  \"visibility\" : {\n    \"type\" : \"role\" ,\n    \"value\" : \"Administrators\"\n  }\n}",
                                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"author\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"displayName\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"active\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"body\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"updateAuthor\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"displayName\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"active\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"created\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"updated\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"visibility\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"type\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"value\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
                                                        }
                                                    },
                                                    "description": "Returned if the object was retrieved successful."
                                                },
                                                "404": {
                                                    "code": "404",
                                                    "description": "Returned if the issue with the given id/key does not exist or if the currently authenticated user does not have permission to view it."
                                                }
                                            },
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "commentReq",
                                                    "example": "{\n  \"body\" : \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\" ,\n  \"visibility\" : {\n    \"type\" : \"role\" ,\n    \"value\" : \"Administrators\"\n  }\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"body\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"visibility\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"type\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"value\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
                                                }
                                            },
                                            "protocols": [
                                                "{PROTOCOL}"
                                            ],
                                            "securedBy": [
                                                "basic"
                                            ],
                                            "queryParameters": {
                                                "expand": {
                                                    "name": "expand",
                                                    "displayName": "expand",
                                                    "type": "string",
                                                    "required": false,
                                                    "repeat": false,
                                                    "description": "the parameters to expand",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "description": "Updates an existing comment using its JSON representation.",
                                            "method": "put",
                                            "is": [
                                                "hasExpand"
                                            ],
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "responses": {
                                                "204": {
                                                    "code": "204",
                                                    "description": "Returned if delete was successful"
                                                },
                                                "400": {
                                                    "code": "400",
                                                    "description": "Returned if the input is invalid (e.g. missing required fields, invalid values, and so forth)."
                                                }
                                            },
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json"
                                                }
                                            },
                                            "protocols": [
                                                "{PROTOCOL}"
                                            ],
                                            "securedBy": [
                                                "basic"
                                            ],
                                            "description": "Deletes an existing comment .",
                                            "method": "delete",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/{id}",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "securedBy": {
                                                "calculated": true
                                            },
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "{id}"
                                    ]
                                }
                            ],
                            "displayName": "/comment",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "comment"
                            ]
                        },
                        {
                            "relativeUri": "/editmeta",
                            "type": "base",
                            "securedBy": [
                                "basic"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "issueMeta",
                                                    "example": "{\n  \"fields\" : {\n    \"summary\" : {\n      \"required\" : false ,\n      \"schema\" : {\n        \"type\" : \"array\" ,\n        \"items\" : \"option\" ,\n        \"custom\" : \"com.atlassian.jira.plugin.system.customfieldtypes:multiselect\" ,\n        \"customId\" : 10001\n      } ,\n      \"name\" : \"My Multi Select\" ,\n      \"hasDefaultValue\" : false ,\n      \"operations\" : [\n        \"set\" ,\n        \"add\"\n      ] ,\n      \"allowedValues\" : [\n        \"red\" ,\n        \"blue\"\n      ]\n    }\n  }\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"fields\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"summary\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"required\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"schema\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"type\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"items\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"custom\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"customId\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"hasDefaultValue\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"operations\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"string\"\n                }\n              ]\n            } ,\n            \"allowedValues\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"string\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "Returned if the requested issue is not found or the user does not have permission to view it."
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "description": "Returns the meta data for editing an issue.",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/editmeta",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "editmeta"
                            ]
                        },
                        {
                            "relativeUri": "/notify",
                            "type": "base",
                            "securedBy": [
                                "basic"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "204": {
                                            "code": "204",
                                            "description": "Returned if adding to the mail queue was successful"
                                        },
                                        "400": {
                                            "code": "400",
                                            "description": "Returned if the input is invalid (e.g. missing required fields, invalid values, and so forth)."
                                        },
                                        "403": {
                                            "code": "403",
                                            "description": "Returned is outgoing emails are disabled OR no SMTP server is defined."
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "notification",
                                            "example": "{\n  \"subject\" : \"Duis eu justo eget augue iaculis fermentum.\" ,\n  \"textBody\" : \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\" ,\n  \"htmlBody\" : \"Lorem ipsum <strong>dolor</strong> sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\" ,\n  \"to\" : {\n    \"reporter\" : false ,\n    \"assignee\" : false ,\n    \"watchers\" : true ,\n    \"voters\" : true ,\n    \"users\" : [\n      {\n        \"name\" : \"fred\" ,\n        \"active\" : false\n      }\n    ] ,\n    \"groups\" : [\n      {\n        \"name\" : \"notification-group\" ,\n        \"self\" : \"http://www.example.com/jira/rest/api/2/group?groupname=notification-group\"\n      }\n    ]\n  } ,\n  \"restrict\" : {\n    \"groups\" : [\n      {\n        \"name\" : \"notification-group\" ,\n        \"self\" : \"http://www.example.com/jira/rest/api/2/group?groupname=notification-group\"\n      }\n    ] ,\n    \"permissions\" : [\n      {\n        \"id\" : \"10\" ,\n        \"key\" : \"BROWSE\"\n      }\n    ]\n  }\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"subject\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"textBody\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"htmlBody\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"to\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"reporter\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"assignee\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"watchers\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"voters\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"users\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"active\" : {\n                  \"type\" : \"boolean\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          ]\n        } ,\n        \"groups\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"self\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          ]\n        }\n      }\n    } ,\n    \"restrict\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"groups\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"self\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          ]\n        } ,\n        \"permissions\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"id\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"key\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          ]\n        }\n      }\n    }\n  }\n}"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "description": "Sends a notification (email) to the list or recipients defined in the request.",
                                    "method": "post",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/notify",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "notify"
                            ]
                        },
                        {
                            "relativeUri": "/remotelink",
                            "type": "base",
                            "securedBy": [
                                "basic"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "remotelink",
                                                    "example": "[\n  {\n    \"id\" : 10000 ,\n    \"self\" : \"http://www.example.com/jira/rest/api/issue/MKY-1/remotelink/10000\" ,\n    \"globalId\" : \"system=http://www.mycompany.com/support&id=1\" ,\n    \"application\" : {\n      \"type\" : \"com.acme.tracker\" ,\n      \"name\" : \"My Acme Tracker\"\n    } ,\n    \"relationship\" : \"causes\" ,\n    \"object\" : {\n      \"url\" : \"http://www.mycompany.com/support?id=1\" ,\n      \"title\" : \"TSTSUP-111\" ,\n      \"summary\" : \"Crazy customer support issue\" ,\n      \"icon\" : {\n        \"url16x16\" : \"http://www.mycompany.com/support/ticket.png\" ,\n        \"title\" : \"Support Ticket\"\n      } ,\n      \"status\" : {\n        \"resolved\" : true ,\n        \"icon\" : {\n          \"url16x16\" : \"http://www.mycompany.com/support/resolved.png\" ,\n          \"title\" : \"Case Closed\" ,\n          \"link\" : \"http://www.mycompany.com/support?id=1&details=closed\"\n        }\n      }\n    }\n  } , {\n    \"id\" : 10001 ,\n    \"self\" : \"http://www.example.com/jira/rest/api/issue/MKY-1/remotelink/10001\" ,\n    \"globalId\" : \"system=http://www.anothercompany.com/tester&id=1234\" ,\n    \"application\" : {\n      \"type\" : \"com.acme.tester\" ,\n      \"name\" : \"My Acme Tester\"\n    } ,\n    \"relationship\" : \"is tested by\" ,\n    \"object\" : {\n      \"url\" : \"http://www.anothercompany.com/tester/testcase/1234\" ,\n      \"title\" : \"Test Case #1234\" ,\n      \"summary\" : \"Test that the submit button saves the thing\" ,\n      \"icon\" : {\n        \"url16x16\" : \"http://www.anothercompany.com/tester/images/testcase.gif\" ,\n        \"title\" : \"Test Case\"\n      } ,\n      \"status\" : {\n        \"resolved\" : false ,\n        \"icon\" : {\n          \"url16x16\" : \"http://www.anothercompany.com/tester/images/person/fred.gif\" ,\n          \"title\" : \"Tested by Fred Jones\" ,\n          \"link\" : \"http://www.anothercompany.com/tester/person?username=fred\"\n        }\n      }\n    }\n  }\n]",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"array\" ,\n  \"items\" : [\n    {\n      \"type\" : \"object\" ,\n      \"properties\" : {\n        \"id\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"globalId\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"application\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"type\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"relationship\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"object\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"url\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"title\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"summary\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"icon\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"url16x16\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"title\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"status\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"resolved\" : {\n                  \"type\" : \"boolean\" ,\n                  \"required\" : false\n                } ,\n                \"icon\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"url16x16\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"title\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"link\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ]\n}"
                                                }
                                            }
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "Returned if the calling user is not authenticated."
                                        },
                                        "403": {
                                            "code": "403",
                                            "description": "Returned if the calling user does not have permission to view the remote issue links, or if issue linking is disabled."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "Returned if the issue or remote issue link do not exist."
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "queryParameters": {
                                        "globalId": {
                                            "name": "globalId",
                                            "displayName": "globalId",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "The id of the remote issue link to be returned. If null (not provided) all remote links for the issue are returned.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "A REST sub-resource representing the remote issue links on the issue.",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "remoteIssueLink",
                                                    "example": "{\n  \"id\" : 10000 ,\n  \"self\" : \"http://www.example.com/jira/rest/api/issue/MKY-1/remotelink/10000\"\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                                }
                                            },
                                            "description": "Returned if the object was retrieved successful."
                                        },
                                        "400": {
                                            "code": "400",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "errorMessages",
                                                    "example": "{\n  \"errorMessages\" : [\n  ] ,\n  \"errors\" : {\n    \"title\" : \"'title' is required.\"\n  }\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"errorMessages\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n      ]\n    } ,\n    \"errors\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"title\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
                                                }
                                            },
                                            "description": "Returned if the the request is invalid."
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "Returned if the calling user is not authenticated."
                                        },
                                        "403": {
                                            "code": "403",
                                            "description": "Returned if the calling user does not have permission to create/update the remote issue link, or if issue linking is disabled."
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "remoteReq",
                                            "example": "{\n  \"globalId\" : \"system=http://www.mycompany.com/support&id=1\" ,\n  \"application\" : {\n    \"type\" : \"com.acme.tracker\" ,\n    \"name\" : \"My Acme Tracker\"\n  } ,\n  \"relationship\" : \"causes\" ,\n  \"object\" : {\n    \"url\" : \"http://www.mycompany.com/support?id=1\" ,\n    \"title\" : \"TSTSUP-111\" ,\n    \"summary\" : \"Crazy customer support issue\" ,\n    \"icon\" : {\n      \"url16x16\" : \"http://www.mycompany.com/support/ticket.png\" ,\n      \"title\" : \"Support Ticket\"\n    } ,\n    \"status\" : {\n      \"resolved\" : true ,\n      \"icon\" : {\n        \"url16x16\" : \"http://www.mycompany.com/support/resolved.png\" ,\n        \"title\" : \"Case Closed\" ,\n        \"link\" : \"http://www.mycompany.com/support?id=1&details=closed\"\n      }\n    }\n  }\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"globalId\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"application\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"type\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"relationship\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"object\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"url\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"title\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"summary\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"icon\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"url16x16\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"title\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"status\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"resolved\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"icon\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"url16x16\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"title\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"link\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "description": "Creates or updates a remote issue link from a JSON representation. If a globalId is provided and a remote issue link exists with that globalId, the remote issue link is updated. Otherwise, the remote issue link is created.",
                                    "method": "post",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "204": {
                                            "code": "204",
                                            "description": "Returned if the remote issue link was removed successfully."
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "Returned if the calling user is not authenticated."
                                        },
                                        "403": {
                                            "code": "403",
                                            "description": "Returned if the calling user does not have permission to delete the remote issue link, or if issue linking is disabled."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "Returned if the issue or remote issue link do not exist."
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "queryParameters": {
                                        "globalId": {
                                            "name": "globalId",
                                            "displayName": "globalId",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "the global id of the remote issue link",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Delete the remote issue link with the given global id on the issue.",
                                    "method": "delete",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "resources": [
                                {
                                    "relativeUri": "/{linkId}",
                                    "type": "base",
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "uriParameters": {
                                        "linkId": {
                                            "name": "linkId",
                                            "displayName": "linkId",
                                            "type": "string",
                                            "required": true,
                                            "repeat": false,
                                            "__METADATA__": {
                                                "calculated": true,
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "methods": [
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "issueLink",
                                                            "example": "{\n  \"id\" : 10000 ,\n  \"self\" : \"http://www.example.com/jira/rest/api/issue/MKY-1/remotelink/10000\" ,\n  \"globalId\" : \"system=http://www.mycompany.com/support&id=1\" ,\n  \"application\" : {\n    \"type\" : \"com.acme.tracker\" ,\n    \"name\" : \"My Acme Tracker\"\n  } ,\n  \"relationship\" : \"causes\" ,\n  \"object\" : {\n    \"url\" : \"http://www.mycompany.com/support?id=1\" ,\n    \"title\" : \"TSTSUP-111\" ,\n    \"summary\" : \"Crazy customer support issue\" ,\n    \"icon\" : {\n      \"url16x16\" : \"http://www.mycompany.com/support/ticket.png\" ,\n      \"title\" : \"Support Ticket\"\n    } ,\n    \"status\" : {\n      \"resolved\" : true ,\n      \"icon\" : {\n        \"url16x16\" : \"http://www.mycompany.com/support/resolved.png\" ,\n        \"title\" : \"Case Closed\" ,\n        \"link\" : \"http://www.mycompany.com/support?id=1&details=closed\"\n      }\n    }\n  }\n}",
                                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"globalId\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"application\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"type\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"relationship\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"object\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"url\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"title\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"summary\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"icon\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"url16x16\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"title\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"status\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"resolved\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"icon\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"url16x16\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"title\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"link\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
                                                        }
                                                    }
                                                },
                                                "400": {
                                                    "code": "400",
                                                    "description": "Returned if the linkId is not a valid number, or if the remote issue link with the given id does not belong to the given issue."
                                                },
                                                "401": {
                                                    "code": "401",
                                                    "description": "Returned if the calling user is not authenticated."
                                                },
                                                "403": {
                                                    "code": "403",
                                                    "description": "Returned if the calling user does not have permission to view the remote issue link, or if issue linking is disabled."
                                                },
                                                "404": {
                                                    "code": "404",
                                                    "description": "Returned if the issue or remote issue link do not exist."
                                                }
                                            },
                                            "protocols": [
                                                "{PROTOCOL}"
                                            ],
                                            "securedBy": [
                                                "basic"
                                            ],
                                            "description": "Get the remote issue link with the given id on the issue.",
                                            "method": "get",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "responses": {
                                                "204": {
                                                    "code": "204"
                                                },
                                                "400": {
                                                    "code": "400",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "errorMessages",
                                                            "example": "{\n  \"errorMessages\" : [\n  ] ,\n  \"errors\" : {\n    \"title\" : \"'title' is required.\"\n  }\n}",
                                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"errorMessages\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n      ]\n    } ,\n    \"errors\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"title\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
                                                        }
                                                    },
                                                    "description": "Returned if the the request is invalid."
                                                },
                                                "401": {
                                                    "code": "401",
                                                    "description": "Returned if the calling user is not authenticated."
                                                },
                                                "403": {
                                                    "code": "403",
                                                    "description": "Returned if the calling user does not have permission to update the remote issue link, or if issue linking is disabled"
                                                }
                                            },
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "remoteReq",
                                                    "example": "{\n  \"globalId\" : \"system=http://www.mycompany.com/support&id=1\" ,\n  \"application\" : {\n    \"type\" : \"com.acme.tracker\" ,\n    \"name\" : \"My Acme Tracker\"\n  } ,\n  \"relationship\" : \"causes\" ,\n  \"object\" : {\n    \"url\" : \"http://www.mycompany.com/support?id=1\" ,\n    \"title\" : \"TSTSUP-111\" ,\n    \"summary\" : \"Crazy customer support issue\" ,\n    \"icon\" : {\n      \"url16x16\" : \"http://www.mycompany.com/support/ticket.png\" ,\n      \"title\" : \"Support Ticket\"\n    } ,\n    \"status\" : {\n      \"resolved\" : true ,\n      \"icon\" : {\n        \"url16x16\" : \"http://www.mycompany.com/support/resolved.png\" ,\n        \"title\" : \"Case Closed\" ,\n        \"link\" : \"http://www.mycompany.com/support?id=1&details=closed\"\n      }\n    }\n  }\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"globalId\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"application\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"type\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"relationship\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"object\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"url\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"title\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"summary\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"icon\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"url16x16\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"title\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"status\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"resolved\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"icon\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"url16x16\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"title\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"link\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
                                                }
                                            },
                                            "protocols": [
                                                "{PROTOCOL}"
                                            ],
                                            "securedBy": [
                                                "basic"
                                            ],
                                            "description": "Updates a remote issue link from a JSON representation. Any fields not provided are set to null.",
                                            "method": "put",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "responses": {
                                                "204": {
                                                    "code": "204",
                                                    "description": "Returned if the remote issue link was removed successfully."
                                                },
                                                "401": {
                                                    "code": "401",
                                                    "description": "Returned if the calling user is not authenticated."
                                                },
                                                "403": {
                                                    "code": "403",
                                                    "description": "Returned if the calling user does not have permission to delete the remote issue link, or if issue linking is disabled."
                                                },
                                                "404": {
                                                    "code": "404",
                                                    "description": "Returned if the issue or remote issue link do not exist."
                                                }
                                            },
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json"
                                                }
                                            },
                                            "protocols": [
                                                "{PROTOCOL}"
                                            ],
                                            "securedBy": [
                                                "basic"
                                            ],
                                            "description": "Delete the remote issue link with the given id on the issue.",
                                            "method": "delete",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/{linkId}",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "securedBy": {
                                                "calculated": true
                                            },
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "{linkId}"
                                    ]
                                }
                            ],
                            "displayName": "/remotelink",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "remotelink"
                            ]
                        },
                        {
                            "relativeUri": "/transitions",
                            "type": "base",
                            "securedBy": [
                                "basic"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "transitions",
                                                    "example": "{\n  \"expand\" : \"transitions\" ,\n  \"transitions\" : [\n    {\n      \"id\" : \"2\" ,\n      \"name\" : \"Close Issue\" ,\n      \"to\" : {\n        \"self\" : \"http://localhost:8090/jira/rest/api/2.0/status/10000\" ,\n        \"description\" : \"The issue is currently being worked on.\" ,\n        \"iconUrl\" : \"http://localhost:8090/jira/images/icons/progress.gif\" ,\n        \"name\" : \"In Progress\" ,\n        \"id\" : \"10000\" ,\n        \"statusCategory\" : {\n          \"self\" : \"http://localhost:8090/jira/rest/api/2.0/statuscategory/1\" ,\n          \"id\" : 1 ,\n          \"key\" : \"in-flight\" ,\n          \"colorName\" : \"yellow\" ,\n          \"name\" : \"In Progress\"\n        }\n      } ,\n      \"fields\" : {\n        \"summary\" : {\n          \"required\" : false ,\n          \"schema\" : {\n            \"type\" : \"array\" ,\n            \"items\" : \"option\" ,\n            \"custom\" : \"com.atlassian.jira.plugin.system.customfieldtypes:multiselect\" ,\n            \"customId\" : 10001\n          } ,\n          \"name\" : \"My Multi Select\" ,\n          \"hasDefaultValue\" : false ,\n          \"operations\" : [\n            \"set\" ,\n            \"add\"\n          ] ,\n          \"allowedValues\" : [\n            \"red\" ,\n            \"blue\"\n          ]\n        }\n      }\n    } , {\n      \"id\" : \"711\" ,\n      \"name\" : \"QA Review\" ,\n      \"to\" : {\n        \"self\" : \"http://localhost:8090/jira/rest/api/2.0/status/5\" ,\n        \"description\" : \"The issue is closed.\" ,\n        \"iconUrl\" : \"http://localhost:8090/jira/images/icons/closed.gif\" ,\n        \"name\" : \"Closed\" ,\n        \"id\" : \"5\" ,\n        \"statusCategory\" : {\n          \"self\" : \"http://localhost:8090/jira/rest/api/2.0/statuscategory/9\" ,\n          \"id\" : 9 ,\n          \"key\" : \"completed\" ,\n          \"colorName\" : \"green\"\n        }\n      } ,\n      \"fields\" : {\n        \"colour\" : {\n          \"required\" : false ,\n          \"schema\" : {\n            \"type\" : \"array\" ,\n            \"items\" : \"option\" ,\n            \"custom\" : \"com.atlassian.jira.plugin.system.customfieldtypes:multiselect\" ,\n            \"customId\" : 10001\n          } ,\n          \"name\" : \"My Multi Select\" ,\n          \"hasDefaultValue\" : false ,\n          \"operations\" : [\n            \"set\" ,\n            \"add\"\n          ] ,\n          \"allowedValues\" : [\n            \"red\" ,\n            \"blue\"\n          ]\n        } ,\n        \"summary\" : {\n          \"required\" : false ,\n          \"schema\" : {\n            \"type\" : \"array\" ,\n            \"items\" : \"option\" ,\n            \"custom\" : \"com.atlassian.jira.plugin.system.customfieldtypes:multiselect\" ,\n            \"customId\" : 10001\n          } ,\n          \"name\" : \"My Multi Select\" ,\n          \"hasDefaultValue\" : false ,\n          \"operations\" : [\n            \"set\" ,\n            \"add\"\n          ] ,\n          \"allowedValues\" : [\n            \"red\" ,\n            \"blue\"\n          ]\n        }\n      }\n    }\n  ]\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"expand\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"transitions\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"to\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"self\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"description\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"iconUrl\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"id\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"statusCategory\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"self\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"id\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"key\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"colorName\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"name\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                }\n              }\n            } ,\n            \"fields\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"summary\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"required\" : {\n                      \"type\" : \"boolean\" ,\n                      \"required\" : false\n                    } ,\n                    \"schema\" : {\n                      \"type\" : \"object\" ,\n                      \"required\" : false ,\n                      \"properties\" : {\n                        \"type\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"items\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"custom\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"customId\" : {\n                          \"type\" : \"number\" ,\n                          \"required\" : false\n                        }\n                      }\n                    } ,\n                    \"name\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"hasDefaultValue\" : {\n                      \"type\" : \"boolean\" ,\n                      \"required\" : false\n                    } ,\n                    \"operations\" : {\n                      \"type\" : \"array\" ,\n                      \"required\" : false ,\n                      \"items\" : [\n                        {\n                          \"type\" : \"string\"\n                        }\n                      ]\n                    } ,\n                    \"allowedValues\" : {\n                      \"type\" : \"array\" ,\n                      \"required\" : false ,\n                      \"items\" : [\n                        {\n                          \"type\" : \"string\"\n                        }\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          }\n        } , {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"to\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"self\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"description\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"iconUrl\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"id\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"statusCategory\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"self\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"id\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"key\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"colorName\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                }\n              }\n            } ,\n            \"fields\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"colour\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"required\" : {\n                      \"type\" : \"boolean\" ,\n                      \"required\" : false\n                    } ,\n                    \"schema\" : {\n                      \"type\" : \"object\" ,\n                      \"required\" : false ,\n                      \"properties\" : {\n                        \"type\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"items\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"custom\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"customId\" : {\n                          \"type\" : \"number\" ,\n                          \"required\" : false\n                        }\n                      }\n                    } ,\n                    \"name\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"hasDefaultValue\" : {\n                      \"type\" : \"boolean\" ,\n                      \"required\" : false\n                    } ,\n                    \"operations\" : {\n                      \"type\" : \"array\" ,\n                      \"required\" : false ,\n                      \"items\" : [\n                        {\n                          \"type\" : \"string\"\n                        }\n                      ]\n                    } ,\n                    \"allowedValues\" : {\n                      \"type\" : \"array\" ,\n                      \"required\" : false ,\n                      \"items\" : [\n                        {\n                          \"type\" : \"string\"\n                        }\n                      ]\n                    }\n                  }\n                } ,\n                \"summary\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"required\" : {\n                      \"type\" : \"boolean\" ,\n                      \"required\" : false\n                    } ,\n                    \"schema\" : {\n                      \"type\" : \"object\" ,\n                      \"required\" : false ,\n                      \"properties\" : {\n                        \"type\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"items\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"custom\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"customId\" : {\n                          \"type\" : \"number\" ,\n                          \"required\" : false\n                        }\n                      }\n                    } ,\n                    \"name\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"hasDefaultValue\" : {\n                      \"type\" : \"boolean\" ,\n                      \"required\" : false\n                    } ,\n                    \"operations\" : {\n                      \"type\" : \"array\" ,\n                      \"required\" : false ,\n                      \"items\" : [\n                        {\n                          \"type\" : \"string\"\n                        }\n                      ]\n                    } ,\n                    \"allowedValues\" : {\n                      \"type\" : \"array\" ,\n                      \"required\" : false ,\n                      \"items\" : [\n                        {\n                          \"type\" : \"string\"\n                        }\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                                }
                                            }
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "Returned if the requested issue is not found or the user does not have permission to view it."
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "queryParameters": {
                                        "transitionId": {
                                            "name": "transitionId",
                                            "displayName": "transitionId",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "expand": {
                                            "name": "expand",
                                            "displayName": "expand",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "the parameters to expand",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Get a list of the transitions possible for this issue by the current user, along with fields that are required and their types.",
                                    "method": "get",
                                    "is": [
                                        "hasExpand"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "transitionReq",
                                                    "example": "{\n  \"update\" : {\n    \"comment\" : [\n      {\n        \"add\" : {\n          \"body\" : \"Bug has been fixed.\"\n        }\n      }\n    ]\n  } ,\n  \"fields\" : {\n    \"assignee\" : {\n      \"name\" : \"bob\"\n    } ,\n    \"resolution\" : {\n      \"name\" : \"Fixed\"\n    }\n  } ,\n  \"transition\" : {\n    \"id\" : \"5\"\n  }\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"update\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"comment\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"add\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"body\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                }\n              }\n            }\n          ]\n        }\n      }\n    } ,\n    \"fields\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"assignee\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"resolution\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      }\n    } ,\n    \"transition\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"id\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
                                                }
                                            },
                                            "description": "Returned if the object was retrieved successful."
                                        },
                                        "204": {
                                            "code": "204",
                                            "description": "Returned if the transition was successful."
                                        },
                                        "400": {
                                            "code": "400",
                                            "description": "If there is no transition specified."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "The issue does not exist or the user does not have permission to view it"
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "queryParameters": {
                                        "expand": {
                                            "name": "expand",
                                            "displayName": "expand",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "the parameters to expand",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Perform a transition on an issue. When performing the transition you can udate or set other issue fields.",
                                    "method": "post",
                                    "is": [
                                        "hasExpand"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/transitions",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "transitions"
                            ]
                        },
                        {
                            "relativeUri": "/votes",
                            "type": "base",
                            "securedBy": [
                                "basic"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "voters",
                                                    "example": "{\n  \"self\" : \"http://www.example.com/jira/rest/api/issue/MKY-1/votes\" ,\n  \"votes\" : 24 ,\n  \"hasVoted\" : true ,\n  \"voters\" : [\n    {\n      \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n      \"name\" : \"fred\" ,\n      \"avatarUrls\" : {\n        \"24x24\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=fred\" ,\n        \"16x16\" : \"http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=fred\" ,\n        \"32x32\" : \"http://www.example.com/jira/secure/useravatar?size=medium&ownerId=fred\" ,\n        \"48x48\" : \"http://www.example.com/jira/secure/useravatar?size=large&ownerId=fred\"\n      } ,\n      \"displayName\" : \"Fred F. User\" ,\n      \"active\" : false\n    }\n  ]\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"votes\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"hasVoted\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"voters\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"avatarUrls\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"24x24\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"16x16\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"32x32\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"48x48\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"displayName\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"active\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                                }
                                            }
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "Returned if the user cannot view the issue in question or voting is disabled."
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "description": "A REST sub-resource representing the voters on the issue.",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "204": {
                                            "code": "204",
                                            "description": "Nothing is returned on success."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "Returned if the user cannot vote for any reason. (The user is the reporter, the user does not have permission to vote, voting is disabled in the instance, the issue does not exist, etc.)"
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "description": "Cast your vote in favour of an issue.",
                                    "method": "post",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "204": {
                                            "code": "204",
                                            "description": "Nothing is returned on success."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "Returned if the user cannot remove a vote for any reason. (The user did not vote on the issue, the user is the reporter, voting is disabled, the issue does not exist, etc.)"
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "description": "Remove your vote from an issue. (i.e. \"unvote\")",
                                    "method": "delete",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/votes",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "votes"
                            ]
                        },
                        {
                            "relativeUri": "/watchers",
                            "type": "base",
                            "securedBy": [
                                "basic"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "watchers",
                                                    "example": "{\n  \"self\" : \"http://www.example.com/jira/rest/api/2/issue/EX-1/watchers\" ,\n  \"isWatching\" : false ,\n  \"watchCount\" : 1 ,\n  \"watchers\" : [\n    {\n      \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n      \"name\" : \"fred\" ,\n      \"avatarUrls\" : {\n        \"24x24\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=fred\" ,\n        \"16x16\" : \"http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=fred\" ,\n        \"32x32\" : \"http://www.example.com/jira/secure/useravatar?size=medium&ownerId=fred\" ,\n        \"48x48\" : \"http://www.example.com/jira/secure/useravatar?size=large&ownerId=fred\"\n      } ,\n      \"displayName\" : \"Fred F. User\" ,\n      \"active\" : false\n    }\n  ]\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"isWatching\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"watchCount\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"watchers\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"avatarUrls\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"24x24\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"16x16\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"32x32\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"48x48\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"displayName\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"active\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                                }
                                            }
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "Returned if the requested issue is not found, or the user does not have permission to view it."
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "description": "Returns the list of watchers for the issue with the given key.",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "204": {
                                            "code": "204",
                                            "description": "Returned if the watcher was added  successfully."
                                        },
                                        "400": {
                                            "code": "400",
                                            "description": "Returned if there is a problem with the received user representation."
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "Returned if the calling user does not have permission to add the watcher to the issue's list of watchers."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "Returned if either the issue or the user does not exist."
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "description": "Adds a user to an issue's watcher list.",
                                    "method": "post",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "204": {
                                            "code": "204",
                                            "description": "Returned if the watcher was removed successfully."
                                        },
                                        "400": {
                                            "code": "400",
                                            "description": "Returned if a user name query parameter is not supplied."
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "Returned if the calling user does not have permission to remove the watcher from the issue's list of watchers."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "Returned if either the issue does not exist."
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "queryParameters": {
                                        "username": {
                                            "name": "username",
                                            "displayName": "username",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "The name of user",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Removes a user from an issue's watcher list.",
                                    "method": "delete",
                                    "is": [
                                        "hasUsername"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/watchers",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "watchers"
                            ]
                        },
                        {
                            "relativeUri": "/worklog",
                            "type": "base",
                            "securedBy": [
                                "basic"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "worklogs",
                                                    "example": "{\n  \"startAt\" : 0 ,\n  \"maxResults\" : 1 ,\n  \"total\" : 1 ,\n  \"worklogs\" : [\n    {\n      \"self\" : \"http://www.example.com/jira/rest/api/2/issue/10010/worklog/10000\" ,\n      \"author\" : {\n        \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n        \"name\" : \"fred\" ,\n        \"displayName\" : \"Fred F. User\" ,\n        \"active\" : false\n      } ,\n      \"updateAuthor\" : {\n        \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n        \"name\" : \"fred\" ,\n        \"displayName\" : \"Fred F. User\" ,\n        \"active\" : false\n      } ,\n      \"comment\" : \"I did some work here.\" ,\n      \"visibility\" : {\n        \"type\" : \"group\" ,\n        \"value\" : \"jira-developers\"\n      } ,\n      \"started\" : \"2014-05-27T08:32:06.865+0000\" ,\n      \"timeSpent\" : \"3h 20m\" ,\n      \"timeSpentSeconds\" : 12000 ,\n      \"id\" : \"100028\"\n    }\n  ]\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"startAt\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"maxResults\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"total\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"worklogs\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"author\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"self\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"displayName\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"active\" : {\n                  \"type\" : \"boolean\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"updateAuthor\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"self\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"displayName\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"active\" : {\n                  \"type\" : \"boolean\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"comment\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"visibility\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"type\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"value\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"started\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"timeSpent\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"timeSpentSeconds\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                                }
                                            }
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "Returned if the issue with the given id/key does not exist or if the currently authenticated user does not have permission to view it."
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "description": "Returns all work logs for an issue.",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "201": {
                                            "code": "201",
                                            "description": "Returned if add was successful"
                                        },
                                        "400": {
                                            "code": "400",
                                            "description": "Returned if the input is invalid (e.g. missing required fields, invalid values, and so forth)."
                                        },
                                        "403": {
                                            "code": "403",
                                            "description": "Returned if the calling user does not have permission to add the worklog."
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "worklog",
                                            "example": "{\n  \"self\" : \"http://www.example.com/jira/rest/api/2/issue/10010/worklog/10000\" ,\n  \"author\" : {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n    \"name\" : \"fred\" ,\n    \"displayName\" : \"Fred F. User\" ,\n    \"active\" : false\n  } ,\n  \"updateAuthor\" : {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n    \"name\" : \"fred\" ,\n    \"displayName\" : \"Fred F. User\" ,\n    \"active\" : false\n  } ,\n  \"comment\" : \"I did some work here.\" ,\n  \"visibility\" : {\n    \"type\" : \"group\" ,\n    \"value\" : \"jira-developers\"\n  } ,\n  \"started\" : \"2014-05-27T08:32:06.865+0000\" ,\n  \"timeSpent\" : \"3h 20m\" ,\n  \"timeSpentSeconds\" : 12000 ,\n  \"id\" : \"100028\"\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"author\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"displayName\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"active\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"updateAuthor\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"displayName\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"active\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"comment\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"visibility\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"type\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"value\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"started\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"timeSpent\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"timeSpentSeconds\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "queryParameters": {
                                        "adjustEstimate": {
                                            "name": "adjustEstimate",
                                            "displayName": "adjustEstimate",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "(optional) allows you to provide specific instructions to update the remaining time estimate of the issue. Valid values are",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "newEstimate": {
                                            "name": "newEstimate",
                                            "displayName": "newEstimate",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "(required when \"new\" is selected for adjustEstimate) the new value for the remaining estimate field. e.g. \"2d\"",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "reduceBy": {
                                            "name": "reduceBy",
                                            "displayName": "reduceBy",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "(required when \"manual\" is selected for adjustEstimate) the amount to reduce the remaining estimate by e.g. \"2d\"",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Adds a new worklog entry to an issue.",
                                    "method": "post",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "resources": [
                                {
                                    "relativeUri": "/{id}",
                                    "type": "base",
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "uriParameters": {
                                        "id": {
                                            "name": "id",
                                            "displayName": "id",
                                            "type": "string",
                                            "required": true,
                                            "repeat": false,
                                            "__METADATA__": {
                                                "calculated": true,
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "methods": [
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "worklog",
                                                            "example": "{\n  \"self\" : \"http://www.example.com/jira/rest/api/2/issue/10010/worklog/10000\" ,\n  \"author\" : {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n    \"name\" : \"fred\" ,\n    \"displayName\" : \"Fred F. User\" ,\n    \"active\" : false\n  } ,\n  \"updateAuthor\" : {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n    \"name\" : \"fred\" ,\n    \"displayName\" : \"Fred F. User\" ,\n    \"active\" : false\n  } ,\n  \"comment\" : \"I did some work here.\" ,\n  \"visibility\" : {\n    \"type\" : \"group\" ,\n    \"value\" : \"jira-developers\"\n  } ,\n  \"started\" : \"2014-05-27T08:32:06.865+0000\" ,\n  \"timeSpent\" : \"3h 20m\" ,\n  \"timeSpentSeconds\" : 12000 ,\n  \"id\" : \"100028\"\n}",
                                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"author\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"displayName\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"active\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"updateAuthor\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"displayName\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"active\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"comment\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"visibility\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"type\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"value\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"started\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"timeSpent\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"timeSpentSeconds\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                                        }
                                                    }
                                                },
                                                "404": {
                                                    "code": "404",
                                                    "description": "Returned if the work log with the given id does not exist or if the currently authenticated user does not have permission to view it."
                                                }
                                            },
                                            "protocols": [
                                                "{PROTOCOL}"
                                            ],
                                            "securedBy": [
                                                "basic"
                                            ],
                                            "description": "Returns a specific worklog.",
                                            "method": "get",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "worklog",
                                                            "example": "{\n  \"self\" : \"http://www.example.com/jira/rest/api/2/issue/10010/worklog/10000\" ,\n  \"author\" : {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n    \"name\" : \"fred\" ,\n    \"displayName\" : \"Fred F. User\" ,\n    \"active\" : false\n  } ,\n  \"updateAuthor\" : {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n    \"name\" : \"fred\" ,\n    \"displayName\" : \"Fred F. User\" ,\n    \"active\" : false\n  } ,\n  \"comment\" : \"I did some work here.\" ,\n  \"visibility\" : {\n    \"type\" : \"group\" ,\n    \"value\" : \"jira-developers\"\n  } ,\n  \"started\" : \"2014-05-27T08:32:06.865+0000\" ,\n  \"timeSpent\" : \"3h 20m\" ,\n  \"timeSpentSeconds\" : 12000 ,\n  \"id\" : \"100028\"\n}",
                                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"author\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"displayName\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"active\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"updateAuthor\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"displayName\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"active\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"comment\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"visibility\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"type\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"value\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"started\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"timeSpent\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"timeSpentSeconds\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                                        }
                                                    },
                                                    "description": "Returned if the object was retrieved successful."
                                                },
                                                "400": {
                                                    "code": "400",
                                                    "description": "Returned if the input is invalid (e.g. missing required fields, invalid values, and so forth)."
                                                },
                                                "403": {
                                                    "code": "403",
                                                    "description": "Returned if the calling user does not have permission to update the worklog"
                                                }
                                            },
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "worklog",
                                                    "example": "{\n  \"self\" : \"http://www.example.com/jira/rest/api/2/issue/10010/worklog/10000\" ,\n  \"author\" : {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n    \"name\" : \"fred\" ,\n    \"displayName\" : \"Fred F. User\" ,\n    \"active\" : false\n  } ,\n  \"updateAuthor\" : {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n    \"name\" : \"fred\" ,\n    \"displayName\" : \"Fred F. User\" ,\n    \"active\" : false\n  } ,\n  \"comment\" : \"I did some work here.\" ,\n  \"visibility\" : {\n    \"type\" : \"group\" ,\n    \"value\" : \"jira-developers\"\n  } ,\n  \"started\" : \"2014-05-27T08:32:06.865+0000\" ,\n  \"timeSpent\" : \"3h 20m\" ,\n  \"timeSpentSeconds\" : 12000 ,\n  \"id\" : \"100028\"\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"author\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"displayName\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"active\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"updateAuthor\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"displayName\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"active\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"comment\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"visibility\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"type\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"value\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"started\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"timeSpent\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"timeSpentSeconds\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                                }
                                            },
                                            "protocols": [
                                                "{PROTOCOL}"
                                            ],
                                            "securedBy": [
                                                "basic"
                                            ],
                                            "queryParameters": {
                                                "adjustEstimate": {
                                                    "name": "adjustEstimate",
                                                    "displayName": "adjustEstimate",
                                                    "type": "string",
                                                    "required": false,
                                                    "repeat": false,
                                                    "description": "(optional) allows you to provide specific instructions to update the remaining time estimate of the issue. Valid values are",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "newEstimate": {
                                                    "name": "newEstimate",
                                                    "displayName": "newEstimate",
                                                    "type": "string",
                                                    "required": false,
                                                    "repeat": false,
                                                    "description": "(required when \"new\" is selected for adjustEstimate) the new value for the remaining estimate field.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "description": "Updates an existing worklog entry using its JSON representation.",
                                            "method": "put",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "responses": {
                                                "204": {
                                                    "code": "204",
                                                    "description": "Returned if delete was successful"
                                                },
                                                "400": {
                                                    "code": "400",
                                                    "description": "Returned if the input is invalid (e.g. missing required fields, invalid values, and so forth)."
                                                },
                                                "403": {
                                                    "code": "403",
                                                    "description": "Returned if the calling user does not have permission to delete the worklog"
                                                }
                                            },
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json"
                                                }
                                            },
                                            "protocols": [
                                                "{PROTOCOL}"
                                            ],
                                            "securedBy": [
                                                "basic"
                                            ],
                                            "queryParameters": {
                                                "adjustEstimate": {
                                                    "name": "adjustEstimate",
                                                    "displayName": "adjustEstimate",
                                                    "type": "string",
                                                    "required": false,
                                                    "repeat": false,
                                                    "description": "(optional) allows you to provide specific instructions to update the remaining time estimate of the issue. Valid values are",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "newEstimate": {
                                                    "name": "newEstimate",
                                                    "displayName": "newEstimate",
                                                    "type": "string",
                                                    "required": false,
                                                    "repeat": false,
                                                    "description": "(required when \"new\" is selected for adjustEstimate) the new value for the remaining estimate field. e.g. \"2d\"",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "increaseBy": {
                                                    "name": "increaseBy",
                                                    "displayName": "increaseBy",
                                                    "type": "string",
                                                    "required": false,
                                                    "repeat": false,
                                                    "description": "(required when \"manual\" is selected for adjustEstimate) the amount to increase the remaining estimate by e.g. \"2d\"",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "description": "Deletes an existing worklog entry .",
                                            "method": "delete",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/{id}",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "securedBy": {
                                                "calculated": true
                                            },
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "{id}"
                                    ]
                                }
                            ],
                            "displayName": "/worklog",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "worklog"
                            ]
                        },
                        {
                            "relativeUri": "/attachments",
                            "type": "base",
                            "securedBy": [
                                "basic"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "attachments",
                                                    "example": "[\n  {\n    \"self\" : \"http://www.example.com/jira/rest/api/2.0/attachments/10000\" ,\n    \"filename\" : \"picture.jpg\" ,\n    \"author\" : {\n      \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n      \"name\" : \"fred\" ,\n      \"avatarUrls\" : {\n        \"24x24\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=fred\" ,\n        \"16x16\" : \"http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=fred\" ,\n        \"32x32\" : \"http://www.example.com/jira/secure/useravatar?size=medium&ownerId=fred\" ,\n        \"48x48\" : \"http://www.example.com/jira/secure/useravatar?size=large&ownerId=fred\"\n      } ,\n      \"displayName\" : \"Fred F. User\" ,\n      \"active\" : false\n    } ,\n    \"created\" : \"2014-05-27T08:32:06.728+0000\" ,\n    \"size\" : 23123 ,\n    \"mimeType\" : \"image/jpeg\" ,\n    \"content\" : \"http://www.example.com/jira/attachments/10000\" ,\n    \"thumbnail\" : \"http://www.example.com/jira/secure/thumbnail/10000\"\n  } , {\n    \"self\" : \"http://www.example.com/jira/rest/api/2.0/attachments/10001\" ,\n    \"filename\" : \"dbeuglog.txt\" ,\n    \"author\" : {\n      \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n      \"name\" : \"fred\" ,\n      \"avatarUrls\" : {\n        \"24x24\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=fred\" ,\n        \"16x16\" : \"http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=fred\" ,\n        \"32x32\" : \"http://www.example.com/jira/secure/useravatar?size=medium&ownerId=fred\" ,\n        \"48x48\" : \"http://www.example.com/jira/secure/useravatar?size=large&ownerId=fred\"\n      } ,\n      \"displayName\" : \"Fred F. User\" ,\n      \"active\" : false\n    } ,\n    \"created\" : \"2014-05-27T08:32:06.728+0000\" ,\n    \"size\" : 2460 ,\n    \"mimeType\" : \"text/plain\" ,\n    \"content\" : \"http://www.example.com/jira/attachments/10001\" ,\n    \"thumbnail\" : \"http://www.example.com/jira/secure/thumbnail/10002\"\n  }\n]",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"array\" ,\n  \"items\" : [\n    {\n      \"type\" : \"object\" ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"filename\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"author\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"avatarUrls\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"24x24\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"16x16\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"32x32\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"48x48\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"displayName\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"active\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"created\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"size\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"mimeType\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"content\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"thumbnail\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  ]\n}"
                                                }
                                            },
                                            "description": "Returned if the object was retrieved successful."
                                        },
                                        "403": {
                                            "code": "403",
                                            "description": "Returned if attachments is disabled or if you don't have permission to add attachments to this issue."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "Returned if the requested issue is not found, the user does not have permission to view it, or if the attachments exceeds the maximum configured attachment size."
                                        }
                                    },
                                    "body": {
                                        "multipart/form-data": {
                                            "name": "multipart/form-data",
                                            "formParameters": {
                                                "file": {
                                                    "name": "file",
                                                    "displayName": "file",
                                                    "type": "string",
                                                    "required": false,
                                                    "example": "file=@myfile.txt",
                                                    "repeat": false,
                                                    "description": "Name of file. A simple example to upload a file called \"myfile.txt\" to issue",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "application/json": {
                                            "name": "application/json"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "description": "Add one or more attachments to an issue.",
                                    "method": "post",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/attachments",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "attachments"
                            ]
                        },
                        {
                            "relativeUri": "/properties",
                            "type": "base",
                            "securedBy": [
                                "basic"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "commentPropertiesKeys",
                                                    "example": "{\n  \"keys\" : [\n    {\n      \"self\" : \"http://www.example.com/jira/rest/api/2/issue/EX-2/properties/issue.support\" ,\n      \"key\" : \"issue.support\"\n    }\n  ]\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"keys\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"key\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                                }
                                            }
                                        },
                                        "400": {
                                            "code": "400",
                                            "description": "Returned if the issue key or id is invalid."
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "Returned if the calling user is not authenticated."
                                        },
                                        "403": {
                                            "code": "403",
                                            "description": "Returned if the calling user does not have permission to view the issue."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "Returned if the issue with given key or id does not exist or if the property with given key is not found."
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "description": "Returns the keys of all properties for the issue identified by the key or by the id.",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "resources": [
                                {
                                    "relativeUri": "/{propertyKey}",
                                    "type": "base",
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "uriParameters": {
                                        "propertyKey": {
                                            "name": "propertyKey",
                                            "displayName": "propertyKey",
                                            "type": "string",
                                            "required": true,
                                            "repeat": false,
                                            "description": "the key of the property",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "methods": [
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "commentProperty",
                                                            "example": "{\n  \"key\" : \"issue.support\" ,\n  \"value\" : {\n  }\n}",
                                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"key\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"value\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false\n    }\n  }\n}"
                                                        }
                                                    }
                                                },
                                                "400": {
                                                    "code": "400",
                                                    "description": "Returned if the issue key or id is invalid."
                                                },
                                                "401": {
                                                    "code": "401",
                                                    "description": "Returned if the calling user is not authenticated."
                                                },
                                                "403": {
                                                    "code": "403",
                                                    "description": "Returned if the calling user does not have permission to view the issue."
                                                },
                                                "404": {
                                                    "code": "404",
                                                    "description": "Returned if the issue with given key or id does not exist or if the property with given key is not found."
                                                }
                                            },
                                            "protocols": [
                                                "{PROTOCOL}"
                                            ],
                                            "securedBy": [
                                                "basic"
                                            ],
                                            "description": "Returns the value of the property with a given key from the issue identified by the key or by the id. The user who retrieves the property is required to have permissions to read the issue.",
                                            "method": "get",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "description": "Returned if the issue property is successfully updated."
                                                },
                                                "201": {
                                                    "code": "201",
                                                    "description": "Returned if the issue property is successfully created."
                                                },
                                                "400": {
                                                    "code": "400",
                                                    "description": "Returned if the issue key or id is invalid."
                                                },
                                                "401": {
                                                    "code": "401",
                                                    "description": "Returned if the calling user is not authenticated."
                                                },
                                                "403": {
                                                    "code": "403",
                                                    "description": "Returned if the calling user does not have permission to edit the issue."
                                                },
                                                "404": {
                                                    "code": "404",
                                                    "description": "Returned if the issue with given key or id does not exist."
                                                }
                                            },
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json"
                                                }
                                            },
                                            "protocols": [
                                                "{PROTOCOL}"
                                            ],
                                            "securedBy": [
                                                "basic"
                                            ],
                                            "description": "Sets the value of the specified issue's property.",
                                            "method": "put",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "responses": {
                                                "204": {
                                                    "code": "204",
                                                    "description": "Returned if the issue property was removed successfully."
                                                },
                                                "400": {
                                                    "code": "400",
                                                    "description": "Returned if the issue key or id is invalid."
                                                },
                                                "401": {
                                                    "code": "401",
                                                    "description": "Returned if the calling user is not authenticated."
                                                },
                                                "403": {
                                                    "code": "403",
                                                    "description": "Returned if the calling user does not have permission to edit the issue."
                                                },
                                                "404": {
                                                    "code": "404",
                                                    "description": "Returned if the issue with given key or id does not exist or if the property with given key is not found."
                                                }
                                            },
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json"
                                                }
                                            },
                                            "protocols": [
                                                "{PROTOCOL}"
                                            ],
                                            "securedBy": [
                                                "basic"
                                            ],
                                            "description": "Removes the property from the issue identified by the key or by the id. Ths user removing the property is required to have permissions to edit the issue.",
                                            "method": "delete",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/{propertyKey}",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "securedBy": {
                                                "calculated": true
                                            },
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "{propertyKey}"
                                    ]
                                }
                            ],
                            "displayName": "/properties",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "properties"
                            ]
                        }
                    ],
                    "displayName": "/{issueIdOrKey}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{issueIdOrKey}"
                    ]
                },
                {
                    "relativeUri": "/createmeta",
                    "type": "base",
                    "securedBy": [
                        "basic"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "issueProjects",
                                            "example": "{\n  \"expand\" : \"projects\" ,\n  \"projects\" : [\n    {\n      \"self\" : \"http://www.example.com/jira/rest/api/2/project/EX\" ,\n      \"id\" : \"10000\" ,\n      \"key\" : \"EX\" ,\n      \"name\" : \"Example Project\" ,\n      \"avatarUrls\" : {\n        \"24x24\" : \"http://www.example.com/jira/secure/projectavatar?size=small&pid=10000&avatarId=10011\" ,\n        \"16x16\" : \"http://www.example.com/jira/secure/projectavatar?size=xsmall&pid=10000&avatarId=10011\" ,\n        \"32x32\" : \"http://www.example.com/jira/secure/projectavatar?size=medium&pid=10000&avatarId=10011\" ,\n        \"48x48\" : \"http://www.example.com/jira/secure/projectavatar?pid=10000&avatarId=10011\"\n      } ,\n      \"issuetypes\" : [\n        {\n          \"self\" : \"http://www.example.com/jira/rest/api/2/issueType/1\" ,\n          \"id\" : \"1\" ,\n          \"description\" : \"An error in the code\" ,\n          \"iconUrl\" : \"http://www.example.com/jira/images/icons/issuetypes/bug.png\" ,\n          \"name\" : \"Bug\" ,\n          \"subtask\" : false ,\n          \"fields\" : {\n            \"issuetype\" : {\n              \"required\" : true ,\n              \"name\" : \"Issue Type\" ,\n              \"hasDefaultValue\" : false ,\n              \"operations\" : [\n                \"set\"\n              ]\n            }\n          }\n        }\n      ]\n    }\n  ]\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"expand\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"projects\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"key\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"avatarUrls\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"24x24\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"16x16\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"32x32\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"48x48\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"issuetypes\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"object\" ,\n                  \"properties\" : {\n                    \"self\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"id\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"description\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"iconUrl\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"name\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"subtask\" : {\n                      \"type\" : \"boolean\" ,\n                      \"required\" : false\n                    } ,\n                    \"fields\" : {\n                      \"type\" : \"object\" ,\n                      \"required\" : false ,\n                      \"properties\" : {\n                        \"issuetype\" : {\n                          \"type\" : \"object\" ,\n                          \"required\" : false ,\n                          \"properties\" : {\n                            \"required\" : {\n                              \"type\" : \"boolean\" ,\n                              \"required\" : false\n                            } ,\n                            \"name\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            } ,\n                            \"hasDefaultValue\" : {\n                              \"type\" : \"boolean\" ,\n                              \"required\" : false\n                            } ,\n                            \"operations\" : {\n                              \"type\" : \"array\" ,\n                              \"required\" : false ,\n                              \"items\" : [\n                                {\n                                  \"type\" : \"string\"\n                                }\n                              ]\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              ]\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                        }
                                    }
                                },
                                "403": {
                                    "code": "403",
                                    "description": "Returned if the user does not have permission to view any of the requested projects."
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "queryParameters": {
                                "projectIds": {
                                    "name": "projectIds",
                                    "displayName": "projectIds",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "combined with the projectKeys param, lists the projects with which to filter the results. If absent, all projects are returned. This parameter can be specified multiple times, and/or be a comma-separated list. Specifiying a project that does not exist (or that you cannot create issues in) is not an error, but it will not be in the results.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "projectKeys": {
                                    "name": "projectKeys",
                                    "displayName": "projectKeys",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "combined with the projectIds param, lists the projects with which to filter the results. If null, all projects are returned. This parameter can be specified multiple times, and/or be a comma-separated list. Specifiying a project that does not exist (or that you cannot create issues in) is not an error, but it will not be in the results.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "issuetypeIds": {
                                    "name": "issuetypeIds",
                                    "displayName": "issuetypeIds",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "combinded with issuetypeNames, lists the issue types with which to filter the results. If null, all issue types are returned. This parameter can be specified multiple times, and/or be a comma-separated list. Specifiying an issue type that does not exist is not an error.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "issuetypeNames": {
                                    "name": "issuetypeNames",
                                    "displayName": "issuetypeNames",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "combinded with issuetypeIds, lists the issue types with which to filter the results. If null, all issue types are returned. This parameter can be specified multiple times, but is NOT interpreted as a comma-separated list. Specifiying an issue type that does not exist is not an error.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Returns the meta data for creating issues. This includes the available projects, issue types and fields, including field types and whether or not those fields are required. Projects will not be returned if the user does not have permission to create issues in that project.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/createmeta",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "createmeta"
                    ]
                }
            ],
            "displayName": "/issue",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "issue"
            ]
        },
        {
            "relativeUri": "/issueLink",
            "type": "base",
            "securedBy": [
                "basic"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "description": "if the issue link was created successfully."
                        },
                        "400": {
                            "code": "400",
                            "description": "if it can't create the supplied comment. The response will contain an error message indicating why it failed to create the comment. No issue link will be created if it failed to create the comment."
                        },
                        "401": {
                            "code": "401",
                            "description": "if the user does not have the link issue permission for the issue, which will be linked to another issue."
                        },
                        "404": {
                            "code": "404",
                            "description": "If issue linking is disabled or it failed to find one of the issues (issue might exist, but it is not visible for this user) or it failed to find the specified issue link type."
                        },
                        "500": {
                            "code": "500",
                            "description": "if an error occurred when creating the issue link or the comment."
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json",
                            "schema": "issueLinkReq",
                            "example": "{\n  \"type\" : {\n    \"name\" : \"Duplicate\"\n  } ,\n  \"inwardIssue\" : {\n    \"key\" : \"HSP-1\"\n  } ,\n  \"outwardIssue\" : {\n    \"key\" : \"MKY-1\"\n  } ,\n  \"comment\" : {\n    \"body\" : \"Linked related issue!\" ,\n    \"visibility\" : {\n      \"type\" : \"group\" ,\n      \"value\" : \"jira-users\"\n    }\n  }\n}",
                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"type\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"inwardIssue\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"key\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"outwardIssue\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"key\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"comment\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"body\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"visibility\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"type\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"value\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      }\n    }\n  }\n}"
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "description": "Creates an issue link between two issues. The user requires the link issue permission for the issue which will be linked to another issue. The specified link type in the request is used to create the link and will create a link from the first issue to the second issue using the outward description. It also create a link from the second issue to the first issue using the inward description of the issue link type. It will add the supplied comment to the first issue. The comment can have a restriction who can view it. If group is specified, only users of this group can view this comment, if roleLevel is specified only users who have the specified role can view this comment. The user who creates the issue link needs to belong to the specified group or have the specified role.",
                    "method": "post",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/{linkId}",
                    "type": "base",
                    "securedBy": [
                        "basic"
                    ],
                    "uriParameters": {
                        "linkId": {
                            "name": "linkId",
                            "displayName": "linkId",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "link",
                                            "example": "{\n  \"id\" : \"10001\" ,\n  \"type\" : {\n    \"id\" : \"1000\" ,\n    \"name\" : \"Duplicate\" ,\n    \"inward\" : \"Duplicated by\" ,\n    \"outward\" : \"Duplicates\" ,\n    \"self\" : \"http://www.example.com/jira/rest/api/2//issueLinkType/1000\"\n  } ,\n  \"inwardIssue\" : {\n    \"id\" : \"10004\" ,\n    \"key\" : \"PRJ-3\" ,\n    \"self\" : \"http://www.example.com/jira/rest/api/2/issue/PRJ-3\" ,\n    \"fields\" : {\n      \"status\" : {\n        \"iconUrl\" : \"http://www.example.com/jira//images/icons/statuses/open.png\" ,\n        \"name\" : \"Open\"\n      }\n    }\n  } ,\n  \"outwardIssue\" : {\n    \"id\" : \"10004L\" ,\n    \"key\" : \"PRJ-2\" ,\n    \"self\" : \"http://www.example.com/jira/rest/api/2/issue/PRJ-2\" ,\n    \"fields\" : {\n      \"status\" : {\n        \"iconUrl\" : \"http://www.example.com/jira//images/icons/statuses/open.png\" ,\n        \"name\" : \"Open\"\n      }\n    }\n  }\n}",
                                            "schemaContent": "link"
                                        }
                                    }
                                },
                                "400": {
                                    "code": "400",
                                    "description": "If the specified issue link id is invalid."
                                },
                                "401": {
                                    "code": "401",
                                    "description": "if the user does not have the link issue permission for the issue, which will be linked to another issue."
                                },
                                "404": {
                                    "code": "404",
                                    "description": "If issue linking is disabled or it failed to find an issue link with the specified id. Either because none exists with this id, or the user doesn't have the permission to see one of the linked issues."
                                },
                                "500": {
                                    "code": "500",
                                    "description": "if an error occurred when creating the issue link or the comment."
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "description": "Returns an issue link with the specified id.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "description": "Returned if successful."
                                },
                                "204": {
                                    "code": "204",
                                    "description": "If it successfully deleted the issue link."
                                },
                                "400": {
                                    "code": "400",
                                    "description": "If the specified issue link id is invalid."
                                },
                                "401": {
                                    "code": "401",
                                    "description": "if the user does not have the link issue permission for the source or destination issue of the issue link."
                                },
                                "404": {
                                    "code": "404",
                                    "description": "If issue linking is disabled or it failed to find an issue link with the specified id. Either because none exists with this id, or the user doesn't have the permission to see one of the linked issues."
                                },
                                "500": {
                                    "code": "500",
                                    "description": "if an error occurred when deleting the issue link or the comment."
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "description": "Deletes an issue link with the specified id. To be able to delete an issue link you must be able to view both issues and must have the link issue permission for at least one of the issues.",
                            "method": "delete",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/{linkId}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{linkId}"
                    ]
                }
            ],
            "displayName": "/issueLink",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "issueLink"
            ]
        },
        {
            "relativeUri": "/issueLinkType",
            "type": "base",
            "securedBy": [
                "basic"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "issueLinkTypes",
                                    "example": "{\n  \"issueLinkTypes\" : [\n    {\n      \"id\" : \"1000\" ,\n      \"name\" : \"Duplicate\" ,\n      \"inward\" : \"Duplicated by\" ,\n      \"outward\" : \"Duplicates\" ,\n      \"self\" : \"http://www.example.com/jira/rest/api/2//issueLinkType/1000\"\n    } , {\n      \"id\" : \"1010\" ,\n      \"name\" : \"Blocks\" ,\n      \"inward\" : \"Blocked by\" ,\n      \"outward\" : \"Blocks\" ,\n      \"self\" : \"http://www.example.com/jira/rest/api/2//issueLinkType/1010\"\n    }\n  ]\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"issueLinkTypes\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"inward\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"outward\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                }
                            }
                        },
                        "404": {
                            "code": "404",
                            "description": "Returned if issue linking is disabled."
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "description": "Returns a list of available issue link types, if issue linking is enabled. Each issue link type has an id, a name and a label for the outward and inward link relationship.",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                },
                {
                    "responses": {
                        "201": {
                            "code": "201",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "issueLinkType",
                                    "example": "{\n  \"id\" : \"1000\" ,\n  \"name\" : \"Duplicate\" ,\n  \"inward\" : \"Duplicated by\" ,\n  \"outward\" : \"Duplicates\" ,\n  \"self\" : \"http://www.example.com/jira/rest/api/2//issueLinkType/1000\"\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"inward\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"outward\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                }
                            },
                            "description": "Returned if the object was created successful."
                        },
                        "404": {
                            "code": "404",
                            "description": "Issue linking is disabled or you do not have permission to create issue link types."
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json",
                            "schema": "issueLinkTypesReq",
                            "example": "{\n  \"name\" : \"Duplicate\" ,\n  \"inward\" : \"Duplicated by\" ,\n  \"outward\" : \"Duplicates\"\n}",
                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"inward\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"outward\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "description": "Create a new issue link type.",
                    "method": "post",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/{issueLinkTypeId}",
                    "type": "base",
                    "securedBy": [
                        "basic"
                    ],
                    "uriParameters": {
                        "issueLinkTypeId": {
                            "name": "issueLinkTypeId",
                            "displayName": "issueLinkTypeId",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "issueLinkType",
                                            "example": "{\n  \"id\" : \"1000\" ,\n  \"name\" : \"Duplicate\" ,\n  \"inward\" : \"Duplicated by\" ,\n  \"outward\" : \"Duplicates\" ,\n  \"self\" : \"http://www.example.com/jira/rest/api/2//issueLinkType/1000\"\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"inward\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"outward\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                        }
                                    }
                                },
                                "404": {
                                    "code": "404",
                                    "description": "Returned if issue linking is disabled or no issue link type with the given id exists."
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "description": "Returns for a given issue link type id all information about this issue link type.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "issueLinkType",
                                            "example": "{\n  \"id\" : \"1000\" ,\n  \"name\" : \"Duplicate\" ,\n  \"inward\" : \"Duplicated by\" ,\n  \"outward\" : \"Duplicates\" ,\n  \"self\" : \"http://www.example.com/jira/rest/api/2//issueLinkType/1000\"\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"inward\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"outward\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                        }
                                    },
                                    "description": "Returned if the object was retrieved successful."
                                },
                                "400": {
                                    "code": "400",
                                    "description": "Returned if the supplied id is not a number."
                                },
                                "404": {
                                    "code": "404",
                                    "description": "Returned if issue linking is disabled or no issue link type with the given id exists."
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "issueLinkTypesReq",
                                    "example": "{\n  \"name\" : \"Duplicate\" ,\n  \"inward\" : \"Duplicated by\" ,\n  \"outward\" : \"Duplicates\"\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"inward\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"outward\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "description": "Update the specified issue link type.",
                            "method": "put",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "204": {
                                    "code": "204",
                                    "description": "Returned if successful."
                                },
                                "404": {
                                    "code": "404",
                                    "description": "Returned if issue linking is disabled or no issue link type with the given id exists."
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "description": "Delete the specified issue link type.",
                            "method": "delete",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/{issueLinkTypeId}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{issueLinkTypeId}"
                    ]
                }
            ],
            "displayName": "/issueLinkType",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "issueLinkType"
            ]
        },
        {
            "relativeUri": "/issuetype",
            "type": "base",
            "securedBy": [
                "basic"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "issueTypes",
                                    "example": "[\n  {\n    \"self\" : \"http://localhost:8090/jira/rest/api/2.0/issueType/3\" ,\n    \"id\" : \"3\" ,\n    \"description\" : \"A task that needs to be done.\" ,\n    \"iconUrl\" : \"http://localhost:8090/jira/images/icons/issuetypes/task.png\" ,\n    \"name\" : \"Task\" ,\n    \"subtask\" : false\n  } , {\n    \"self\" : \"http://localhost:8090/jira/rest/api/2.0/issueType/1\" ,\n    \"id\" : \"1\" ,\n    \"description\" : \"A problem with the software.\" ,\n    \"iconUrl\" : \"http://localhost:8090/jira/images/icons/issuetypes/bug.png\" ,\n    \"name\" : \"Bug\" ,\n    \"subtask\" : false\n  }\n]",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"array\" ,\n  \"items\" : [\n    {\n      \"type\" : \"object\" ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"id\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"description\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"iconUrl\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"subtask\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        }\n      }\n    }\n  ]\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "description": "Returns a list of all issue types visible to the user",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/{id}",
                    "type": "base",
                    "securedBy": [
                        "basic"
                    ],
                    "uriParameters": {
                        "id": {
                            "name": "id",
                            "displayName": "id",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "issueType",
                                            "example": "{\n  \"self\" : \"http://localhost:8090/jira/rest/api/2.0/issueType/3\" ,\n  \"id\" : \"3\" ,\n  \"description\" : \"A task that needs to be done.\" ,\n  \"iconUrl\" : \"http://localhost:8090/jira/images/icons/issuetypes/task.png\" ,\n  \"name\" : \"Task\" ,\n  \"subtask\" : false\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"iconUrl\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"subtask\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
                                        }
                                    }
                                },
                                "404": {
                                    "code": "404",
                                    "description": "Returned if the issue type does not exist, or is not visible to the calling user."
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "description": "Returns a full representation of the issue type that has the given id.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/{id}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{id}"
                    ]
                }
            ],
            "displayName": "/issuetype",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "issuetype"
            ]
        },
        {
            "relativeUri": "/jql/autocompletedata",
            "type": "base",
            "securedBy": [
                "basic"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "autoCompleteData",
                                    "example": "{\n  \"visibleFieldNames\" : [\n    {\n      \"value\" : \"affectedVersion\" ,\n      \"displayName\" : \"affectedVersion\" ,\n      \"auto\" : true ,\n      \"orderable\" : true ,\n      \"searchable\" : true ,\n      \"operators\" : [\n        \"=\" ,\n        \"!=\" ,\n        \"in\" ,\n        \"not in\" ,\n        \"is\" ,\n        \"is not\" ,\n        \"<\" ,\n        \"<=\" ,\n        \">\" ,\n        \">=\"\n      ] ,\n      \"types\" : [\n        \"com.atlassian.jira.project.version.Version\"\n      ]\n    } , {\n      \"value\" : \"assignee\" ,\n      \"displayName\" : \"assignee\" ,\n      \"auto\" : true ,\n      \"orderable\" : true ,\n      \"searchable\" : true ,\n      \"operators\" : [\n        \"!=\" ,\n        \"was not in\" ,\n        \"not in\" ,\n        \"was not\" ,\n        \"is\" ,\n        \"was in\" ,\n        \"was\" ,\n        \"=\" ,\n        \"in\" ,\n        \"changed\" ,\n        \"is not\"\n      ] ,\n      \"types\" : [\n        \"com.atlassian.crowd.embedded.api.User\"\n      ]\n    }\n  ] ,\n  \"visibleFunctionNames\" : [\n    {\n      \"value\" : \"currentLogin()\" ,\n      \"displayName\" : \"currentLogin()\" ,\n      \"types\" : [\n        \"java.util.Date\"\n      ]\n    } , {\n      \"value\" : \"currentUser()\" ,\n      \"displayName\" : \"currentUser()\" ,\n      \"types\" : [\n        \"com.atlassian.crowd.embedded.api.User\"\n      ]\n    }\n  ] ,\n  \"jqlReservedWords\" : [\n    \"empty\" ,\n    \"and\" ,\n    \"or\" ,\n    \"in\" ,\n    \"distinct\"\n  ]\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"visibleFieldNames\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"value\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"displayName\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"auto\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"orderable\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"searchable\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"operators\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"string\"\n                }\n              ]\n            } ,\n            \"types\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"string\"\n                }\n              ]\n            }\n          }\n        }\n      ]\n    } ,\n    \"visibleFunctionNames\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"value\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"displayName\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"types\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"string\"\n                }\n              ]\n            }\n          }\n        }\n      ]\n    } ,\n    \"jqlReservedWords\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"string\"\n        }\n      ]\n    }\n  }\n}"
                                }
                            }
                        },
                        "401": {
                            "code": "401",
                            "description": "Returned if the calling user is not authenticated."
                        },
                        "500": {
                            "code": "500",
                            "description": "Returned if an error occurs while generating the response."
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "description": "Returns the auto complete data required for JQL searches.",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/jql/autocompletedata",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "jql",
                "autocompletedata"
            ]
        },
        {
            "relativeUri": "/licenseValidator",
            "type": "base",
            "securedBy": [
                "basic"
            ],
            "methods": [
                {
                    "body": {
                        "application/json": {
                            "name": "application/json"
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "description": "A REST endpoint to provide simple validation services for a JIRA license. Typically used by the setup phase of the JIRA application. This will return an object with a list of errors as key, value pairs.",
                    "method": "post",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/licenseValidator",
            "description": "",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "licenseValidator"
            ]
        },
        {
            "relativeUri": "/mypermissions",
            "type": "base",
            "securedBy": [
                "basic"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "permission",
                                    "example": "{\n  \"permissions\" : {\n    \"EDIT_ISSUE\" : {\n      \"id\" : \"12\" ,\n      \"key\" : \"EDIT_ISSUE\" ,\n      \"name\" : \"Edit Issues\" ,\n      \"description\" : \"Ability to edit issues.\" ,\n      \"havePermission\" : true\n    }\n  }\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"permissions\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"EDIT_ISSUE\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"key\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"description\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"havePermission\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            }\n          }\n        }\n      }\n    }\n  }\n}"
                                }
                            }
                        },
                        "400": {
                            "code": "400",
                            "description": "Returned if the project or issue id is invalid."
                        },
                        "404": {
                            "code": "404",
                            "description": "Returned if the project or issue id or key is not found."
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "queryParameters": {
                        "projectKey": {
                            "name": "projectKey",
                            "displayName": "projectKey",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "key of project to scope returned permissions for.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "projectId": {
                            "name": "projectId",
                            "displayName": "projectId",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "id of project to scope returned permissions for.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "issueKey": {
                            "name": "issueKey",
                            "displayName": "issueKey",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "key of the issue to scope returned permissions for.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "issueId": {
                            "name": "issueId",
                            "displayName": "issueId",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "id of the issue to scope returned permissions for.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Returns all permissions in the system and whether the currently logged in user has them.",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/mypermissions",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "mypermissions"
            ]
        },
        {
            "relativeUri": "/mypreferences",
            "type": "base",
            "securedBy": [
                "basic"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200"
                        },
                        "404": {
                            "code": "404",
                            "description": "If key parameter is not provided or wrong"
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "queryParameters": {
                        "key": {
                            "name": "key",
                            "displayName": "key",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "a String containing the property key",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Returns preference of the currently logged in user. Preference key must be provided as input parameter (key).",
                    "method": "get",
                    "is": [
                        "hasKey"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                },
                {
                    "body": {
                        "application/json": {
                            "name": "application/json"
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "queryParameters": {
                        "key": {
                            "name": "key",
                            "displayName": "key",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "a String containing the property key",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Sets preference of the currently logged in user. Preference key must be provided as input parameters (key).",
                    "method": "put",
                    "is": [
                        "hasKey"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                },
                {
                    "responses": {
                        "204": {
                            "code": "204",
                            "description": "If preference is unset"
                        },
                        "404": {
                            "code": "404",
                            "description": "If key parameter is not provided or wrong"
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json"
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "queryParameters": {
                        "key": {
                            "name": "key",
                            "displayName": "key",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "a String containing the property key",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Removes preference of the currently logged in user. Preference key must be provided as input parameters (key).",
                    "method": "delete",
                    "is": [
                        "hasKey"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/mypreferences",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "mypreferences"
            ]
        },
        {
            "relativeUri": "/myself",
            "type": "base",
            "securedBy": [
                "basic"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "user",
                                    "example": "{\n  \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n  \"name\" : \"fred\" ,\n  \"emailAddress\" : \"fred@example.com\" ,\n  \"avatarUrls\" : {\n    \"24x24\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=fred\" ,\n    \"16x16\" : \"http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=fred\" ,\n    \"32x32\" : \"http://www.example.com/jira/secure/useravatar?size=medium&ownerId=fred\" ,\n    \"48x48\" : \"http://www.example.com/jira/secure/useravatar?size=large&ownerId=fred\"\n  } ,\n  \"displayName\" : \"Fred F. User\" ,\n  \"active\" : true ,\n  \"timeZone\" : \"Australia/Sydney\" ,\n  \"groups\" : {\n    \"size\" : 3 ,\n    \"items\" : [\n      {\n        \"name\" : \"jira-user\" ,\n        \"self\" : \"http://www.example.com/jira/rest/api/2/group?groupname=jira-user\"\n      } , {\n        \"name\" : \"jira-admin\" ,\n        \"self\" : \"http://www.example.com/jira/rest/api/2/group?groupname=jira-admin\"\n      } , {\n        \"name\" : \"important\" ,\n        \"self\" : \"http://www.example.com/jira/rest/api/2/group?groupname=important\"\n      }\n    ]\n  } ,\n  \"expand\" : \"groups\"\n}",
                                    "schemaContent": "user"
                                }
                            }
                        },
                        "403": {
                            "code": "403",
                            "description": "Returned if the current user is not authenticated."
                        },
                        "404": {
                            "code": "404",
                            "description": "Returned if the the user could not be found."
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "description": "Returns currently logged user. This resource cannot be accessed anonymously.",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                },
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "userPutRes",
                                    "example": "{\n  \"self\" : \"http://www.example.com/jirahttp://www.example.com/jira/rest/api/2/user/charlie\" ,\n  \"key\" : \"charlie\" ,\n  \"name\" : \"charlie\" ,\n  \"emailAddress\" : \"charlie@atlassian.com\" ,\n  \"displayName\" : \"Charlie of Atlassian\"\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"key\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"emailAddress\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"displayName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                }
                            },
                            "description": "Returned if the object was retrieved successful."
                        },
                        "400": {
                            "code": "400",
                            "description": "Returned if the request is invalid."
                        },
                        "403": {
                            "code": "403",
                            "description": "Returned if the current user is not authenticated."
                        },
                        "404": {
                            "code": "404",
                            "description": "Returned if the the user could not be found."
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json",
                            "schema": "userPutReq",
                            "example": "{\n  \"name\" : \"eddie\" ,\n  \"emailAddress\" : \"eddie@atlassian.com\" ,\n  \"displayName\" : \"Eddie of Atlassian\"\n}",
                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"emailAddress\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"displayName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "description": "Modify currently logged user. The \"value\" fields present will override the existing value. Fields skipped in request will not be changed. Only email and display name can be change that way.",
                    "method": "put",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/password",
                    "type": "base",
                    "securedBy": [
                        "basic"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "204": {
                                    "code": "204"
                                },
                                "403": {
                                    "code": "403",
                                    "description": "Returned if the caller does not have permission to change the user password."
                                },
                                "404": {
                                    "code": "404",
                                    "description": "Returned if the caller does have permission to change user password but the user does not exist."
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "description": "Modify caller password.",
                            "method": "put",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/password",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "password"
                    ]
                }
            ],
            "displayName": "/myself",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "myself"
            ]
        },
        {
            "relativeUri": "/password/policy",
            "type": "base",
            "securedBy": [
                "basic"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "description": "Returns an array of message strings."
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "queryParameters": {
                        "hasOldPassword": {
                            "name": "hasOldPassword",
                            "displayName": "hasOldPassword",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "description": "whether or not the user will be required to enter their current password. Use {@code false} (the default) if this is a new user or if an administrator is forcibly changing another user's password.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Returns user-friendly statements governing the system's password policy.",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/createUser",
                    "type": "base",
                    "securedBy": [
                        "basic"
                    ],
                    "methods": [
                        {
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "description": "Create user",
                            "method": "post",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/createUser",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "createUser"
                    ]
                },
                {
                    "relativeUri": "/updateUser",
                    "type": "base",
                    "securedBy": [
                        "basic"
                    ],
                    "methods": [
                        {
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "method": "post",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/updateUser",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "updateUser"
                    ]
                }
            ],
            "displayName": "/password/policy",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "password",
                "policy"
            ]
        },
        {
            "relativeUri": "/priority",
            "type": "base",
            "securedBy": [
                "basic"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "priorities",
                                    "example": "[\n  {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/priority/3\" ,\n    \"statusColor\" : \"#009900\" ,\n    \"description\" : \"Major loss of function.\" ,\n    \"iconUrl\" : \"http://www.example.com/jira/images/icons/priorities/major.png\" ,\n    \"name\" : \"Major\"\n  } , {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/priority/5\" ,\n    \"statusColor\" : \"#cfcfcf\" ,\n    \"description\" : \"Very little impact.\" ,\n    \"iconUrl\" : \"http://www.example.com/jira/images/icons/priorities/trivial.png\" ,\n    \"name\" : \"Trivial\"\n  }\n]",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"array\" ,\n  \"items\" : [\n    {\n      \"type\" : \"object\" ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"statusColor\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"description\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"iconUrl\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  ]\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "description": "Returns a list of all issue priorities.",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/{id}",
                    "type": "base",
                    "securedBy": [
                        "basic"
                    ],
                    "uriParameters": {
                        "id": {
                            "name": "id",
                            "displayName": "id",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "issuePriority",
                                            "example": "{\n  \"self\" : \"http://www.example.com/jira/rest/api/2/priority/3\" ,\n  \"statusColor\" : \"#009900\" ,\n  \"description\" : \"Major loss of function.\" ,\n  \"iconUrl\" : \"http://www.example.com/jira/images/icons/priorities/major.png\" ,\n  \"name\" : \"Major\"\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"statusColor\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"iconUrl\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                        }
                                    }
                                },
                                "404": {
                                    "code": "404",
                                    "description": "Returned if the issue priority does not exist or is not visible to the calling user."
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "description": "Returns an issue priority.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/{id}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{id}"
                    ]
                }
            ],
            "displayName": "/priority",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "priority"
            ]
        },
        {
            "relativeUri": "/project",
            "type": "base",
            "securedBy": [
                "basic"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "projects",
                                    "example": "[\n  {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/project/EX\" ,\n    \"id\" : \"10000\" ,\n    \"key\" : \"EX\" ,\n    \"name\" : \"Example\" ,\n    \"avatarUrls\" : {\n      \"24x24\" : \"http://www.example.com/jira/secure/projectavatar?size=small&pid=10000\" ,\n      \"16x16\" : \"http://www.example.com/jira/secure/projectavatar?size=xsmall&pid=10000\" ,\n      \"32x32\" : \"http://www.example.com/jira/secure/projectavatar?size=medium&pid=10000\" ,\n      \"48x48\" : \"http://www.example.com/jira/secure/projectavatar?size=large&pid=10000\"\n    }\n  } , {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/project/ABC\" ,\n    \"id\" : \"10001\" ,\n    \"key\" : \"ABC\" ,\n    \"name\" : \"Alphabetical\" ,\n    \"avatarUrls\" : {\n      \"24x24\" : \"http://www.example.com/jira/secure/projectavatar?size=small&pid=10001\" ,\n      \"16x16\" : \"http://www.example.com/jira/secure/projectavatar?size=xsmall&pid=10001\" ,\n      \"32x32\" : \"http://www.example.com/jira/secure/projectavatar?size=medium&pid=10001\" ,\n      \"48x48\" : \"http://www.example.com/jira/secure/projectavatar?size=large&pid=10001\"\n    }\n  }\n]",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"array\" ,\n  \"items\" : [\n    {\n      \"type\" : \"object\" ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"id\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"key\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"avatarUrls\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"24x24\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"16x16\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"32x32\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"48x48\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      }\n    }\n  ]\n}"
                                }
                            }
                        },
                        "500": {
                            "code": "500",
                            "description": "Returned if an error occurs while retrieving the list of projects."
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "description": "Returns all projects which are visible for the currently logged in user. If no user is logged in, it returns the list of projects that are visible when using anonymous access.",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/{projectIdOrKey}",
                    "type": "base",
                    "securedBy": [
                        "basic"
                    ],
                    "uriParameters": {
                        "projectIdOrKey": {
                            "name": "projectIdOrKey",
                            "displayName": "projectIdOrKey",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "projectRepresentation",
                                            "example": "{\n  \"self\" : \"http://www.example.com/jira/rest/api/2/project/EX\" ,\n  \"id\" : \"10000\" ,\n  \"key\" : \"EX\" ,\n  \"description\" : \"This project was created as an example for REST.\" ,\n  \"lead\" : {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n    \"name\" : \"fred\" ,\n    \"avatarUrls\" : {\n      \"24x24\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=fred\" ,\n      \"16x16\" : \"http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=fred\" ,\n      \"32x32\" : \"http://www.example.com/jira/secure/useravatar?size=medium&ownerId=fred\" ,\n      \"48x48\" : \"http://www.example.com/jira/secure/useravatar?size=large&ownerId=fred\"\n    } ,\n    \"displayName\" : \"Fred F. User\" ,\n    \"active\" : false\n  } ,\n  \"components\" : [\n    {\n      \"self\" : \"http://www.example.com/jira/rest/api/2/component/10000\" ,\n      \"id\" : \"10000\" ,\n      \"name\" : \"Component 1\" ,\n      \"description\" : \"This is a JIRA component\" ,\n      \"lead\" : {\n        \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n        \"name\" : \"fred\" ,\n        \"avatarUrls\" : {\n          \"24x24\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=fred\" ,\n          \"16x16\" : \"http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=fred\" ,\n          \"32x32\" : \"http://www.example.com/jira/secure/useravatar?size=medium&ownerId=fred\" ,\n          \"48x48\" : \"http://www.example.com/jira/secure/useravatar?size=large&ownerId=fred\"\n        } ,\n        \"displayName\" : \"Fred F. User\" ,\n        \"active\" : false\n      } ,\n      \"assigneeType\" : \"PROJECT_LEAD\" ,\n      \"assignee\" : {\n        \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n        \"name\" : \"fred\" ,\n        \"avatarUrls\" : {\n          \"24x24\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=fred\" ,\n          \"16x16\" : \"http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=fred\" ,\n          \"32x32\" : \"http://www.example.com/jira/secure/useravatar?size=medium&ownerId=fred\" ,\n          \"48x48\" : \"http://www.example.com/jira/secure/useravatar?size=large&ownerId=fred\"\n        } ,\n        \"displayName\" : \"Fred F. User\" ,\n        \"active\" : false\n      } ,\n      \"realAssigneeType\" : \"PROJECT_LEAD\" ,\n      \"realAssignee\" : {\n        \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n        \"name\" : \"fred\" ,\n        \"avatarUrls\" : {\n          \"24x24\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=fred\" ,\n          \"16x16\" : \"http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=fred\" ,\n          \"32x32\" : \"http://www.example.com/jira/secure/useravatar?size=medium&ownerId=fred\" ,\n          \"48x48\" : \"http://www.example.com/jira/secure/useravatar?size=large&ownerId=fred\"\n        } ,\n        \"displayName\" : \"Fred F. User\" ,\n        \"active\" : false\n      } ,\n      \"isAssigneeTypeValid\" : false\n    }\n  ] ,\n  \"issueTypes\" : [\n    {\n      \"self\" : \"http://localhost:8090/jira/rest/api/2.0/issueType/3\" ,\n      \"id\" : \"3\" ,\n      \"description\" : \"A task that needs to be done.\" ,\n      \"iconUrl\" : \"http://localhost:8090/jira/images/icons/issuetypes/task.png\" ,\n      \"name\" : \"Task\" ,\n      \"subtask\" : false\n    } , {\n      \"self\" : \"http://localhost:8090/jira/rest/api/2.0/issueType/1\" ,\n      \"id\" : \"1\" ,\n      \"description\" : \"A problem with the software.\" ,\n      \"iconUrl\" : \"http://localhost:8090/jira/images/icons/issuetypes/bug.png\" ,\n      \"name\" : \"Bug\" ,\n      \"subtask\" : false\n    }\n  ] ,\n  \"url\" : \"http://www.example.com/jira/browse/EX\" ,\n  \"email\" : \"from-jira@example.com\" ,\n  \"assigneeType\" : \"PROJECT_LEAD\" ,\n  \"versions\" : [\n  ] ,\n  \"name\" : \"Example\" ,\n  \"roles\" : {\n    \"Developers\" : \"http://www.example.com/jira/rest/api/2/project/EX/role/10000\"\n  } ,\n  \"avatarUrls\" : {\n    \"24x24\" : \"http://www.example.com/jira/secure/projectavatar?size=small&pid=10000\" ,\n    \"16x16\" : \"http://www.example.com/jira/secure/projectavatar?size=xsmall&pid=10000\" ,\n    \"32x32\" : \"http://www.example.com/jira/secure/projectavatar?size=medium&pid=10000\" ,\n    \"48x48\" : \"http://www.example.com/jira/secure/projectavatar?size=large&pid=10000\"\n  }\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"key\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"lead\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"avatarUrls\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"24x24\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"16x16\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"32x32\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"48x48\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"displayName\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"active\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"components\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"description\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"lead\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"self\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"avatarUrls\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"24x24\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"16x16\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"32x32\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"48x48\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"displayName\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"active\" : {\n                  \"type\" : \"boolean\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"assigneeType\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"assignee\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"self\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"avatarUrls\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"24x24\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"16x16\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"32x32\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"48x48\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"displayName\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"active\" : {\n                  \"type\" : \"boolean\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"realAssigneeType\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"realAssignee\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"self\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"avatarUrls\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"24x24\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"16x16\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"32x32\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"48x48\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"displayName\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"active\" : {\n                  \"type\" : \"boolean\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"isAssigneeTypeValid\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    } ,\n    \"issueTypes\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"description\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"iconUrl\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"subtask\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    } ,\n    \"url\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"email\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"assigneeType\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"versions\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n      ]\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"roles\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"Developers\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"avatarUrls\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"24x24\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"16x16\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"32x32\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"48x48\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
                                        }
                                    }
                                },
                                "404": {
                                    "code": "404",
                                    "description": "Returned if the project is not found, or the calling user does not have permission to view it."
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "queryParameters": {
                                "expand": {
                                    "name": "expand",
                                    "displayName": "expand",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "the parameters to expand",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Contains a full representation of a project in JSON format.\nAll project keys associated with the project will only be returned if expand=projectKeys.\n",
                            "method": "get",
                            "is": [
                                "hasExpand"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/avatar",
                            "type": "base",
                            "securedBy": [
                                "basic"
                            ],
                            "methods": [
                                {
                                    "body": {
                                        "application/json": {
                                            "name": "application/json"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "method": "put",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "avatar",
                                                    "example": "{\n  \"id\" : \"1000\" ,\n  \"owner\" : \"fred\" ,\n  \"isSystemAvatar\" : true ,\n  \"isSelected\" : true ,\n  \"selected\" : true\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"owner\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"isSystemAvatar\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"isSelected\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"selected\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
                                                }
                                            },
                                            "description": "Returned if the object was retrieved successful."
                                        },
                                        "400": {
                                            "code": "400",
                                            "description": "Returned if the cropping coordinates are invalid"
                                        },
                                        "403": {
                                            "code": "403",
                                            "description": "Returned if the currently authenticated user does not have permission to pick avatar"
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "Returned if the currently authenticated user does not have EDIT PROJECT permission."
                                        },
                                        "500": {
                                            "code": "500",
                                            "description": "Returned if an error occurs while converting temporary avatar to real avatar"
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "cropInstructions",
                                            "example": "{\n  \"cropperWidth\" : 120 ,\n  \"cropperOffsetX\" : 50 ,\n  \"cropperOffsetY\" : 50 ,\n  \"needsCropping\" : false\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"cropperWidth\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"cropperOffsetX\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"cropperOffsetY\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"needsCropping\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "description": "Converts temporary avatar into a real avatar",
                                    "method": "post",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "resources": [
                                {
                                    "relativeUri": "/{id}",
                                    "type": "base",
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "uriParameters": {
                                        "id": {
                                            "name": "id",
                                            "displayName": "id",
                                            "type": "string",
                                            "required": true,
                                            "repeat": false,
                                            "__METADATA__": {
                                                "calculated": true,
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "methods": [
                                        {
                                            "responses": {
                                                "204": {
                                                    "code": "204",
                                                    "description": "Returned if the avatar is successfully deleted."
                                                },
                                                "403": {
                                                    "code": "403",
                                                    "description": "Returned if the currently authenticated user does not have permission to delete the component."
                                                },
                                                "404": {
                                                    "code": "404",
                                                    "description": "Returned if the avatar does not exist or the currently authenticated user does not have permission to delete it."
                                                }
                                            },
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json"
                                                }
                                            },
                                            "protocols": [
                                                "{PROTOCOL}"
                                            ],
                                            "securedBy": [
                                                "basic"
                                            ],
                                            "description": "Deletes avatar",
                                            "method": "delete",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/{id}",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "securedBy": {
                                                "calculated": true
                                            },
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "{id}"
                                    ]
                                },
                                {
                                    "relativeUri": "/temporary",
                                    "type": "base",
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "methods": [
                                        {
                                            "responses": {
                                                "201": {
                                                    "code": "201",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "example": "{\n  \"cropperWidth\" : 120 ,\n  \"cropperOffsetX\" : 50 ,\n  \"cropperOffsetY\" : 50 ,\n  \"url\" : \"http://example.com/jira/secure/temporaryavatar?cropped=true\" ,\n  \"needsCropping\" : true\n}"
                                                        }
                                                    },
                                                    "description": "Returned if the object was created successful."
                                                }
                                            },
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json"
                                                }
                                            },
                                            "protocols": [
                                                "{PROTOCOL}"
                                            ],
                                            "securedBy": [
                                                "basic"
                                            ],
                                            "queryParameters": {
                                                "filename": {
                                                    "name": "filename",
                                                    "displayName": "filename",
                                                    "type": "string",
                                                    "required": false,
                                                    "repeat": false,
                                                    "description": "name of file being uploaded",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "size": {
                                                    "name": "size",
                                                    "displayName": "size",
                                                    "type": "string",
                                                    "required": false,
                                                    "repeat": false,
                                                    "description": "size of file",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "description": "Creates temporary avatar\n\nCreates temporary avatar using multipart. The response is sent back as JSON stored in a textarea. This is because the client uses remote iframing to submit avatars using multipart. So we must send them a valid HTML page back from which the client parses the JSON.\n",
                                            "method": "post",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/temporary",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "securedBy": {
                                                "calculated": true
                                            },
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "temporary"
                                    ]
                                }
                            ],
                            "displayName": "/avatar",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "avatar"
                            ]
                        },
                        {
                            "relativeUri": "/avatars",
                            "type": "base",
                            "securedBy": [
                                "basic"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "avatars",
                                                    "example": "{\n  \"system\" : [\n    {\n      \"id\" : \"1000\" ,\n      \"owner\" : \"fred\" ,\n      \"isSystemAvatar\" : true ,\n      \"isSelected\" : true ,\n      \"selected\" : true\n    }\n  ] ,\n  \"custom\" : [\n    {\n      \"id\" : \"1010\" ,\n      \"owner\" : \"andrew\" ,\n      \"isSystemAvatar\" : false ,\n      \"isSelected\" : false ,\n      \"selected\" : false\n    }\n  ]\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"system\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"owner\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"isSystemAvatar\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"isSelected\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"selected\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    } ,\n    \"custom\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"owner\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"isSystemAvatar\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"isSelected\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"selected\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                                }
                                            }
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "Returned if the currently authenticated user does not have VIEW PROJECT permission."
                                        },
                                        "500": {
                                            "code": "500",
                                            "description": "Returned if an error occurs while retrieving the list of avatars."
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "description": "Returns all avatars which are visible for the currently logged in user. The avatars are grouped into system and custom.",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/avatars",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "avatars"
                            ]
                        },
                        {
                            "relativeUri": "/components",
                            "type": "base",
                            "securedBy": [
                                "basic"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "components",
                                                    "example": "[\n  {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/component/10000\" ,\n    \"id\" : \"10000\" ,\n    \"name\" : \"Component 1\" ,\n    \"description\" : \"This is a JIRA component\" ,\n    \"lead\" : {\n      \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n      \"name\" : \"fred\" ,\n      \"avatarUrls\" : {\n        \"24x24\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=fred\" ,\n        \"16x16\" : \"http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=fred\" ,\n        \"32x32\" : \"http://www.example.com/jira/secure/useravatar?size=medium&ownerId=fred\" ,\n        \"48x48\" : \"http://www.example.com/jira/secure/useravatar?size=large&ownerId=fred\"\n      } ,\n      \"displayName\" : \"Fred F. User\" ,\n      \"active\" : false\n    } ,\n    \"assigneeType\" : \"PROJECT_LEAD\" ,\n    \"assignee\" : {\n      \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n      \"name\" : \"fred\" ,\n      \"avatarUrls\" : {\n        \"24x24\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=fred\" ,\n        \"16x16\" : \"http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=fred\" ,\n        \"32x32\" : \"http://www.example.com/jira/secure/useravatar?size=medium&ownerId=fred\" ,\n        \"48x48\" : \"http://www.example.com/jira/secure/useravatar?size=large&ownerId=fred\"\n      } ,\n      \"displayName\" : \"Fred F. User\" ,\n      \"active\" : false\n    } ,\n    \"realAssigneeType\" : \"PROJECT_LEAD\" ,\n    \"realAssignee\" : {\n      \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n      \"name\" : \"fred\" ,\n      \"avatarUrls\" : {\n        \"24x24\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=fred\" ,\n        \"16x16\" : \"http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=fred\" ,\n        \"32x32\" : \"http://www.example.com/jira/secure/useravatar?size=medium&ownerId=fred\" ,\n        \"48x48\" : \"http://www.example.com/jira/secure/useravatar?size=large&ownerId=fred\"\n      } ,\n      \"displayName\" : \"Fred F. User\" ,\n      \"active\" : false\n    } ,\n    \"isAssigneeTypeValid\" : false\n  } , {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/component/10000\" ,\n    \"id\" : \"10050\" ,\n    \"name\" : \"PXA\" ,\n    \"description\" : \"This is a another JIRA component\" ,\n    \"lead\" : {\n      \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n      \"name\" : \"fred\" ,\n      \"avatarUrls\" : {\n        \"24x24\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=fred\" ,\n        \"16x16\" : \"http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=fred\" ,\n        \"32x32\" : \"http://www.example.com/jira/secure/useravatar?size=medium&ownerId=fred\" ,\n        \"48x48\" : \"http://www.example.com/jira/secure/useravatar?size=large&ownerId=fred\"\n      } ,\n      \"displayName\" : \"Fred F. User\" ,\n      \"active\" : false\n    } ,\n    \"assigneeType\" : \"PROJECT_LEAD\" ,\n    \"assignee\" : {\n      \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n      \"name\" : \"fred\" ,\n      \"avatarUrls\" : {\n        \"24x24\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=fred\" ,\n        \"16x16\" : \"http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=fred\" ,\n        \"32x32\" : \"http://www.example.com/jira/secure/useravatar?size=medium&ownerId=fred\" ,\n        \"48x48\" : \"http://www.example.com/jira/secure/useravatar?size=large&ownerId=fred\"\n      } ,\n      \"displayName\" : \"Fred F. User\" ,\n      \"active\" : false\n    } ,\n    \"realAssigneeType\" : \"PROJECT_LEAD\" ,\n    \"realAssignee\" : {\n      \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n      \"name\" : \"fred\" ,\n      \"avatarUrls\" : {\n        \"24x24\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=fred\" ,\n        \"16x16\" : \"http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=fred\" ,\n        \"32x32\" : \"http://www.example.com/jira/secure/useravatar?size=medium&ownerId=fred\" ,\n        \"48x48\" : \"http://www.example.com/jira/secure/useravatar?size=large&ownerId=fred\"\n      } ,\n      \"displayName\" : \"Fred F. User\" ,\n      \"active\" : false\n    } ,\n    \"isAssigneeTypeValid\" : false\n  }\n]",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"array\" ,\n  \"items\" : [\n    {\n      \"type\" : \"object\" ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"id\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"description\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"lead\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"avatarUrls\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"24x24\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"16x16\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"32x32\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"48x48\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"displayName\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"active\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"assigneeType\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"assignee\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"avatarUrls\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"24x24\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"16x16\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"32x32\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"48x48\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"displayName\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"active\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"realAssigneeType\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"realAssignee\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"avatarUrls\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"24x24\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"16x16\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"32x32\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"48x48\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"displayName\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"active\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"isAssigneeTypeValid\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        }\n      }\n    }\n  ]\n}"
                                                }
                                            }
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "Returned if the project is not found, or the calling user does not have permission to view it."
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "description": "Contains a full representation of a the specified project's components.",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/components",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "components"
                            ]
                        },
                        {
                            "relativeUri": "/statuses",
                            "type": "base",
                            "securedBy": [
                                "basic"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "statuses",
                                                    "example": "[\n  {\n    \"self\" : \"http://localhost:8090/jira/rest/api/2.0/issueType/3\" ,\n    \"id\" : \"3\" ,\n    \"name\" : \"Task\" ,\n    \"subtask\" : false ,\n    \"statuses\" : [\n      {\n        \"self\" : \"http://localhost:8090/jira/rest/api/2.0/status/10000\" ,\n        \"description\" : \"The issue is currently being worked on.\" ,\n        \"iconUrl\" : \"http://localhost:8090/jira/images/icons/progress.gif\" ,\n        \"name\" : \"In Progress\" ,\n        \"id\" : \"10000\"\n      } , {\n        \"self\" : \"http://localhost:8090/jira/rest/api/2.0/status/5\" ,\n        \"description\" : \"The issue is closed.\" ,\n        \"iconUrl\" : \"http://localhost:8090/jira/images/icons/closed.gif\" ,\n        \"name\" : \"Closed\" ,\n        \"id\" : \"5\"\n      }\n    ]\n  }\n]",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"array\" ,\n  \"items\" : [\n    {\n      \"type\" : \"object\" ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"id\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"subtask\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"statuses\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"self\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"description\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"iconUrl\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"id\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          ]\n        }\n      }\n    }\n  ]\n}"
                                                }
                                            }
                                        },
                                        "400": {
                                            "code": "400",
                                            "description": "Returned if the project is not found, or the calling user does not have permission to view it."
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "description": "Get all issue types with valid status values for a project",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/statuses",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "statuses"
                            ]
                        },
                        {
                            "relativeUri": "/versions",
                            "type": "base",
                            "securedBy": [
                                "basic"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "versions",
                                                    "example": "[\n  {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/version/10000\" ,\n    \"id\" : \"10000\" ,\n    \"description\" : \"An excellent version\" ,\n    \"name\" : \"New Version 1\" ,\n    \"archived\" : false ,\n    \"released\" : true ,\n    \"releaseDate\" : \"2010-07-06\" ,\n    \"overdue\" : true ,\n    \"userReleaseDate\" : \"6/Jul/2010\" ,\n    \"projectId\" : 10000\n  } , {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/version/10010\" ,\n    \"id\" : \"10010\" ,\n    \"description\" : \"Minor Bugfix version\" ,\n    \"name\" : \"Next Version\" ,\n    \"archived\" : false ,\n    \"released\" : false ,\n    \"overdue\" : false ,\n    \"projectId\" : 10000\n  }\n]",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"array\" ,\n  \"items\" : [\n    {\n      \"type\" : \"object\" ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"id\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"description\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"archived\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"released\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"releaseDate\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"overdue\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"userReleaseDate\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"projectId\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        }\n      }\n    } , {\n      \"type\" : \"object\" ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"id\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"description\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"archived\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"released\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"overdue\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"projectId\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        }\n      }\n    }\n  ]\n}"
                                                }
                                            }
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "Returned if the project is not found, or the calling user does not have permission to view it."
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "queryParameters": {
                                        "expand": {
                                            "name": "expand",
                                            "displayName": "expand",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "the parameters to expand",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Contains a full representation of a the specified project's versions.",
                                    "method": "get",
                                    "is": [
                                        "hasExpand"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/versions",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "versions"
                            ]
                        },
                        {
                            "relativeUri": "/properties",
                            "type": "base",
                            "securedBy": [
                                "basic"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "commentPropertiesKeys",
                                                    "example": "{\n  \"keys\" : [\n    {\n      \"self\" : \"http://www.example.com/jira/rest/api/2/issue/EX-2/properties/issue.support\" ,\n      \"key\" : \"issue.support\"\n    }\n  ]\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"keys\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"key\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                                }
                                            }
                                        },
                                        "400": {
                                            "code": "400",
                                            "description": "Returned if the project key or id is invalid."
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "Returned if the calling user is not authenticated."
                                        },
                                        "403": {
                                            "code": "403",
                                            "description": "Returned if the calling user does not have permission to browse the project."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "Returned if the project with given key or id does not exist or if the property with given key is not found."
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "resources": [
                                {
                                    "relativeUri": "/{propertyKey}",
                                    "type": "base",
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "uriParameters": {
                                        "propertyKey": {
                                            "name": "propertyKey",
                                            "displayName": "propertyKey",
                                            "type": "string",
                                            "required": true,
                                            "repeat": false,
                                            "__METADATA__": {
                                                "calculated": true,
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "methods": [
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "commentProperty",
                                                            "example": "{\n  \"key\" : \"issue.support\" ,\n  \"value\" : {\n  }\n}",
                                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"key\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"value\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false\n    }\n  }\n}"
                                                        }
                                                    }
                                                },
                                                "400": {
                                                    "code": "400",
                                                    "description": "Returned if the project key or id is invalid."
                                                },
                                                "401": {
                                                    "code": "401",
                                                    "description": "Returned if the calling user is not authenticated."
                                                },
                                                "403": {
                                                    "code": "403",
                                                    "description": "Returned if the calling user does not have permission to browse the project."
                                                },
                                                "404": {
                                                    "code": "404",
                                                    "description": "Returned if the project with given key or id does not exist or if the property with given key is not found."
                                                }
                                            },
                                            "protocols": [
                                                "{PROTOCOL}"
                                            ],
                                            "securedBy": [
                                                "basic"
                                            ],
                                            "description": "Returns the value of the property with a given key from the project identified by the key or by the id. The user who retrieves the property is required to have permissions to read the project.",
                                            "method": "get",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "description": "Returned if the project property is successfully updated."
                                                },
                                                "201": {
                                                    "code": "201",
                                                    "description": "Returned if the project property is successfully created."
                                                },
                                                "400": {
                                                    "code": "400",
                                                    "description": "Returned if the project key or id is invalid."
                                                },
                                                "401": {
                                                    "code": "401",
                                                    "description": "Returned if the calling user is not authenticated."
                                                },
                                                "403": {
                                                    "code": "403",
                                                    "description": "Returned if the calling user does not have permission to administer the project."
                                                },
                                                "404": {
                                                    "code": "404",
                                                    "description": "Returned if the project with given key or id does not exist."
                                                }
                                            },
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json"
                                                }
                                            },
                                            "protocols": [
                                                "{PROTOCOL}"
                                            ],
                                            "securedBy": [
                                                "basic"
                                            ],
                                            "description": "Sets the value of the specified project's property.",
                                            "method": "put",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "responses": {
                                                "204": {
                                                    "code": "204",
                                                    "description": "Returned if the project property was removed successfully."
                                                },
                                                "400": {
                                                    "code": "400",
                                                    "description": "Returned if the project key or id is invalid."
                                                },
                                                "401": {
                                                    "code": "401",
                                                    "description": "Returned if the calling user is not authenticated."
                                                },
                                                "403": {
                                                    "code": "403",
                                                    "description": "Returned if the calling user does not have permission to edit the project."
                                                },
                                                "404": {
                                                    "code": "404",
                                                    "description": "Returned if the project with given key or id does not exist or if the property with given key is not found."
                                                }
                                            },
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json"
                                                }
                                            },
                                            "protocols": [
                                                "{PROTOCOL}"
                                            ],
                                            "securedBy": [
                                                "basic"
                                            ],
                                            "description": "Removes the property from the project identified by the key or by the id. Ths user removing the property is required to have permissions to administer the project.",
                                            "method": "delete",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/{propertyKey}",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "securedBy": {
                                                "calculated": true
                                            },
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "{propertyKey}"
                                    ]
                                }
                            ],
                            "displayName": "/properties",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "properties"
                            ]
                        },
                        {
                            "relativeUri": "/role",
                            "type": "base",
                            "securedBy": [
                                "basic"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "role",
                                                    "example": "{\n  \"Users\" : \"http://www.example.com/jira/rest/api/2/project/MKY/role/10001\" ,\n  \"Administrators\" : \"http://www.example.com/jira/rest/api/2/project/MKY/role/10002\" ,\n  \"Developers\" : \"http://www.example.com/jira/rest/api/2/project/MKY/role/10000\"\n}",
                                                    "schemaContent": "role"
                                                }
                                            }
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "Returned if the project is not found, or the calling user does not have permission to view it."
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "description": "Contains a list of roles in this project with links to full details.",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "resources": [
                                {
                                    "relativeUri": "/{id}",
                                    "type": "base",
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "uriParameters": {
                                        "id": {
                                            "name": "id",
                                            "displayName": "id",
                                            "type": "string",
                                            "required": true,
                                            "repeat": false,
                                            "__METADATA__": {
                                                "calculated": true,
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "methods": [
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "actor",
                                                            "example": "{\n  \"self\" : \"http://www.example.com/jira/rest/api/2/project/MKY/role/10360\" ,\n  \"name\" : \"Developers\" ,\n  \"id\" : 10360 ,\n  \"description\" : \"A project role that represents developers in a project\" ,\n  \"actors\" : [\n    {\n      \"id\" : 10240 ,\n      \"displayName\" : \"jira-developers\" ,\n      \"type\" : \"atlassian-group-role-actor\" ,\n      \"name\" : \"jira-developers\"\n    }\n  ]\n}",
                                                            "schemaContent": "actor"
                                                        }
                                                    }
                                                },
                                                "404": {
                                                    "code": "404",
                                                    "description": "Returned if the project or role is not found, or the calling user does not have permission to view it."
                                                }
                                            },
                                            "protocols": [
                                                "{PROTOCOL}"
                                            ],
                                            "securedBy": [
                                                "basic"
                                            ],
                                            "description": "Details on a given project role.",
                                            "method": "get",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "actor",
                                                            "example": "{\n  \"self\" : \"http://www.example.com/jira/rest/api/2/project/MKY/role/10360\" ,\n  \"name\" : \"Developers\" ,\n  \"id\" : 10360 ,\n  \"description\" : \"A project role that represents developers in a project\" ,\n  \"actors\" : [\n    {\n      \"id\" : 10240 ,\n      \"displayName\" : \"jira-developers\" ,\n      \"type\" : \"atlassian-group-role-actor\" ,\n      \"name\" : \"jira-developers\"\n    }\n  ]\n}",
                                                            "schemaContent": "actor"
                                                        }
                                                    },
                                                    "description": "Returned if the object was retrieved successful."
                                                },
                                                "404": {
                                                    "code": "404",
                                                    "description": "Returned if the actor could not be added to the project role"
                                                }
                                            },
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "addActor",
                                                    "example": "{\n  \"group\" : [\n    \"jira-developers\"\n  ]\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"group\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"string\"\n        }\n      ]\n    }\n  }\n}"
                                                }
                                            },
                                            "protocols": [
                                                "{PROTOCOL}"
                                            ],
                                            "securedBy": [
                                                "basic"
                                            ],
                                            "description": "Updates a project role to contain the sent actors.",
                                            "method": "put",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "actor",
                                                            "example": "{\n  \"self\" : \"http://www.example.com/jira/rest/api/2/project/MKY/role/10360\" ,\n  \"name\" : \"Developers\" ,\n  \"id\" : 10360 ,\n  \"description\" : \"A project role that represents developers in a project\" ,\n  \"actors\" : [\n    {\n      \"id\" : 10240 ,\n      \"displayName\" : \"jira-developers\" ,\n      \"type\" : \"atlassian-group-role-actor\" ,\n      \"name\" : \"jira-developers\"\n    }\n  ]\n}",
                                                            "schemaContent": "actor"
                                                        }
                                                    },
                                                    "description": "Returned if the object was retrieved successful."
                                                },
                                                "404": {
                                                    "code": "404",
                                                    "description": "Returned if the actor could not be added to the project role"
                                                }
                                            },
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "addActor",
                                                    "example": "{\n  \"group\" : [\n    \"jira-developers\"\n  ]\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"group\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"string\"\n        }\n      ]\n    }\n  }\n}"
                                                }
                                            },
                                            "protocols": [
                                                "{PROTOCOL}"
                                            ],
                                            "securedBy": [
                                                "basic"
                                            ],
                                            "description": "Add an actor to a project role.",
                                            "method": "post",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "responses": {
                                                "204": {
                                                    "code": "204",
                                                    "description": "Returned if the actor was successfully removed from the project role."
                                                },
                                                "404": {
                                                    "code": "404",
                                                    "description": "Returned if the project or role is not found, the calling user does not have permission to view it, or does not have permission to modify the actors in the project role."
                                                }
                                            },
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json"
                                                }
                                            },
                                            "protocols": [
                                                "{PROTOCOL}"
                                            ],
                                            "securedBy": [
                                                "basic"
                                            ],
                                            "description": "Remove actors from a project role.",
                                            "method": "delete",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/{id}",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "securedBy": {
                                                "calculated": true
                                            },
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "{id}"
                                    ]
                                }
                            ],
                            "displayName": "/role",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "role"
                            ]
                        }
                    ],
                    "displayName": "/{projectIdOrKey}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{projectIdOrKey}"
                    ]
                }
            ],
            "displayName": "/project",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "project"
            ]
        },
        {
            "relativeUri": "/projectvalidate/key",
            "type": "base",
            "securedBy": [
                "basic"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "errorCollection",
                                    "example": "{\n  \"errorMessages\" : [\n  ] ,\n  \"errors\" : {\n    \"projectKey\" : \"A project with that project key already exists.\"\n  }\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"errorMessages\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n      ]\n    } ,\n    \"errors\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"projectKey\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "queryParameters": {
                        "key": {
                            "name": "key",
                            "displayName": "key",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "a String containing the property key",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Validates a project key.",
                    "method": "get",
                    "is": [
                        "hasKey"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/projectvalidate/key",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "projectvalidate",
                "key"
            ]
        },
        {
            "relativeUri": "/reindex",
            "type": "base",
            "securedBy": [
                "basic"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "reindex",
                                    "example": "{\n  \"progressUrl\" : \"http://localhost:8080/jira\" ,\n  \"currentProgress\" : 0 ,\n  \"type\" : \"FOREGROUND\" ,\n  \"submittedTime\" : \"2014-06-11T07:33:41.989+0000\" ,\n  \"startTime\" : \"2014-06-11T07:33:41.989+0000\" ,\n  \"finishTime\" : \"2014-06-11T07:33:41.989+0000\" ,\n  \"success\" : true\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"progressUrl\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"currentProgress\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"type\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"submittedTime\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"startTime\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"finishTime\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"success\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
                                }
                            }
                        },
                        "404": {
                            "code": "404",
                            "description": "Returned if there is no re-indexing task found"
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "queryParameters": {
                        "taskId": {
                            "name": "taskId",
                            "displayName": "taskId",
                            "type": "number",
                            "required": false,
                            "repeat": false,
                            "description": "the id of an indexing task you wish to obtain details on. If omitted, then defaults to the standard behaviour and returns information on the active reindex task, or the last task to run if no reindex is taking place.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Returns information on the system reindexes. If a reindex is currently taking place then information about this reindex is returned.",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                },
                {
                    "responses": {
                        "202": {
                            "code": "202",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "reindex",
                                    "example": "{\n  \"progressUrl\" : \"http://localhost:8080/jira\" ,\n  \"currentProgress\" : 0 ,\n  \"type\" : \"FOREGROUND\" ,\n  \"submittedTime\" : \"2014-06-11T07:33:41.989+0000\" ,\n  \"startTime\" : \"2014-06-11T07:33:41.989+0000\" ,\n  \"finishTime\" : \"2014-06-11T07:33:41.989+0000\" ,\n  \"success\" : true\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"progressUrl\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"currentProgress\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"type\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"submittedTime\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"startTime\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"finishTime\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"success\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json"
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "queryParameters": {
                        "type": {
                            "name": "type",
                            "displayName": "type",
                            "type": "string",
                            "required": false,
                            "default": "BACKGROUND_PREFERRED",
                            "repeat": false,
                            "description": "Case insensitive String indicating type of reindex. If omitted, then defaults to BACKGROUND_PREFERRED",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "indexComments": {
                            "name": "indexComments",
                            "displayName": "indexComments",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "description": "Indicates that comments should also be reindexed. Not relevant for foreground reindex, where comments are always reindexed.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "indexChangeHistory": {
                            "name": "indexChangeHistory",
                            "displayName": "indexChangeHistory",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "description": "Indicates that changeHistory should also be reindexed. Not relevant for foreground reindex, where changeHistory is always reindexed.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Kicks off a reindex. Need Admin permissions to perform this reindex.",
                    "method": "post",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/reindex",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "reindex"
            ]
        },
        {
            "relativeUri": "/resolution",
            "type": "base",
            "securedBy": [
                "basic"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "resolutions",
                                    "example": "[\n  {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/resolution/1\" ,\n    \"description\" : \"A fix for this issue is checked into the tree and tested.\" ,\n    \"iconUrl\" : \"http://www.example.com/jira/images/icons/statuses/resolved.png\" ,\n    \"name\" : \"Fixed\"\n  } , {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/resolution/3\" ,\n    \"description\" : \"This is what it is supposed to do.\" ,\n    \"name\" : \"Works as designed\"\n  }\n]",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"array\" ,\n  \"items\" : [\n    {\n      \"type\" : \"object\" ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"description\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"iconUrl\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } , {\n      \"type\" : \"object\" ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"description\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  ]\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "description": "Returns a list of all resolutions.",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/{id}",
                    "type": "base",
                    "securedBy": [
                        "basic"
                    ],
                    "uriParameters": {
                        "id": {
                            "name": "id",
                            "displayName": "id",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "resolution",
                                            "example": "{\n  \"self\" : \"http://www.example.com/jira/rest/api/2/resolution/1\" ,\n  \"description\" : \"A fix for this issue is checked into the tree and tested.\" ,\n  \"iconUrl\" : \"http://www.example.com/jira/images/icons/statuses/resolved.png\" ,\n  \"name\" : \"Fixed\"\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"iconUrl\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "description": "Returns a resolution.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/{id}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{id}"
                    ]
                }
            ],
            "displayName": "/resolution",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "resolution"
            ]
        },
        {
            "relativeUri": "/screens",
            "securedBy": [
                "basic"
            ],
            "resources": [
                {
                    "relativeUri": "/{screenId}",
                    "securedBy": [
                        "basic"
                    ],
                    "uriParameters": {
                        "screenId": {
                            "name": "screenId",
                            "displayName": "screenId",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "resources": [
                        {
                            "relativeUri": "/tabs",
                            "type": "base",
                            "securedBy": [
                                "basic"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "description": "Contains a full representation of all visible tabs in JSON."
                                        },
                                        "400": {
                                            "code": "400",
                                            "description": "Returned if screen does not exist"
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "Returned if you do not have permissions"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "queryParameters": {
                                        "projectKey": {
                                            "name": "projectKey",
                                            "displayName": "projectKey",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "the key of the project; this parameter is optional",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Returns a list of all tabs for the given screen",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "tab",
                                                    "example": "{\n  \"id\" : 10000 ,\n  \"name\" : \"Fields Tab\"\n}",
                                                    "schemaContent": "tab"
                                                }
                                            },
                                            "description": "Returned if the object was retrieved successful."
                                        },
                                        "400": {
                                            "code": "400",
                                            "description": "Returned if screen does not exist or tab name is invalid"
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "Returned if you do not have permissions"
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "description": "Creates tab for given screen",
                                    "method": "post",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "resources": [
                                {
                                    "relativeUri": "/{tabId}",
                                    "type": "base",
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "uriParameters": {
                                        "tabId": {
                                            "name": "tabId",
                                            "displayName": "tabId",
                                            "type": "string",
                                            "required": true,
                                            "repeat": false,
                                            "__METADATA__": {
                                                "calculated": true,
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "methods": [
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "tab",
                                                            "example": "{\n  \"id\" : 10000 ,\n  \"name\" : \"Fields Tab\"\n}",
                                                            "schemaContent": "tab"
                                                        }
                                                    },
                                                    "description": "Returned if the object was retrieved successful."
                                                },
                                                "400": {
                                                    "code": "400",
                                                    "description": "Returned if screen does not exist or tab name is invalid"
                                                },
                                                "401": {
                                                    "code": "401",
                                                    "description": "Returned if you do not have permissions"
                                                }
                                            },
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json"
                                                }
                                            },
                                            "protocols": [
                                                "{PROTOCOL}"
                                            ],
                                            "securedBy": [
                                                "basic"
                                            ],
                                            "description": "Renames tab on given screen",
                                            "method": "put",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "responses": {
                                                "201": {
                                                    "code": "201",
                                                    "description": "Successfully deleted tab"
                                                },
                                                "400": {
                                                    "code": "400",
                                                    "description": "Returned if screen or tab does not exist"
                                                },
                                                "401": {
                                                    "code": "401",
                                                    "description": "Returned if you do not have permissions"
                                                }
                                            },
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json"
                                                }
                                            },
                                            "protocols": [
                                                "{PROTOCOL}"
                                            ],
                                            "securedBy": [
                                                "basic"
                                            ],
                                            "description": "Deletes tab to give screen",
                                            "method": "delete",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "resources": [
                                        {
                                            "relativeUri": "/fields",
                                            "type": "base",
                                            "securedBy": [
                                                "basic"
                                            ],
                                            "methods": [
                                                {
                                                    "responses": {
                                                        "200": {
                                                            "code": "200",
                                                            "description": "List of fields for given tab"
                                                        },
                                                        "400": {
                                                            "code": "400",
                                                            "description": "Returned if screen or tab does not exist"
                                                        },
                                                        "401": {
                                                            "code": "401",
                                                            "description": "Returned if you do not have permissions"
                                                        }
                                                    },
                                                    "protocols": [
                                                        "{PROTOCOL}"
                                                    ],
                                                    "securedBy": [
                                                        "basic"
                                                    ],
                                                    "queryParameters": {
                                                        "projectKey": {
                                                            "name": "projectKey",
                                                            "displayName": "projectKey",
                                                            "type": "string",
                                                            "required": false,
                                                            "repeat": false,
                                                            "description": "the key of the project",
                                                            "__METADATA__": {
                                                                "primitiveValuesMeta": {
                                                                    "displayName": {
                                                                        "calculated": true
                                                                    },
                                                                    "type": {
                                                                        "insertedAsDefault": true
                                                                    },
                                                                    "required": {
                                                                        "insertedAsDefault": true
                                                                    },
                                                                    "repeat": {
                                                                        "insertedAsDefault": true
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "description": "Gets all fields for a given tab",
                                                    "method": "get",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "protocols": {
                                                                "calculated": true
                                                            },
                                                            "securedBy": {
                                                                "calculated": true
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "responses": {
                                                        "200": {
                                                            "code": "200",
                                                            "body": {
                                                                "application/json": {
                                                                    "name": "application/json",
                                                                    "schema": "tabFields",
                                                                    "example": "{\n  \"id\" : \"summary\" ,\n  \"name\" : \"Summary\"\n}",
                                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                                                }
                                                            },
                                                            "description": "Returned if the object was retrieved successful."
                                                        },
                                                        "400": {
                                                            "code": "400",
                                                            "description": "Returned if screen,tab or field does not exist."
                                                        },
                                                        "401": {
                                                            "code": "401",
                                                            "description": "Returned if you do not have permissions"
                                                        }
                                                    },
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json"
                                                        }
                                                    },
                                                    "protocols": [
                                                        "{PROTOCOL}"
                                                    ],
                                                    "securedBy": [
                                                        "basic"
                                                    ],
                                                    "description": "Adds field to the given tab",
                                                    "method": "post",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "protocols": {
                                                                "calculated": true
                                                            },
                                                            "securedBy": {
                                                                "calculated": true
                                                            }
                                                        }
                                                    }
                                                }
                                            ],
                                            "resources": [
                                                {
                                                    "relativeUri": "/{id}",
                                                    "type": "base",
                                                    "securedBy": [
                                                        "basic"
                                                    ],
                                                    "uriParameters": {
                                                        "id": {
                                                            "name": "id",
                                                            "displayName": "id",
                                                            "type": "string",
                                                            "required": true,
                                                            "repeat": false,
                                                            "__METADATA__": {
                                                                "calculated": true,
                                                                "primitiveValuesMeta": {
                                                                    "displayName": {
                                                                        "calculated": true
                                                                    },
                                                                    "type": {
                                                                        "insertedAsDefault": true
                                                                    },
                                                                    "required": {
                                                                        "insertedAsDefault": true
                                                                    },
                                                                    "repeat": {
                                                                        "insertedAsDefault": true
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "methods": [
                                                        {
                                                            "responses": {
                                                                "201": {
                                                                    "code": "201",
                                                                    "description": "Successfully removed field from tab"
                                                                },
                                                                "400": {
                                                                    "code": "400",
                                                                    "description": "Returned if screen or tab does not exist"
                                                                },
                                                                "401": {
                                                                    "code": "401",
                                                                    "description": "Returned if you do not have permissions"
                                                                }
                                                            },
                                                            "body": {
                                                                "application/json": {
                                                                    "name": "application/json"
                                                                }
                                                            },
                                                            "protocols": [
                                                                "{PROTOCOL}"
                                                            ],
                                                            "securedBy": [
                                                                "basic"
                                                            ],
                                                            "description": "Removes field from given tab",
                                                            "method": "delete",
                                                            "__METADATA__": {
                                                                "primitiveValuesMeta": {
                                                                    "protocols": {
                                                                        "calculated": true
                                                                    },
                                                                    "securedBy": {
                                                                        "calculated": true
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "resources": [
                                                        {
                                                            "relativeUri": "/move",
                                                            "type": "base",
                                                            "securedBy": [
                                                                "basic"
                                                            ],
                                                            "methods": [
                                                                {
                                                                    "responses": {
                                                                        "201": {
                                                                            "code": "201",
                                                                            "description": "Successfully moved tab"
                                                                        },
                                                                        "400": {
                                                                            "code": "400",
                                                                            "description": "Returned if screen or tab does not exist. Or move cooridinates invalid."
                                                                        },
                                                                        "401": {
                                                                            "code": "401",
                                                                            "description": "Returned if you do not have permissions"
                                                                        }
                                                                    },
                                                                    "body": {
                                                                        "application/json": {
                                                                            "name": "application/json"
                                                                        }
                                                                    },
                                                                    "protocols": [
                                                                        "{PROTOCOL}"
                                                                    ],
                                                                    "securedBy": [
                                                                        "basic"
                                                                    ],
                                                                    "description": "Moves field on the given tab",
                                                                    "method": "post",
                                                                    "__METADATA__": {
                                                                        "primitiveValuesMeta": {
                                                                            "protocols": {
                                                                                "calculated": true
                                                                            },
                                                                            "securedBy": {
                                                                                "calculated": true
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            ],
                                                            "displayName": "/move",
                                                            "__METADATA__": {
                                                                "primitiveValuesMeta": {
                                                                    "securedBy": {
                                                                        "calculated": true
                                                                    },
                                                                    "displayName": {
                                                                        "calculated": true
                                                                    }
                                                                }
                                                            },
                                                            "relativeUriPathSegments": [
                                                                "move"
                                                            ]
                                                        }
                                                    ],
                                                    "displayName": "/{id}",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "securedBy": {
                                                                "calculated": true
                                                            },
                                                            "displayName": {
                                                                "calculated": true
                                                            }
                                                        }
                                                    },
                                                    "relativeUriPathSegments": [
                                                        "{id}"
                                                    ]
                                                }
                                            ],
                                            "displayName": "/fields",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "securedBy": {
                                                        "calculated": true
                                                    },
                                                    "displayName": {
                                                        "calculated": true
                                                    }
                                                }
                                            },
                                            "relativeUriPathSegments": [
                                                "fields"
                                            ]
                                        },
                                        {
                                            "relativeUri": "/move/{pos}",
                                            "type": "base",
                                            "securedBy": [
                                                "basic"
                                            ],
                                            "uriParameters": {
                                                "pos": {
                                                    "name": "pos",
                                                    "displayName": "pos",
                                                    "type": "integer",
                                                    "required": true,
                                                    "repeat": false,
                                                    "description": "position of tab",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "methods": [
                                                {
                                                    "responses": {
                                                        "201": {
                                                            "code": "201",
                                                            "description": "Successfully moved tab"
                                                        },
                                                        "400": {
                                                            "code": "400",
                                                            "description": "Returned if screen or tab does not exist"
                                                        },
                                                        "401": {
                                                            "code": "401",
                                                            "description": "Returned if you do not have permissions"
                                                        }
                                                    },
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json"
                                                        }
                                                    },
                                                    "protocols": [
                                                        "{PROTOCOL}"
                                                    ],
                                                    "securedBy": [
                                                        "basic"
                                                    ],
                                                    "description": "Moves tab position",
                                                    "method": "post",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "protocols": {
                                                                "calculated": true
                                                            },
                                                            "securedBy": {
                                                                "calculated": true
                                                            }
                                                        }
                                                    }
                                                }
                                            ],
                                            "displayName": "/move/{pos}",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "securedBy": {
                                                        "calculated": true
                                                    },
                                                    "displayName": {
                                                        "calculated": true
                                                    }
                                                }
                                            },
                                            "relativeUriPathSegments": [
                                                "move",
                                                "{pos}"
                                            ]
                                        }
                                    ],
                                    "displayName": "/{tabId}",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "securedBy": {
                                                "calculated": true
                                            },
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "{tabId}"
                                    ]
                                }
                            ],
                            "displayName": "/tabs",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "tabs"
                            ]
                        },
                        {
                            "relativeUri": "/availableFields",
                            "type": "base",
                            "securedBy": [
                                "basic"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "description": "List of available fields for screen"
                                        },
                                        "400": {
                                            "code": "400",
                                            "description": "Returned if screen does not exist"
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "Returned if you do not have permissions"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "description": "Gets available fields for screen. i.e ones that haven't already been added.",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/availableFields",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "availableFields"
                            ]
                        }
                    ],
                    "displayName": "/{screenId}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{screenId}"
                    ]
                },
                {
                    "relativeUri": "/addToDefault/{fieldId}",
                    "type": "base",
                    "securedBy": [
                        "basic"
                    ],
                    "uriParameters": {
                        "fieldId": {
                            "name": "fieldId",
                            "displayName": "fieldId",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "201": {
                                    "code": "201",
                                    "description": "Returned if the object was created successful."
                                },
                                "400": {
                                    "code": "400",
                                    "description": "Returned if screen, tab or field does not exist or field is already present on a selected tab"
                                },
                                "401": {
                                    "code": "401",
                                    "description": "Returned if you do not have administrator permissions"
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "description": "Adds field or custom field to the default tab",
                            "method": "post",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/addToDefault/{fieldId}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "addToDefault",
                        "{fieldId}"
                    ]
                }
            ],
            "displayName": "/screens",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "screens"
            ]
        },
        {
            "relativeUri": "/search",
            "type": "base",
            "securedBy": [
                "basic"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "searchResults",
                                    "example": "{\n  \"expand\" : \"names,schema\" ,\n  \"startAt\" : 0 ,\n  \"maxResults\" : 50 ,\n  \"total\" : 1 ,\n  \"issues\" : [\n    {\n      \"expand\" : \"\" ,\n      \"id\" : \"10001\" ,\n      \"self\" : \"http://www.example.com/jira/rest/api/2/issue/10001\" ,\n      \"key\" : \"HSP-1\"\n    }\n  ]\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"expand\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"startAt\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"maxResults\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"total\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"issues\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"expand\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"key\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                }
                            }
                        },
                        "400": {
                            "code": "400",
                            "description": "Returned if there is a problem with the JQL query."
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "queryParameters": {
                        "jql": {
                            "name": "jql",
                            "displayName": "jql",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "a JQL query string",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "validateQuery": {
                            "name": "validateQuery",
                            "displayName": "validateQuery",
                            "type": "boolean",
                            "required": false,
                            "default": true,
                            "repeat": false,
                            "description": "whether to validate the JQL query",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "fields": {
                            "name": "fields",
                            "displayName": "fields",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "the list of fields to return for each issue. By default, all navigable fields are returned.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "expand": {
                            "name": "expand",
                            "displayName": "expand",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "the parameters to expand",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "maxResults": {
                            "name": "maxResults",
                            "displayName": "maxResults",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "the maximum number of users to return (defaults to 50). The maximum allowed value is 1000. If you specify a value that is higher than this number, your search results will be truncated.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "startAt": {
                            "name": "startAt",
                            "displayName": "startAt",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "the index of the first dashboard to return (0-based). must be 0 or a multiple of maxResults",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Searches for issues using JQL.",
                    "method": "get",
                    "is": [
                        "hasExpand",
                        "hasMaxResults",
                        "hasStartAt"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                },
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "searchResults",
                                    "example": "{\n  \"expand\" : \"names,schema\" ,\n  \"startAt\" : 0 ,\n  \"maxResults\" : 50 ,\n  \"total\" : 1 ,\n  \"issues\" : [\n    {\n      \"expand\" : \"\" ,\n      \"id\" : \"10001\" ,\n      \"self\" : \"http://www.example.com/jira/rest/api/2/issue/10001\" ,\n      \"key\" : \"HSP-1\"\n    }\n  ]\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"expand\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"startAt\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"maxResults\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"total\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"issues\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"expand\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"key\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                }
                            },
                            "description": "Returned if the object was retrieved successful."
                        },
                        "400": {
                            "code": "400",
                            "description": "Returned if there is a problem with the JQL query."
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json",
                            "schema": "searchRequest",
                            "example": "{\n  \"jql\" : \"project = HSP\" ,\n  \"startAt\" : 0 ,\n  \"maxResults\" : 15 ,\n  \"fields\" : [\n    \"summary\" ,\n    \"status\" ,\n    \"assignee\"\n  ]\n}",
                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"jql\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"startAt\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"maxResults\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"fields\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"string\"\n        }\n      ]\n    }\n  }\n}"
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "description": "Performs a search using JQL.",
                    "method": "post",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/search",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "search"
            ]
        },
        {
            "relativeUri": "/securitylevel/{id}",
            "type": "base",
            "securedBy": [
                "basic"
            ],
            "uriParameters": {
                "id": {
                    "name": "id",
                    "displayName": "id",
                    "type": "string",
                    "required": true,
                    "repeat": false,
                    "__METADATA__": {
                        "calculated": true,
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            },
                            "type": {
                                "insertedAsDefault": true
                            },
                            "required": {
                                "insertedAsDefault": true
                            },
                            "repeat": {
                                "insertedAsDefault": true
                            }
                        }
                    }
                }
            },
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "securitylevel",
                                    "example": "{\n  \"self\" : \"http://localhost:8090/jira/rest/api/2/securitylevel/10021\" ,\n  \"id\" : \"10000\" ,\n  \"description\" : \"Only the reporter and internal staff can see this issue.\" ,\n  \"name\" : \"Reporter Only\"\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                }
                            }
                        },
                        "404": {
                            "code": "404",
                            "description": "Returned if the issue type does not exist, or is not visible to the calling user."
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "description": "Returns a full representation of the security level that has the given id.",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/securitylevel/{id}",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "securitylevel",
                "{id}"
            ]
        },
        {
            "relativeUri": "/serverInfo",
            "type": "base",
            "securedBy": [
                "basic"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "serverInfo",
                                    "example": "{\n  \"baseUrl\" : \"http://localhost:8080/jira\" ,\n  \"version\" : \"5.0-SNAPSHOT\" ,\n  \"versionNumbers\" : [\n    5 ,\n    0 ,\n    0\n  ] ,\n  \"buildNumber\" : 582 ,\n  \"buildDate\" : \"2014-06-11T07:33:41.458+0000\" ,\n  \"serverTime\" : \"2014-06-11T07:33:41.458+0000\" ,\n  \"scmInfo\" : \"1f51473f5c7b75c1a69a0090f4832cdc5053702a\" ,\n  \"buildPartnerName\" : \"Example Partner Co.\" ,\n  \"serverTitle\" : \"My Shiny New JIRA Server\"\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"baseUrl\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"version\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"versionNumbers\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"number\"\n        }\n      ]\n    } ,\n    \"buildNumber\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"buildDate\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"serverTime\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"scmInfo\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"buildPartnerName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"serverTitle\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "queryParameters": {
                        "doHealthCheck": {
                            "name": "doHealthCheck",
                            "displayName": "doHealthCheck",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Returns general information about the current JIRA server.",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/serverInfo",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "serverInfo"
            ]
        },
        {
            "relativeUri": "/settings",
            "securedBy": [
                "basic"
            ],
            "resources": [
                {
                    "relativeUri": "/baseUrl",
                    "type": "base",
                    "securedBy": [
                        "basic"
                    ],
                    "methods": [
                        {
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "description": "Sets the base URL that is configured for this JIRA instance.",
                            "method": "put",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/baseUrl",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "baseUrl"
                    ]
                },
                {
                    "relativeUri": "/columns",
                    "type": "base",
                    "securedBy": [
                        "basic"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json"
                                        }
                                    },
                                    "description": "Returns a list of columns for configured for the given user"
                                },
                                "403": {
                                    "code": "403",
                                    "description": "Returned if the user does not have admin permission"
                                },
                                "500": {
                                    "code": "500",
                                    "description": "Returned if an error occurs while retrieving the column configuration."
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "description": "Returns the default system columns for issue navigator. Admin permission will be required.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "description": "Returned when the columns is saved successfully"
                                },
                                "500": {
                                    "code": "500",
                                    "description": "Returned if an error occurs while retrieving the column configuration."
                                }
                            },
                            "body": {
                                "application/x-www-form-urlencoded": {
                                    "name": "application/x-www-form-urlencoded"
                                },
                                "application/json": {
                                    "name": "application/json"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "description": "Sets the default system columns for issue navigator. Admin permission will be required.",
                            "method": "put",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/columns",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "columns"
                    ]
                }
            ],
            "displayName": "/settings",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "settings"
            ]
        },
        {
            "relativeUri": "/status",
            "type": "base",
            "securedBy": [
                "basic"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "issueStatuses",
                                    "example": "[\n  {\n    \"self\" : \"http://localhost:8090/jira/rest/api/2.0/status/10000\" ,\n    \"description\" : \"The issue is currently being worked on.\" ,\n    \"iconUrl\" : \"http://localhost:8090/jira/images/icons/progress.gif\" ,\n    \"name\" : \"In Progress\" ,\n    \"id\" : \"10000\" ,\n    \"statusCategory\" : {\n      \"self\" : \"http://localhost:8090/jira/rest/api/2.0/statuscategory/1\" ,\n      \"id\" : 1 ,\n      \"key\" : \"in-flight\" ,\n      \"colorName\" : \"yellow\" ,\n      \"name\" : \"In Progress\"\n    }\n  } , {\n    \"self\" : \"http://localhost:8090/jira/rest/api/2.0/status/5\" ,\n    \"description\" : \"The issue is closed.\" ,\n    \"iconUrl\" : \"http://localhost:8090/jira/images/icons/closed.gif\" ,\n    \"name\" : \"Closed\" ,\n    \"id\" : \"5\" ,\n    \"statusCategory\" : {\n      \"self\" : \"http://localhost:8090/jira/rest/api/2.0/statuscategory/9\" ,\n      \"id\" : 9 ,\n      \"key\" : \"completed\" ,\n      \"colorName\" : \"green\"\n    }\n  }\n]",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"array\" ,\n  \"items\" : [\n    {\n      \"type\" : \"object\" ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"description\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"iconUrl\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"id\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"statusCategory\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"id\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"key\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"colorName\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      }\n    } , {\n      \"type\" : \"object\" ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"description\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"iconUrl\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"id\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"statusCategory\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"id\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"key\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"colorName\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      }\n    }\n  ]\n}"
                                }
                            }
                        },
                        "404": {
                            "code": "404",
                            "description": "Returned if the requested issue status is not found, or the user does not have permission to view it."
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "description": "Returns a list of all statuses",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/{idOrName}",
                    "type": "base",
                    "securedBy": [
                        "basic"
                    ],
                    "uriParameters": {
                        "idOrName": {
                            "name": "idOrName",
                            "displayName": "idOrName",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "description": "a numeric Status id or a status name",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "issueStatus",
                                            "example": "{\n  \"self\" : \"http://localhost:8090/jira/rest/api/2.0/status/10000\" ,\n  \"description\" : \"The issue is currently being worked on.\" ,\n  \"iconUrl\" : \"http://localhost:8090/jira/images/icons/progress.gif\" ,\n  \"name\" : \"In Progress\" ,\n  \"id\" : \"10000\" ,\n  \"statusCategory\" : {\n    \"self\" : \"http://localhost:8090/jira/rest/api/2.0/statuscategory/1\" ,\n    \"id\" : 1 ,\n    \"key\" : \"in-flight\" ,\n    \"colorName\" : \"yellow\" ,\n    \"name\" : \"In Progress\"\n  }\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"iconUrl\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"statusCategory\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"id\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"key\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"colorName\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
                                        }
                                    }
                                },
                                "404": {
                                    "code": "404",
                                    "description": "Returned if the requested issue status is not found, or the user does not have permission to view it."
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "description": "Returns a full representation of the Status having the given id or name.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/{idOrName}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{idOrName}"
                    ]
                }
            ],
            "displayName": "/status",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "status"
            ]
        },
        {
            "relativeUri": "/statuscategory",
            "type": "base",
            "securedBy": [
                "basic"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "statusCategories",
                                    "example": "[\n  {\n    \"self\" : \"http://localhost:8090/jira/rest/api/2.0/statuscategory/1\" ,\n    \"id\" : 1 ,\n    \"key\" : \"in-flight\" ,\n    \"colorName\" : \"yellow\" ,\n    \"name\" : \"In Progress\"\n  } , {\n    \"self\" : \"http://localhost:8090/jira/rest/api/2.0/statuscategory/9\" ,\n    \"id\" : 9 ,\n    \"key\" : \"completed\" ,\n    \"colorName\" : \"green\"\n  }\n]",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"array\" ,\n  \"items\" : [\n    {\n      \"type\" : \"object\" ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"id\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"key\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"colorName\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } , {\n      \"type\" : \"object\" ,\n      \"properties\" : {\n        \"self\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"id\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"key\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"colorName\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  ]\n}"
                                }
                            }
                        },
                        "404": {
                            "code": "404",
                            "description": "Returned if no status categories are found, or the user does not have permission to view them."
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "description": "Returns a list of all status categories",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/{idOrKey}",
                    "type": "base",
                    "securedBy": [
                        "basic"
                    ],
                    "uriParameters": {
                        "idOrKey": {
                            "name": "idOrKey",
                            "displayName": "idOrKey",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "statusCategory",
                                            "example": "{\n  \"self\" : \"http://localhost:8090/jira/rest/api/2.0/statuscategory/1\" ,\n  \"id\" : 1 ,\n  \"key\" : \"in-flight\" ,\n  \"colorName\" : \"yellow\" ,\n  \"name\" : \"In Progress\"\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"id\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"key\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"colorName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                        }
                                    }
                                },
                                "404": {
                                    "code": "404",
                                    "description": "Returned if the requested issue status category is not found, or the user does not have permission to view it."
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "description": "Returns a full representation of the StatusCategory having the given id or key",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/{idOrKey}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{idOrKey}"
                    ]
                }
            ],
            "displayName": "/statuscategory",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "statuscategory"
            ]
        },
        {
            "relativeUri": "/user",
            "type": "base",
            "securedBy": [
                "basic"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "user",
                                    "example": "{\n  \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n  \"name\" : \"fred\" ,\n  \"emailAddress\" : \"fred@example.com\" ,\n  \"avatarUrls\" : {\n    \"24x24\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=fred\" ,\n    \"16x16\" : \"http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=fred\" ,\n    \"32x32\" : \"http://www.example.com/jira/secure/useravatar?size=medium&ownerId=fred\" ,\n    \"48x48\" : \"http://www.example.com/jira/secure/useravatar?size=large&ownerId=fred\"\n  } ,\n  \"displayName\" : \"Fred F. User\" ,\n  \"active\" : true ,\n  \"timeZone\" : \"Australia/Sydney\" ,\n  \"groups\" : {\n    \"size\" : 3 ,\n    \"items\" : [\n      {\n        \"name\" : \"jira-user\" ,\n        \"self\" : \"http://www.example.com/jira/rest/api/2/group?groupname=jira-user\"\n      } , {\n        \"name\" : \"jira-admin\" ,\n        \"self\" : \"http://www.example.com/jira/rest/api/2/group?groupname=jira-admin\"\n      } , {\n        \"name\" : \"important\" ,\n        \"self\" : \"http://www.example.com/jira/rest/api/2/group?groupname=important\"\n      }\n    ]\n  } ,\n  \"expand\" : \"groups\"\n}",
                                    "schemaContent": "user"
                                }
                            }
                        },
                        "401": {
                            "code": "401",
                            "description": "Returned if the current user is not authenticated."
                        },
                        "404": {
                            "code": "404",
                            "description": "Returned if the requested user is not found."
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "queryParameters": {
                        "username": {
                            "name": "username",
                            "displayName": "username",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "The name of user",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "key": {
                            "name": "key",
                            "displayName": "key",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "a String containing the property key",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Returns a user. This resource cannot be accessed anonymously.",
                    "method": "get",
                    "is": [
                        "hasUsername",
                        "hasKey"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                },
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "userPutRes",
                                    "example": "{\n  \"self\" : \"http://www.example.com/jirahttp://www.example.com/jira/rest/api/2/user/charlie\" ,\n  \"key\" : \"charlie\" ,\n  \"name\" : \"charlie\" ,\n  \"emailAddress\" : \"charlie@atlassian.com\" ,\n  \"displayName\" : \"Charlie of Atlassian\"\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"key\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"emailAddress\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"displayName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                }
                            },
                            "description": "Returned if the object was retrieved successful."
                        },
                        "400": {
                            "code": "400",
                            "description": "Returned if the request is invalid."
                        },
                        "403": {
                            "code": "403",
                            "description": "Returned if the caller user does not have permission to edit the user."
                        },
                        "404": {
                            "code": "404",
                            "description": "Returned if the caller does have permission to edit the user but the user does not exist."
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json",
                            "schema": "userPutReq",
                            "example": "{\n  \"name\" : \"eddie\" ,\n  \"emailAddress\" : \"eddie@atlassian.com\" ,\n  \"displayName\" : \"Eddie of Atlassian\"\n}",
                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"emailAddress\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"displayName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "queryParameters": {
                        "username": {
                            "name": "username",
                            "displayName": "username",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "The name of user",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "key": {
                            "name": "key",
                            "displayName": "key",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "a String containing the property key",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Modify user. The \"value\" fields present will override the existing value. Fields skipped in request will not be changed.",
                    "method": "put",
                    "is": [
                        "hasUsername",
                        "hasKey"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                },
                {
                    "responses": {
                        "201": {
                            "code": "201",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "userPutRes",
                                    "example": "{\n  \"self\" : \"http://www.example.com/jirahttp://www.example.com/jira/rest/api/2/user/charlie\" ,\n  \"key\" : \"charlie\" ,\n  \"name\" : \"charlie\" ,\n  \"emailAddress\" : \"charlie@atlassian.com\" ,\n  \"displayName\" : \"Charlie of Atlassian\"\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"key\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"emailAddress\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"displayName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                }
                            },
                            "description": "Returned if the object was created successful."
                        },
                        "400": {
                            "code": "400",
                            "description": "Returned if the request is invalid."
                        },
                        "403": {
                            "code": "403",
                            "description": "Returned if the caller user does not have permission to create the user."
                        },
                        "500": {
                            "code": "500",
                            "description": "Returned if the user was not created because of other error."
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json",
                            "schema": "userPostReq",
                            "example": "{\n  \"name\" : \"charlie\" ,\n  \"password\" : \"abracadabra\" ,\n  \"emailAddress\" : \"charlie@atlassian.com\" ,\n  \"displayName\" : \"Charlie of Atlassian\"\n}",
                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"password\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"emailAddress\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"displayName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "description": "Create user. By default created user will not be notified with email. If password field is not set then password will be randomly generated.",
                    "method": "post",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                },
                {
                    "responses": {
                        "204": {
                            "code": "204",
                            "description": "Returned if the user was deleted successfully."
                        },
                        "400": {
                            "code": "400",
                            "description": "Returned if the request is invalid or some other server error occurred."
                        },
                        "403": {
                            "code": "403",
                            "description": "Returned if the caller does not have permission to remove the user."
                        },
                        "404": {
                            "code": "404",
                            "description": "Returned if the caller does have permission to remove user but the user does not exist."
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json"
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "queryParameters": {
                        "username": {
                            "name": "username",
                            "displayName": "username",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "The name of user",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "key": {
                            "name": "key",
                            "displayName": "key",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "a String containing the property key",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Removes user.",
                    "method": "delete",
                    "is": [
                        "hasUsername",
                        "hasKey"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/assignable",
                    "securedBy": [
                        "basic"
                    ],
                    "resources": [
                        {
                            "relativeUri": "/multiProjectSearch",
                            "type": "base",
                            "securedBy": [
                                "basic"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "users",
                                                    "example": "[\n  {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n    \"name\" : \"fred\" ,\n    \"avatarUrls\" : {\n      \"24x24\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=fred\" ,\n      \"16x16\" : \"http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=fred\" ,\n      \"32x32\" : \"http://www.example.com/jira/secure/useravatar?size=medium&ownerId=fred\" ,\n      \"48x48\" : \"http://www.example.com/jira/secure/useravatar?size=large&ownerId=fred\"\n    } ,\n    \"displayName\" : \"Fred F. User\" ,\n    \"active\" : false\n  } , {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=andrew\" ,\n    \"name\" : \"andrew\" ,\n    \"avatarUrls\" : {\n      \"24x24\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=andrew\" ,\n      \"16x16\" : \"http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=andrew\" ,\n      \"32x32\" : \"http://www.example.com/jira/secure/useravatar?size=medium&ownerId=andrew\" ,\n      \"48x48\" : \"http://www.example.com/jira/secure/useravatar?size=large&ownerId=andrew\"\n    } ,\n    \"displayName\" : \"Andrew Anderson\" ,\n    \"active\" : false\n  }\n]",
                                                    "schemaContent": "users"
                                                }
                                            }
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "Returned if the current user is not authenticated."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "Returned if the requested user is not found."
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "queryParameters": {
                                        "projectKeys": {
                                            "name": "projectKeys",
                                            "displayName": "projectKeys",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "the keys of the projects we are finding assignable users for, comma-separated",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "username": {
                                            "name": "username",
                                            "displayName": "username",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "The name of user",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "maxResults": {
                                            "name": "maxResults",
                                            "displayName": "maxResults",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "the maximum number of users to return (defaults to 50). The maximum allowed value is 1000. If you specify a value that is higher than this number, your search results will be truncated.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "startAt": {
                                            "name": "startAt",
                                            "displayName": "startAt",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "the index of the first dashboard to return (0-based). must be 0 or a multiple of maxResults",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Returns a list of users that match the search string and can be assigned issues for all the given projects. This resource cannot be accessed anonymously.",
                                    "method": "get",
                                    "is": [
                                        "hasUsername",
                                        "hasMaxResults",
                                        "hasStartAt"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/multiProjectSearch",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "multiProjectSearch"
                            ]
                        },
                        {
                            "relativeUri": "/search",
                            "type": "base",
                            "securedBy": [
                                "basic"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "user",
                                                    "example": "{\n  \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n  \"name\" : \"fred\" ,\n  \"emailAddress\" : \"fred@example.com\" ,\n  \"avatarUrls\" : {\n    \"24x24\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=fred\" ,\n    \"16x16\" : \"http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=fred\" ,\n    \"32x32\" : \"http://www.example.com/jira/secure/useravatar?size=medium&ownerId=fred\" ,\n    \"48x48\" : \"http://www.example.com/jira/secure/useravatar?size=large&ownerId=fred\"\n  } ,\n  \"displayName\" : \"Fred F. User\" ,\n  \"active\" : true ,\n  \"timeZone\" : \"Australia/Sydney\" ,\n  \"groups\" : {\n    \"size\" : 3 ,\n    \"items\" : [\n      {\n        \"name\" : \"jira-user\" ,\n        \"self\" : \"http://www.example.com/jira/rest/api/2/group?groupname=jira-user\"\n      } , {\n        \"name\" : \"jira-admin\" ,\n        \"self\" : \"http://www.example.com/jira/rest/api/2/group?groupname=jira-admin\"\n      } , {\n        \"name\" : \"important\" ,\n        \"self\" : \"http://www.example.com/jira/rest/api/2/group?groupname=important\"\n      }\n    ]\n  } ,\n  \"expand\" : \"groups\"\n}",
                                                    "schemaContent": "user"
                                                }
                                            }
                                        },
                                        "400": {
                                            "code": "400",
                                            "description": "Returned if no project or issue key was provided"
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "Returned if the current user is not authenticated."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "Returned if the requested user is not found."
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "queryParameters": {
                                        "project": {
                                            "name": "project",
                                            "displayName": "project",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "the key of the project we are finding assignable users for",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "issueKey": {
                                            "name": "issueKey",
                                            "displayName": "issueKey",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "the issue key for the issue being edited we need to find assignable users for.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "username": {
                                            "name": "username",
                                            "displayName": "username",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "The name of user",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "maxResults": {
                                            "name": "maxResults",
                                            "displayName": "maxResults",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "the maximum number of users to return (defaults to 50). The maximum allowed value is 1000. If you specify a value that is higher than this number, your search results will be truncated.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "startAt": {
                                            "name": "startAt",
                                            "displayName": "startAt",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "the index of the first dashboard to return (0-based). must be 0 or a multiple of maxResults",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Returns a list of users that match the search string. This resource cannot be accessed anonymously. Please note that this resource should be called with an issue key when a list of assignable users is retrieved for editing. For create only a project key should be supplied. The list of assignable users may be incorrect if it's called with the project key for editing.",
                                    "method": "get",
                                    "is": [
                                        "hasUsername",
                                        "hasMaxResults",
                                        "hasStartAt"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/search",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "search"
                            ]
                        }
                    ],
                    "displayName": "/assignable",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "assignable"
                    ]
                },
                {
                    "relativeUri": "/avatar",
                    "type": "base",
                    "securedBy": [
                        "basic"
                    ],
                    "methods": [
                        {
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "queryParameters": {
                                "username": {
                                    "name": "username",
                                    "displayName": "username",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The name of user",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Update avatar",
                            "method": "put",
                            "is": [
                                "hasUsername"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "201": {
                                    "code": "201",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "avatar",
                                            "example": "{\n  \"id\" : \"1000\" ,\n  \"owner\" : \"fred\" ,\n  \"isSystemAvatar\" : true ,\n  \"isSelected\" : true ,\n  \"selected\" : true\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"owner\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"isSystemAvatar\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"isSelected\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"selected\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
                                        }
                                    },
                                    "description": "Returned if the object was created successful."
                                },
                                "400": {
                                    "code": "400",
                                    "description": "Returned if the cropping coordinates are invalid"
                                },
                                "403": {
                                    "code": "403",
                                    "description": "Returned if the currently authenticated user does not have permission to pick avatar"
                                },
                                "404": {
                                    "code": "404",
                                    "description": "Returned if the currently authenticated user does not have EDIT PROJECT permission."
                                },
                                "500": {
                                    "code": "500",
                                    "description": "Returned if an error occurs while converting temporary avatar to real avatar"
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "cropInstructions",
                                    "example": "{\n  \"cropperWidth\" : 120 ,\n  \"cropperOffsetX\" : 50 ,\n  \"cropperOffsetY\" : 50 ,\n  \"needsCropping\" : false\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"cropperWidth\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"cropperOffsetX\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"cropperOffsetY\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"needsCropping\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "queryParameters": {
                                "username": {
                                    "name": "username",
                                    "displayName": "username",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The name of user",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Converts temporary avatar into a real avatar",
                            "method": "post",
                            "is": [
                                "hasUsername"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/{id}",
                            "type": "base",
                            "securedBy": [
                                "basic"
                            ],
                            "uriParameters": {
                                "id": {
                                    "name": "id",
                                    "displayName": "id",
                                    "type": "string",
                                    "required": true,
                                    "repeat": false,
                                    "__METADATA__": {
                                        "calculated": true,
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "methods": [
                                {
                                    "responses": {
                                        "204": {
                                            "code": "204",
                                            "description": "Returned if the avatar is successfully deleted."
                                        },
                                        "403": {
                                            "code": "403",
                                            "description": "Returned if the currently authenticated user does not have permission to delete the avatar."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "Returned if the avatar does not exist or the currently authenticated user does not have permission to delete it."
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "queryParameters": {
                                        "username": {
                                            "name": "username",
                                            "displayName": "username",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "The name of user",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Deletes avatar",
                                    "method": "delete",
                                    "is": [
                                        "hasUsername"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/{id}",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "{id}"
                            ]
                        },
                        {
                            "relativeUri": "/temporary",
                            "type": "base",
                            "securedBy": [
                                "basic"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "201": {
                                            "code": "201",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "example": "{\n  \"cropperWidth\" : 120 ,\n  \"cropperOffsetX\" : 50 ,\n  \"cropperOffsetY\" : 50 ,\n  \"url\" : \"http://example.com/jira/secure/temporaryavatar?cropped=true\" ,\n  \"needsCropping\" : true\n}"
                                                }
                                            },
                                            "description": "Returned if the object was created successful."
                                        },
                                        "403": {
                                            "code": "403",
                                            "description": "Returned if the request does not conain a valid XSRF token"
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "Returned if the currently authenticated user does not have EDIT PROJECT permission."
                                        },
                                        "500": {
                                            "code": "500",
                                            "description": "Returned if an error occurs while converting temporary avatar to real avatar"
                                        }
                                    },
                                    "body": {
                                        "image/png": {
                                            "name": "image/png"
                                        },
                                        "image/jpeg": {
                                            "name": "image/jpeg"
                                        },
                                        "image/gif": {
                                            "name": "image/gif"
                                        },
                                        "application/json": {
                                            "name": "application/json"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "queryParameters": {
                                        "filename": {
                                            "name": "filename",
                                            "displayName": "filename",
                                            "type": "string",
                                            "required": false,
                                            "example": "filename=mynewavatar.png",
                                            "repeat": false,
                                            "description": "name of file being uploaded",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "size": {
                                            "name": "size",
                                            "displayName": "size",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "size of file",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "username": {
                                            "name": "username",
                                            "displayName": "username",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "The name of user",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Creates temporary avatar. Creating a temporary avatar is part of a 3-step process in uploading a new avatar for a user: upload, crop, confirm.",
                                    "method": "post",
                                    "is": [
                                        "hasUsername"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/temporary",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "temporary"
                            ]
                        }
                    ],
                    "displayName": "/avatar",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "avatar"
                    ]
                },
                {
                    "relativeUri": "/avatars",
                    "type": "base",
                    "securedBy": [
                        "basic"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "avatars",
                                            "example": "{\n  \"system\" : [\n    {\n      \"id\" : \"1000\" ,\n      \"owner\" : \"fred\" ,\n      \"isSystemAvatar\" : true ,\n      \"isSelected\" : true ,\n      \"selected\" : true\n    }\n  ] ,\n  \"custom\" : [\n    {\n      \"id\" : \"1010\" ,\n      \"owner\" : \"andrew\" ,\n      \"isSystemAvatar\" : false ,\n      \"isSelected\" : false ,\n      \"selected\" : false\n    }\n  ]\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"system\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"owner\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"isSystemAvatar\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"isSelected\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"selected\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    } ,\n    \"custom\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"owner\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"isSystemAvatar\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"isSelected\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            } ,\n            \"selected\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                        }
                                    }
                                },
                                "401": {
                                    "code": "401",
                                    "description": "Returned if the current user is not authenticated."
                                },
                                "404": {
                                    "code": "404",
                                    "description": "Returned if the requested user is not found."
                                },
                                "500": {
                                    "code": "500",
                                    "description": "Returned if an error occurs while retrieving the list of avatars."
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "queryParameters": {
                                "username": {
                                    "name": "username",
                                    "displayName": "username",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The name of user",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Returns all avatars which are visible for the currently logged in user.",
                            "method": "get",
                            "is": [
                                "hasUsername"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/avatars",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "avatars"
                    ]
                },
                {
                    "relativeUri": "/columns",
                    "type": "base",
                    "securedBy": [
                        "basic"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "description": "Returns a list of columns for configured for the given user"
                                },
                                "401": {
                                    "code": "401",
                                    "description": "Returned if the current user is not permitted to request the columns for the given user."
                                },
                                "404": {
                                    "code": "404",
                                    "description": "Returned if the requested user is not found."
                                },
                                "500": {
                                    "code": "500",
                                    "description": "Returned if an error occurs while retrieving the column configuration."
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "queryParameters": {
                                "username": {
                                    "name": "username",
                                    "displayName": "username",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The name of user",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Returns the default columns for the given user. Admin permission will be required to get columns for a user other than the currently logged in user.",
                            "method": "get",
                            "is": [
                                "hasUsername"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "description": "Returned when the columns is saved successfully"
                                },
                                "500": {
                                    "code": "500",
                                    "description": "Returned if an error occurs while retrieving the column configuration."
                                }
                            },
                            "body": {
                                "application/x-www-form-urlencoded": {
                                    "name": "application/x-www-form-urlencoded"
                                },
                                "application/json": {
                                    "name": "application/json"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "description": "Sets the default columns for the given user. Admin permission will be required to get columns for a user other than the currently logged in user.",
                            "method": "put",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "204": {
                                    "code": "204",
                                    "description": "Returned when the columns are reset successfully"
                                },
                                "401": {
                                    "code": "401",
                                    "description": "Returned if the current user is not permitted to request the columns for the given user."
                                },
                                "500": {
                                    "code": "500",
                                    "description": "Returned if an error occurs while resetting the column configuration."
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "queryParameters": {
                                "username": {
                                    "name": "username",
                                    "displayName": "username",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The name of user",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Reset the default columns for the given user to the system default. Admin permission will be required to get columns for a user other than the currently logged in user.",
                            "method": "delete",
                            "is": [
                                "hasUsername"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/columns",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "columns"
                    ]
                },
                {
                    "relativeUri": "/password",
                    "type": "base",
                    "securedBy": [
                        "basic"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "204": {
                                    "code": "204",
                                    "description": "Returned if the user exists and the caller has permission to edit it."
                                },
                                "403": {
                                    "code": "403",
                                    "description": "Returned if the caller does not have permission to change the user password."
                                },
                                "404": {
                                    "code": "404",
                                    "description": "Returned if the caller does have permission to change user password but the user does not exist."
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "password",
                                    "example": "{\n  \"password\" : \"abracadabra\"\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"password\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "queryParameters": {
                                "username": {
                                    "name": "username",
                                    "displayName": "username",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The name of user",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "key": {
                                    "name": "key",
                                    "displayName": "key",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "a String containing the property key",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Modify user password.",
                            "method": "put",
                            "is": [
                                "hasUsername",
                                "hasKey"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/password",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "password"
                    ]
                },
                {
                    "relativeUri": "/permission/search",
                    "type": "base",
                    "securedBy": [
                        "basic"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "users",
                                            "example": "[\n  {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n    \"name\" : \"fred\" ,\n    \"avatarUrls\" : {\n      \"24x24\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=fred\" ,\n      \"16x16\" : \"http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=fred\" ,\n      \"32x32\" : \"http://www.example.com/jira/secure/useravatar?size=medium&ownerId=fred\" ,\n      \"48x48\" : \"http://www.example.com/jira/secure/useravatar?size=large&ownerId=fred\"\n    } ,\n    \"displayName\" : \"Fred F. User\" ,\n    \"active\" : false\n  } , {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=andrew\" ,\n    \"name\" : \"andrew\" ,\n    \"avatarUrls\" : {\n      \"24x24\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=andrew\" ,\n      \"16x16\" : \"http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=andrew\" ,\n      \"32x32\" : \"http://www.example.com/jira/secure/useravatar?size=medium&ownerId=andrew\" ,\n      \"48x48\" : \"http://www.example.com/jira/secure/useravatar?size=large&ownerId=andrew\"\n    } ,\n    \"displayName\" : \"Andrew Anderson\" ,\n    \"active\" : false\n  }\n]",
                                            "schemaContent": "users"
                                        }
                                    }
                                },
                                "400": {
                                    "code": "400",
                                    "description": "Returned if no project or issue key was provided or when permissions list is empty or contains an invalid entry"
                                },
                                "401": {
                                    "code": "401",
                                    "description": "Returned if the current user is not authenticated."
                                },
                                "403": {
                                    "code": "403",
                                    "description": "Returned if the current user does not have admin rights for the project."
                                },
                                "404": {
                                    "code": "404",
                                    "description": "Returned if the requested issue or project is not found."
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "queryParameters": {
                                "permissions": {
                                    "name": "permissions",
                                    "displayName": "permissions",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "comma separated list of permissions for project or issue returned users must have, see Permissions JavaDoc for the list of all possible permissions.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "issueKey": {
                                    "name": "issueKey",
                                    "displayName": "issueKey",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "the issue key for the issue for which returned users have specified permissions.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "projectKey": {
                                    "name": "projectKey",
                                    "displayName": "projectKey",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "the optional project key to search for users with if no issueKey is supplied.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "username": {
                                    "name": "username",
                                    "displayName": "username",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The name of user",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "maxResults": {
                                    "name": "maxResults",
                                    "displayName": "maxResults",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "the maximum number of users to return (defaults to 50). The maximum allowed value is 1000. If you specify a value that is higher than this number, your search results will be truncated.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "startAt": {
                                    "name": "startAt",
                                    "displayName": "startAt",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "the index of the first dashboard to return (0-based). must be 0 or a multiple of maxResults",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Returns a list of active users that match the search string and have all specified permissions for the project or issue.\nThis resource can be accessed by users with ADMINISTER_PROJECT permission for the project or global ADMIN or SYSADMIN rights.\n",
                            "method": "get",
                            "is": [
                                "hasUsername",
                                "hasMaxResults",
                                "hasStartAt"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/permission/search",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "permission",
                        "search"
                    ]
                },
                {
                    "relativeUri": "/picker",
                    "type": "base",
                    "securedBy": [
                        "basic"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "usersList",
                                            "example": "{\n  \"users\" : [\n    {\n      \"name\" : \"fred\" ,\n      \"key\" : \"fred\" ,\n      \"html\" : \"fred@example.com\" ,\n      \"displayName\" : \"Fred Grumble\" ,\n      \"avatarUrl\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=fred\"\n    }\n  ] ,\n  \"total\" : 25 ,\n  \"header\" : \"Showing 20 of 25 matching groups\"\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"users\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"key\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"html\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"displayName\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"avatarUrl\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    } ,\n    \"total\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"header\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                        }
                                    }
                                },
                                "401": {
                                    "code": "401",
                                    "description": "Returned if the current user is not authenticated."
                                },
                                "404": {
                                    "code": "404",
                                    "description": "Returned if the requested user is not found."
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "queryParameters": {
                                "query": {
                                    "name": "query",
                                    "displayName": "query",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "A string used to search username, Name or e-mail address",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "showAvatar": {
                                    "name": "showAvatar",
                                    "displayName": "showAvatar",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "exclude": {
                                    "name": "exclude",
                                    "displayName": "exclude",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "maxResults": {
                                    "name": "maxResults",
                                    "displayName": "maxResults",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "the maximum number of users to return (defaults to 50). The maximum allowed value is 1000. If you specify a value that is higher than this number, your search results will be truncated.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Returns a list of users matching query with highlighting. This resource cannot be accessed anonymously.",
                            "method": "get",
                            "is": [
                                "hasMaxResults"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/picker",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "picker"
                    ]
                },
                {
                    "relativeUri": "/search",
                    "type": "base",
                    "securedBy": [
                        "basic"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "users",
                                            "example": "[\n  {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n    \"name\" : \"fred\" ,\n    \"avatarUrls\" : {\n      \"24x24\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=fred\" ,\n      \"16x16\" : \"http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=fred\" ,\n      \"32x32\" : \"http://www.example.com/jira/secure/useravatar?size=medium&ownerId=fred\" ,\n      \"48x48\" : \"http://www.example.com/jira/secure/useravatar?size=large&ownerId=fred\"\n    } ,\n    \"displayName\" : \"Fred F. User\" ,\n    \"active\" : false\n  } , {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=andrew\" ,\n    \"name\" : \"andrew\" ,\n    \"avatarUrls\" : {\n      \"24x24\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=andrew\" ,\n      \"16x16\" : \"http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=andrew\" ,\n      \"32x32\" : \"http://www.example.com/jira/secure/useravatar?size=medium&ownerId=andrew\" ,\n      \"48x48\" : \"http://www.example.com/jira/secure/useravatar?size=large&ownerId=andrew\"\n    } ,\n    \"displayName\" : \"Andrew Anderson\" ,\n    \"active\" : false\n  }\n]",
                                            "schemaContent": "users"
                                        }
                                    }
                                },
                                "401": {
                                    "code": "401",
                                    "description": "Returned if the current user is not authenticated."
                                },
                                "404": {
                                    "code": "404",
                                    "description": "Returned if the requested user is not found."
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "queryParameters": {
                                "startAt": {
                                    "name": "startAt",
                                    "displayName": "startAt",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "the index of the first user to return (0-based)",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "includeActive": {
                                    "name": "includeActive",
                                    "displayName": "includeActive",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "repeat": false,
                                    "description": "If true, then active users are included in the results (default true)",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "includeInactive": {
                                    "name": "includeInactive",
                                    "displayName": "includeInactive",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "If true, then inactive users are included in the results (default false)",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "username": {
                                    "name": "username",
                                    "displayName": "username",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The name of user",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "maxResults": {
                                    "name": "maxResults",
                                    "displayName": "maxResults",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "the maximum number of users to return (defaults to 50). The maximum allowed value is 1000. If you specify a value that is higher than this number, your search results will be truncated.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Returns a list of users that match the search string. This resource cannot be accessed anonymously.",
                            "method": "get",
                            "is": [
                                "hasUsername",
                                "hasMaxResults"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/search",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "search"
                    ]
                },
                {
                    "relativeUri": "/viewissue/search",
                    "type": "base",
                    "securedBy": [
                        "basic"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "users",
                                            "example": "[\n  {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n    \"name\" : \"fred\" ,\n    \"avatarUrls\" : {\n      \"24x24\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=fred\" ,\n      \"16x16\" : \"http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=fred\" ,\n      \"32x32\" : \"http://www.example.com/jira/secure/useravatar?size=medium&ownerId=fred\" ,\n      \"48x48\" : \"http://www.example.com/jira/secure/useravatar?size=large&ownerId=fred\"\n    } ,\n    \"displayName\" : \"Fred F. User\" ,\n    \"active\" : false\n  } , {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=andrew\" ,\n    \"name\" : \"andrew\" ,\n    \"avatarUrls\" : {\n      \"24x24\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=andrew\" ,\n      \"16x16\" : \"http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=andrew\" ,\n      \"32x32\" : \"http://www.example.com/jira/secure/useravatar?size=medium&ownerId=andrew\" ,\n      \"48x48\" : \"http://www.example.com/jira/secure/useravatar?size=large&ownerId=andrew\"\n    } ,\n    \"displayName\" : \"Andrew Anderson\" ,\n    \"active\" : false\n  }\n]",
                                            "schemaContent": "users"
                                        }
                                    }
                                },
                                "400": {
                                    "code": "400",
                                    "description": "Returned if no project or issue key was provided"
                                },
                                "401": {
                                    "code": "401",
                                    "description": "Returned if the current user is not authenticated."
                                },
                                "404": {
                                    "code": "404",
                                    "description": "Returned if the requested issue or project is not found."
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "queryParameters": {
                                "projectKey": {
                                    "name": "projectKey",
                                    "displayName": "projectKey",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "the optional project key to search for users with if no issueKey is supplied.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "issueKey": {
                                    "name": "issueKey",
                                    "displayName": "issueKey",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "the issue key for the issue being edited we need to find assignable users for.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "username": {
                                    "name": "username",
                                    "displayName": "username",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The name of user",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "maxResults": {
                                    "name": "maxResults",
                                    "displayName": "maxResults",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "the maximum number of users to return (defaults to 50). The maximum allowed value is 1000. If you specify a value that is higher than this number, your search results will be truncated.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "startAt": {
                                    "name": "startAt",
                                    "displayName": "startAt",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "the index of the first dashboard to return (0-based). must be 0 or a multiple of maxResults",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Returns a list of active users that match the search string. This resource cannot be accessed anonymously. Given an issue key this resource will provide a list of users that match the search string and have the browse issue permission for the issue provided.",
                            "method": "get",
                            "is": [
                                "hasUsername",
                                "hasMaxResults",
                                "hasStartAt"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/viewissue/search",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "viewissue",
                        "search"
                    ]
                }
            ],
            "displayName": "/user",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "user"
            ]
        },
        {
            "relativeUri": "/version",
            "type": "base",
            "securedBy": [
                "basic"
            ],
            "methods": [
                {
                    "responses": {
                        "201": {
                            "code": "201",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "versionReq",
                                    "example": "{\n  \"description\" : \"An excellent version\" ,\n  \"name\" : \"New Version 1\" ,\n  \"archived\" : false ,\n  \"released\" : true ,\n  \"releaseDate\" : \"2010-07-06\" ,\n  \"userReleaseDate\" : \"6/Jul/2010\" ,\n  \"project\" : \"PXA\" ,\n  \"projectId\" : 10000\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"archived\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"released\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"releaseDate\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"userReleaseDate\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"project\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"projectId\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    }\n  }\n}"
                                }
                            },
                            "description": "Returned if the object was created successful."
                        },
                        "403": {
                            "code": "403",
                            "description": "Returned if the currently authenticated user does not have permission to edit the version."
                        },
                        "404": {
                            "code": "404",
                            "description": "Returned if the version does not exist or the currently authenticated user does not have permission to view it."
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json",
                            "schema": "versionReq",
                            "example": "{\n  \"description\" : \"An excellent version\" ,\n  \"name\" : \"New Version 1\" ,\n  \"archived\" : false ,\n  \"released\" : true ,\n  \"releaseDate\" : \"2010-07-06\" ,\n  \"userReleaseDate\" : \"6/Jul/2010\" ,\n  \"project\" : \"PXA\" ,\n  \"projectId\" : 10000\n}",
                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"archived\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"released\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"releaseDate\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"userReleaseDate\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"project\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"projectId\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    }\n  }\n}"
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "description": "Create a version via POST.",
                    "method": "post",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/{id}",
                    "type": "base",
                    "securedBy": [
                        "basic"
                    ],
                    "uriParameters": {
                        "id": {
                            "name": "id",
                            "displayName": "id",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "version",
                                            "example": "{\n  \"self\" : \"http://www.example.com/jira/rest/api/2/version/10000\" ,\n  \"id\" : \"10000\" ,\n  \"description\" : \"An excellent version\" ,\n  \"name\" : \"New Version 1\" ,\n  \"archived\" : false ,\n  \"released\" : true ,\n  \"releaseDate\" : \"2010-07-06\" ,\n  \"overdue\" : true ,\n  \"userReleaseDate\" : \"6/Jul/2010\" ,\n  \"projectId\" : 10000\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"archived\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"released\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"releaseDate\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"overdue\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"userReleaseDate\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"projectId\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    }\n  }\n}"
                                        }
                                    }
                                },
                                "404": {
                                    "code": "404",
                                    "description": "Returned if the version does not exist or the currently authenticated user does not have permission to view it."
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "queryParameters": {
                                "expand": {
                                    "name": "expand",
                                    "displayName": "expand",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "the parameters to expand",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Returns a project version.",
                            "method": "get",
                            "is": [
                                "hasExpand"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "description": "Returned if the version exists and the currently authenticated user has permission to edit it."
                                },
                                "403": {
                                    "code": "403",
                                    "description": "Returned if the currently authenticated user does not have permission to edit the version."
                                },
                                "404": {
                                    "code": "404",
                                    "description": "Returned if the version does not exist or the currently authenticated user does not have permission to view it."
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "version",
                                    "example": "{\n  \"self\" : \"http://www.example.com/jira/rest/api/2/version/10000\" ,\n  \"id\" : \"10000\" ,\n  \"description\" : \"An excellent version\" ,\n  \"name\" : \"New Version 1\" ,\n  \"archived\" : false ,\n  \"released\" : true ,\n  \"releaseDate\" : \"2010-07-06\" ,\n  \"overdue\" : true ,\n  \"userReleaseDate\" : \"6/Jul/2010\" ,\n  \"projectId\" : 10000\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"archived\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"released\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"releaseDate\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"overdue\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"userReleaseDate\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"projectId\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    }\n  }\n}"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "description": "Modify a version via PUT. Any fields present in the PUT will override existing values. As a convenience, if a field is not present, it is silently ignored.",
                            "method": "put",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "204": {
                                    "code": "204",
                                    "description": "Returned if the version is successfully deleted."
                                },
                                "403": {
                                    "code": "403",
                                    "description": "Returned if the currently authenticated user does not have permission to delete the version."
                                },
                                "404": {
                                    "code": "404",
                                    "description": "Returned if the version does not exist or the currently authenticated user does not have permission to view it."
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "queryParameters": {
                                "moveFixIssuesTo": {
                                    "name": "moveFixIssuesTo",
                                    "displayName": "moveFixIssuesTo",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The version to set fixVersion to on issues where the deleted version is the fix version, If null then the fixVersion is removed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "moveAffectedIssuesTo": {
                                    "name": "moveAffectedIssuesTo",
                                    "displayName": "moveAffectedIssuesTo",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The version to set affectedVersion to on issues where the deleted version is the affected version, If null then the affectedVersion is removed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Delete a project version.",
                            "method": "delete",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/move",
                            "type": "base",
                            "securedBy": [
                                "basic"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "version",
                                                    "example": "{\n  \"self\" : \"http://www.example.com/jira/rest/api/2/version/10000\" ,\n  \"id\" : \"10000\" ,\n  \"description\" : \"An excellent version\" ,\n  \"name\" : \"New Version 1\" ,\n  \"archived\" : false ,\n  \"released\" : true ,\n  \"releaseDate\" : \"2010-07-06\" ,\n  \"overdue\" : true ,\n  \"userReleaseDate\" : \"6/Jul/2010\" ,\n  \"projectId\" : 10000\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"archived\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"released\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"releaseDate\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"overdue\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"userReleaseDate\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"projectId\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    }\n  }\n}"
                                                }
                                            },
                                            "description": "Returned if the object was retrieved successful."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "Returned if the version, or target of the version to move after does not exist or the currently authenticated user does not have permission to view it."
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "positionReq",
                                            "example": "{\n  \"after\" : \"http://www.example.com/jira/rest/api/2/version/10000\"\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"after\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "description": "Modify a version's sequence within a project. The move version bean has 2 alternative field value pairs:\nposition\nAn absolute position, which may have a value of 'First', 'Last', 'Earlier' or 'Later'\nafter\nA version to place this version after. The value should be the self link of another version\n",
                                    "method": "post",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/move",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "move"
                            ]
                        },
                        {
                            "relativeUri": "/relatedIssueCounts",
                            "type": "base",
                            "securedBy": [
                                "basic"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "issueCountBean",
                                                    "example": "{\n  \"self\" : \"http://www.example.com/jira/rest/api/2/version/10000\" ,\n  \"issuesFixedCount\" : 23 ,\n  \"issuesAffectedCount\" : 101\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"issueCount\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    }\n  }\n}"
                                                }
                                            }
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "Returned if the version does not exist or the currently authenticated user does not have permission to view it."
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "description": "Returns a bean containing the number of fixed in and affected issues for the given version.",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/relatedIssueCounts",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "relatedIssueCounts"
                            ]
                        },
                        {
                            "relativeUri": "/unresolvedIssueCount",
                            "type": "base",
                            "securedBy": [
                                "basic"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "issuesUnresolvedCount",
                                                    "example": "{\n  \"self\" : \"http://www.example.com/jira/rest/api/2/version/10000\" ,\n  \"issuesUnresolvedCount\" : 23\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"issuesUnresolvedCount\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    }\n  }\n}"
                                                }
                                            }
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "Returned if the version does not exist or the currently authenticated user does not have permission to view it."
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "description": "Returns the number of unresolved issues for the given version",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/unresolvedIssueCount",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "unresolvedIssueCount"
                            ]
                        },
                        {
                            "relativeUri": "/remotelink",
                            "type": "base",
                            "securedBy": [
                                "basic"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "remoteVersionLinks",
                                                    "example": "{\n  \"links\" : [\n    {\n      \"self\" : \"http://www.example.com/version/10000/SomeGlobalId\" ,\n      \"name\" : \"Version 1\" ,\n      \"link\" : {\n        \"globalId\" : \"SomeGlobalId\" ,\n        \"myCustomLinkProperty\" : true ,\n        \"colors\" : [\n          \"red\" ,\n          \"green\" ,\n          \"blue\"\n        ]\n      }\n    } , {\n      \"self\" : \"http://www.example.com/version/10101/SomeGlobalId\" ,\n      \"name\" : \"Version 2\" ,\n      \"link\" : {\n        \"globalId\" : \"SomeGlobalId\"\n      }\n    }\n  ]\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"links\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"link\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"globalId\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"myCustomLinkProperty\" : {\n                  \"type\" : \"boolean\" ,\n                  \"required\" : false\n                } ,\n                \"colors\" : {\n                  \"type\" : \"array\" ,\n                  \"required\" : false ,\n                  \"items\" : [\n                    {\n                      \"type\" : \"string\"\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        } , {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"link\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"globalId\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                                }
                                            }
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "Returned if the version does not exist or the currently authenticated user does not have permission to view it."
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "description": "Returns the remote version links associated with the given version ID.",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "201": {
                                            "code": "201",
                                            "description": "Returned if the remote version link is created or updated successfully. The document has no content"
                                        },
                                        "400": {
                                            "code": "400",
                                            "description": "Returned if the JSON payload is empty or malformed"
                                        },
                                        "403": {
                                            "code": "403",
                                            "description": "Returned if the currently authenticated user does not have permission to edit the version."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "Returned if the version does not exist or the currently authenticated user does not have permission to view it."
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "remoteVersionLinksReq",
                                            "example": "{\n  \"globalId\" : \"SomeGlobalId\" ,\n  \"myCustomLinkProperty\" : true ,\n  \"colors\" : [\n    \"red\" ,\n    \"green\" ,\n    \"blue\"\n  ] ,\n  \"notes\" : [\n    \"Remote version links may take any well-formed JSON shape that is desired,\" ,\n    \"provided that they fit within the maximum buffer size allowed,\" ,\n    \"which is currently 32,768 characters.\"\n  ]\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"globalId\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"myCustomLinkProperty\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"colors\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"string\"\n        }\n      ]\n    } ,\n    \"notes\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"string\"\n        }\n      ]\n    }\n  }\n}"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "description": "Create a remote version link via POST. The link's global ID will be taken from the JSON payload if provided; otherwise, it will be generated.",
                                    "method": "post",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "204": {
                                            "code": "204",
                                            "description": "Returned if the remote version links are successfully deleted."
                                        },
                                        "403": {
                                            "code": "403",
                                            "description": "Returned if the currently authenticated user does not have administrative rights to the project and thereby cannot delete remote links to the version."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "Returned if the version does not exist, the currently authenticated user does not have permission to view it, or the version does not have any remote links to delete"
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "description": "Delete all remote version links for a given version ID.",
                                    "method": "delete",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "resources": [
                                {
                                    "relativeUri": "/{globalId}",
                                    "type": "base",
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "uriParameters": {
                                        "globalId": {
                                            "name": "globalId",
                                            "displayName": "globalId",
                                            "type": "string",
                                            "required": true,
                                            "repeat": false,
                                            "__METADATA__": {
                                                "calculated": true,
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "methods": [
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "remoteVersionLink",
                                                            "example": "{\n  \"self\" : \"http://www.example.com/version/10000/SomeGlobalId\" ,\n  \"name\" : \"Version 1\" ,\n  \"link\" : {\n    \"globalId\" : \"SomeGlobalId\" ,\n    \"myCustomLinkProperty\" : true ,\n    \"colors\" : [\n      \"red\" ,\n      \"green\" ,\n      \"blue\"\n    ]\n  }\n}",
                                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"link\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"globalId\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"myCustomLinkProperty\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"colors\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"string\"\n            }\n          ]\n        }\n      }\n    }\n  }\n}"
                                                        }
                                                    }
                                                },
                                                "404": {
                                                    "code": "404",
                                                    "description": "Returned if the version or remote version link does not exist or if the user does not have the BROWSE permission for the project that owns the specified version"
                                                }
                                            },
                                            "protocols": [
                                                "{PROTOCOL}"
                                            ],
                                            "securedBy": [
                                                "basic"
                                            ],
                                            "description": "A REST sub-resource representing a remote version link",
                                            "method": "get",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "responses": {
                                                "201": {
                                                    "code": "201",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "remoteVersionLink",
                                                            "example": "{\n  \"self\" : \"http://www.example.com/version/10000/SomeGlobalId\" ,\n  \"name\" : \"Version 1\" ,\n  \"link\" : {\n    \"globalId\" : \"SomeGlobalId\" ,\n    \"myCustomLinkProperty\" : true ,\n    \"colors\" : [\n      \"red\" ,\n      \"green\" ,\n      \"blue\"\n    ]\n  }\n}",
                                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"link\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"globalId\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"myCustomLinkProperty\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"colors\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"string\"\n            }\n          ]\n        }\n      }\n    }\n  }\n}"
                                                        }
                                                    },
                                                    "description": "Returned if the object was created successful."
                                                },
                                                "400": {
                                                    "code": "400",
                                                    "description": "Returned if the JSON payload is empty or malformed"
                                                },
                                                "403": {
                                                    "code": "403",
                                                    "description": "Returned if the currently authenticated user does not have permission to edit the version."
                                                },
                                                "404": {
                                                    "code": "404",
                                                    "description": "Returned if the version does not exist or the currently authenticated user does not have permission to view it."
                                                }
                                            },
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "remoteVersionLinkReq",
                                                    "example": "{\n  \"globalId\" : \"SomeGlobalId\" ,\n  \"myCustomLinkProperty\" : true ,\n  \"colors\" : [\n    \"red\" ,\n    \"green\" ,\n    \"blue\"\n  ] ,\n  \"notes\" : [\n    \"Remote version links may take any well-formed JSON shape that is desired,\" ,\n    \"provided that they fit within the maximum buffer size allowed,\" ,\n    \"which is currently 32,768 characters.\"\n  ]\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"globalId\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"myCustomLinkProperty\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"colors\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"string\"\n        }\n      ]\n    } ,\n    \"notes\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"string\"\n        }\n      ]\n    }\n  }\n}"
                                                }
                                            },
                                            "protocols": [
                                                "{PROTOCOL}"
                                            ],
                                            "securedBy": [
                                                "basic"
                                            ],
                                            "description": "Create a remote version link via POST. The link's global ID will be taken from the JSON payload if provided; otherwise, it will be generated.",
                                            "method": "post",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "responses": {
                                                "204": {
                                                    "code": "204",
                                                    "description": "Returned if the remote version link is successfully deleted."
                                                },
                                                "403": {
                                                    "code": "403",
                                                    "description": "Returned if the currently authenticated user does not have administrative rights to the project and thereby cannot delete remote links to the version."
                                                },
                                                "404": {
                                                    "code": "404",
                                                    "description": "Returned if the version does not exist, the currently authenticated user does not have permission to view it, or the version does not have a link for the given global ID"
                                                }
                                            },
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json"
                                                }
                                            },
                                            "protocols": [
                                                "{PROTOCOL}"
                                            ],
                                            "securedBy": [
                                                "basic"
                                            ],
                                            "description": "Delete a specific remote version link with the given version ID and global ID.",
                                            "method": "delete",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/{globalId}",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "securedBy": {
                                                "calculated": true
                                            },
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "{globalId}"
                                    ]
                                }
                            ],
                            "displayName": "/remotelink",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "remotelink"
                            ]
                        }
                    ],
                    "displayName": "/{id}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{id}"
                    ]
                },
                {
                    "relativeUri": "/remotelink",
                    "type": "base",
                    "securedBy": [
                        "basic"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "remoteVersionLinks",
                                            "example": "{\n  \"links\" : [\n    {\n      \"self\" : \"http://www.example.com/version/10000/SomeGlobalId\" ,\n      \"name\" : \"Version 1\" ,\n      \"link\" : {\n        \"globalId\" : \"SomeGlobalId\" ,\n        \"myCustomLinkProperty\" : true ,\n        \"colors\" : [\n          \"red\" ,\n          \"green\" ,\n          \"blue\"\n        ]\n      }\n    } , {\n      \"self\" : \"http://www.example.com/version/10101/SomeGlobalId\" ,\n      \"name\" : \"Version 2\" ,\n      \"link\" : {\n        \"globalId\" : \"SomeGlobalId\"\n      }\n    }\n  ]\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"links\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"link\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"globalId\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"myCustomLinkProperty\" : {\n                  \"type\" : \"boolean\" ,\n                  \"required\" : false\n                } ,\n                \"colors\" : {\n                  \"type\" : \"array\" ,\n                  \"required\" : false ,\n                  \"items\" : [\n                    {\n                      \"type\" : \"string\"\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        } , {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"self\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"link\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"globalId\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "queryParameters": {
                                "globalId": {
                                    "name": "globalId",
                                    "displayName": "globalId",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "the global ID of the remote resource that is linked to the versions",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Returns the remote version links for a given global ID.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/remotelink",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "remotelink"
                    ]
                }
            ],
            "displayName": "/version",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "version"
            ]
        },
        {
            "relativeUri": "/workflow",
            "type": "base",
            "securedBy": [
                "basic"
            ],
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "description": "Returned if the currently authenticated user has administration permission. Contains a full representation of every workflow."
                        },
                        "401": {
                            "code": "401",
                            "description": "Returned if the currently authenticated user does not have administration permission."
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "queryParameters": {
                        "workflowName": {
                            "name": "workflowName",
                            "displayName": "workflowName",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "the name of the workflow to use.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Returns all workflows.",
                    "method": "get",
                    "is": [
                        "hasWorkflowName"
                    ],
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/{id}/properties",
                    "type": "base",
                    "securedBy": [
                        "basic"
                    ],
                    "uriParameters": {
                        "id": {
                            "name": "id",
                            "displayName": "id",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "transitionProperties",
                                            "example": "{\n  \"key\" : \"jira.i18n.title\" ,\n  \"value\" : \"some.title\" ,\n  \"id\" : \"jira.i18n.title\"\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"key\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"value\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                        }
                                    }
                                },
                                "403": {
                                    "code": "403",
                                    "description": "Returned if the user does not have admin permission"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "queryParameters": {
                                "includeReservedKeys": {
                                    "name": "includeReservedKeys",
                                    "displayName": "includeReservedKeys",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "some keys under the \"jira.\" prefix are editable, some are not. Set this to true in order to include the non-editable keys in the response.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "workflowMode": {
                                    "name": "workflowMode",
                                    "displayName": "workflowMode",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "the type of workflow to use. Can either be \"live\" or \"draft\".",
                                    "enum": [
                                        "draft",
                                        "live"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "workflowName": {
                                    "name": "workflowName",
                                    "displayName": "workflowName",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "the name of the workflow to use.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "key": {
                                    "name": "key",
                                    "displayName": "key",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "a String containing the property key",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Return the property or properties associated with a transition.",
                            "method": "get",
                            "is": [
                                "hasWorkflowName",
                                "hasKey"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "transitionProperties",
                                            "example": "{\n  \"key\" : \"jira.i18n.title\" ,\n  \"value\" : \"some.title\" ,\n  \"id\" : \"jira.i18n.title\"\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"key\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"value\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                        }
                                    },
                                    "description": "Returned if the object was retrieved successful."
                                },
                                "304": {
                                    "code": "304",
                                    "description": "Returned if no changes were actually made by the request (e.g. trying to delete a property that does not exist)."
                                },
                                "400": {
                                    "code": "400",
                                    "description": "Returned if the request is invalid."
                                },
                                "403": {
                                    "code": "403",
                                    "description": "Returned if the user does not have admin permission"
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "transitionPropertyReq",
                                    "example": "{\n  \"value\" : \"createissue\"\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"value\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "queryParameters": {
                                "workflowMode": {
                                    "name": "workflowMode",
                                    "displayName": "workflowMode",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "the type of workflow to use. Can either be \"live\" or \"draft\".",
                                    "enum": [
                                        "draft",
                                        "live"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "workflowName": {
                                    "name": "workflowName",
                                    "displayName": "workflowName",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "the name of the workflow to use.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "key": {
                                    "name": "key",
                                    "displayName": "key",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "a String containing the property key",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Update/add new property to a transition. Trying to update a property that does not exist will result in a new property being added.",
                            "method": "put",
                            "is": [
                                "hasWorkflowName",
                                "hasKey"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "transitionProperties",
                                            "example": "{\n  \"key\" : \"jira.i18n.title\" ,\n  \"value\" : \"some.title\" ,\n  \"id\" : \"jira.i18n.title\"\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"key\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"value\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                        }
                                    },
                                    "description": "Returned if the object was retrieved successful."
                                },
                                "400": {
                                    "code": "400",
                                    "description": "Returned if the request is invalid."
                                },
                                "403": {
                                    "code": "403",
                                    "description": "Returned if the user does not have admin permission"
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "transitionPropertyReq",
                                    "example": "{\n  \"value\" : \"createissue\"\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"value\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "queryParameters": {
                                "workflowMode": {
                                    "name": "workflowMode",
                                    "displayName": "workflowMode",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "the type of workflow to use. Can either be \"live\" or \"draft\".",
                                    "enum": [
                                        "draft",
                                        "live"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "workflowName": {
                                    "name": "workflowName",
                                    "displayName": "workflowName",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "the name of the workflow to use.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "key": {
                                    "name": "key",
                                    "displayName": "key",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "a String containing the property key",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Add a new property to a transition. Trying to add a property that already exists will fail.",
                            "method": "post",
                            "is": [
                                "hasWorkflowName",
                                "hasKey"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "description": "Returned if successful."
                                },
                                "304": {
                                    "code": "304",
                                    "description": "Returned if no changes were actually made by the request (e.g. trying to delete a property that does not exist)."
                                },
                                "400": {
                                    "code": "400",
                                    "description": "Returned if the request is invalid."
                                },
                                "403": {
                                    "code": "403",
                                    "description": "Returned if the user does not have admin permission"
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "queryParameters": {
                                "workflowMode": {
                                    "name": "workflowMode",
                                    "displayName": "workflowMode",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "the type of workflow to use. Can either be \"live\" or \"draft\".",
                                    "enum": [
                                        "draft",
                                        "live"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "workflowName": {
                                    "name": "workflowName",
                                    "displayName": "workflowName",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "the name of the workflow to use.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "key": {
                                    "name": "key",
                                    "displayName": "key",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "a String containing the property key",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Delete a property from the passed transition on the passed workflow. It is not an error to delete a property that does not exist.",
                            "method": "delete",
                            "is": [
                                "hasWorkflowName",
                                "hasKey"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/{id}/properties",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{id}",
                        "properties"
                    ]
                }
            ],
            "displayName": "/workflow",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "workflow"
            ]
        },
        {
            "relativeUri": "/workflowscheme",
            "type": "workflowschemeReturned",
            "securedBy": [
                "basic"
            ],
            "methods": [
                {
                    "responses": {
                        "201": {
                            "code": "201",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "workflowscheme",
                                    "example": "can not resolve examples/workflowscheme-example.json",
                                    "schemaContent": "workflowscheme"
                                }
                            },
                            "description": "Returned if the object was created successful."
                        },
                        "401": {
                            "code": "401",
                            "description": "Returned if there is no user or if the user has not entered a websudo session."
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json",
                            "schema": "workflowschemeReq",
                            "example": "can not resolve examples/workflowschemeReq-example.json",
                            "schemaContent": "workflowschemeReq"
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "securedBy": [
                        "basic"
                    ],
                    "description": "Create a new workflow scheme. The body contains a representation of the new scheme. Values not passed are assumed to be set to their defaults.",
                    "method": "post",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            },
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/{id}",
                    "type": "workflowschemeReturned",
                    "securedBy": [
                        "basic"
                    ],
                    "uriParameters": {
                        "id": {
                            "name": "id",
                            "displayName": "id",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "workflowscheme",
                                            "example": "can not resolve examples/workflowscheme-example.json",
                                            "schemaContent": "workflowscheme"
                                        }
                                    }
                                },
                                "401": {
                                    "code": "401",
                                    "description": "Returned if there is no user or if the user has not entered a websudo session."
                                },
                                "404": {
                                    "code": "404",
                                    "description": "Returned if the requested scheme does not exist."
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "queryParameters": {
                                "returnDraftIfExists": {
                                    "name": "returnDraftIfExists",
                                    "displayName": "returnDraftIfExists",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "when true indicates that a scheme's draft, if it exists, should be queried instead of the scheme itself.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Returns the requested workflow scheme to the caller.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "workflowscheme",
                                            "example": "can not resolve examples/workflowscheme-example.json",
                                            "schemaContent": "workflowscheme"
                                        }
                                    },
                                    "description": "Returned if the object was retrieved successful."
                                },
                                "401": {
                                    "code": "401",
                                    "description": "Returned if there is no user or if the user has not entered a websudo session."
                                },
                                "404": {
                                    "code": "404",
                                    "description": "Returned if the requested scheme does not exist."
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "workflowschemePutReq",
                                    "example": "can not resolve examples/workflowschemePutReq-example.json",
                                    "schemaContent": "workflowschemePutReq"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "description": "Update the passed workflow scheme. The body of the request is a representation of the workflow scheme. Values not passed are assumed to indicate no change for that field. The passed representation can have its updateDraftIfNeeded flag set to true to indicate that the draft should be created and/or updated when the actual scheme cannot be edited (e.g. when the scheme is being used by a project). Values not appearing the body will not be touched.",
                            "method": "put",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "204": {
                                    "code": "204",
                                    "description": "If the scheme was deleted."
                                },
                                "400": {
                                    "code": "400",
                                    "description": "Returned if the requested scheme is active (i.e. being used by JIRA)."
                                },
                                "401": {
                                    "code": "401",
                                    "description": "Returned if there is no user or if the user has not entered a websudo session."
                                },
                                "404": {
                                    "code": "404",
                                    "description": "Returned if the requested scheme does not exist."
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "securedBy": [
                                "basic"
                            ],
                            "description": "Delete the passed workflow scheme.",
                            "method": "delete",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/createdraft",
                            "type": "base",
                            "securedBy": [
                                "basic"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "201": {
                                            "code": "201",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "draft",
                                                    "example": "{\n  \"id\" : 17218781 ,\n  \"name\" : \"Workflow Scheme Two\" ,\n  \"description\" : \"Workflow Scheme Two Description\" ,\n  \"defaultWorkflow\" : \"DefaultWorkflowName\" ,\n  \"issueTypeMappings\" : {\n    \"IsueTypeId2\" : \"WorkflowName\" ,\n    \"IsueTypeId\" : \"WorkflowName\"\n  } ,\n  \"originalDefaultWorkflow\" : \"ParentsDefaultWorkflowName\" ,\n  \"originalIssueTypeMappings\" : {\n    \"IssueTypeId\" : \"WorkflowName2\"\n  } ,\n  \"draft\" : true ,\n  \"lastModifiedUser\" : {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n    \"name\" : \"fred\" ,\n    \"emailAddress\" : \"fred@example.com\" ,\n    \"avatarUrls\" : {\n      \"24x24\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=fred\" ,\n      \"16x16\" : \"http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=fred\" ,\n      \"32x32\" : \"http://www.example.com/jira/secure/useravatar?size=medium&ownerId=fred\" ,\n      \"48x48\" : \"http://www.example.com/jira/secure/useravatar?size=large&ownerId=fred\"\n    } ,\n    \"displayName\" : \"Fred F. User\" ,\n    \"active\" : true ,\n    \"timeZone\" : \"Australia/Sydney\" ,\n    \"groups\" : {\n      \"size\" : 3 ,\n      \"items\" : [\n      ]\n    }\n  } ,\n  \"lastModified\" : \"Today 12:45\" ,\n  \"self\" : \"http://www.example.com/jira/rest/api/2/workflowscheme/17218781/draft\"\n}",
                                                    "schemaContent": "draft"
                                                }
                                            },
                                            "description": "Returned if the object was created successful."
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "Returned if there is no user or if the user has not entered a websudo session."
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "description": "Create a draft for the passed scheme. The draft will be a copy of the state of the parent.",
                                    "method": "post",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/createdraft",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "createdraft"
                            ]
                        },
                        {
                            "relativeUri": "/default",
                            "type": "base",
                            "securedBy": [
                                "basic"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "workflowName",
                                                    "example": "{\n  \"workflow\" : \"WorkflowName\"\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"workflow\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                                }
                                            }
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "Returned if there is no user or if the user has not entered a websudo session."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "Returned when the workflow scheme does not exist."
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "queryParameters": {
                                        "returnDraftIfExists": {
                                            "name": "returnDraftIfExists",
                                            "displayName": "returnDraftIfExists",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "when true indicates that a scheme's draft, if it exists, should be queried instead of the scheme itself.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Return the default workflow from the passed workflow scheme.",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "workflowscheme",
                                                    "example": "{\n  \"id\" : 101010 ,\n  \"name\" : \"Workflow Scheme One\" ,\n  \"description\" : \"Workflow Scheme One Description\" ,\n  \"defaultWorkflow\" : \"DefaultWorkflowName\" ,\n  \"issueTypeMappings\" : {\n    \"IsueTypeId2\" : \"WorkflowName\" ,\n    \"IsueTypeId\" : \"WorkflowName\"\n  } ,\n  \"draft\" : false ,\n  \"self\" : \"http://www.example.com/jira/rest/api/2/workflowscheme/101010\"\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"defaultWorkflow\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"issueTypeMappings\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"IsueTypeId2\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"IsueTypeId\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"draft\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                                }
                                            },
                                            "description": "Returned if the object was retrieved successful."
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "Returned if there is no user or if the user has not entered a websudo session."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "Returned if the scheme does not exist."
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "workflowNameReq",
                                            "example": "{\n  \"workflow\" : \"WorkflowName\" ,\n  \"updateDraftIfNeeded\" : false\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"workflow\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"updateDraftIfNeeded\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "description": "Set the default workflow for the passed workflow scheme. The passed representation can have its updateDraftIfNeeded flag set to true to indicate that the draft should be created/updated when the actual scheme cannot be edited.",
                                    "method": "put",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "workflowscheme",
                                                    "example": "{\n  \"id\" : 101010 ,\n  \"name\" : \"Workflow Scheme One\" ,\n  \"description\" : \"Workflow Scheme One Description\" ,\n  \"defaultWorkflow\" : \"DefaultWorkflowName\" ,\n  \"issueTypeMappings\" : {\n    \"IsueTypeId2\" : \"WorkflowName\" ,\n    \"IsueTypeId\" : \"WorkflowName\"\n  } ,\n  \"draft\" : false ,\n  \"self\" : \"http://www.example.com/jira/rest/api/2/workflowscheme/101010\"\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"defaultWorkflow\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"issueTypeMappings\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"IsueTypeId2\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"IsueTypeId\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"draft\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                                }
                                            },
                                            "description": "Returned if successful."
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "Returned if there is no user or if the user has not entered a websudo session."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "Returned if the scheme does not exist."
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "queryParameters": {
                                        "updateDraftIfNeeded": {
                                            "name": "updateDraftIfNeeded",
                                            "displayName": "updateDraftIfNeeded",
                                            "type": "boolean",
                                            "required": false,
                                            "repeat": false,
                                            "description": "when true will create and return a draft when the workflow scheme cannot be edited (e.g. when it is being used by a project).",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Remove the default workflow from the passed workflow scheme.",
                                    "method": "delete",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/default",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "default"
                            ]
                        },
                        {
                            "relativeUri": "/draft",
                            "type": "base",
                            "securedBy": [
                                "basic"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "draft",
                                                    "example": "{\n  \"id\" : 17218781 ,\n  \"name\" : \"Workflow Scheme Two\" ,\n  \"description\" : \"Workflow Scheme Two Description\" ,\n  \"defaultWorkflow\" : \"DefaultWorkflowName\" ,\n  \"issueTypeMappings\" : {\n    \"IsueTypeId2\" : \"WorkflowName\" ,\n    \"IsueTypeId\" : \"WorkflowName\"\n  } ,\n  \"originalDefaultWorkflow\" : \"ParentsDefaultWorkflowName\" ,\n  \"originalIssueTypeMappings\" : {\n    \"IssueTypeId\" : \"WorkflowName2\"\n  } ,\n  \"draft\" : true ,\n  \"lastModifiedUser\" : {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n    \"name\" : \"fred\" ,\n    \"emailAddress\" : \"fred@example.com\" ,\n    \"avatarUrls\" : {\n      \"24x24\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=fred\" ,\n      \"16x16\" : \"http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=fred\" ,\n      \"32x32\" : \"http://www.example.com/jira/secure/useravatar?size=medium&ownerId=fred\" ,\n      \"48x48\" : \"http://www.example.com/jira/secure/useravatar?size=large&ownerId=fred\"\n    } ,\n    \"displayName\" : \"Fred F. User\" ,\n    \"active\" : true ,\n    \"timeZone\" : \"Australia/Sydney\" ,\n    \"groups\" : {\n      \"size\" : 3 ,\n      \"items\" : [\n      ]\n    }\n  } ,\n  \"lastModified\" : \"Today 12:45\" ,\n  \"self\" : \"http://www.example.com/jira/rest/api/2/workflowscheme/17218781/draft\"\n}",
                                                    "schemaContent": "draft"
                                                }
                                            }
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "Returned if there is no user or if the user has not entered a websudo session."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "Returned if the requested draft scheme does not exist."
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "description": "Returns the requested draft workflow scheme to the caller.",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "draft",
                                                    "example": "{\n  \"id\" : 17218781 ,\n  \"name\" : \"Workflow Scheme Two\" ,\n  \"description\" : \"Workflow Scheme Two Description\" ,\n  \"defaultWorkflow\" : \"DefaultWorkflowName\" ,\n  \"issueTypeMappings\" : {\n    \"IsueTypeId2\" : \"WorkflowName\" ,\n    \"IsueTypeId\" : \"WorkflowName\"\n  } ,\n  \"originalDefaultWorkflow\" : \"ParentsDefaultWorkflowName\" ,\n  \"originalIssueTypeMappings\" : {\n    \"IssueTypeId\" : \"WorkflowName2\"\n  } ,\n  \"draft\" : true ,\n  \"lastModifiedUser\" : {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n    \"name\" : \"fred\" ,\n    \"emailAddress\" : \"fred@example.com\" ,\n    \"avatarUrls\" : {\n      \"24x24\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=fred\" ,\n      \"16x16\" : \"http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=fred\" ,\n      \"32x32\" : \"http://www.example.com/jira/secure/useravatar?size=medium&ownerId=fred\" ,\n      \"48x48\" : \"http://www.example.com/jira/secure/useravatar?size=large&ownerId=fred\"\n    } ,\n    \"displayName\" : \"Fred F. User\" ,\n    \"active\" : true ,\n    \"timeZone\" : \"Australia/Sydney\" ,\n    \"groups\" : {\n      \"size\" : 3 ,\n      \"items\" : [\n      ]\n    }\n  } ,\n  \"lastModified\" : \"Today 12:45\" ,\n  \"self\" : \"http://www.example.com/jira/rest/api/2/workflowscheme/17218781/draft\"\n}",
                                                    "schemaContent": "draft"
                                                }
                                            },
                                            "description": "Returned if the object was retrieved successful."
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "Returned if there is no user or if the user has not entered a websudo session."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "Returned if the requested draft scheme does not exist."
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "workflowschemePutReq",
                                            "example": "{\n  \"id\" : 57585 ,\n  \"name\" : \"Updated Workflow Scheme Name\" ,\n  \"description\" : \"Updated Workflow Scheme Name\" ,\n  \"defaultWorkflow\" : \"DefaultWorkflowName\" ,\n  \"issueTypeMappings\" : {\n    \"IsueTypeId\" : \"WorkflowName\"\n  } ,\n  \"updateDraftIfNeeded\" : false\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"defaultWorkflow\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"issueTypeMappings\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"IsueTypeId\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"updateDraftIfNeeded\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "description": "Update a draft workflow scheme. The draft will created if necessary. The body is a representation of the workflow scheme. Values not passed are assumed to indicate no change for that field.",
                                    "method": "put",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "204": {
                                            "code": "204",
                                            "description": "If the scheme was deleted."
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "Returned if there is no user or if the user has not entered a websudo session."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "Returned if the requested draft scheme does not exist."
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "description": "Delete the passed draft workflow scheme.",
                                    "method": "delete",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "resources": [
                                {
                                    "relativeUri": "/default",
                                    "type": "base",
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "methods": [
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "workflowName",
                                                            "example": "{\n  \"workflow\" : \"WorkflowName\"\n}",
                                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"workflow\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                                        }
                                                    }
                                                },
                                                "401": {
                                                    "code": "401",
                                                    "description": "Returned if there is no user or if the user has not entered a websudo session."
                                                },
                                                "404": {
                                                    "code": "404",
                                                    "description": "Returned when the workflow scheme does not exist."
                                                }
                                            },
                                            "protocols": [
                                                "{PROTOCOL}"
                                            ],
                                            "securedBy": [
                                                "basic"
                                            ],
                                            "description": "Return the default workflow from the passed draft workflow scheme to the caller.",
                                            "method": "get",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "draft",
                                                            "example": "{\n  \"id\" : 17218781 ,\n  \"name\" : \"Workflow Scheme Two\" ,\n  \"description\" : \"Workflow Scheme Two Description\" ,\n  \"defaultWorkflow\" : \"DefaultWorkflowName\" ,\n  \"issueTypeMappings\" : {\n    \"IsueTypeId2\" : \"WorkflowName\" ,\n    \"IsueTypeId\" : \"WorkflowName\"\n  } ,\n  \"originalDefaultWorkflow\" : \"ParentsDefaultWorkflowName\" ,\n  \"originalIssueTypeMappings\" : {\n    \"IssueTypeId\" : \"WorkflowName2\"\n  } ,\n  \"draft\" : true ,\n  \"lastModifiedUser\" : {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n    \"name\" : \"fred\" ,\n    \"emailAddress\" : \"fred@example.com\" ,\n    \"avatarUrls\" : {\n      \"24x24\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=fred\" ,\n      \"16x16\" : \"http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=fred\" ,\n      \"32x32\" : \"http://www.example.com/jira/secure/useravatar?size=medium&ownerId=fred\" ,\n      \"48x48\" : \"http://www.example.com/jira/secure/useravatar?size=large&ownerId=fred\"\n    } ,\n    \"displayName\" : \"Fred F. User\" ,\n    \"active\" : true ,\n    \"timeZone\" : \"Australia/Sydney\" ,\n    \"groups\" : {\n      \"size\" : 3 ,\n      \"items\" : [\n      ]\n    }\n  } ,\n  \"lastModified\" : \"Today 12:45\" ,\n  \"self\" : \"http://www.example.com/jira/rest/api/2/workflowscheme/17218781/draft\"\n}",
                                                            "schemaContent": "draft"
                                                        }
                                                    },
                                                    "description": "Returned if the object was retrieved successful."
                                                },
                                                "401": {
                                                    "code": "401",
                                                    "description": "Returned if there is no user or if the user has not entered a websudo session."
                                                },
                                                "404": {
                                                    "code": "404",
                                                    "description": "Returned when the workflow scheme does not exist."
                                                }
                                            },
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "workflowNameReq",
                                                    "example": "{\n  \"workflow\" : \"WorkflowName\" ,\n  \"updateDraftIfNeeded\" : false\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"workflow\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"updateDraftIfNeeded\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
                                                }
                                            },
                                            "protocols": [
                                                "{PROTOCOL}"
                                            ],
                                            "securedBy": [
                                                "basic"
                                            ],
                                            "description": "Set the default workflow for the passed draft workflow scheme.",
                                            "method": "put",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "draft",
                                                            "example": "{\n  \"id\" : 17218781 ,\n  \"name\" : \"Workflow Scheme Two\" ,\n  \"description\" : \"Workflow Scheme Two Description\" ,\n  \"defaultWorkflow\" : \"DefaultWorkflowName\" ,\n  \"issueTypeMappings\" : {\n    \"IsueTypeId2\" : \"WorkflowName\" ,\n    \"IsueTypeId\" : \"WorkflowName\"\n  } ,\n  \"originalDefaultWorkflow\" : \"ParentsDefaultWorkflowName\" ,\n  \"originalIssueTypeMappings\" : {\n    \"IssueTypeId\" : \"WorkflowName2\"\n  } ,\n  \"draft\" : true ,\n  \"lastModifiedUser\" : {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n    \"name\" : \"fred\" ,\n    \"emailAddress\" : \"fred@example.com\" ,\n    \"avatarUrls\" : {\n      \"24x24\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=fred\" ,\n      \"16x16\" : \"http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=fred\" ,\n      \"32x32\" : \"http://www.example.com/jira/secure/useravatar?size=medium&ownerId=fred\" ,\n      \"48x48\" : \"http://www.example.com/jira/secure/useravatar?size=large&ownerId=fred\"\n    } ,\n    \"displayName\" : \"Fred F. User\" ,\n    \"active\" : true ,\n    \"timeZone\" : \"Australia/Sydney\" ,\n    \"groups\" : {\n      \"size\" : 3 ,\n      \"items\" : [\n      ]\n    }\n  } ,\n  \"lastModified\" : \"Today 12:45\" ,\n  \"self\" : \"http://www.example.com/jira/rest/api/2/workflowscheme/17218781/draft\"\n}",
                                                            "schemaContent": "draft"
                                                        }
                                                    },
                                                    "description": "Returned if successful."
                                                },
                                                "401": {
                                                    "code": "401",
                                                    "description": "Returned if there is no user or if the user has not entered a websudo session."
                                                },
                                                "404": {
                                                    "code": "404",
                                                    "description": "Returned when the workflow scheme does not exist."
                                                }
                                            },
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json"
                                                }
                                            },
                                            "protocols": [
                                                "{PROTOCOL}"
                                            ],
                                            "securedBy": [
                                                "basic"
                                            ],
                                            "description": "Remove the default workflow from the passed draft workflow scheme.",
                                            "method": "delete",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/default",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "securedBy": {
                                                "calculated": true
                                            },
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "default"
                                    ]
                                },
                                {
                                    "relativeUri": "/issuetype/{issueType}",
                                    "type": "base",
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "uriParameters": {
                                        "issueType": {
                                            "name": "issueType",
                                            "displayName": "issueType",
                                            "type": "string",
                                            "required": true,
                                            "repeat": false,
                                            "__METADATA__": {
                                                "calculated": true,
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "methods": [
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "workflowIssueType",
                                                            "example": "{\n  \"issueType\" : \"IssueTypeId\" ,\n  \"workflow\" : \"WorkflowName\"\n}",
                                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"issueType\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"workflow\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                                        }
                                                    }
                                                },
                                                "401": {
                                                    "code": "401",
                                                    "description": "Returned if there is no user or if the user has not entered a websudo session."
                                                },
                                                "404": {
                                                    "code": "404",
                                                    "description": "Returned if either the requested scheme or issue type does not exist."
                                                }
                                            },
                                            "protocols": [
                                                "{PROTOCOL}"
                                            ],
                                            "securedBy": [
                                                "basic"
                                            ],
                                            "description": "Returns the issue type mapping for the passed draft workflow scheme.",
                                            "method": "get",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "draft",
                                                            "example": "{\n  \"id\" : 17218781 ,\n  \"name\" : \"Workflow Scheme Two\" ,\n  \"description\" : \"Workflow Scheme Two Description\" ,\n  \"defaultWorkflow\" : \"DefaultWorkflowName\" ,\n  \"issueTypeMappings\" : {\n    \"IsueTypeId2\" : \"WorkflowName\" ,\n    \"IsueTypeId\" : \"WorkflowName\"\n  } ,\n  \"originalDefaultWorkflow\" : \"ParentsDefaultWorkflowName\" ,\n  \"originalIssueTypeMappings\" : {\n    \"IssueTypeId\" : \"WorkflowName2\"\n  } ,\n  \"draft\" : true ,\n  \"lastModifiedUser\" : {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n    \"name\" : \"fred\" ,\n    \"emailAddress\" : \"fred@example.com\" ,\n    \"avatarUrls\" : {\n      \"24x24\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=fred\" ,\n      \"16x16\" : \"http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=fred\" ,\n      \"32x32\" : \"http://www.example.com/jira/secure/useravatar?size=medium&ownerId=fred\" ,\n      \"48x48\" : \"http://www.example.com/jira/secure/useravatar?size=large&ownerId=fred\"\n    } ,\n    \"displayName\" : \"Fred F. User\" ,\n    \"active\" : true ,\n    \"timeZone\" : \"Australia/Sydney\" ,\n    \"groups\" : {\n      \"size\" : 3 ,\n      \"items\" : [\n      ]\n    }\n  } ,\n  \"lastModified\" : \"Today 12:45\" ,\n  \"self\" : \"http://www.example.com/jira/rest/api/2/workflowscheme/17218781/draft\"\n}",
                                                            "schemaContent": "draft"
                                                        }
                                                    },
                                                    "description": "Returned if the object was retrieved successful."
                                                },
                                                "401": {
                                                    "code": "401",
                                                    "description": "Returned if there is no user or if the user has not entered a websudo session."
                                                },
                                                "404": {
                                                    "code": "404",
                                                    "description": "Returned if either the requested scheme or issue type does not exist."
                                                }
                                            },
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "workflowIssueTypeReq",
                                                    "example": "{\n  \"issueType\" : \"IssueTypeId\" ,\n  \"workflow\" : \"WorkflowName\" ,\n  \"updateDraftIfNeeded\" : false\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"issueType\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"workflow\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"updateDraftIfNeeded\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
                                                }
                                            },
                                            "protocols": [
                                                "{PROTOCOL}"
                                            ],
                                            "securedBy": [
                                                "basic"
                                            ],
                                            "description": "Set the issue type mapping for the passed draft scheme. The passed representation can have its updateDraftIfNeeded flag set to true to indicate that the draft should be created/updated when the actual scheme cannot be edited.",
                                            "method": "put",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "draft",
                                                            "example": "{\n  \"id\" : 17218781 ,\n  \"name\" : \"Workflow Scheme Two\" ,\n  \"description\" : \"Workflow Scheme Two Description\" ,\n  \"defaultWorkflow\" : \"DefaultWorkflowName\" ,\n  \"issueTypeMappings\" : {\n    \"IsueTypeId2\" : \"WorkflowName\" ,\n    \"IsueTypeId\" : \"WorkflowName\"\n  } ,\n  \"originalDefaultWorkflow\" : \"ParentsDefaultWorkflowName\" ,\n  \"originalIssueTypeMappings\" : {\n    \"IssueTypeId\" : \"WorkflowName2\"\n  } ,\n  \"draft\" : true ,\n  \"lastModifiedUser\" : {\n    \"self\" : \"http://www.example.com/jira/rest/api/2/user?username=fred\" ,\n    \"name\" : \"fred\" ,\n    \"emailAddress\" : \"fred@example.com\" ,\n    \"avatarUrls\" : {\n      \"24x24\" : \"http://www.example.com/jira/secure/useravatar?size=small&ownerId=fred\" ,\n      \"16x16\" : \"http://www.example.com/jira/secure/useravatar?size=xsmall&ownerId=fred\" ,\n      \"32x32\" : \"http://www.example.com/jira/secure/useravatar?size=medium&ownerId=fred\" ,\n      \"48x48\" : \"http://www.example.com/jira/secure/useravatar?size=large&ownerId=fred\"\n    } ,\n    \"displayName\" : \"Fred F. User\" ,\n    \"active\" : true ,\n    \"timeZone\" : \"Australia/Sydney\" ,\n    \"groups\" : {\n      \"size\" : 3 ,\n      \"items\" : [\n      ]\n    }\n  } ,\n  \"lastModified\" : \"Today 12:45\" ,\n  \"self\" : \"http://www.example.com/jira/rest/api/2/workflowscheme/17218781/draft\"\n}",
                                                            "schemaContent": "draft"
                                                        }
                                                    },
                                                    "description": "Returned if successful."
                                                },
                                                "401": {
                                                    "code": "401",
                                                    "description": "Returned if there is no user or if the user has not entered a websudo session."
                                                },
                                                "404": {
                                                    "code": "404",
                                                    "description": "Returned if either the requested scheme or issue type does not exist."
                                                }
                                            },
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json"
                                                }
                                            },
                                            "protocols": [
                                                "{PROTOCOL}"
                                            ],
                                            "securedBy": [
                                                "basic"
                                            ],
                                            "description": "Remove the specified issue type mapping from the draft scheme.",
                                            "method": "delete",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/issuetype/{issueType}",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "securedBy": {
                                                "calculated": true
                                            },
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "issuetype",
                                        "{issueType}"
                                    ]
                                },
                                {
                                    "relativeUri": "/workflow",
                                    "type": "base",
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "methods": [
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "workflowMappings",
                                                            "example": "{\n  \"workflow\" : \"WorkflowName\" ,\n  \"issueTypes\" : [\n    \"IssueTypeId\" ,\n    \"IssueTypeId2\"\n  ] ,\n  \"defaultMapping\" : false\n}",
                                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"workflow\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"issueTypes\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"string\"\n        }\n      ]\n    } ,\n    \"defaultMapping\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
                                                        }
                                                    }
                                                },
                                                "401": {
                                                    "code": "401",
                                                    "description": "Returned if there is no user or if the user has not entered a websudo session."
                                                },
                                                "404": {
                                                    "code": "404",
                                                    "description": "Returned if either the requested scheme or workflow does not exist."
                                                }
                                            },
                                            "protocols": [
                                                "{PROTOCOL}"
                                            ],
                                            "securedBy": [
                                                "basic"
                                            ],
                                            "queryParameters": {
                                                "workflowName": {
                                                    "name": "workflowName",
                                                    "displayName": "workflowName",
                                                    "type": "string",
                                                    "required": false,
                                                    "repeat": false,
                                                    "description": "the name of the workflow to use.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "description": "Returns the draft workflow mappings or requested mapping to the caller.",
                                            "method": "get",
                                            "is": [
                                                "hasWorkflowName"
                                            ],
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "workflowscheme",
                                                            "example": "{\n  \"id\" : 101010 ,\n  \"name\" : \"Workflow Scheme One\" ,\n  \"description\" : \"Workflow Scheme One Description\" ,\n  \"defaultWorkflow\" : \"DefaultWorkflowName\" ,\n  \"issueTypeMappings\" : {\n    \"IsueTypeId2\" : \"WorkflowName\" ,\n    \"IsueTypeId\" : \"WorkflowName\"\n  } ,\n  \"draft\" : false ,\n  \"self\" : \"http://www.example.com/jira/rest/api/2/workflowscheme/101010\"\n}",
                                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"defaultWorkflow\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"issueTypeMappings\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"IsueTypeId2\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"IsueTypeId\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"draft\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                                        }
                                                    },
                                                    "description": "Returned if the object was retrieved successful."
                                                },
                                                "401": {
                                                    "code": "401",
                                                    "description": "Returned if there is no user or if the user has not entered a websudo session."
                                                }
                                            },
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "workflowMappingsReq",
                                                    "example": "{\n  \"workflow\" : \"WorkflowName3\" ,\n  \"issueTypes\" : [\n    \"IssueTypeId\"\n  ] ,\n  \"updateDraftIfNeeded\" : true\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"workflow\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"issueTypes\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"string\"\n        }\n      ]\n    } ,\n    \"updateDraftIfNeeded\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
                                                }
                                            },
                                            "protocols": [
                                                "{PROTOCOL}"
                                            ],
                                            "securedBy": [
                                                "basic"
                                            ],
                                            "queryParameters": {
                                                "workflowName": {
                                                    "name": "workflowName",
                                                    "displayName": "workflowName",
                                                    "type": "string",
                                                    "required": false,
                                                    "repeat": false,
                                                    "description": "the name of the workflow to use.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "description": "Update the draft scheme to include the passed mapping. The body is a representation of the workflow mapping. Values not passed are assumed to indicate no change for that field.",
                                            "method": "put",
                                            "is": [
                                                "hasWorkflowName"
                                            ],
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "workflowscheme",
                                                            "example": "{\n  \"id\" : 101010 ,\n  \"name\" : \"Workflow Scheme One\" ,\n  \"description\" : \"Workflow Scheme One Description\" ,\n  \"defaultWorkflow\" : \"DefaultWorkflowName\" ,\n  \"issueTypeMappings\" : {\n    \"IsueTypeId2\" : \"WorkflowName\" ,\n    \"IsueTypeId\" : \"WorkflowName\"\n  } ,\n  \"draft\" : false ,\n  \"self\" : \"http://www.example.com/jira/rest/api/2/workflowscheme/101010\"\n}",
                                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"id\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"defaultWorkflow\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"issueTypeMappings\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"IsueTypeId2\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"IsueTypeId\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"draft\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"self\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                                        }
                                                    },
                                                    "description": "The scheme with the workflow deleted."
                                                },
                                                "401": {
                                                    "code": "401",
                                                    "description": "Returned if there is no user or if the user has not entered a websudo session."
                                                },
                                                "404": {
                                                    "code": "404",
                                                    "description": "Returned if either the requested scheme or workflow does not exist."
                                                }
                                            },
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json"
                                                }
                                            },
                                            "protocols": [
                                                "{PROTOCOL}"
                                            ],
                                            "securedBy": [
                                                "basic"
                                            ],
                                            "queryParameters": {
                                                "workflowName": {
                                                    "name": "workflowName",
                                                    "displayName": "workflowName",
                                                    "type": "string",
                                                    "required": false,
                                                    "repeat": false,
                                                    "description": "the name of the workflow to use.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "description": "Delete the passed workflow from the draft workflow scheme.",
                                            "method": "delete",
                                            "is": [
                                                "hasWorkflowName"
                                            ],
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    },
                                                    "securedBy": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/workflow",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "securedBy": {
                                                "calculated": true
                                            },
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "workflow"
                                    ]
                                }
                            ],
                            "displayName": "/draft",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "draft"
                            ]
                        },
                        {
                            "relativeUri": "/issuetype/{issueType}",
                            "type": "workflowschemeReturned",
                            "securedBy": [
                                "basic"
                            ],
                            "uriParameters": {
                                "issueType": {
                                    "name": "issueType",
                                    "displayName": "issueType",
                                    "type": "string",
                                    "required": true,
                                    "repeat": false,
                                    "__METADATA__": {
                                        "calculated": true,
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "workflowIssueType",
                                                    "example": "{\n  \"issueType\" : \"IssueTypeId\" ,\n  \"workflow\" : \"WorkflowName\"\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"issueType\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"workflow\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                                }
                                            }
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "Returned if there is no user or if the user has not entered a websudo session."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "Returned if either the requested scheme or workflow does not exist."
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "queryParameters": {
                                        "returnDraftIfExists": {
                                            "name": "returnDraftIfExists",
                                            "displayName": "returnDraftIfExists",
                                            "type": "boolean",
                                            "required": false,
                                            "repeat": false,
                                            "description": "when true indicates that a scheme's draft, if it exists, should be queried instead of the scheme itself.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Returns the issue type mapping for the passed workflow scheme.",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "workflowscheme",
                                                    "example": "can not resolve examples/workflowscheme-example.json",
                                                    "schemaContent": "workflowscheme"
                                                }
                                            },
                                            "description": "Returned if the object was retrieved successful."
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "Returned if there is no user or if the user has not entered a websudo session."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "Returned if either the requested scheme or workflow does not exist."
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "workflowIssueTypeReq",
                                            "example": "{\n  \"issueType\" : \"IssueTypeId\" ,\n  \"workflow\" : \"WorkflowName\" ,\n  \"updateDraftIfNeeded\" : false\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"issueType\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"workflow\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"updateDraftIfNeeded\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "description": "Set the issue type mapping for the passed scheme. The passed representation can have its updateDraftIfNeeded flag set to true to indicate that the draft should be created/updated when the actual scheme cannot be edited.",
                                    "method": "put",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json"
                                                }
                                            },
                                            "description": "Returned if successful."
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "Returned if there is no user or if the user has not entered a websudo session."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "Returned if either the requested scheme or workflow does not exist."
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "queryParameters": {
                                        "updateDraftIfNeeded": {
                                            "name": "updateDraftIfNeeded",
                                            "displayName": "updateDraftIfNeeded",
                                            "type": "boolean",
                                            "required": false,
                                            "repeat": false,
                                            "description": "when true will create and return a draft when the workflow scheme cannot be edited (e.g. when it is being used by a project).",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Remove the specified issue type mapping from the scheme.",
                                    "method": "delete",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/issuetype/{issueType}",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "issuetype",
                                "{issueType}"
                            ]
                        },
                        {
                            "relativeUri": "/workflow",
                            "type": "workflowschemeReturned",
                            "securedBy": [
                                "basic"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "workflowMappings",
                                                    "example": "{\n  \"workflow\" : \"WorkflowName\" ,\n  \"issueTypes\" : [\n    \"IssueTypeId\" ,\n    \"IssueTypeId2\"\n  ] ,\n  \"defaultMapping\" : false\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"workflow\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"issueTypes\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"string\"\n        }\n      ]\n    } ,\n    \"defaultMapping\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
                                                }
                                            }
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "Returned if there is no user or if the user has not entered a websudo session."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "Returned if the requested scheme or workflow does not exist."
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "queryParameters": {
                                        "returnDraftIfExists": {
                                            "name": "returnDraftIfExists",
                                            "displayName": "returnDraftIfExists",
                                            "type": "boolean",
                                            "required": false,
                                            "repeat": false,
                                            "description": "when true indicates that a scheme's draft, if it exists, should be queried instead of the scheme itself.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "workflowName": {
                                            "name": "workflowName",
                                            "displayName": "workflowName",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "the name of the workflow to use.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Returns the workflow mappings or requested mapping to the caller for the passed scheme.",
                                    "method": "get",
                                    "is": [
                                        "hasWorkflowName"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "workflowscheme",
                                                    "example": "can not resolve examples/workflowscheme-example.json",
                                                    "schemaContent": "workflowscheme"
                                                }
                                            },
                                            "description": "Returned if the object was retrieved successful."
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "Returned if there is no user or if the user has not entered a websudo session."
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "workflowMappingsReq",
                                            "example": "{\n  \"workflow\" : \"WorkflowName3\" ,\n  \"issueTypes\" : [\n    \"IssueTypeId\"\n  ] ,\n  \"updateDraftIfNeeded\" : true\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"workflow\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"issueTypes\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"string\"\n        }\n      ]\n    } ,\n    \"updateDraftIfNeeded\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "queryParameters": {
                                        "workflowName": {
                                            "name": "workflowName",
                                            "displayName": "workflowName",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "the name of the workflow to use.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Update the scheme to include the passed mapping. The body is a representation of the workflow mapping. Values not passed are assumed to indicate no change for that field. The passed representation can have its updateDraftIfNeeded flag set to true to indicate that the draft should be created/updated when the actual scheme cannot be edited.",
                                    "method": "put",
                                    "is": [
                                        "hasWorkflowName"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json"
                                                }
                                            },
                                            "description": "Returned if successful."
                                        },
                                        "401": {
                                            "code": "401",
                                            "description": "Returned if there is no user or if the user has not entered a websudo session."
                                        },
                                        "404": {
                                            "code": "404",
                                            "description": "Returned if the requested scheme or workflow does not exist."
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "securedBy": [
                                        "basic"
                                    ],
                                    "queryParameters": {
                                        "updateDraftIfNeeded": {
                                            "name": "updateDraftIfNeeded",
                                            "displayName": "updateDraftIfNeeded",
                                            "type": "boolean",
                                            "required": false,
                                            "repeat": false,
                                            "description": "flag to indicate if a draft should be created if necessary to delete the workflow from the scheme.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "workflowName": {
                                            "name": "workflowName",
                                            "displayName": "workflowName",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "the name of the workflow to use.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Delete the passed workflow from the workflow scheme.",
                                    "method": "delete",
                                    "is": [
                                        "hasWorkflowName"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/workflow",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "workflow"
                            ]
                        }
                    ],
                    "displayName": "/{id}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{id}"
                    ]
                }
            ],
            "displayName": "/workflowscheme",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "workflowscheme"
            ]
        }
    ],
    "documentation": [
        {
            "title": "Headline",
            "content": "can not resolve docs/api/headline.md"
        }
    ],
    "__METADATA__": {
        "primitiveValuesMeta": {
            "protocols": {
                "calculated": true
            }
        }
    }
}