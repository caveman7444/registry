{
    "title": "GMail Media Upload",
    "version": "v1",
    "baseUri": "https://www.googleapis.com/upload/gmail/{version}/users",
    "baseUriParameters": {
        "version": {
            "name": "version",
            "displayName": "version",
            "type": "string",
            "required": true,
            "repeat": false,
            "enum": [
                "v1"
            ],
            "__METADATA__": {
                "calculated": true,
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    },
                    "type": {
                        "insertedAsDefault": true
                    },
                    "required": {
                        "insertedAsDefault": true
                    },
                    "repeat": {
                        "insertedAsDefault": true
                    },
                    "enum": {
                        "calculated": true
                    }
                }
            }
        }
    },
    "protocols": [
        "HTTPS"
    ],
    "schemas": [
        {
            "invalidCredentials": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"error\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"errors\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"domain\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"reason\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"message\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"locationType\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"location\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          ]\n        } ,\n        \"code\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"message\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
        },
        {
            "notFound": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"error\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"errors\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"domain\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"reason\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"message\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          ]\n        } ,\n        \"code\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"message\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
        }
    ],
    "traits": [
        {
            "uploadMedia": {
                "securedBy": [
                    "oauth_2_0"
                ],
                "queryParameters": {
                    "uploadType": {
                        "name": "uploadType",
                        "displayName": "uploadType",
                        "type": "string",
                        "required": true,
                        "repeat": false,
                        "description": "The type of upload request to the /upload URI. Acceptable values are\n\nmedia - Simple upload. Upload the media only, without any metadata.\n\nmultipart - Multipart upload. Upload both the media and its metadata, in a single request.\n",
                        "enum": [
                            "multipart",
                            "media"
                        ],
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "name": "uploadMedia",
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                }
            }
        },
        {
            "commonParams": {
                "responses": {
                    "401": {
                        "code": "401",
                        "body": {
                            "application/json": {
                                "name": "application/json",
                                "schema": "invalidCredentials",
                                "example": "{\n  \"error\" : {\n    \"errors\" : [\n      {\n        \"domain\" : \"global\" ,\n        \"reason\" : \"authError\" ,\n        \"message\" : \"Invalid Credentials\" ,\n        \"locationType\" : \"header\" ,\n        \"location\" : \"Authorization\"\n      }\n    ] ,\n    \"code\" : 401 ,\n    \"message\" : \"Invalid Credentials\"\n  }\n}",
                                "schemaContent": "invalidCredentials"
                            }
                        }
                    },
                    "404": {
                        "code": "404",
                        "body": {
                            "application/json": {
                                "name": "application/json",
                                "schema": "notFound",
                                "example": "{\n  \"error\" : {\n    \"errors\" : [\n      {\n        \"domain\" : \"global\" ,\n        \"reason\" : \"notFound\" ,\n        \"message\" : \"Not Found\"\n      }\n    ] ,\n    \"code\" : 404 ,\n    \"message\" : \"Not Found\"\n  }\n}",
                                "schemaContent": "notFound"
                            }
                        }
                    }
                },
                "securedBy": [
                    "oauth_2_0"
                ],
                "queryParameters": {
                    "callback": {
                        "name": "callback",
                        "displayName": "callback",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Callback function. Name of the JavaScript callback function that handles the response. Used in JavaScript JSON-P requests.\n",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "fields": {
                        "name": "fields",
                        "displayName": "fields",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Selector specifying a subset of fields to include in the response. For more information, see the partial response section in the Performance Tips document. Use for better performance.\n",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "prettyPrint": {
                        "name": "prettyPrint",
                        "displayName": "prettyPrint",
                        "type": "boolean",
                        "required": false,
                        "default": true,
                        "repeat": false,
                        "description": "Returns response with indentations and line breaks. Returns the response in a human-readable format if 'true'. When this is 'false', it can reduce the response payload size, which might lead to better performance in some environments.    \n",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "quotaUser": {
                        "name": "quotaUser",
                        "displayName": "quotaUser",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Alternative to 'userIp'. Lets you enforce per-user quotas from a server-side application even in cases when the user's IP address is unknown. This can occur, for example, with applications that run cron jobs on App Engine on a user's behalf. You can choose any arbitrary string that uniquely identifies a user, but it is limited to 40 characters. Overrides 'userIp' if both are provided.\nLearn more about capping usage.\n",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "userIp": {
                        "name": "userIp",
                        "displayName": "userIp",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "IP address of the end user for whom the API call is being made. Lets you enforce per-user quotas when calling the API from a server-side application. Learn more about capping usage.\n",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "name": "commonParams",
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                }
            }
        }
    ],
    "securedBy": [
        "oauth_2_0"
    ],
    "securitySchemes": [
        {
            "oauth_2_0": {
                "name": "oauth_2_0",
                "type": "OAuth 2.0",
                "description": "",
                "describedBy": {
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "queryParameters": {
                        "access_token": {
                            "name": "access_token",
                            "displayName": "access_token",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"Authorization\" header\n",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "headers": {
                        "Authorization": {
                            "name": "Authorization",
                            "displayName": "Authorization",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"access_token\" queryParameters string parameter.\n",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                },
                "settings": {
                    "accessTokenUri": "https://accounts.google.com/o/oauth2/token",
                    "authorizationUri": "https://accounts.google.com/o/oauth2/auth",
                    "authorizationGrants": [
                        "code"
                    ],
                    "scopes": [
                        "https://mail.google.com/"
                    ]
                }
            }
        }
    ],
    "resourceTypes": [
        {
            "baseUpload": {
                "name": "baseUpload",
                "securedBy": [
                    "oauth_2_0"
                ],
                "__METADATA__": {
                    "primitiveValuesMeta": {
                        "securedBy": {
                            "calculated": true
                        }
                    }
                },
                "post": {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            }
                        }
                    },
                    "body": {
                        "message/rfc822": {
                            "name": "message/rfc822"
                        }
                    },
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "method": "post",
                    "is": [
                        "uploadMedia",
                        "commonParams"
                    ],
                    "__METADATA__": {
                        "optional": true,
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                },
                "put": {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            }
                        }
                    },
                    "body": {
                        "message/rfc822": {
                            "name": "message/rfc822"
                        }
                    },
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "method": "put",
                    "is": [
                        "uploadMedia",
                        "commonParams"
                    ],
                    "__METADATA__": {
                        "optional": true,
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            }
                        }
                    }
                }
            }
        }
    ],
    "resources": [
        {
            "relativeUri": "/{userId}",
            "securedBy": [
                "oauth_2_0"
            ],
            "uriParameters": {
                "userId": {
                    "name": "userId",
                    "displayName": "userId",
                    "type": "string",
                    "required": true,
                    "repeat": false,
                    "__METADATA__": {
                        "calculated": true,
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            },
                            "type": {
                                "insertedAsDefault": true
                            },
                            "required": {
                                "insertedAsDefault": true
                            },
                            "repeat": {
                                "insertedAsDefault": true
                            }
                        }
                    }
                }
            },
            "resources": [
                {
                    "relativeUri": "/messages",
                    "type": "baseUpload",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "message/rfc822": {
                                            "name": "message/rfc822"
                                        },
                                        "application/json": {
                                            "name": "application/json"
                                        }
                                    }
                                },
                                "401": {
                                    "code": "401",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "invalidCredentials",
                                            "example": "{\n  \"error\" : {\n    \"errors\" : [\n      {\n        \"domain\" : \"global\" ,\n        \"reason\" : \"authError\" ,\n        \"message\" : \"Invalid Credentials\" ,\n        \"locationType\" : \"header\" ,\n        \"location\" : \"Authorization\"\n      }\n    ] ,\n    \"code\" : 401 ,\n    \"message\" : \"Invalid Credentials\"\n  }\n}",
                                            "schemaContent": "invalidCredentials"
                                        }
                                    }
                                },
                                "404": {
                                    "code": "404",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "notFound",
                                            "example": "{\n  \"error\" : {\n    \"errors\" : [\n      {\n        \"domain\" : \"global\" ,\n        \"reason\" : \"notFound\" ,\n        \"message\" : \"Not Found\"\n      }\n    ] ,\n    \"code\" : 404 ,\n    \"message\" : \"Not Found\"\n  }\n}",
                                            "schemaContent": "notFound"
                                        }
                                    }
                                }
                            },
                            "body": {
                                "message/rfc822": {
                                    "name": "message/rfc822"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "queryParameters": {
                                "uploadType": {
                                    "name": "uploadType",
                                    "displayName": "uploadType",
                                    "type": "string",
                                    "required": true,
                                    "repeat": false,
                                    "description": "The type of upload request to the /upload URI. Acceptable values are\n\nmedia - Simple upload. Upload the media only, without any metadata.\n\nmultipart - Multipart upload. Upload both the media and its metadata, in a single request.\n",
                                    "enum": [
                                        "multipart",
                                        "media"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "callback": {
                                    "name": "callback",
                                    "displayName": "callback",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Callback function. Name of the JavaScript callback function that handles the response. Used in JavaScript JSON-P requests.\n",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "fields": {
                                    "name": "fields",
                                    "displayName": "fields",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Selector specifying a subset of fields to include in the response. For more information, see the partial response section in the Performance Tips document. Use for better performance.\n",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "prettyPrint": {
                                    "name": "prettyPrint",
                                    "displayName": "prettyPrint",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "repeat": false,
                                    "description": "Returns response with indentations and line breaks. Returns the response in a human-readable format if 'true'. When this is 'false', it can reduce the response payload size, which might lead to better performance in some environments.    \n",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "quotaUser": {
                                    "name": "quotaUser",
                                    "displayName": "quotaUser",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Alternative to 'userIp'. Lets you enforce per-user quotas from a server-side application even in cases when the user's IP address is unknown. This can occur, for example, with applications that run cron jobs on App Engine on a user's behalf. You can choose any arbitrary string that uniquely identifies a user, but it is limited to 40 characters. Overrides 'userIp' if both are provided.\nLearn more about capping usage.\n",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "userIp": {
                                    "name": "userIp",
                                    "displayName": "userIp",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "IP address of the end user for whom the API call is being made. Lets you enforce per-user quotas when calling the API from a server-side application. Learn more about capping usage.\n",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Media upload request. Directly inserts a message into only this user's mailbox. Does not send a message.",
                            "method": "post",
                            "is": [
                                "uploadMedia",
                                "commonParams"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/send",
                            "type": "baseUpload",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "message/rfc822": {
                                                    "name": "message/rfc822"
                                                },
                                                "application/json": {
                                                    "name": "application/json"
                                                }
                                            }
                                        },
                                        "401": {
                                            "code": "401",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "invalidCredentials",
                                                    "example": "{\n  \"error\" : {\n    \"errors\" : [\n      {\n        \"domain\" : \"global\" ,\n        \"reason\" : \"authError\" ,\n        \"message\" : \"Invalid Credentials\" ,\n        \"locationType\" : \"header\" ,\n        \"location\" : \"Authorization\"\n      }\n    ] ,\n    \"code\" : 401 ,\n    \"message\" : \"Invalid Credentials\"\n  }\n}",
                                                    "schemaContent": "invalidCredentials"
                                                }
                                            }
                                        },
                                        "404": {
                                            "code": "404",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "notFound",
                                                    "example": "{\n  \"error\" : {\n    \"errors\" : [\n      {\n        \"domain\" : \"global\" ,\n        \"reason\" : \"notFound\" ,\n        \"message\" : \"Not Found\"\n      }\n    ] ,\n    \"code\" : 404 ,\n    \"message\" : \"Not Found\"\n  }\n}",
                                                    "schemaContent": "notFound"
                                                }
                                            }
                                        }
                                    },
                                    "body": {
                                        "message/rfc822": {
                                            "name": "message/rfc822"
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "queryParameters": {
                                        "uploadType": {
                                            "name": "uploadType",
                                            "displayName": "uploadType",
                                            "type": "string",
                                            "required": true,
                                            "repeat": false,
                                            "description": "The type of upload request to the /upload URI. Acceptable values are\n\nmedia - Simple upload. Upload the media only, without any metadata.\n\nmultipart - Multipart upload. Upload both the media and its metadata, in a single request.\n",
                                            "enum": [
                                                "multipart",
                                                "media"
                                            ],
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "callback": {
                                            "name": "callback",
                                            "displayName": "callback",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "Callback function. Name of the JavaScript callback function that handles the response. Used in JavaScript JSON-P requests.\n",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "fields": {
                                            "name": "fields",
                                            "displayName": "fields",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "Selector specifying a subset of fields to include in the response. For more information, see the partial response section in the Performance Tips document. Use for better performance.\n",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "prettyPrint": {
                                            "name": "prettyPrint",
                                            "displayName": "prettyPrint",
                                            "type": "boolean",
                                            "required": false,
                                            "default": true,
                                            "repeat": false,
                                            "description": "Returns response with indentations and line breaks. Returns the response in a human-readable format if 'true'. When this is 'false', it can reduce the response payload size, which might lead to better performance in some environments.    \n",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "quotaUser": {
                                            "name": "quotaUser",
                                            "displayName": "quotaUser",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "Alternative to 'userIp'. Lets you enforce per-user quotas from a server-side application even in cases when the user's IP address is unknown. This can occur, for example, with applications that run cron jobs on App Engine on a user's behalf. You can choose any arbitrary string that uniquely identifies a user, but it is limited to 40 characters. Overrides 'userIp' if both are provided.\nLearn more about capping usage.\n",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "userIp": {
                                            "name": "userIp",
                                            "displayName": "userIp",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "IP address of the end user for whom the API call is being made. Lets you enforce per-user quotas when calling the API from a server-side application. Learn more about capping usage.\n",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Media upload request. Sends the specified message to the recipients in the 'To', 'Cc', and 'Bcc' headers.",
                                    "method": "post",
                                    "is": [
                                        "uploadMedia",
                                        "commonParams"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/send",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "send"
                            ]
                        },
                        {
                            "relativeUri": "/import",
                            "type": "baseUpload",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "message/rfc822": {
                                                    "name": "message/rfc822"
                                                },
                                                "application/json": {
                                                    "name": "application/json"
                                                }
                                            }
                                        },
                                        "401": {
                                            "code": "401",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "invalidCredentials",
                                                    "example": "{\n  \"error\" : {\n    \"errors\" : [\n      {\n        \"domain\" : \"global\" ,\n        \"reason\" : \"authError\" ,\n        \"message\" : \"Invalid Credentials\" ,\n        \"locationType\" : \"header\" ,\n        \"location\" : \"Authorization\"\n      }\n    ] ,\n    \"code\" : 401 ,\n    \"message\" : \"Invalid Credentials\"\n  }\n}",
                                                    "schemaContent": "invalidCredentials"
                                                }
                                            }
                                        },
                                        "404": {
                                            "code": "404",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "notFound",
                                                    "example": "{\n  \"error\" : {\n    \"errors\" : [\n      {\n        \"domain\" : \"global\" ,\n        \"reason\" : \"notFound\" ,\n        \"message\" : \"Not Found\"\n      }\n    ] ,\n    \"code\" : 404 ,\n    \"message\" : \"Not Found\"\n  }\n}",
                                                    "schemaContent": "notFound"
                                                }
                                            }
                                        }
                                    },
                                    "body": {
                                        "message/rfc822": {
                                            "name": "message/rfc822"
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "queryParameters": {
                                        "uploadType": {
                                            "name": "uploadType",
                                            "displayName": "uploadType",
                                            "type": "string",
                                            "required": true,
                                            "repeat": false,
                                            "description": "The type of upload request to the /upload URI. Acceptable values are\n\nmedia - Simple upload. Upload the media only, without any metadata.\n\nmultipart - Multipart upload. Upload both the media and its metadata, in a single request.\n",
                                            "enum": [
                                                "multipart",
                                                "media"
                                            ],
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "callback": {
                                            "name": "callback",
                                            "displayName": "callback",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "Callback function. Name of the JavaScript callback function that handles the response. Used in JavaScript JSON-P requests.\n",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "fields": {
                                            "name": "fields",
                                            "displayName": "fields",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "Selector specifying a subset of fields to include in the response. For more information, see the partial response section in the Performance Tips document. Use for better performance.\n",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "prettyPrint": {
                                            "name": "prettyPrint",
                                            "displayName": "prettyPrint",
                                            "type": "boolean",
                                            "required": false,
                                            "default": true,
                                            "repeat": false,
                                            "description": "Returns response with indentations and line breaks. Returns the response in a human-readable format if 'true'. When this is 'false', it can reduce the response payload size, which might lead to better performance in some environments.    \n",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "quotaUser": {
                                            "name": "quotaUser",
                                            "displayName": "quotaUser",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "Alternative to 'userIp'. Lets you enforce per-user quotas from a server-side application even in cases when the user's IP address is unknown. This can occur, for example, with applications that run cron jobs on App Engine on a user's behalf. You can choose any arbitrary string that uniquely identifies a user, but it is limited to 40 characters. Overrides 'userIp' if both are provided.\nLearn more about capping usage.\n",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "userIp": {
                                            "name": "userIp",
                                            "displayName": "userIp",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "IP address of the end user for whom the API call is being made. Lets you enforce per-user quotas when calling the API from a server-side application. Learn more about capping usage.\n",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Media upload request. Directly imports a message into only this user's mailbox, similar to receiving via SMTP. Does not send a message.",
                                    "method": "post",
                                    "is": [
                                        "uploadMedia",
                                        "commonParams"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/import",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "import"
                            ]
                        }
                    ],
                    "displayName": "/messages",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "messages"
                    ]
                },
                {
                    "relativeUri": "/drafts",
                    "type": "baseUpload",
                    "securedBy": [
                        "oauth_2_0"
                    ],
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "message/rfc822": {
                                            "name": "message/rfc822"
                                        },
                                        "application/json": {
                                            "name": "application/json"
                                        }
                                    }
                                },
                                "401": {
                                    "code": "401",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "invalidCredentials",
                                            "example": "{\n  \"error\" : {\n    \"errors\" : [\n      {\n        \"domain\" : \"global\" ,\n        \"reason\" : \"authError\" ,\n        \"message\" : \"Invalid Credentials\" ,\n        \"locationType\" : \"header\" ,\n        \"location\" : \"Authorization\"\n      }\n    ] ,\n    \"code\" : 401 ,\n    \"message\" : \"Invalid Credentials\"\n  }\n}",
                                            "schemaContent": "invalidCredentials"
                                        }
                                    }
                                },
                                "404": {
                                    "code": "404",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "notFound",
                                            "example": "{\n  \"error\" : {\n    \"errors\" : [\n      {\n        \"domain\" : \"global\" ,\n        \"reason\" : \"notFound\" ,\n        \"message\" : \"Not Found\"\n      }\n    ] ,\n    \"code\" : 404 ,\n    \"message\" : \"Not Found\"\n  }\n}",
                                            "schemaContent": "notFound"
                                        }
                                    }
                                }
                            },
                            "body": {
                                "message/rfc822": {
                                    "name": "message/rfc822"
                                }
                            },
                            "protocols": [
                                "HTTPS"
                            ],
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "queryParameters": {
                                "uploadType": {
                                    "name": "uploadType",
                                    "displayName": "uploadType",
                                    "type": "string",
                                    "required": true,
                                    "repeat": false,
                                    "description": "The type of upload request to the /upload URI. Acceptable values are\n\nmedia - Simple upload. Upload the media only, without any metadata.\n\nmultipart - Multipart upload. Upload both the media and its metadata, in a single request.\n",
                                    "enum": [
                                        "multipart",
                                        "media"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "callback": {
                                    "name": "callback",
                                    "displayName": "callback",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Callback function. Name of the JavaScript callback function that handles the response. Used in JavaScript JSON-P requests.\n",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "fields": {
                                    "name": "fields",
                                    "displayName": "fields",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Selector specifying a subset of fields to include in the response. For more information, see the partial response section in the Performance Tips document. Use for better performance.\n",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "prettyPrint": {
                                    "name": "prettyPrint",
                                    "displayName": "prettyPrint",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "repeat": false,
                                    "description": "Returns response with indentations and line breaks. Returns the response in a human-readable format if 'true'. When this is 'false', it can reduce the response payload size, which might lead to better performance in some environments.    \n",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "quotaUser": {
                                    "name": "quotaUser",
                                    "displayName": "quotaUser",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Alternative to 'userIp'. Lets you enforce per-user quotas from a server-side application even in cases when the user's IP address is unknown. This can occur, for example, with applications that run cron jobs on App Engine on a user's behalf. You can choose any arbitrary string that uniquely identifies a user, but it is limited to 40 characters. Overrides 'userIp' if both are provided.\nLearn more about capping usage.\n",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "userIp": {
                                    "name": "userIp",
                                    "displayName": "userIp",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "IP address of the end user for whom the API call is being made. Lets you enforce per-user quotas when calling the API from a server-side application. Learn more about capping usage.\n",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Media upload request. Creates a new draft with the DRAFT label.",
                            "method": "post",
                            "is": [
                                "uploadMedia",
                                "commonParams"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    },
                                    "securedBy": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/{id}",
                            "type": "baseUpload",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "uriParameters": {
                                "id": {
                                    "name": "id",
                                    "displayName": "id",
                                    "type": "string",
                                    "required": true,
                                    "repeat": false,
                                    "__METADATA__": {
                                        "calculated": true,
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "message/rfc822": {
                                                    "name": "message/rfc822"
                                                },
                                                "application/json": {
                                                    "name": "application/json"
                                                }
                                            }
                                        },
                                        "401": {
                                            "code": "401",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "invalidCredentials",
                                                    "example": "{\n  \"error\" : {\n    \"errors\" : [\n      {\n        \"domain\" : \"global\" ,\n        \"reason\" : \"authError\" ,\n        \"message\" : \"Invalid Credentials\" ,\n        \"locationType\" : \"header\" ,\n        \"location\" : \"Authorization\"\n      }\n    ] ,\n    \"code\" : 401 ,\n    \"message\" : \"Invalid Credentials\"\n  }\n}",
                                                    "schemaContent": "invalidCredentials"
                                                }
                                            }
                                        },
                                        "404": {
                                            "code": "404",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "notFound",
                                                    "example": "{\n  \"error\" : {\n    \"errors\" : [\n      {\n        \"domain\" : \"global\" ,\n        \"reason\" : \"notFound\" ,\n        \"message\" : \"Not Found\"\n      }\n    ] ,\n    \"code\" : 404 ,\n    \"message\" : \"Not Found\"\n  }\n}",
                                                    "schemaContent": "notFound"
                                                }
                                            }
                                        }
                                    },
                                    "body": {
                                        "message/rfc822": {
                                            "name": "message/rfc822"
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "queryParameters": {
                                        "uploadType": {
                                            "name": "uploadType",
                                            "displayName": "uploadType",
                                            "type": "string",
                                            "required": true,
                                            "repeat": false,
                                            "description": "The type of upload request to the /upload URI. Acceptable values are\n\nmedia - Simple upload. Upload the media only, without any metadata.\n\nmultipart - Multipart upload. Upload both the media and its metadata, in a single request.\n",
                                            "enum": [
                                                "multipart",
                                                "media"
                                            ],
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "callback": {
                                            "name": "callback",
                                            "displayName": "callback",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "Callback function. Name of the JavaScript callback function that handles the response. Used in JavaScript JSON-P requests.\n",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "fields": {
                                            "name": "fields",
                                            "displayName": "fields",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "Selector specifying a subset of fields to include in the response. For more information, see the partial response section in the Performance Tips document. Use for better performance.\n",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "prettyPrint": {
                                            "name": "prettyPrint",
                                            "displayName": "prettyPrint",
                                            "type": "boolean",
                                            "required": false,
                                            "default": true,
                                            "repeat": false,
                                            "description": "Returns response with indentations and line breaks. Returns the response in a human-readable format if 'true'. When this is 'false', it can reduce the response payload size, which might lead to better performance in some environments.    \n",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "quotaUser": {
                                            "name": "quotaUser",
                                            "displayName": "quotaUser",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "Alternative to 'userIp'. Lets you enforce per-user quotas from a server-side application even in cases when the user's IP address is unknown. This can occur, for example, with applications that run cron jobs on App Engine on a user's behalf. You can choose any arbitrary string that uniquely identifies a user, but it is limited to 40 characters. Overrides 'userIp' if both are provided.\nLearn more about capping usage.\n",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "userIp": {
                                            "name": "userIp",
                                            "displayName": "userIp",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "IP address of the end user for whom the API call is being made. Lets you enforce per-user quotas when calling the API from a server-side application. Learn more about capping usage.\n",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Media upload request. Replaces a draft's content.",
                                    "method": "put",
                                    "is": [
                                        "uploadMedia",
                                        "commonParams"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/{id}",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "{id}"
                            ]
                        },
                        {
                            "relativeUri": "/send",
                            "type": "baseUpload",
                            "securedBy": [
                                "oauth_2_0"
                            ],
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "message/rfc822": {
                                                    "name": "message/rfc822"
                                                },
                                                "application/json": {
                                                    "name": "application/json"
                                                }
                                            }
                                        },
                                        "401": {
                                            "code": "401",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "invalidCredentials",
                                                    "example": "{\n  \"error\" : {\n    \"errors\" : [\n      {\n        \"domain\" : \"global\" ,\n        \"reason\" : \"authError\" ,\n        \"message\" : \"Invalid Credentials\" ,\n        \"locationType\" : \"header\" ,\n        \"location\" : \"Authorization\"\n      }\n    ] ,\n    \"code\" : 401 ,\n    \"message\" : \"Invalid Credentials\"\n  }\n}",
                                                    "schemaContent": "invalidCredentials"
                                                }
                                            }
                                        },
                                        "404": {
                                            "code": "404",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "notFound",
                                                    "example": "{\n  \"error\" : {\n    \"errors\" : [\n      {\n        \"domain\" : \"global\" ,\n        \"reason\" : \"notFound\" ,\n        \"message\" : \"Not Found\"\n      }\n    ] ,\n    \"code\" : 404 ,\n    \"message\" : \"Not Found\"\n  }\n}",
                                                    "schemaContent": "notFound"
                                                }
                                            }
                                        }
                                    },
                                    "body": {
                                        "message/rfc822": {
                                            "name": "message/rfc822"
                                        }
                                    },
                                    "protocols": [
                                        "HTTPS"
                                    ],
                                    "securedBy": [
                                        "oauth_2_0"
                                    ],
                                    "queryParameters": {
                                        "uploadType": {
                                            "name": "uploadType",
                                            "displayName": "uploadType",
                                            "type": "string",
                                            "required": true,
                                            "repeat": false,
                                            "description": "The type of upload request to the /upload URI. Acceptable values are\n\nmedia - Simple upload. Upload the media only, without any metadata.\n\nmultipart - Multipart upload. Upload both the media and its metadata, in a single request.\n",
                                            "enum": [
                                                "multipart",
                                                "media"
                                            ],
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "callback": {
                                            "name": "callback",
                                            "displayName": "callback",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "Callback function. Name of the JavaScript callback function that handles the response. Used in JavaScript JSON-P requests.\n",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "fields": {
                                            "name": "fields",
                                            "displayName": "fields",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "Selector specifying a subset of fields to include in the response. For more information, see the partial response section in the Performance Tips document. Use for better performance.\n",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "prettyPrint": {
                                            "name": "prettyPrint",
                                            "displayName": "prettyPrint",
                                            "type": "boolean",
                                            "required": false,
                                            "default": true,
                                            "repeat": false,
                                            "description": "Returns response with indentations and line breaks. Returns the response in a human-readable format if 'true'. When this is 'false', it can reduce the response payload size, which might lead to better performance in some environments.    \n",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "quotaUser": {
                                            "name": "quotaUser",
                                            "displayName": "quotaUser",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "Alternative to 'userIp'. Lets you enforce per-user quotas from a server-side application even in cases when the user's IP address is unknown. This can occur, for example, with applications that run cron jobs on App Engine on a user's behalf. You can choose any arbitrary string that uniquely identifies a user, but it is limited to 40 characters. Overrides 'userIp' if both are provided.\nLearn more about capping usage.\n",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "userIp": {
                                            "name": "userIp",
                                            "displayName": "userIp",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "IP address of the end user for whom the API call is being made. Lets you enforce per-user quotas when calling the API from a server-side application. Learn more about capping usage.\n",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Media upload request. Sends the specified, existing draft to the recipients in the 'To', 'Cc', and 'Bcc' headers. ",
                                    "method": "post",
                                    "is": [
                                        "uploadMedia",
                                        "commonParams"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            },
                                            "securedBy": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/send",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "securedBy": {
                                        "calculated": true
                                    },
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "send"
                            ]
                        }
                    ],
                    "displayName": "/drafts",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "securedBy": {
                                "calculated": true
                            },
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "drafts"
                    ]
                }
            ],
            "displayName": "/{userId}",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "securedBy": {
                        "calculated": true
                    },
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "{userId}"
            ]
        }
    ],
    "documentation": [
        {
            "title": "Headline",
            "content": "can not resolve docs/uploadApi/headline.md"
        }
    ],
    "__METADATA__": {
        "primitiveValuesMeta": {
            "protocols": {
                "calculated": true
            }
        }
    }
}