{
    "title": "Elasticsearch",
    "baseUri": "{protocol}://{domain}:{port}",
    "baseUriParameters": {
        "protocol": {
            "name": "protocol",
            "displayName": "protocol",
            "type": "string",
            "required": true,
            "repeat": false,
            "__METADATA__": {
                "calculated": true,
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    },
                    "type": {
                        "insertedAsDefault": true
                    },
                    "required": {
                        "insertedAsDefault": true
                    },
                    "repeat": {
                        "insertedAsDefault": true
                    }
                }
            }
        },
        "domain": {
            "name": "domain",
            "displayName": "domain",
            "type": "string",
            "required": true,
            "repeat": false,
            "__METADATA__": {
                "calculated": true,
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    },
                    "type": {
                        "insertedAsDefault": true
                    },
                    "required": {
                        "insertedAsDefault": true
                    },
                    "repeat": {
                        "insertedAsDefault": true
                    }
                }
            }
        },
        "port": {
            "name": "port",
            "displayName": "port",
            "type": "string",
            "required": true,
            "repeat": false,
            "__METADATA__": {
                "calculated": true,
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    },
                    "type": {
                        "insertedAsDefault": true
                    },
                    "required": {
                        "insertedAsDefault": true
                    },
                    "repeat": {
                        "insertedAsDefault": true
                    }
                }
            }
        }
    },
    "protocols": [
        "{PROTOCOL}"
    ],
    "mediaType": "application/json",
    "schemas": [
        {
            "insertsDocumentReq": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"user\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"post_date\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"message\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "insertsDocument": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"_index\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"_type\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"_id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"_version\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"created\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "getDocument": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"_index\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"_type\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"_id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"_version\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"found\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"_source\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"user\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"postDate\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"message\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
        },
        {
            "createIndexReq": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"settings\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"index\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"mapping.allow_type_wrapper\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            }\n          }\n        }\n      }\n    }\n  }\n}"
        },
        {
            "createIndex": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"acknowledged\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "deleteDocument": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"found\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"_index\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"_type\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"_id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"_version\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "updateDocumentReq": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"doc\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
        },
        {
            "mgetReq": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"docs\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"_index\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"_type\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"_id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "mgetIndexReq": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"docs\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"_type\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"_id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "mgetIndexTypeReq": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"docs\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"_id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "queryReq": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"query\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"term\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"user\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      }\n    }\n  }\n}"
        },
        {
            "query": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"_indices\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"twitter\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"_shards\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"total\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"successful\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"failed\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
        },
        {
            "tasksStatus": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"tasks\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"insert_order\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"priority\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"source\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"time_in_queue_millis\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"time_in_queue\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "rerouteSpec": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"commands\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"move\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"index\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"shard\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"from_node\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"to_node\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        } , {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"allocate\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"index\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"shard\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"node\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "clusterSettings": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"persistent\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"discovery.zen.minimum_master_nodes\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
        },
        {
            "nodeInfoResult": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"cluster_name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"nodes\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"hJLXmY_NTrCytiIMbX4_1g\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"transport_address\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"hostname\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"version\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"http_address\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"plugins\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"object\" ,\n                  \"properties\" : {\n                    \"name\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"description\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"site\" : {\n                      \"type\" : \"boolean\" ,\n                      \"required\" : false\n                    } ,\n                    \"jvm\" : {\n                      \"type\" : \"boolean\" ,\n                      \"required\" : false\n                    }\n                  }\n                } , {\n                  \"type\" : \"object\" ,\n                  \"properties\" : {\n                    \"name\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"description\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"url\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"site\" : {\n                      \"type\" : \"boolean\" ,\n                      \"required\" : false\n                    } ,\n                    \"jvm\" : {\n                      \"type\" : \"boolean\" ,\n                      \"required\" : false\n                    }\n                  }\n                }\n              ]\n            }\n          }\n        }\n      }\n    }\n  }\n}"
        },
        {
            "benchSample": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"competitors\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"requests\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"object\" ,\n                  \"properties\" : {\n                    \"query\" : {\n                      \"type\" : \"object\" ,\n                      \"required\" : false ,\n                      \"properties\" : {\n                        \"match\" : {\n                          \"type\" : \"object\" ,\n                          \"required\" : false ,\n                          \"properties\" : {\n                            \"_all\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              ]\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "benchResponse": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"status\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"competitors\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"my_competitor\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"summary\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"nodes\" : {\n                  \"type\" : \"array\" ,\n                  \"required\" : false ,\n                  \"items\" : [\n                    {\n                      \"type\" : \"string\"\n                    }\n                  ]\n                } ,\n                \"total_iterations\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"completed_iterations\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"total_queries\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"concurrency\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"multiplier\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"avg_warmup_time\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"statistics\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"min\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"max\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"mean\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"qps\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"std_dev\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"millis_per_hit\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"percentile_10\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"percentile_25\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"percentile_50\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"percentile_75\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"percentile_90\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"percentile_99\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
        },
        {
            "suggestExample": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"my-suggestion\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"text\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"term\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"field\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      }\n    }\n  }\n}"
        },
        {
            "suggestResponse": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"suggest\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"my-title-suggestions-1\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"text\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"offset\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"length\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"options\" : {\n                  \"type\" : \"array\" ,\n                  \"required\" : false ,\n                  \"items\" : [\n                    {\n                      \"type\" : \"object\" ,\n                      \"properties\" : {\n                        \"text\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"freq\" : {\n                          \"type\" : \"number\" ,\n                          \"required\" : false\n                        } ,\n                        \"score\" : {\n                          \"type\" : \"number\" ,\n                          \"required\" : false\n                        }\n                      }\n                    }\n                  ]\n                }\n              }\n            }\n          ]\n        }\n      }\n    }\n  }\n}"
        },
        {
            "searchTemplate": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"template\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"query\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"match\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"title\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        }\n      }\n    } ,\n    \"params\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"query_string\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
        },
        {
            "searchShardsResponse": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"nodes\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"JklnKbD7Tyqi9TP3_Q_tBg\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"transport_address\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      }\n    } ,\n    \"shards\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"array\"\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "mappingSample": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"tweet\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"properties\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"message\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"type\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"store\" : {\n                  \"type\" : \"boolean\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
        },
        {
            "aliasOps": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"actions\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"remove\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"index\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"alias\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        } , {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"add\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"index\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"alias\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "aliases": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"users\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"aliases\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"user_13\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"filter\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"term\" : {\n                      \"type\" : \"object\" ,\n                      \"required\" : false ,\n                      \"properties\" : {\n                        \"user_id\" : {\n                          \"type\" : \"number\" ,\n                          \"required\" : false\n                        }\n                      }\n                    }\n                  }\n                } ,\n                \"index_routing\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"search_routing\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"user_14\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"filter\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"term\" : {\n                      \"type\" : \"object\" ,\n                      \"required\" : false ,\n                      \"properties\" : {\n                        \"user_id\" : {\n                          \"type\" : \"number\" ,\n                          \"required\" : false\n                        }\n                      }\n                    }\n                  }\n                } ,\n                \"index_routing\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"search_routing\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"user_12\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"filter\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"term\" : {\n                      \"type\" : \"object\" ,\n                      \"required\" : false ,\n                      \"properties\" : {\n                        \"user_id\" : {\n                          \"type\" : \"number\" ,\n                          \"required\" : false\n                        }\n                      }\n                    }\n                  }\n                } ,\n                \"index_routing\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"search_routing\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
        },
        {
            "indexTemplate": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"template\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"settings\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"number_of_shards\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"aliases\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"alias1\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false\n        } ,\n        \"alias2\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"filter\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"term\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"user\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                }\n              }\n            } ,\n            \"routing\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"{index}-alias\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
        },
        {
            "termVectorSettings": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"fields\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"string\"\n        }\n      ]\n    } ,\n    \"offsets\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"payloads\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"positions\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"term_statistics\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"field_statistics\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "termVectors": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"_id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"_index\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"_type\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"_version\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"found\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"term_vectors\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"text\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"field_statistics\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"doc_count\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"sum_doc_freq\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"sum_ttf\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"terms\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"test\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"doc_freq\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"term_freq\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"tokens\" : {\n                      \"type\" : \"array\" ,\n                      \"required\" : false ,\n                      \"items\" : [\n                        {\n                          \"type\" : \"object\" ,\n                          \"properties\" : {\n                            \"end_offset\" : {\n                              \"type\" : \"number\" ,\n                              \"required\" : false\n                            } ,\n                            \"payload\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            } ,\n                            \"position\" : {\n                              \"type\" : \"number\" ,\n                              \"required\" : false\n                            } ,\n                            \"start_offset\" : {\n                              \"type\" : \"number\" ,\n                              \"required\" : false\n                            }\n                          }\n                        }\n                      ]\n                    } ,\n                    \"ttf\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"twitter\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"doc_freq\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"term_freq\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"tokens\" : {\n                      \"type\" : \"array\" ,\n                      \"required\" : false ,\n                      \"items\" : [\n                        {\n                          \"type\" : \"object\" ,\n                          \"properties\" : {\n                            \"end_offset\" : {\n                              \"type\" : \"number\" ,\n                              \"required\" : false\n                            } ,\n                            \"payload\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            } ,\n                            \"position\" : {\n                              \"type\" : \"number\" ,\n                              \"required\" : false\n                            } ,\n                            \"start_offset\" : {\n                              \"type\" : \"number\" ,\n                              \"required\" : false\n                            }\n                          }\n                        }\n                      ]\n                    } ,\n                    \"ttf\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
        },
        {
            "multiTermVectorsRequest": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"docs\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"_index\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"_type\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"_id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"term_statistics\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            }\n          }\n        } , {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"_index\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"_type\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"_id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"fields\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"string\"\n                }\n              ]\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
        },
        {
            "searchReq": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"query\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"term\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"user\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      }\n    }\n  }\n}"
        },
        {
            "searchResp": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"_shards\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"total\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"successful\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"failed\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"hits\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"total\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"hits\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"_index\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"_type\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"_id\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"_source\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"user\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"postDate\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"message\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                }\n              }\n            }\n          ]\n        }\n      }\n    }\n  }\n}"
        },
        {
            "mappingFields": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"twitter\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"tweet\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"text\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"full_name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"mapping\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"text\" : {\n                      \"type\" : \"object\" ,\n                      \"required\" : false ,\n                      \"properties\" : {\n                        \"type\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
        },
        {
            "settingsPut": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"index.routing.allocation.include.tag\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "stats": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"cluster_name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"status\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"indices\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"count\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"shards\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"total\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"primaries\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"replication\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"index\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"shards\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"min\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"max\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"avg\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"primaries\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"min\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"max\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"avg\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"replication\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"min\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"max\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"avg\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    }\n                  }\n                }\n              }\n            }\n          }\n        } ,\n        \"docs\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"count\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"deleted\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"store\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"size\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"size_in_bytes\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"throttle_time\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"throttle_time_in_millis\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"fielddata\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"memory_size\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"memory_size_in_bytes\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"evictions\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"filter_cache\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"memory_size\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"memory_size_in_bytes\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"evictions\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"id_cache\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"memory_size\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"memory_size_in_bytes\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"completion\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"size\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"size_in_bytes\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"segments\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"count\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            }\n          }\n        }\n      }\n    } ,\n    \"nodes\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"count\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"total\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"master_only\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"data_only\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"master_data\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"client\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"versions\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"string\"\n            }\n          ]\n        } ,\n        \"os\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"available_processors\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"mem\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"total\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"total_in_bytes\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"cpu\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"object\" ,\n                  \"properties\" : {\n                    \"vendor\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"model\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"mhz\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"total_cores\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"total_sockets\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"cores_per_socket\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"cache_size\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"cache_size_in_bytes\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"count\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    }\n                  }\n                }\n              ]\n            }\n          }\n        } ,\n        \"process\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"cpu\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"percent\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"open_file_descriptors\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"min\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"max\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"avg\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        } ,\n        \"jvm\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"max_uptime\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"max_uptime_in_millis\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"version\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"object\" ,\n                  \"properties\" : {\n                    \"version\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"vm_name\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"vm_version\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"vm_vendor\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"count\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    }\n                  }\n                }\n              ]\n            } ,\n            \"mem\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"heap_used\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"heap_used_in_bytes\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"heap_max\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"heap_max_in_bytes\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"threads\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"fs\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"total\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"total_in_bytes\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"free\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"free_in_bytes\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"available\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"available_in_bytes\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"disk_reads\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"disk_writes\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"disk_io_op\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"disk_read_size\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"disk_read_size_in_bytes\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"disk_write_size\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"disk_write_size_in_bytes\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"disk_io_size\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"disk_io_size_in_bytes\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"plugins\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"description\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"url\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"jvm\" : {\n                  \"type\" : \"boolean\" ,\n                  \"required\" : false\n                } ,\n                \"site\" : {\n                  \"type\" : \"boolean\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          ]\n        }\n      }\n    }\n  }\n}"
        },
        {
            "warmerPutReq": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"query\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"match_all\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"aggs\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"aggs_1\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"terms\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"field\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
        },
        {
            "recovery": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"index1\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"shards\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"id\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"type\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"stage\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"primary\" : {\n                  \"type\" : \"boolean\" ,\n                  \"required\" : false\n                } ,\n                \"start_time\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"stop_time\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"total_time_in_millis\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"source\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"repository\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"snapshot\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"index\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"target\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"id\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"hostname\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"ip\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"name\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"index\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"files\" : {\n                      \"type\" : \"object\" ,\n                      \"required\" : false ,\n                      \"properties\" : {\n                        \"total\" : {\n                          \"type\" : \"number\" ,\n                          \"required\" : false\n                        } ,\n                        \"reused\" : {\n                          \"type\" : \"number\" ,\n                          \"required\" : false\n                        } ,\n                        \"recovered\" : {\n                          \"type\" : \"number\" ,\n                          \"required\" : false\n                        } ,\n                        \"percent\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        }\n                      }\n                    } ,\n                    \"bytes\" : {\n                      \"type\" : \"object\" ,\n                      \"required\" : false ,\n                      \"properties\" : {\n                        \"total\" : {\n                          \"type\" : \"number\" ,\n                          \"required\" : false\n                        } ,\n                        \"reused\" : {\n                          \"type\" : \"number\" ,\n                          \"required\" : false\n                        } ,\n                        \"recovered\" : {\n                          \"type\" : \"number\" ,\n                          \"required\" : false\n                        } ,\n                        \"percent\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        }\n                      }\n                    } ,\n                    \"total_time_in_millis\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"translog\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"recovered\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"total_time_in_millis\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"start\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"check_index_time\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"total_time_in_millis\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    }\n                  }\n                }\n              }\n            }\n          ]\n        }\n      }\n    }\n  }\n}"
        },
        {
            "segments": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"_3\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"generation\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"num_docs\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"deleted_docs\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"size_in_bytes\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"memory_in_bytes\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"committed\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"search\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"version\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"compound\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"_4\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"generation\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"num_docs\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"deleted_docs\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"size_in_bytes\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"memory_in_bytes\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"committed\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"search\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        } ,\n        \"version\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"compound\" : {\n          \"type\" : \"boolean\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
        },
        {
            "countReq": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"query\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"term\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"user\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      }\n    }\n  }\n}"
        },
        {
            "count": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"count\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"_shards\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"total\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"successful\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"failed\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
        },
        {
            "valid": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"valid\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"_shards\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"total\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"successful\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"failed\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
        },
        {
            "explainReq": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"query\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"term\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"message\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      }\n    }\n  }\n}"
        },
        {
            "nodes": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"cluster_name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"nodes\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"hJLXmY_NTrCytiIMbX4_1g\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"transport_address\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"hostname\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"version\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"http_address\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"plugins\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"object\" ,\n                  \"properties\" : {\n                    \"name\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"description\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"site\" : {\n                      \"type\" : \"boolean\" ,\n                      \"required\" : false\n                    } ,\n                    \"jvm\" : {\n                      \"type\" : \"boolean\" ,\n                      \"required\" : false\n                    }\n                  }\n                } , {\n                  \"type\" : \"object\" ,\n                  \"properties\" : {\n                    \"name\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"description\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"url\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"site\" : {\n                      \"type\" : \"boolean\" ,\n                      \"required\" : false\n                    } ,\n                    \"jvm\" : {\n                      \"type\" : \"boolean\" ,\n                      \"required\" : false\n                    }\n                  }\n                }\n              ]\n            }\n          }\n        }\n      }\n    }\n  }\n}"
        },
        {
            "percolateCountResponse": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"total\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "suggestBody": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"query\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false\n    } ,\n    \"suggest\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false\n    }\n  }\n}"
        },
        {
            "benchAbortResponse": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"aborted_benchmarks\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"node\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"benchmark_name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"aborted\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
        }
    ],
    "traits": [
        {
            "canDeleteSelected": {
                "responses": {
                    "200": {
                        "code": "200",
                        "body": {
                            "application/json": {
                                "name": "application/json",
                                "schema": "query",
                                "example": "{\n  \"_indices\" : {\n    \"twitter\" : {\n      \"_shards\" : {\n        \"total\" : 5 ,\n        \"successful\" : 5 ,\n        \"failed\" : 0\n      }\n    }\n  }\n}",
                                "schemaContent": "query"
                            }
                        }
                    }
                },
                "body": {
                    "application/json": {
                        "name": "application/json",
                        "schema": "countReq",
                        "example": "{\n  \"query\" : {\n    \"term\" : {\n      \"user\" : \"kimchy\"\n    }\n  }\n}",
                        "schemaContent": "countReq"
                    }
                },
                "queryParameters": {
                    "q": {
                        "name": "q",
                        "displayName": "q",
                        "type": "string",
                        "required": true,
                        "example": "user:kimchy",
                        "repeat": false,
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "df": {
                        "name": "df",
                        "displayName": "df",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "The default field to use when no field prefix is defined within the query.",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "analyzer": {
                        "name": "analyzer",
                        "displayName": "analyzer",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "The analyzer name to be used when analyzing the query string.",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "default_operator": {
                        "name": "default_operator",
                        "displayName": "default_operator",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "The default operator to be used",
                        "enum": [
                            "AND",
                            "OR"
                        ],
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "replication": {
                        "name": "replication",
                        "displayName": "replication",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "The replication of the operation can be done in an asynchronous manner to the replicas (the operation will return once it has be executed on the primary shard).",
                        "enum": [
                            "async"
                        ],
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "consistency": {
                        "name": "consistency",
                        "displayName": "consistency",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "enum": [
                            "quorum",
                            "one",
                            "all"
                        ],
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "name": "canDeleteSelected"
            }
        },
        {
            "creatingDocument": {
                "responses": {
                    "200": {
                        "code": "200",
                        "body": {
                            "application/json": {
                                "name": "application/json",
                                "schema": "insertsDocument",
                                "example": "{\n  \"_index\" : \"twitter\" ,\n  \"_type\" : \"tweet\" ,\n  \"_id\" : \"1\" ,\n  \"_version\" : 1 ,\n  \"created\" : true\n}",
                                "schemaContent": "insertsDocument"
                            }
                        }
                    }
                },
                "body": {
                    "application/json": {
                        "name": "application/json",
                        "schema": "insertsDocumentReq",
                        "example": "{\r\n  \"user\" : \"kimchy\" ,\r\n  \"post_date\" : \"2009-11-15T14:12:12\" ,\r\n  \"message\" : \"trying out Elasticsearch\"\r\n}",
                        "schemaContent": "insertsDocumentReq"
                    }
                },
                "queryParameters": {
                    "version": {
                        "name": "version",
                        "displayName": "version",
                        "type": "string",
                        "required": false,
                        "example": "version=2",
                        "repeat": false,
                        "description": "Each indexed document is given a version number. The associated version number is returned as part of the response to the index API request. The index API optionally allows for optimistic concurrency control when the version parameter is specified. This will control the version of the document the operation is intended to be executed against. A good example of a use case for versioning is performing a transactional read-then-update. Specifying a version from the document initially read ensures no changes have happened in the meantime (when reading in order to update, it is recommended to set preference to _primary).",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "version_type": {
                        "name": "version_type",
                        "displayName": "version_type",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Next to the internal & external version types explained above, Elasticsearch also supports other types for specific use cases. Here is an overview of the different version types and their semantics.",
                        "enum": [
                            "external_gt",
                            "external",
                            "force",
                            "internal",
                            "external_gte"
                        ],
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "routing": {
                        "name": "routing",
                        "displayName": "routing",
                        "type": "string",
                        "required": false,
                        "example": "kimchy",
                        "repeat": false,
                        "description": "By default, shard placement's id value. For more explicit control, the value fed into the hash function used by the router can be directly specified on a per-operation basis using the routing parameter.",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "parent": {
                        "name": "parent",
                        "displayName": "parent",
                        "type": "string",
                        "required": false,
                        "example": "1111",
                        "repeat": false,
                        "description": "A child document can be indexed by specifying its parent when indexing",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "timestamp": {
                        "name": "timestamp",
                        "displayName": "timestamp",
                        "type": "string",
                        "required": false,
                        "example": "2009-11-15T14%3A12%3A12",
                        "repeat": false,
                        "description": "A document can be indexed with a timestamp associated with it. The timestamp value of a document can be set using the timestamp parameter.",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "ttl": {
                        "name": "ttl",
                        "displayName": "ttl",
                        "type": "string",
                        "required": false,
                        "example": "86400000",
                        "repeat": false,
                        "description": "A document can be indexed with a ttl (time to live) associated with it. Expired documents will be expunged automatically. The expiration date that will be set for a document with a provided ttl is relative to the timestamp of the document, meaning it can be based on the time of indexing or on any time provided. The provided ttl must be strictly positive and can be a number (in milliseconds) or any valid time value",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "consistency": {
                        "name": "consistency",
                        "displayName": "consistency",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "To prevent writes from taking place on the \"wrong\" side of a network partition, by default, index operations only succeed if a quorum (>replicas/2+1) of active shards are available. This default can be overridden on a node-by-node basis using the action.write_consistency setting. To alter this behavior per-operation, the consistency request parameter can be used.",
                        "enum": [
                            "quorum",
                            "one",
                            "all"
                        ],
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "replication": {
                        "name": "replication",
                        "displayName": "replication",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "By default, the index operation only returns after all shards within the replication group have indexed the document (sync replication). To enable asynchronous replication, causing the replication process to take place in the background, set the replication parameter to async. When asynchronous replication is used, the index operation will return as soon as the operation succeeds on the primary shard.",
                        "enum": [
                            "async"
                        ],
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "refresh": {
                        "name": "refresh",
                        "displayName": "refresh",
                        "type": "boolean",
                        "required": false,
                        "repeat": false,
                        "description": "To refresh the index immediately after the operation occurs, so that the document appears in search results immediately, the refresh parameter can be set to true. Setting this option to true should ONLY be done after careful thought and verification that it does not lead to poor performance, both from an indexing and a search standpoint. Note, getting a document using the get API is completely realtime.",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    },
                    "timeout": {
                        "name": "timeout",
                        "displayName": "timeout",
                        "type": "string",
                        "required": false,
                        "example": "5m",
                        "repeat": false,
                        "description": "The primary shard assigned to perform the index operation might not be available when the index operation is executed. Some reasons for this might be that the primary shard is currently recovering from a gateway or undergoing relocation. By default, the index operation will wait on the primary shard to become available for up to 1 minute before failing and responding with an error. The timeout parameter can be used to explicitly specify how long it waits.",
                        "__METADATA__": {
                            "primitiveValuesMeta": {
                                "displayName": {
                                    "calculated": true
                                },
                                "type": {
                                    "insertedAsDefault": true
                                },
                                "required": {
                                    "insertedAsDefault": true
                                },
                                "repeat": {
                                    "insertedAsDefault": true
                                }
                            }
                        }
                    }
                },
                "description": "Here is an example of using option to specify create.",
                "name": "creatingDocument"
            }
        }
    ],
    "resourceTypes": [
        {
            "msearchType": {
                "name": "msearchType",
                "get": {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            }
                        }
                    },
                    "body": {
                        "text/plain": {
                            "name": "text/plain",
                            "example": "{\\\"index\\\" : \\\"test\\\"} \\n\r\n{\\\"query\\\" : {\\\"match_all\\\" : {}}, \\\"from\\\" : 0, \\\"size\\\" : 10} \\n\r\n{\\\"index\\\" : \\\"test\\\", \\\"search_type\\\" : \\\"count\\\"} \\n\r\n{\\\"query\\\" : {\\\"match_all\\\" : {}}} \\n\r\n{} \\n\r\n{\\\"query\\\" : {\\\"match_all\\\" : {}}} \\n"
                        }
                    },
                    "description": "The multi search API allows to execute several search requests within the same API.\n",
                    "method": "get"
                },
                "post": {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            }
                        }
                    },
                    "body": {
                        "text/plain": {
                            "name": "text/plain",
                            "example": "{\\\"index\\\" : \\\"test\\\"} \\n\r\n{\\\"query\\\" : {\\\"match_all\\\" : {}}, \\\"from\\\" : 0, \\\"size\\\" : 10} \\n\r\n{\\\"index\\\" : \\\"test\\\", \\\"search_type\\\" : \\\"count\\\"} \\n\r\n{\\\"query\\\" : {\\\"match_all\\\" : {}}} \\n\r\n{} \\n\r\n{\\\"query\\\" : {\\\"match_all\\\" : {}}} \\n"
                        }
                    },
                    "description": "The multi search API allows to execute several search requests within the same API.\n",
                    "method": "post"
                }
            }
        },
        {
            "recoveryType": {
                "name": "recoveryType",
                "type": "base",
                "get": {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "recovery",
                                    "example": "{\n  \"index1\" : {\n    \"shards\" : [\n      {\n        \"id\" : 0 ,\n        \"type\" : \"snapshot\" ,\n        \"stage\" : \"index\" ,\n        \"primary\" : true ,\n        \"start_time\" : \"2014-02-24T12:15:59.716\" ,\n        \"stop_time\" : 0 ,\n        \"total_time_in_millis\" : 175576 ,\n        \"source\" : {\n          \"repository\" : \"my_repository\" ,\n          \"snapshot\" : \"my_snapshot\" ,\n          \"index\" : \"index1\"\n        } ,\n        \"target\" : {\n          \"id\" : \"ryqJ5lO5S4-lSFbGntkEkg\" ,\n          \"hostname\" : \"my.fqdn\" ,\n          \"ip\" : \"10.0.1.7\" ,\n          \"name\" : \"my_es_node\"\n        } ,\n        \"index\" : {\n          \"files\" : {\n            \"total\" : 73 ,\n            \"reused\" : 0 ,\n            \"recovered\" : 69 ,\n            \"percent\" : \"94.5%\"\n          } ,\n          \"bytes\" : {\n            \"total\" : 79063092 ,\n            \"reused\" : 0 ,\n            \"recovered\" : 68891939 ,\n            \"percent\" : \"87.1%\"\n          } ,\n          \"total_time_in_millis\" : 0\n        } ,\n        \"translog\" : {\n          \"recovered\" : 0 ,\n          \"total_time_in_millis\" : 0\n        } ,\n        \"start\" : {\n          \"check_index_time\" : 0 ,\n          \"total_time_in_millis\" : 0\n        }\n      }\n    ]\n  }\n}",
                                    "schemaContent": "recovery"
                                }
                            }
                        }
                    },
                    "queryParameters": {
                        "detailed": {
                            "name": "detailed",
                            "displayName": "detailed",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "description": "Display a detailed view. This is primarily useful for viewing the recovery of physical index files.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "active_only": {
                            "name": "active_only",
                            "displayName": "active_only",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "description": "Display only those recoveries that are currently on-going.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "The indices recovery API provides insight into on-going index shard recoveries. Recovery status may be reported for specific indices, or cluster-wide.",
                    "method": "get"
                }
            }
        },
        {
            "catResource": {
                "name": "catResource",
                "type": "base",
                "get": {
                    "responses": {
                        "200": {
                            "code": "200"
                        }
                    },
                    "queryParameters": {
                        "v": {
                            "name": "v",
                            "displayName": "v",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Each of the commands accepts a query string parameter v to turn on verbose output.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "help": {
                            "name": "help",
                            "displayName": "help",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Each of the commands accepts a query string parameter help which will output its available columns.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "h": {
                            "name": "h",
                            "displayName": "h",
                            "type": "string",
                            "required": false,
                            "example": "h=ip,port,heapPercent,name",
                            "repeat": false,
                            "description": "Each of the commands accepts a query string parameter h which forces only those columns to appear.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "bytes": {
                            "name": "bytes",
                            "displayName": "bytes",
                            "type": "string",
                            "required": false,
                            "example": "bytes=b",
                            "repeat": false,
                            "description": "Well use a byte-level resolution.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "method": "get"
                }
            }
        },
        {
            "flushType": {
                "name": "flushType",
                "type": "base",
                "post": {
                    "description": "The flush API allows to flush one or more indices through an API. The flush process of an index basically frees memory from the index by flushing data to the index storage and clearing the internal transaction log. By default, Elasticsearch uses memory heuristics in order to automatically trigger flush operations as required in order to clear memory.",
                    "method": "post"
                }
            }
        },
        {
            "bulkType": {
                "name": "bulkType",
                "type": "base",
                "post": {
                    "body": {
                        "text/plain": {
                            "name": "text/plain",
                            "example": "{ \\\"index\\\" : { \\\"_index\\\" : \\\"test\\\", \\\"_type\\\" : \\\"type1\\\", \\\"_id\\\" : \\\"1\\\" } } \\n\r\n{ \\\"field1\\\" : \\\"value1\\\" } \\n\r\n{ \\\"create\\\" : { \\\"_index\\\" : \\\"test\\\", \\\"_type\\\" : \\\"type1\\\", \\\"_id\\\" : \\\"3\\\" } } \\n\r\n{ \\\"field1\\\" : \\\"value3\\\" } \\n\r\n{ \\\"update\\\" : {\\\"_id\\\" : \\\"1\\\", \\\"_type\\\" : \\\"type1\\\", \\\"_index\\\" : \\\"index1\\\"} } \\n\r\n{ \\\"doc\\\" : {\\\"field2\" : \"value2\"} } \\n"
                        }
                    },
                    "description": "The possible actions are index, create, delete and update. index and create expect a source on the next line, and have the same semantics as the op_type parameter to the standard index API (i.e. create will fail if a document with the same index and type exists already, whereas index will add or replace a document as necessary). delete does not expect a source on the following line, and has the same semantics as the standard delete API. update expects that the partial doc, upsert and script and its options are specified on the next line.",
                    "method": "post"
                }
            }
        },
        {
            "cacheClearType": {
                "name": "cacheClearType",
                "type": "base",
                "post": {
                    "queryParameters": {
                        "filter": {
                            "name": "filter",
                            "displayName": "filter",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "description": "The API, by default, will clear all caches. Specific caches can be cleaned explicitly by setting filter, field_data or id_cache to true.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "field_data": {
                            "name": "field_data",
                            "displayName": "field_data",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "description": "The API, by default, will clear all caches. Specific caches can be cleaned explicitly by setting filter, field_data or id_cache to true.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "id_cache": {
                            "name": "id_cache",
                            "displayName": "id_cache",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "description": "The API, by default, will clear all caches. Specific caches can be cleaned explicitly by setting filter, field_data or id_cache to true.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "The clear cache API allows to clear either all caches or specific cached associated with one ore more indices.",
                    "method": "post"
                }
            }
        },
        {
            "searchType": {
                "name": "searchType",
                "type": "base",
                "get": {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "searchResp",
                                    "example": "{\n  \"_shards\" : {\n    \"total\" : 5 ,\n    \"successful\" : 5 ,\n    \"failed\" : 0\n  } ,\n  \"hits\" : {\n    \"total\" : 1 ,\n    \"hits\" : [\n      {\n        \"_index\" : \"twitter\" ,\n        \"_type\" : \"tweet\" ,\n        \"_id\" : \"1\" ,\n        \"_source\" : {\n          \"user\" : \"kimchy\" ,\n          \"postDate\" : \"2009-11-15T14:12:12\" ,\n          \"message\" : \"trying out Elasticsearch\"\n        }\n      }\n    ]\n  }\n}",
                                    "schemaContent": "searchResp"
                                }
                            }
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json",
                            "schema": "countReq",
                            "example": "{\n  \"query\" : {\n    \"term\" : {\n      \"user\" : \"kimchy\"\n    }\n  }\n}",
                            "schemaContent": "countReq"
                        }
                    },
                    "queryParameters": {
                        "q": {
                            "name": "q",
                            "displayName": "q",
                            "type": "string",
                            "required": false,
                            "example": "user:kimchy",
                            "repeat": false,
                            "description": "The query string (maps to the query_string query, see Query String Query for more details).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "df": {
                            "name": "df",
                            "displayName": "df",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "The default field to use when no field prefix is defined within the query.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "analyzer": {
                            "name": "analyzer",
                            "displayName": "analyzer",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "The analyzer name to be used when analyzing the query string.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "default_operator": {
                            "name": "default_operator",
                            "displayName": "default_operator",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "The default operator to be used, can be AND or OR. Defaults to OR.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "explain": {
                            "name": "explain",
                            "displayName": "explain",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "For each hit, contain an explanation of how scoring of the hits was computed.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "fields": {
                            "name": "fields",
                            "displayName": "fields",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "The selective stored fields of the document to return for each hit, comma delimited. Not specifying any value will cause no fields to return.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "sort": {
                            "name": "sort",
                            "displayName": "sort",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Sorting to perform. Can either be in the form of fieldName, or fieldName:asc/fieldName:desc. The fieldName can either be an actual field within the document, or the special _score name to indicate sorting based on scores. There can be several sort parameters (order is important).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "track_scores": {
                            "name": "track_scores",
                            "displayName": "track_scores",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "When sorting, set to true in order to still track scores and return them as part of each hit.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "timeout": {
                            "name": "timeout",
                            "displayName": "timeout",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "A search timeout, bounding the search request to be executed within the specified time value and bail with the hits accumulated up to that point when expired. Defaults to no timeout.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "from": {
                            "name": "from",
                            "displayName": "from",
                            "type": "string",
                            "required": false,
                            "default": 0,
                            "repeat": false,
                            "description": "The starting from index of the hits to return. Defaults to 0.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "size": {
                            "name": "size",
                            "displayName": "size",
                            "type": "string",
                            "required": false,
                            "default": 10,
                            "repeat": false,
                            "description": "The number of hits to return. Defaults to 10.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "search_type": {
                            "name": "search_type",
                            "displayName": "search_type",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "The type of the search operation to perform. Can be dfs_query_then_fetch, dfs_query_and_fetch, query_then_fetch, query_and_fetch, count, scan. Defaults to query_then_fetch. See Search Type for more details on the different types of search that can be performed.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "lowercase_expanded_terms": {
                            "name": "lowercase_expanded_terms",
                            "displayName": "lowercase_expanded_terms",
                            "type": "boolean",
                            "required": false,
                            "default": true,
                            "repeat": false,
                            "description": "Should terms be automatically lowercased or not. Defaults to true.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "analyze_wildcard": {
                            "name": "analyze_wildcard",
                            "displayName": "analyze_wildcard",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "description": "Should wildcard and prefix queries be analyzed or not. Defaults to false.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "method": "get"
                }
            }
        },
        {
            "refreshType": {
                "name": "refreshType",
                "type": "base",
                "post": {
                    "description": "The refresh API allows to explicitly refresh one or more index, making all operations performed since the last refresh available for search. The (near) real-time capabilities depend on the index engine used. For example, the internal one requires refresh to be called, but by default a refresh is scheduled periodically.",
                    "method": "post"
                }
            }
        },
        {
            "optimizeType": {
                "name": "optimizeType",
                "type": "base",
                "post": {
                    "queryParameters": {
                        "max_num_segments": {
                            "name": "max_num_segments",
                            "displayName": "max_num_segments",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "The number of segments to optimize to. To fully optimize the index, set it to 1. Defaults to simply checking if a merge needs to execute, and if so, executes it.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "only_expunge_deletes": {
                            "name": "only_expunge_deletes",
                            "displayName": "only_expunge_deletes",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Should the optimize process only expunge segments with deletes in it. In Lucene, a document is not deleted from a segment, just marked as deleted. During a merge process of segments, a new segment is created that does not have those deletes. This flag allows to only merge segments that have deletes. Defaults to false. Note that this won't override the index.merge.policy.expunge_deletes_allowed threshold.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "flush": {
                            "name": "flush",
                            "displayName": "flush",
                            "type": "boolean",
                            "required": false,
                            "default": true,
                            "repeat": false,
                            "description": "Should a flush be performed after the optimize. Defaults to true.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "wait_for_merge": {
                            "name": "wait_for_merge",
                            "displayName": "wait_for_merge",
                            "type": "boolean",
                            "required": false,
                            "default": true,
                            "repeat": false,
                            "description": "Should the request wait for the merge to end. Defaults to true. Note, a merge can potentially be a very heavy operation, so it might make sense to run it set to false.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "force": {
                            "name": "force",
                            "displayName": "force",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Force a merge operation, even if there is a single segment in the shard with no deletions. [1.1.0]",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "The optimize API allows to optimize one or more indices through an API. The optimize process basically optimizes the index for faster search operations (and relates to the number of segments a Lucene index holds within each shard). The optimize operation allows to reduce the number of segments by merging them.",
                    "method": "post"
                }
            }
        },
        {
            "mgetType": {
                "name": "mgetType",
                "type": "base",
                "get": {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            }
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json",
                            "schema": "mgetReq",
                            "example": "{\n  \"docs\" : [\n    {\n      \"_index\" : \"test\" ,\n      \"_type\" : \"type\" ,\n      \"_id\" : \"1\"\n    } , {\n      \"_index\" : \"test\" ,\n      \"_type\" : \"type\" ,\n      \"_id\" : \"2\"\n    }\n  ]\n}",
                            "schemaContent": "mgetReq"
                        }
                    },
                    "description": "Multi GET API allows to get multiple documents based on an index, type (optional) and id (and possibly routing). The response includes a docs array with all the fetched documents, each element similar in structure to a document provided by the get API.",
                    "method": "get"
                }
            }
        },
        {
            "analizerType": {
                "name": "analizerType",
                "type": "base",
                "get": {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            }
                        }
                    },
                    "queryParameters": {
                        "analyzer": {
                            "name": "analyzer",
                            "displayName": "analyzer",
                            "type": "string",
                            "required": false,
                            "example": "standard",
                            "repeat": false,
                            "description": "Can be used without specifying an index against one of the many built in analyzers",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "tokenizer": {
                            "name": "tokenizer",
                            "displayName": "tokenizer",
                            "type": "string",
                            "required": false,
                            "example": "keyword",
                            "repeat": false,
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "filters": {
                            "name": "filters",
                            "displayName": "filters",
                            "type": "string",
                            "required": false,
                            "example": "lowercase",
                            "repeat": false,
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "text": {
                            "name": "text",
                            "displayName": "text",
                            "type": "string",
                            "required": false,
                            "example": "this+is+a+test",
                            "repeat": false,
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Performs the analysis process on a text and return the tokens breakdown of the text.\n",
                    "method": "get"
                }
            }
        },
        {
            "base": {
                "name": "base",
                "get": {
                    "queryParameters": {
                        "pretty": {
                            "name": "pretty",
                            "displayName": "pretty",
                            "type": "boolean",
                            "required": false,
                            "example": "true",
                            "repeat": false,
                            "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "format": {
                            "name": "format",
                            "displayName": "format",
                            "type": "string",
                            "required": false,
                            "example": "yaml",
                            "repeat": false,
                            "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "human": {
                            "name": "human",
                            "displayName": "human",
                            "type": "boolean",
                            "required": false,
                            "default": true,
                            "example": "false",
                            "repeat": false,
                            "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "flat_settings": {
                            "name": "flat_settings",
                            "displayName": "flat_settings",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "case": {
                            "name": "case",
                            "displayName": "case",
                            "type": "string",
                            "required": false,
                            "example": "camelCase",
                            "repeat": false,
                            "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "callback": {
                            "name": "callback",
                            "displayName": "callback",
                            "type": "string",
                            "required": false,
                            "example": "JSONP",
                            "repeat": false,
                            "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "method": "get",
                    "__METADATA__": {
                        "optional": true
                    }
                },
                "post": {
                    "queryParameters": {
                        "pretty": {
                            "name": "pretty",
                            "displayName": "pretty",
                            "type": "boolean",
                            "required": false,
                            "example": "true",
                            "repeat": false,
                            "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "format": {
                            "name": "format",
                            "displayName": "format",
                            "type": "string",
                            "required": false,
                            "example": "yaml",
                            "repeat": false,
                            "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "human": {
                            "name": "human",
                            "displayName": "human",
                            "type": "boolean",
                            "required": false,
                            "default": true,
                            "example": "false",
                            "repeat": false,
                            "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "flat_settings": {
                            "name": "flat_settings",
                            "displayName": "flat_settings",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "method": "post",
                    "__METADATA__": {
                        "optional": true
                    }
                },
                "put": {
                    "queryParameters": {
                        "pretty": {
                            "name": "pretty",
                            "displayName": "pretty",
                            "type": "boolean",
                            "required": false,
                            "example": "true",
                            "repeat": false,
                            "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "format": {
                            "name": "format",
                            "displayName": "format",
                            "type": "string",
                            "required": false,
                            "example": "yaml",
                            "repeat": false,
                            "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "human": {
                            "name": "human",
                            "displayName": "human",
                            "type": "boolean",
                            "required": false,
                            "default": true,
                            "example": "false",
                            "repeat": false,
                            "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "flat_settings": {
                            "name": "flat_settings",
                            "displayName": "flat_settings",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "method": "put",
                    "__METADATA__": {
                        "optional": true
                    }
                }
            }
        },
        {
            "segmentsType": {
                "name": "segmentsType",
                "type": "base",
                "get": {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "segments",
                                    "example": "{\n  \"_3\" : {\n    \"generation\" : 3 ,\n    \"num_docs\" : 1121 ,\n    \"deleted_docs\" : 53 ,\n    \"size_in_bytes\" : 228288 ,\n    \"memory_in_bytes\" : 3211 ,\n    \"committed\" : true ,\n    \"search\" : true ,\n    \"version\" : \"4.6\" ,\n    \"compound\" : true\n  }\n}",
                                    "schemaContent": "segments"
                                }
                            }
                        }
                    },
                    "description": "Provide low level segments information that a Lucene index (shard level) is built with. Allows to be used to provide more information on the state of a shard and an index, possibly optimization information, data \"wasted\" on deletes, and so on.",
                    "method": "get"
                }
            }
        },
        {
            "multiTermVectors": {
                "name": "multiTermVectors",
                "type": "base",
                "get": {
                    "body": {
                        "application/json": {
                            "name": "application/json",
                            "schema": "multiTermVectorsRequest",
                            "example": "{\n  \"docs\" : [\n    {\n      \"_index\" : \"testidx\" ,\n      \"_type\" : \"test\" ,\n      \"_id\" : \"2\" ,\n      \"term_statistics\" : true\n    } , {\n      \"_index\" : \"testidx\" ,\n      \"_type\" : \"test\" ,\n      \"_id\" : \"1\" ,\n      \"fields\" : [\n        \"text\"\n      ]\n    }\n  ]\n}",
                            "schemaContent": "multiTermVectorsRequest"
                        }
                    },
                    "description": "Multi termvectors API allows to get multiple termvectors based on an index, type and id. The response includes a docs array with all the fetched termvectors, each element having the structure provided by the termvectors API\n",
                    "method": "get",
                    "__METADATA__": {
                        "optional": true
                    }
                }
            }
        },
        {
            "mappingType": {
                "name": "mappingType",
                "type": "base",
                "put": {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            }
                        }
                    },
                    "queryParameters": {
                        "ignore_conflicts": {
                            "name": "ignore_conflicts",
                            "displayName": "ignore_conflicts",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "description": "When an existing mapping already exists under the given type, the two mapping definitions, the one already defined, and the new ones are merged. The ignore_conflicts parameters can be used to control if conflicts should be ignored or not, by default, it is set to false which means conflicts are not ignored.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "The put mapping API allows to register specific mapping definition for a specific type.",
                    "method": "put",
                    "__METADATA__": {
                        "optional": true
                    }
                },
                "get": {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            }
                        }
                    },
                    "queryParameters": {
                        "include_defaults": {
                            "name": "include_defaults",
                            "displayName": "include_defaults",
                            "type": "boolean",
                            "required": false,
                            "example": "true",
                            "repeat": false,
                            "description": "adding include_defaults=true to the query string will cause the response to include default values, which are normally suppressed.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "The get mapping API allows to retrieve mapping definitions for an index or index/type.",
                    "method": "get",
                    "__METADATA__": {
                        "optional": true
                    }
                }
            }
        },
        {
            "validateType": {
                "name": "validateType",
                "type": "base",
                "get": {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "valid",
                                    "example": "{\n  \"valid\" : true ,\n  \"_shards\" : {\n    \"total\" : 1 ,\n    \"successful\" : 1 ,\n    \"failed\" : 0\n  }\n}",
                                    "schemaContent": "valid"
                                }
                            }
                        }
                    },
                    "description": "The validate API allows a user to validate a potentially expensive query without executing it.",
                    "method": "get"
                }
            }
        },
        {
            "indexSettingsType": {
                "name": "indexSettingsType",
                "type": "base",
                "put": {
                    "body": {
                        "application/json": {
                            "name": "application/json",
                            "schema": "settingsPut",
                            "example": "{\n  \"index.routing.allocation.include.tag\" : \"value1,value2\"\n}",
                            "schemaContent": "settingsPut"
                        }
                    },
                    "description": "Allows to control the allocation of indices on nodes based on include/exclude filters. The filters can be set both on the index level and on the cluster level. Lets start with an example of setting it on the cluster level\nWe can create an index that will only deploy on nodes that have tag set to value1 and value2 by setting index.routing.allocation.include.tag to value1,value2.\n",
                    "method": "put"
                },
                "get": {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            }
                        }
                    },
                    "description": "Retrieve settings of index/indices.",
                    "method": "get"
                }
            }
        },
        {
            "warmerType": {
                "name": "warmerType",
                "type": "base",
                "get": {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            }
                        }
                    },
                    "description": "Getting a warmer for specific index (or alias, or several indices) based on its name. The provided name can be a simple wildcard expression or omitted to get all warmers.",
                    "method": "get",
                    "__METADATA__": {
                        "optional": true
                    }
                },
                "put": {
                    "body": {
                        "application/json": {
                            "name": "application/json",
                            "schema": "warmerPutReq",
                            "example": "{\n  \"query\" : {\n    \"match_all\" : {\n    }\n  } ,\n  \"aggs\" : {\n    \"aggs_1\" : {\n      \"terms\" : {\n        \"field\" : \"field\"\n      }\n    }\n  }\n}",
                            "schemaContent": "warmerPutReq"
                        }
                    },
                    "description": "Allows to put a warmup search request on a specific index (or indices), with the body composing of a regular search request. Types can be provided as part of the URI if the search request is designed to be run only against the specific types.\n",
                    "method": "put",
                    "__METADATA__": {
                        "optional": true
                    }
                },
                "delete": {
                    "description": "Warmers can be deleted",
                    "method": "delete",
                    "__METADATA__": {
                        "optional": true
                    }
                }
            }
        },
        {
            "countType": {
                "name": "countType",
                "type": "base",
                "get": {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "count",
                                    "example": "{\n  \"count\" : 1 ,\n  \"_shards\" : {\n    \"total\" : 5 ,\n    \"successful\" : 5 ,\n    \"failed\" : 0\n  }\n}",
                                    "schemaContent": "count"
                                }
                            }
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json",
                            "schema": "countReq",
                            "example": "{\n  \"query\" : {\n    \"term\" : {\n      \"user\" : \"kimchy\"\n    }\n  }\n}",
                            "schemaContent": "countReq"
                        }
                    },
                    "queryParameters": {
                        "df": {
                            "name": "df",
                            "displayName": "df",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "The default field to use when no field prefix is defined within the query.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "analyzer": {
                            "name": "analyzer",
                            "displayName": "analyzer",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "The analyzer name to be used when analyzing the query string.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "default_operator": {
                            "name": "default_operator",
                            "displayName": "default_operator",
                            "type": "string",
                            "required": false,
                            "default": "OR",
                            "repeat": false,
                            "description": "The default operator to be used, can be AND or OR. Defaults to OR.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "The count API allows to easily execute a query and get the number of matches for that query.",
                    "method": "get"
                }
            }
        },
        {
            "mpercolateType": {
                "name": "mpercolateType",
                "description": "The multi percolate api allows to bundle multiple percolate requests into a single request, similar to what the multi search api does to search requests. The request body format is line based. Each percolate request item takes two lines, the first line is the header and the second line is the body.\n\nThe header can contain any parameter that normally would be set via the request path or query string parameters. T here are several percolate actions, because there are multiple types of percolate requests.\n",
                "get": {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            }
                        }
                    },
                    "body": {
                        "text/plain": {
                            "name": "text/plain",
                            "example": "{\\\"percolate\\\" : {\\\"index\\\" : twitter\\\", \\\"type\\\" : \\\"tweet\\\"}} \\n\r\n{\\\"doc\\\" : {\\\"message\\\" : \\\"some text\\\"}} \\n\r\n{\\\"count\\\" : {\\\"index\\\" : twitter\\\", \\\"type\\\" : \\\"tweet\\\"}} \\n\r\n{\\\"doc\\\" : {\\\"message\\\" : \\\"some other text\\\"}} \\n"
                        }
                    },
                    "description": "The multi percolate api allows to bundle multiple percolate requests into a single request, similar to what the multi search api does to search requests. The request body format is line based. Each percolate request item takes two lines, the first line is the header and the second line is the body.\n\nThe header can contain any parameter that normally would be set via the request path or query string parameters. T here are several percolate actions, because there are multiple types of percolate requests.\n",
                    "method": "get"
                },
                "post": {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            }
                        }
                    },
                    "body": {
                        "text/plain": {
                            "name": "text/plain",
                            "example": "{\\\"percolate\\\" : {\\\"index\\\" : twitter\\\", \\\"type\\\" : \\\"tweet\\\"}} \\n\r\n{\\\"doc\\\" : {\\\"message\\\" : \\\"some text\\\"}} \\n\r\n{\\\"count\\\" : {\\\"index\\\" : twitter\\\", \\\"type\\\" : \\\"tweet\\\"}} \\n\r\n{\\\"doc\\\" : {\\\"message\\\" : \\\"some other text\\\"}} \\n"
                        }
                    },
                    "description": "The multi percolate api allows to bundle multiple percolate requests into a single request, similar to what the multi search api does to search requests. The request body format is line based. Each percolate request item takes two lines, the first line is the header and the second line is the body.\n\nThe header can contain any parameter that normally would be set via the request path or query string parameters. T here are several percolate actions, because there are multiple types of percolate requests.\n",
                    "method": "post"
                }
            }
        }
    ],
    "resources": [
        {
            "relativeUri": "/{_index}",
            "type": "base",
            "uriParameters": {
                "_index": {
                    "name": "_index",
                    "displayName": "_index",
                    "type": "string",
                    "required": true,
                    "repeat": false,
                    "description": "Most APIs that refer to an index parameter support execution across multiple indices, using simple test1,test2,test3 notation (or _all for all indices). \nIt also support wildcards, for example: test*, \nand the ability to \"add\" (+) and \"remove\" (-), for example: +test*,-test3.\n",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "type": {
                                "insertedAsDefault": true
                            },
                            "repeat": {
                                "insertedAsDefault": true
                            }
                        }
                    }
                }
            },
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "createIndex",
                                    "example": "{\n  \"acknowledged\" : true\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"acknowledged\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json",
                            "schema": "createIndexReq",
                            "example": "{\n  \"settings\" : {\n    \"index\" : {\n      \"mapping.allow_type_wrapper\" : true\n    }\n  }\n}",
                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"settings\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"index\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"mapping.allow_type_wrapper\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            }\n          }\n        }\n      }\n    }\n  }\n}"
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "queryParameters": {
                        "pretty": {
                            "name": "pretty",
                            "displayName": "pretty",
                            "type": "boolean",
                            "required": false,
                            "example": "true",
                            "repeat": false,
                            "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "format": {
                            "name": "format",
                            "displayName": "format",
                            "type": "string",
                            "required": false,
                            "example": "yaml",
                            "repeat": false,
                            "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "human": {
                            "name": "human",
                            "displayName": "human",
                            "type": "boolean",
                            "required": false,
                            "default": true,
                            "example": "false",
                            "repeat": false,
                            "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "flat_settings": {
                            "name": "flat_settings",
                            "displayName": "flat_settings",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "The index operation automatically creates an index if it has not been created before (check out the create index API for manually creating an index), and also automatically creates a dynamic type mapping for the specific type if one has not yet been created (check out the put mapping API for manually creating a type mapping).",
                    "method": "post",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                },
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "createIndex",
                                    "example": "{\n  \"acknowledged\" : true\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"acknowledged\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json",
                            "schema": "createIndexReq",
                            "example": "{\n  \"settings\" : {\n    \"index\" : {\n      \"mapping.allow_type_wrapper\" : true\n    }\n  }\n}",
                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"settings\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"index\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"mapping.allow_type_wrapper\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            }\n          }\n        }\n      }\n    }\n  }\n}"
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "queryParameters": {
                        "pretty": {
                            "name": "pretty",
                            "displayName": "pretty",
                            "type": "boolean",
                            "required": false,
                            "example": "true",
                            "repeat": false,
                            "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "format": {
                            "name": "format",
                            "displayName": "format",
                            "type": "string",
                            "required": false,
                            "example": "yaml",
                            "repeat": false,
                            "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "human": {
                            "name": "human",
                            "displayName": "human",
                            "type": "boolean",
                            "required": false,
                            "default": true,
                            "example": "false",
                            "repeat": false,
                            "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "flat_settings": {
                            "name": "flat_settings",
                            "displayName": "flat_settings",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "The create index API allows to instantiate an index. Elasticsearch provides support for multiple indices, including executing operations across several indices.",
                    "method": "put",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                },
                {
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "description": "The delete index API allows to delete an existing index.",
                    "method": "delete",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                },
                {
                    "responses": {
                        "200": {
                            "code": "200"
                        },
                        "404": {
                            "code": "404"
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "description": "Used to check if the index (indices) exists or not. For example:\ncurl -XHEAD 'http://localhost:9200/twitter'\n\nThe HTTP status code indicates if the index exists or not. A 404 means it does not exist, and \n200 \nmeans it does.\n",
                    "method": "head",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/{_type}",
                    "type": "base",
                    "uriParameters": {
                        "_type": {
                            "name": "_type",
                            "displayName": "_type",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "description": "All search APIs can be applied across multiple types within an index, and across multiple indices with support for the multi index syntax.\nWe can also search within specific types: /http://localhost:9200/twitter/tweet,user/_search?q=user:kimchy'\nSet it to _all in order to fetch the first document matching the id across all types.\n",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "insertsDocument",
                                            "example": "{\n  \"_index\" : \"twitter\" ,\n  \"_type\" : \"tweet\" ,\n  \"_id\" : \"1\" ,\n  \"_version\" : 1 ,\n  \"created\" : true\n}",
                                            "schemaContent": "insertsDocument"
                                        }
                                    }
                                },
                                "201": {
                                    "code": "201",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json"
                                        }
                                    }
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "insertsDocumentReq",
                                    "example": "{\r\n  \"user\" : \"kimchy\" ,\r\n  \"post_date\" : \"2009-11-15T14:12:12\" ,\r\n  \"message\" : \"trying out Elasticsearch\"\r\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"user\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"post_date\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"message\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "version": {
                                    "name": "version",
                                    "displayName": "version",
                                    "type": "string",
                                    "required": false,
                                    "example": "version=2",
                                    "repeat": false,
                                    "description": "Each indexed document is given a version number. The associated version number is returned as part of the response to the index API request. The index API optionally allows for optimistic concurrency control when the version parameter is specified. This will control the version of the document the operation is intended to be executed against. A good example of a use case for versioning is performing a transactional read-then-update. Specifying a version from the document initially read ensures no changes have happened in the meantime (when reading in order to update, it is recommended to set preference to _primary).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "version_type": {
                                    "name": "version_type",
                                    "displayName": "version_type",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Next to the internal & external version types explained above, Elasticsearch also supports other types for specific use cases. Here is an overview of the different version types and their semantics.",
                                    "enum": [
                                        "external_gt",
                                        "external",
                                        "force",
                                        "internal",
                                        "external_gte"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "routing": {
                                    "name": "routing",
                                    "displayName": "routing",
                                    "type": "string",
                                    "required": false,
                                    "example": "kimchy",
                                    "repeat": false,
                                    "description": "By default, shard placement's id value. For more explicit control, the value fed into the hash function used by the router can be directly specified on a per-operation basis using the routing parameter.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "parent": {
                                    "name": "parent",
                                    "displayName": "parent",
                                    "type": "string",
                                    "required": false,
                                    "example": "1111",
                                    "repeat": false,
                                    "description": "A child document can be indexed by specifying its parent when indexing",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "timestamp": {
                                    "name": "timestamp",
                                    "displayName": "timestamp",
                                    "type": "string",
                                    "required": false,
                                    "example": "2009-11-15T14%3A12%3A12",
                                    "repeat": false,
                                    "description": "A document can be indexed with a timestamp associated with it. The timestamp value of a document can be set using the timestamp parameter.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "ttl": {
                                    "name": "ttl",
                                    "displayName": "ttl",
                                    "type": "string",
                                    "required": false,
                                    "example": "86400000",
                                    "repeat": false,
                                    "description": "A document can be indexed with a ttl (time to live) associated with it. Expired documents will be expunged automatically. The expiration date that will be set for a document with a provided ttl is relative to the timestamp of the document, meaning it can be based on the time of indexing or on any time provided. The provided ttl must be strictly positive and can be a number (in milliseconds) or any valid time value",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "consistency": {
                                    "name": "consistency",
                                    "displayName": "consistency",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "To prevent writes from taking place on the \"wrong\" side of a network partition, by default, index operations only succeed if a quorum (>replicas/2+1) of active shards are available. This default can be overridden on a node-by-node basis using the action.write_consistency setting. To alter this behavior per-operation, the consistency request parameter can be used.",
                                    "enum": [
                                        "quorum",
                                        "one",
                                        "all"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "replication": {
                                    "name": "replication",
                                    "displayName": "replication",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "By default, the index operation only returns after all shards within the replication group have indexed the document (sync replication). To enable asynchronous replication, causing the replication process to take place in the background, set the replication parameter to async. When asynchronous replication is used, the index operation will return as soon as the operation succeeds on the primary shard.",
                                    "enum": [
                                        "async"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "refresh": {
                                    "name": "refresh",
                                    "displayName": "refresh",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "To refresh the index immediately after the operation occurs, so that the document appears in search results immediately, the refresh parameter can be set to true. Setting this option to true should ONLY be done after careful thought and verification that it does not lead to poor performance, both from an indexing and a search standpoint. Note, getting a document using the get API is completely realtime.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "timeout": {
                                    "name": "timeout",
                                    "displayName": "timeout",
                                    "type": "string",
                                    "required": false,
                                    "example": "5m",
                                    "repeat": false,
                                    "description": "The primary shard assigned to perform the index operation might not be available when the index operation is executed. Some reasons for this might be that the primary shard is currently recovering from a gateway or undergoing relocation. By default, the index operation will wait on the primary shard to become available for up to 1 minute before failing and responding with an error. The timeout parameter can be used to explicitly specify how long it waits.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "The index operation can be executed without specifying the id. In such a case, an id will be generated automatically. In addition, the op_type will automatically be set to create. Here is an example (note the POST used instead of PUT)",
                            "method": "post",
                            "is": [
                                "creatingDocument"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "mgetIndexTypeReq",
                                    "example": "{\n  \"docs\" : [\n    {\n      \"_id\" : \"1\"\n    } , {\n      \"_id\" : \"2\"\n    }\n  ]\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"docs\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"_id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "case": {
                                    "name": "case",
                                    "displayName": "case",
                                    "type": "string",
                                    "required": false,
                                    "example": "camelCase",
                                    "repeat": false,
                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "callback": {
                                    "name": "callback",
                                    "displayName": "callback",
                                    "type": "string",
                                    "required": false,
                                    "example": "JSONP",
                                    "repeat": false,
                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Get all documents of the type.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "200": {
                                    "code": "200"
                                },
                                "400": {
                                    "code": "400"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "description": "Used to check if a type/types exists in an index/indices.The HTTP status code indicates if the type exists or not. A 404 means it does not exist, and  200  means it does.",
                            "method": "head",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "description": "Allow to delete a mapping (type) along with its data",
                            "method": "delete",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/{id}",
                            "type": "base",
                            "uriParameters": {
                                "id": {
                                    "name": "id",
                                    "displayName": "id",
                                    "type": "string",
                                    "required": true,
                                    "repeat": false,
                                    "__METADATA__": {
                                        "calculated": true,
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "insertsDocument",
                                                    "example": "{\n  \"_index\" : \"twitter\" ,\n  \"_type\" : \"tweet\" ,\n  \"_id\" : \"1\" ,\n  \"_version\" : 1 ,\n  \"created\" : true\n}",
                                                    "schemaContent": "insertsDocument"
                                                }
                                            }
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "insertsDocumentReq",
                                            "example": "{\r\n  \"user\" : \"kimchy\" ,\r\n  \"post_date\" : \"2009-11-15T14:12:12\" ,\r\n  \"message\" : \"trying out Elasticsearch\"\r\n}",
                                            "schemaContent": "insertsDocumentReq"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "queryParameters": {
                                        "op_type": {
                                            "name": "op_type",
                                            "displayName": "op_type",
                                            "type": "string",
                                            "required": false,
                                            "example": "create",
                                            "repeat": false,
                                            "description": "The index operation also accepts an op_type that can be used to force a create operation, allowing for \"put-if-absent\" behavior. When create is used, the index operation will fail if a document by that id already exists in the index.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "pretty": {
                                            "name": "pretty",
                                            "displayName": "pretty",
                                            "type": "boolean",
                                            "required": false,
                                            "example": "true",
                                            "repeat": false,
                                            "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "format": {
                                            "name": "format",
                                            "displayName": "format",
                                            "type": "string",
                                            "required": false,
                                            "example": "yaml",
                                            "repeat": false,
                                            "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "human": {
                                            "name": "human",
                                            "displayName": "human",
                                            "type": "boolean",
                                            "required": false,
                                            "default": true,
                                            "example": "false",
                                            "repeat": false,
                                            "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "flat_settings": {
                                            "name": "flat_settings",
                                            "displayName": "flat_settings",
                                            "type": "boolean",
                                            "required": false,
                                            "repeat": false,
                                            "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "version": {
                                            "name": "version",
                                            "displayName": "version",
                                            "type": "string",
                                            "required": false,
                                            "example": "version=2",
                                            "repeat": false,
                                            "description": "Each indexed document is given a version number. The associated version number is returned as part of the response to the index API request. The index API optionally allows for optimistic concurrency control when the version parameter is specified. This will control the version of the document the operation is intended to be executed against. A good example of a use case for versioning is performing a transactional read-then-update. Specifying a version from the document initially read ensures no changes have happened in the meantime (when reading in order to update, it is recommended to set preference to _primary).",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "version_type": {
                                            "name": "version_type",
                                            "displayName": "version_type",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "Next to the internal & external version types explained above, Elasticsearch also supports other types for specific use cases. Here is an overview of the different version types and their semantics.",
                                            "enum": [
                                                "external_gt",
                                                "external",
                                                "force",
                                                "internal",
                                                "external_gte"
                                            ],
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "routing": {
                                            "name": "routing",
                                            "displayName": "routing",
                                            "type": "string",
                                            "required": false,
                                            "example": "kimchy",
                                            "repeat": false,
                                            "description": "By default, shard placement's id value. For more explicit control, the value fed into the hash function used by the router can be directly specified on a per-operation basis using the routing parameter.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "parent": {
                                            "name": "parent",
                                            "displayName": "parent",
                                            "type": "string",
                                            "required": false,
                                            "example": "1111",
                                            "repeat": false,
                                            "description": "A child document can be indexed by specifying its parent when indexing",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "timestamp": {
                                            "name": "timestamp",
                                            "displayName": "timestamp",
                                            "type": "string",
                                            "required": false,
                                            "example": "2009-11-15T14%3A12%3A12",
                                            "repeat": false,
                                            "description": "A document can be indexed with a timestamp associated with it. The timestamp value of a document can be set using the timestamp parameter.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "ttl": {
                                            "name": "ttl",
                                            "displayName": "ttl",
                                            "type": "string",
                                            "required": false,
                                            "example": "86400000",
                                            "repeat": false,
                                            "description": "A document can be indexed with a ttl (time to live) associated with it. Expired documents will be expunged automatically. The expiration date that will be set for a document with a provided ttl is relative to the timestamp of the document, meaning it can be based on the time of indexing or on any time provided. The provided ttl must be strictly positive and can be a number (in milliseconds) or any valid time value",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "consistency": {
                                            "name": "consistency",
                                            "displayName": "consistency",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "To prevent writes from taking place on the \"wrong\" side of a network partition, by default, index operations only succeed if a quorum (>replicas/2+1) of active shards are available. This default can be overridden on a node-by-node basis using the action.write_consistency setting. To alter this behavior per-operation, the consistency request parameter can be used.",
                                            "enum": [
                                                "quorum",
                                                "one",
                                                "all"
                                            ],
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "replication": {
                                            "name": "replication",
                                            "displayName": "replication",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "By default, the index operation only returns after all shards within the replication group have indexed the document (sync replication). To enable asynchronous replication, causing the replication process to take place in the background, set the replication parameter to async. When asynchronous replication is used, the index operation will return as soon as the operation succeeds on the primary shard.",
                                            "enum": [
                                                "async"
                                            ],
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "refresh": {
                                            "name": "refresh",
                                            "displayName": "refresh",
                                            "type": "boolean",
                                            "required": false,
                                            "repeat": false,
                                            "description": "To refresh the index immediately after the operation occurs, so that the document appears in search results immediately, the refresh parameter can be set to true. Setting this option to true should ONLY be done after careful thought and verification that it does not lead to poor performance, both from an indexing and a search standpoint. Note, getting a document using the get API is completely realtime.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "timeout": {
                                            "name": "timeout",
                                            "displayName": "timeout",
                                            "type": "string",
                                            "required": false,
                                            "example": "5m",
                                            "repeat": false,
                                            "description": "The primary shard assigned to perform the index operation might not be available when the index operation is executed. Some reasons for this might be that the primary shard is currently recovering from a gateway or undergoing relocation. By default, the index operation will wait on the primary shard to become available for up to 1 minute before failing and responding with an error. The timeout parameter can be used to explicitly specify how long it waits.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "The index API adds or updates a typed JSON document in a specific index, making it searchable.",
                                    "method": "put",
                                    "is": [
                                        "creatingDocument"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "getDocument",
                                                    "example": "{\n  \"_index\" : \"twitter\" ,\n  \"_type\" : \"tweet\" ,\n  \"_id\" : \"1\" ,\n  \"_version\" : 1 ,\n  \"found\" : true ,\n  \"_source\" : {\n    \"user\" : \"kimchy\" ,\n    \"postDate\" : \"2009-11-15T14:12:12\" ,\n    \"message\" : \"trying out Elasticsearch\"\n  }\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"_index\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"_type\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"_id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"_version\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"found\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"_source\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"user\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"postDate\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"message\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "queryParameters": {
                                        "realtime": {
                                            "name": "realtime",
                                            "displayName": "realtime",
                                            "type": "boolean",
                                            "required": false,
                                            "repeat": false,
                                            "description": "In order to disable realtime GET, one can either set realtime parameter to false, or globally default it to by setting the action.get.realtime to false in the node configuration.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "fields": {
                                            "name": "fields",
                                            "displayName": "fields",
                                            "type": "string",
                                            "required": false,
                                            "example": "title,content",
                                            "repeat": false,
                                            "description": "When getting a document, one can specify fields to fetch from it. They will, when possible, be fetched as stored fields (fields mapped as stored in the mapping).",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "_source": {
                                            "name": "_source",
                                            "displayName": "_source",
                                            "type": "string",
                                            "required": false,
                                            "example": "*.id,retweeted",
                                            "repeat": false,
                                            "description": "By default, the get operation returns the contents of the _source field unless you have used the fields parameter or if the _source field is disabled. You can turn off _source retrieval by using the _source parameter",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "_source_include": {
                                            "name": "_source_include",
                                            "displayName": "_source_include",
                                            "type": "string",
                                            "required": false,
                                            "example": "*.id&_source_exclude=entities",
                                            "repeat": false,
                                            "description": "If you only need one or two fields from the complete _source, you can use the _source_include & _source_exclude parameters to include or filter out that parts you need. This can be especially helpful with large documents where partial retrieval can save on network overhead. Both parameters take a comma separated list of fields or wildcard expressions",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "_source_exclude": {
                                            "name": "_source_exclude",
                                            "displayName": "_source_exclude",
                                            "type": "string",
                                            "required": false,
                                            "example": "*.id&_source_exclude=entities",
                                            "repeat": false,
                                            "description": "If you only need one or two fields from the complete _source, you can use the _source_include & _source_exclude parameters to include or filter out that parts you need. This can be especially helpful with large documents where partial retrieval can save on network overhead. Both parameters take a comma separated list of fields or wildcard expressions.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "routing": {
                                            "name": "routing",
                                            "displayName": "routing",
                                            "type": "string",
                                            "required": false,
                                            "example": "kimchy",
                                            "repeat": false,
                                            "description": "When indexing using the ability to control the routing, in order to get a document, the routing value should also be provided.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "preference": {
                                            "name": "preference",
                                            "displayName": "preference",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "Controls a preference of which shard replicas to execute the get request on. By default, the operation is randomized between the shard replicas. A custom value will be used to guarantee that the same shards will be used for the same custom value. This can help with \"jumping values\" when hitting different shards in different refresh states. A sample value can be something like the web session id, or the user name.",
                                            "enum": [
                                                "_primary",
                                                "_local"
                                            ],
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "version": {
                                            "name": "version",
                                            "displayName": "version",
                                            "type": "string",
                                            "required": false,
                                            "example": "111",
                                            "repeat": false,
                                            "description": "You can use the version parameter to retrieve the document only if its current version is equal to the specified one.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "version_type": {
                                            "name": "version_type",
                                            "displayName": "version_type",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "This behavior is the same for all version types with the exception of version type FORCE which always retrieves the document.",
                                            "enum": [
                                                "FORCE"
                                            ],
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "pretty": {
                                            "name": "pretty",
                                            "displayName": "pretty",
                                            "type": "boolean",
                                            "required": false,
                                            "example": "true",
                                            "repeat": false,
                                            "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "format": {
                                            "name": "format",
                                            "displayName": "format",
                                            "type": "string",
                                            "required": false,
                                            "example": "yaml",
                                            "repeat": false,
                                            "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "human": {
                                            "name": "human",
                                            "displayName": "human",
                                            "type": "boolean",
                                            "required": false,
                                            "default": true,
                                            "example": "false",
                                            "repeat": false,
                                            "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "flat_settings": {
                                            "name": "flat_settings",
                                            "displayName": "flat_settings",
                                            "type": "boolean",
                                            "required": false,
                                            "repeat": false,
                                            "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "case": {
                                            "name": "case",
                                            "displayName": "case",
                                            "type": "string",
                                            "required": false,
                                            "example": "camelCase",
                                            "repeat": false,
                                            "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "callback": {
                                            "name": "callback",
                                            "displayName": "callback",
                                            "type": "string",
                                            "required": false,
                                            "example": "JSONP",
                                            "repeat": false,
                                            "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "The get API allows to get a typed JSON document from the index based on its id.",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "description": "The API also allows to check for the existence of a document using HEAD.",
                                    "method": "head",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "deleteDocument",
                                                    "example": "{\n  \"found\" : true ,\n  \"_index\" : \"twitter\" ,\n  \"_type\" : \"tweet\" ,\n  \"_id\" : \"1\" ,\n  \"_version\" : 2\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"found\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"_index\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"_type\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"_id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"_version\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    }\n  }\n}"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "queryParameters": {
                                        "version": {
                                            "name": "version",
                                            "displayName": "version",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "Each document indexed is versioned. When deleting a document, the version can be specified to make sure the relevant document we are trying to delete is actually being deleted and it has not changed in the meantime. Every write operation executed on a document, deletes included, causes its version to be incremented.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "parent": {
                                            "name": "parent",
                                            "displayName": "parent",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "The parent parameter can be set, which will basically be the same as setting the routing parameter. Note that deleting a parent document does not automatically delete its children. One way of deleting all child documents given a parent id is to perform a delete by query on the child index with the automatically generated (and indexed) field _parent, which is in the format parent_type#parent_id.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "replication": {
                                            "name": "replication",
                                            "displayName": "replication",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "he replication of the operation can be done in an asynchronous manner to the replicas (the operation will return once it has be executed on the primary shard). The replication parameter can be set to async (defaults to sync) in order to enable it.",
                                            "enum": [
                                                "async"
                                            ],
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "consistency": {
                                            "name": "consistency",
                                            "displayName": "consistency",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "Control if the operation will be allowed to execute based on the number of active shards within that partition (replication group). The values allowed are one, quorum, and all. The parameter to set it is consistency, and it defaults to the node level setting of action.write_consistency which in turn defaults to quorum.",
                                            "enum": [
                                                "quorum",
                                                "one",
                                                "all"
                                            ],
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "refresh": {
                                            "name": "refresh",
                                            "displayName": "refresh",
                                            "type": "boolean",
                                            "required": false,
                                            "repeat": false,
                                            "description": "The refresh parameter can be set to true in order to refresh the relevant shard after the delete operation has occurred and make it searchable. Setting it to true should be done after careful thought and verification that this does not cause a heavy load on the system (and slows down indexing).",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "timeout": {
                                            "name": "timeout",
                                            "displayName": "timeout",
                                            "type": "string",
                                            "required": false,
                                            "example": "5m",
                                            "repeat": false,
                                            "description": "The primary shard assigned to perform the delete operation might not be available when the delete operation is executed. Some reasons for this might be that the primary shard is currently recovering from a gateway or undergoing relocation. By default, the delete operation will wait on the primary shard to become available for up to 1 minute before failing and responding with an error. The timeout parameter can be used to explicitly specify how long it waits.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "The delete API allows to delete a typed JSON document from a specific index based on its id.",
                                    "method": "delete",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "resources": [
                                {
                                    "relativeUri": "/_create",
                                    "type": "base",
                                    "methods": [
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "insertsDocument",
                                                            "example": "{\n  \"_index\" : \"twitter\" ,\n  \"_type\" : \"tweet\" ,\n  \"_id\" : \"1\" ,\n  \"_version\" : 1 ,\n  \"created\" : true\n}",
                                                            "schemaContent": "insertsDocument"
                                                        }
                                                    }
                                                }
                                            },
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "insertsDocumentReq",
                                                    "example": "{\r\n  \"user\" : \"kimchy\" ,\r\n  \"post_date\" : \"2009-11-15T14:12:12\" ,\r\n  \"message\" : \"trying out Elasticsearch\"\r\n}",
                                                    "schemaContent": "insertsDocumentReq"
                                                }
                                            },
                                            "protocols": [
                                                "{PROTOCOL}"
                                            ],
                                            "queryParameters": {
                                                "pretty": {
                                                    "name": "pretty",
                                                    "displayName": "pretty",
                                                    "type": "boolean",
                                                    "required": false,
                                                    "example": "true",
                                                    "repeat": false,
                                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "format": {
                                                    "name": "format",
                                                    "displayName": "format",
                                                    "type": "string",
                                                    "required": false,
                                                    "example": "yaml",
                                                    "repeat": false,
                                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "human": {
                                                    "name": "human",
                                                    "displayName": "human",
                                                    "type": "boolean",
                                                    "required": false,
                                                    "default": true,
                                                    "example": "false",
                                                    "repeat": false,
                                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "flat_settings": {
                                                    "name": "flat_settings",
                                                    "displayName": "flat_settings",
                                                    "type": "boolean",
                                                    "required": false,
                                                    "repeat": false,
                                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "version": {
                                                    "name": "version",
                                                    "displayName": "version",
                                                    "type": "string",
                                                    "required": false,
                                                    "example": "version=2",
                                                    "repeat": false,
                                                    "description": "Each indexed document is given a version number. The associated version number is returned as part of the response to the index API request. The index API optionally allows for optimistic concurrency control when the version parameter is specified. This will control the version of the document the operation is intended to be executed against. A good example of a use case for versioning is performing a transactional read-then-update. Specifying a version from the document initially read ensures no changes have happened in the meantime (when reading in order to update, it is recommended to set preference to _primary).",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "version_type": {
                                                    "name": "version_type",
                                                    "displayName": "version_type",
                                                    "type": "string",
                                                    "required": false,
                                                    "repeat": false,
                                                    "description": "Next to the internal & external version types explained above, Elasticsearch also supports other types for specific use cases. Here is an overview of the different version types and their semantics.",
                                                    "enum": [
                                                        "external_gt",
                                                        "external",
                                                        "force",
                                                        "internal",
                                                        "external_gte"
                                                    ],
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "routing": {
                                                    "name": "routing",
                                                    "displayName": "routing",
                                                    "type": "string",
                                                    "required": false,
                                                    "example": "kimchy",
                                                    "repeat": false,
                                                    "description": "By default, shard placement's id value. For more explicit control, the value fed into the hash function used by the router can be directly specified on a per-operation basis using the routing parameter.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "parent": {
                                                    "name": "parent",
                                                    "displayName": "parent",
                                                    "type": "string",
                                                    "required": false,
                                                    "example": "1111",
                                                    "repeat": false,
                                                    "description": "A child document can be indexed by specifying its parent when indexing",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "timestamp": {
                                                    "name": "timestamp",
                                                    "displayName": "timestamp",
                                                    "type": "string",
                                                    "required": false,
                                                    "example": "2009-11-15T14%3A12%3A12",
                                                    "repeat": false,
                                                    "description": "A document can be indexed with a timestamp associated with it. The timestamp value of a document can be set using the timestamp parameter.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "ttl": {
                                                    "name": "ttl",
                                                    "displayName": "ttl",
                                                    "type": "string",
                                                    "required": false,
                                                    "example": "86400000",
                                                    "repeat": false,
                                                    "description": "A document can be indexed with a ttl (time to live) associated with it. Expired documents will be expunged automatically. The expiration date that will be set for a document with a provided ttl is relative to the timestamp of the document, meaning it can be based on the time of indexing or on any time provided. The provided ttl must be strictly positive and can be a number (in milliseconds) or any valid time value",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "consistency": {
                                                    "name": "consistency",
                                                    "displayName": "consistency",
                                                    "type": "string",
                                                    "required": false,
                                                    "repeat": false,
                                                    "description": "To prevent writes from taking place on the \"wrong\" side of a network partition, by default, index operations only succeed if a quorum (>replicas/2+1) of active shards are available. This default can be overridden on a node-by-node basis using the action.write_consistency setting. To alter this behavior per-operation, the consistency request parameter can be used.",
                                                    "enum": [
                                                        "quorum",
                                                        "one",
                                                        "all"
                                                    ],
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "replication": {
                                                    "name": "replication",
                                                    "displayName": "replication",
                                                    "type": "string",
                                                    "required": false,
                                                    "repeat": false,
                                                    "description": "By default, the index operation only returns after all shards within the replication group have indexed the document (sync replication). To enable asynchronous replication, causing the replication process to take place in the background, set the replication parameter to async. When asynchronous replication is used, the index operation will return as soon as the operation succeeds on the primary shard.",
                                                    "enum": [
                                                        "async"
                                                    ],
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "refresh": {
                                                    "name": "refresh",
                                                    "displayName": "refresh",
                                                    "type": "boolean",
                                                    "required": false,
                                                    "repeat": false,
                                                    "description": "To refresh the index immediately after the operation occurs, so that the document appears in search results immediately, the refresh parameter can be set to true. Setting this option to true should ONLY be done after careful thought and verification that it does not lead to poor performance, both from an indexing and a search standpoint. Note, getting a document using the get API is completely realtime.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "timeout": {
                                                    "name": "timeout",
                                                    "displayName": "timeout",
                                                    "type": "string",
                                                    "required": false,
                                                    "example": "5m",
                                                    "repeat": false,
                                                    "description": "The primary shard assigned to perform the index operation might not be available when the index operation is executed. Some reasons for this might be that the primary shard is currently recovering from a gateway or undergoing relocation. By default, the index operation will wait on the primary shard to become available for up to 1 minute before failing and responding with an error. The timeout parameter can be used to explicitly specify how long it waits.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "description": "Here is an example of using option to specify create.",
                                            "method": "put",
                                            "is": [
                                                "creatingDocument"
                                            ],
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/_create",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "_create"
                                    ]
                                },
                                {
                                    "relativeUri": "/_source",
                                    "type": "base",
                                    "methods": [
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json"
                                                        }
                                                    }
                                                }
                                            },
                                            "protocols": [
                                                "{PROTOCOL}"
                                            ],
                                            "queryParameters": {
                                                "pretty": {
                                                    "name": "pretty",
                                                    "displayName": "pretty",
                                                    "type": "boolean",
                                                    "required": false,
                                                    "example": "true",
                                                    "repeat": false,
                                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "format": {
                                                    "name": "format",
                                                    "displayName": "format",
                                                    "type": "string",
                                                    "required": false,
                                                    "example": "yaml",
                                                    "repeat": false,
                                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "human": {
                                                    "name": "human",
                                                    "displayName": "human",
                                                    "type": "boolean",
                                                    "required": false,
                                                    "default": true,
                                                    "example": "false",
                                                    "repeat": false,
                                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "flat_settings": {
                                                    "name": "flat_settings",
                                                    "displayName": "flat_settings",
                                                    "type": "boolean",
                                                    "required": false,
                                                    "repeat": false,
                                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "case": {
                                                    "name": "case",
                                                    "displayName": "case",
                                                    "type": "string",
                                                    "required": false,
                                                    "example": "camelCase",
                                                    "repeat": false,
                                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "callback": {
                                                    "name": "callback",
                                                    "displayName": "callback",
                                                    "type": "string",
                                                    "required": false,
                                                    "example": "JSONP",
                                                    "repeat": false,
                                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "description": "Use the endpoint to get just the _source field of the document, without any additional content around it.",
                                            "method": "get",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200"
                                                }
                                            },
                                            "protocols": [
                                                "{PROTOCOL}"
                                            ],
                                            "description": "Note, there is also a HEAD variant for the _source endpoint to efficiently test for document existence.",
                                            "method": "head",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/_source",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "_source"
                                    ]
                                },
                                {
                                    "relativeUri": "/_update",
                                    "type": "base",
                                    "methods": [
                                        {
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "updateDocumentReq",
                                                    "example": "{\n  \"doc\" : {\n    \"name\" : \"new_name\"\n  }\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"doc\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
                                                }
                                            },
                                            "protocols": [
                                                "{PROTOCOL}"
                                            ],
                                            "queryParameters": {
                                                "version": {
                                                    "name": "version",
                                                    "displayName": "version",
                                                    "type": "string",
                                                    "required": false,
                                                    "example": "version=2",
                                                    "repeat": false,
                                                    "description": "Each indexed document is given a version number. The associated version number is returned as part of the response to the index API request. The index API optionally allows for optimistic concurrency control when the version parameter is specified. This will control the version of the document the operation is intended to be executed against. A good example of a use case for versioning is performing a transactional read-then-update. Specifying a version from the document initially read ensures no changes have happened in the meantime (when reading in order to update, it is recommended to set preference to _primary).",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "version_type": {
                                                    "name": "version_type",
                                                    "displayName": "version_type",
                                                    "type": "string",
                                                    "required": false,
                                                    "repeat": false,
                                                    "description": "Next to the internal & external version types explained above, Elasticsearch also supports other types for specific use cases. Here is an overview of the different version types and their semantics.",
                                                    "enum": [
                                                        "external_gt",
                                                        "external",
                                                        "force",
                                                        "internal",
                                                        "external_gte"
                                                    ],
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "routing": {
                                                    "name": "routing",
                                                    "displayName": "routing",
                                                    "type": "string",
                                                    "required": false,
                                                    "example": "kimchy",
                                                    "repeat": false,
                                                    "description": "By default, shard placement  id value. For more explicit control, the value fed into the hash function used by the router can be directly specified on a per-operation basis using the routing parameter.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "parent": {
                                                    "name": "parent",
                                                    "displayName": "parent",
                                                    "type": "string",
                                                    "required": false,
                                                    "example": "1111",
                                                    "repeat": false,
                                                    "description": "A child document can be indexed by specifying its parent when indexing",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "consistency": {
                                                    "name": "consistency",
                                                    "displayName": "consistency",
                                                    "type": "string",
                                                    "required": false,
                                                    "repeat": false,
                                                    "description": "To prevent writes from taking place on the \"wrong\" side of a network partition, by default, index operations only succeed if a quorum (>replicas/2+1) of active shards are available. This default can be overridden on a node-by-node basis using the action.write_consistency setting. To alter this behavior per-operation, the consistency request parameter can be used.",
                                                    "enum": [
                                                        "quorum",
                                                        "one",
                                                        "all"
                                                    ],
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "replication": {
                                                    "name": "replication",
                                                    "displayName": "replication",
                                                    "type": "string",
                                                    "required": false,
                                                    "repeat": false,
                                                    "description": "By default, the index operation only returns after all shards within the replication group have indexed the document (sync replication). To enable asynchronous replication, causing the replication process to take place in the background, set the replication parameter to async. When asynchronous replication is used, the index operation will return as soon as the operation succeeds on the primary shard.",
                                                    "enum": [
                                                        "async"
                                                    ],
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "refresh": {
                                                    "name": "refresh",
                                                    "displayName": "refresh",
                                                    "type": "boolean",
                                                    "required": false,
                                                    "repeat": false,
                                                    "description": "To refresh the index immediately after the operation occurs, so that the document appears in search results immediately, the refresh parameter can be set to true. Setting this option to true should ONLY be done after careful thought and verification that it does not lead to poor performance, both from an indexing and a search standpoint. Note, getting a document using the get API is completely realtime.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "timeout": {
                                                    "name": "timeout",
                                                    "displayName": "timeout",
                                                    "type": "string",
                                                    "required": false,
                                                    "example": "5m",
                                                    "repeat": false,
                                                    "description": "The primary shard assigned to perform the index operation might not be available when the index operation is executed. Some reasons for this might be that the primary shard is currently recovering from a gateway or undergoing relocation. By default, the index operation will wait on the primary shard to become available for up to 1 minute before failing and responding with an error. The timeout parameter can be used to explicitly specify how long it waits.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "fields": {
                                                    "name": "fields",
                                                    "displayName": "fields",
                                                    "type": "string",
                                                    "required": false,
                                                    "example": "title,content",
                                                    "repeat": false,
                                                    "description": "When getting a document, one can specify fields to fetch from it. They will, when possible, be fetched as stored fields (fields mapped as stored in the mapping).",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "retry_on_conflict": {
                                                    "name": "retry_on_conflict",
                                                    "displayName": "retry_on_conflict",
                                                    "type": "string",
                                                    "required": false,
                                                    "default": 0,
                                                    "repeat": false,
                                                    "description": "support retry_on_conflict which controls how many times to retry if there is a version conflict between getting the document and indexing / deleting it.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "pretty": {
                                                    "name": "pretty",
                                                    "displayName": "pretty",
                                                    "type": "boolean",
                                                    "required": false,
                                                    "example": "true",
                                                    "repeat": false,
                                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "format": {
                                                    "name": "format",
                                                    "displayName": "format",
                                                    "type": "string",
                                                    "required": false,
                                                    "example": "yaml",
                                                    "repeat": false,
                                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "human": {
                                                    "name": "human",
                                                    "displayName": "human",
                                                    "type": "boolean",
                                                    "required": false,
                                                    "default": true,
                                                    "example": "false",
                                                    "repeat": false,
                                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "flat_settings": {
                                                    "name": "flat_settings",
                                                    "displayName": "flat_settings",
                                                    "type": "boolean",
                                                    "required": false,
                                                    "repeat": false,
                                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "description": "The update API allows to update a document based on a script provided. The operation gets the document (collocated with the shard) from the index, runs the script (with optional script language and parameters), and index back the result (also allows to delete, or ignore the operation). It uses versioning to make sure no updates have happened during the \"get\" and \"reindex\".",
                                            "method": "post",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/_update",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "_update"
                                    ]
                                },
                                {
                                    "relativeUri": "/_mlt",
                                    "type": "base",
                                    "methods": [
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json"
                                                        }
                                                    }
                                                }
                                            },
                                            "protocols": [
                                                "{PROTOCOL}"
                                            ],
                                            "queryParameters": {
                                                "mlt_fields": {
                                                    "name": "mlt_fields",
                                                    "displayName": "mlt_fields",
                                                    "type": "string",
                                                    "required": false,
                                                    "repeat": false,
                                                    "description": "fields of the document will be used in the more_like_this query generated.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "min_doc_freq": {
                                                    "name": "min_doc_freq",
                                                    "displayName": "min_doc_freq",
                                                    "type": "number",
                                                    "required": false,
                                                    "repeat": false,
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "include": {
                                                    "name": "include",
                                                    "displayName": "include",
                                                    "type": "boolean",
                                                    "required": false,
                                                    "default": false,
                                                    "repeat": false,
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "pretty": {
                                                    "name": "pretty",
                                                    "displayName": "pretty",
                                                    "type": "boolean",
                                                    "required": false,
                                                    "example": "true",
                                                    "repeat": false,
                                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "format": {
                                                    "name": "format",
                                                    "displayName": "format",
                                                    "type": "string",
                                                    "required": false,
                                                    "example": "yaml",
                                                    "repeat": false,
                                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "human": {
                                                    "name": "human",
                                                    "displayName": "human",
                                                    "type": "boolean",
                                                    "required": false,
                                                    "default": true,
                                                    "example": "false",
                                                    "repeat": false,
                                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "flat_settings": {
                                                    "name": "flat_settings",
                                                    "displayName": "flat_settings",
                                                    "type": "boolean",
                                                    "required": false,
                                                    "repeat": false,
                                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "case": {
                                                    "name": "case",
                                                    "displayName": "case",
                                                    "type": "string",
                                                    "required": false,
                                                    "example": "camelCase",
                                                    "repeat": false,
                                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "callback": {
                                                    "name": "callback",
                                                    "displayName": "callback",
                                                    "type": "string",
                                                    "required": false,
                                                    "example": "JSONP",
                                                    "repeat": false,
                                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "description": "The more like this (mlt) API allows to get documents that are \"like\" a specified document.\n",
                                            "method": "get",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/_mlt",
                                    "description": "The API simply results in executing a search request with moreLikeThis query (http parameters match the parameters to the more_like_this query). This means that the body of the request can \noptionally include all the request body options in the search API (aggs, from/to and so on). Internally, the more like this API is equivalent to performing a boolean query of more_like_this_field queries, with one query per specified \nmlt_fields.\n\nRest parameters relating to search are also allowed, including search_type, \nsearch_indices, \nsearch_types, \nsearch_scroll, \nsearch_size and \nsearch_from.\n\nWhen no mlt_fields are specified, all the fields of the document will be used in the \nmore_like_this query generated.\n\nBy default, the queried document is excluded from the response (include set to false).\n\nNote: In order to use the mlt feature a \nmlt_field needs to be either be \nstored, store \nterm_vector or \nsource needs to be enabled.\n",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "_mlt"
                                    ]
                                },
                                {
                                    "relativeUri": "/_percolate",
                                    "type": "base",
                                    "methods": [
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json"
                                                        }
                                                    }
                                                }
                                            },
                                            "protocols": [
                                                "{PROTOCOL}"
                                            ],
                                            "queryParameters": {
                                                "pretty": {
                                                    "name": "pretty",
                                                    "displayName": "pretty",
                                                    "type": "boolean",
                                                    "required": false,
                                                    "example": "true",
                                                    "repeat": false,
                                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "format": {
                                                    "name": "format",
                                                    "displayName": "format",
                                                    "type": "string",
                                                    "required": false,
                                                    "example": "yaml",
                                                    "repeat": false,
                                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "human": {
                                                    "name": "human",
                                                    "displayName": "human",
                                                    "type": "boolean",
                                                    "required": false,
                                                    "default": true,
                                                    "example": "false",
                                                    "repeat": false,
                                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "flat_settings": {
                                                    "name": "flat_settings",
                                                    "displayName": "flat_settings",
                                                    "type": "boolean",
                                                    "required": false,
                                                    "repeat": false,
                                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "case": {
                                                    "name": "case",
                                                    "displayName": "case",
                                                    "type": "string",
                                                    "required": false,
                                                    "example": "camelCase",
                                                    "repeat": false,
                                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "callback": {
                                                    "name": "callback",
                                                    "displayName": "callback",
                                                    "type": "string",
                                                    "required": false,
                                                    "example": "JSONP",
                                                    "repeat": false,
                                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "description": "Percolating an existing document",
                                            "method": "get",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/_percolate",
                                    "description": "",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "_percolate"
                                    ]
                                },
                                {
                                    "relativeUri": "/_explain",
                                    "type": "base",
                                    "methods": [
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json"
                                                        }
                                                    }
                                                }
                                            },
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "explainReq",
                                                    "example": "{\n  \"query\" : {\n    \"term\" : {\n      \"message\" : \"search\"\n    }\n  }\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"query\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"term\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"message\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      }\n    }\n  }\n}"
                                                }
                                            },
                                            "protocols": [
                                                "{PROTOCOL}"
                                            ],
                                            "queryParameters": {
                                                "pretty": {
                                                    "name": "pretty",
                                                    "displayName": "pretty",
                                                    "type": "boolean",
                                                    "required": false,
                                                    "example": "true",
                                                    "repeat": false,
                                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "format": {
                                                    "name": "format",
                                                    "displayName": "format",
                                                    "type": "string",
                                                    "required": false,
                                                    "example": "yaml",
                                                    "repeat": false,
                                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "human": {
                                                    "name": "human",
                                                    "displayName": "human",
                                                    "type": "boolean",
                                                    "required": false,
                                                    "default": true,
                                                    "example": "false",
                                                    "repeat": false,
                                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "flat_settings": {
                                                    "name": "flat_settings",
                                                    "displayName": "flat_settings",
                                                    "type": "boolean",
                                                    "required": false,
                                                    "repeat": false,
                                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "case": {
                                                    "name": "case",
                                                    "displayName": "case",
                                                    "type": "string",
                                                    "required": false,
                                                    "example": "camelCase",
                                                    "repeat": false,
                                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "callback": {
                                                    "name": "callback",
                                                    "displayName": "callback",
                                                    "type": "string",
                                                    "required": false,
                                                    "example": "JSONP",
                                                    "repeat": false,
                                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "description": "The explain api computes a score explanation for a query and a specific document. This can give useful feedback whether a document matches or didn't match a specific query.\nThe index and type parameters expect a single index and a single type respectively.\n",
                                            "method": "get",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/_explain",
                                    "description": "",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "_explain"
                                    ]
                                },
                                {
                                    "relativeUri": "/_termvector",
                                    "type": "base",
                                    "methods": [
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "termVectors",
                                                            "example": "{\n  \"_id\" : \"1\" ,\n  \"_index\" : \"twitter\" ,\n  \"_type\" : \"tweet\" ,\n  \"_version\" : 1 ,\n  \"found\" : true ,\n  \"term_vectors\" : {\n    \"text\" : {\n      \"field_statistics\" : {\n        \"doc_count\" : 2 ,\n        \"sum_doc_freq\" : 6 ,\n        \"sum_ttf\" : 8\n      } ,\n      \"terms\" : {\n        \"test\" : {\n          \"doc_freq\" : 2 ,\n          \"term_freq\" : 3 ,\n          \"tokens\" : [\n            {\n              \"end_offset\" : 12 ,\n              \"payload\" : \"d29yZA==\" ,\n              \"position\" : 1 ,\n              \"start_offset\" : 8\n            } , {\n              \"end_offset\" : 17 ,\n              \"payload\" : \"d29yZA==\" ,\n              \"position\" : 2 ,\n              \"start_offset\" : 13\n            } , {\n              \"end_offset\" : 22 ,\n              \"payload\" : \"d29yZA==\" ,\n              \"position\" : 3 ,\n              \"start_offset\" : 18\n            }\n          ] ,\n          \"ttf\" : 4\n        } ,\n        \"twitter\" : {\n          \"doc_freq\" : 2 ,\n          \"term_freq\" : 1 ,\n          \"tokens\" : [\n            {\n              \"end_offset\" : 7 ,\n              \"payload\" : \"d29yZA==\" ,\n              \"position\" : 0 ,\n              \"start_offset\" : 0\n            }\n          ] ,\n          \"ttf\" : 2\n        }\n      }\n    }\n  }\n}",
                                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"_id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"_index\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"_type\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"_version\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"found\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"term_vectors\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"text\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"field_statistics\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"doc_count\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"sum_doc_freq\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"sum_ttf\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"terms\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"test\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"doc_freq\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"term_freq\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"tokens\" : {\n                      \"type\" : \"array\" ,\n                      \"required\" : false ,\n                      \"items\" : [\n                        {\n                          \"type\" : \"object\" ,\n                          \"properties\" : {\n                            \"end_offset\" : {\n                              \"type\" : \"number\" ,\n                              \"required\" : false\n                            } ,\n                            \"payload\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            } ,\n                            \"position\" : {\n                              \"type\" : \"number\" ,\n                              \"required\" : false\n                            } ,\n                            \"start_offset\" : {\n                              \"type\" : \"number\" ,\n                              \"required\" : false\n                            }\n                          }\n                        }\n                      ]\n                    } ,\n                    \"ttf\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"twitter\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"doc_freq\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"term_freq\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"tokens\" : {\n                      \"type\" : \"array\" ,\n                      \"required\" : false ,\n                      \"items\" : [\n                        {\n                          \"type\" : \"object\" ,\n                          \"properties\" : {\n                            \"end_offset\" : {\n                              \"type\" : \"number\" ,\n                              \"required\" : false\n                            } ,\n                            \"payload\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            } ,\n                            \"position\" : {\n                              \"type\" : \"number\" ,\n                              \"required\" : false\n                            } ,\n                            \"start_offset\" : {\n                              \"type\" : \"number\" ,\n                              \"required\" : false\n                            }\n                          }\n                        }\n                      ]\n                    } ,\n                    \"ttf\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
                                                        }
                                                    }
                                                }
                                            },
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "termVectorSettings",
                                                    "example": "{\n  \"fields\" : [\n    \"text\"\n  ] ,\n  \"offsets\" : true ,\n  \"payloads\" : true ,\n  \"positions\" : true ,\n  \"term_statistics\" : true ,\n  \"field_statistics\" : true\n}",
                                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"fields\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"string\"\n        }\n      ]\n    } ,\n    \"offsets\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"payloads\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"positions\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"term_statistics\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    } ,\n    \"field_statistics\" : {\n      \"type\" : \"boolean\" ,\n      \"required\" : false\n    }\n  }\n}"
                                                }
                                            },
                                            "protocols": [
                                                "{PROTOCOL}"
                                            ],
                                            "queryParameters": {
                                                "fields": {
                                                    "name": "fields",
                                                    "displayName": "fields",
                                                    "type": "string",
                                                    "required": false,
                                                    "repeat": false,
                                                    "description": "Optionally, you can specify the fields for which the information is retrieved either with a parameter in the url",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "pretty": {
                                                    "name": "pretty",
                                                    "displayName": "pretty",
                                                    "type": "boolean",
                                                    "required": false,
                                                    "example": "true",
                                                    "repeat": false,
                                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "format": {
                                                    "name": "format",
                                                    "displayName": "format",
                                                    "type": "string",
                                                    "required": false,
                                                    "example": "yaml",
                                                    "repeat": false,
                                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "human": {
                                                    "name": "human",
                                                    "displayName": "human",
                                                    "type": "boolean",
                                                    "required": false,
                                                    "default": true,
                                                    "example": "false",
                                                    "repeat": false,
                                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "flat_settings": {
                                                    "name": "flat_settings",
                                                    "displayName": "flat_settings",
                                                    "type": "boolean",
                                                    "required": false,
                                                    "repeat": false,
                                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "case": {
                                                    "name": "case",
                                                    "displayName": "case",
                                                    "type": "string",
                                                    "required": false,
                                                    "example": "camelCase",
                                                    "repeat": false,
                                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "callback": {
                                                    "name": "callback",
                                                    "displayName": "callback",
                                                    "type": "string",
                                                    "required": false,
                                                    "example": "JSONP",
                                                    "repeat": false,
                                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "description": "Returns information and statistics on terms in the fields of a particular document as stored in the index.",
                                            "method": "get",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/_termvector",
                                    "description": "",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "_termvector"
                                    ]
                                }
                            ],
                            "displayName": "/{id}",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "{id}"
                            ]
                        },
                        {
                            "relativeUri": "/_bulk",
                            "type": "bulkType",
                            "methods": [
                                {
                                    "body": {
                                        "text/plain": {
                                            "name": "text/plain",
                                            "example": "{ \\\"index\\\" : { \\\"_index\\\" : \\\"test\\\", \\\"_type\\\" : \\\"type1\\\", \\\"_id\\\" : \\\"1\\\" } } \\n\r\n{ \\\"field1\\\" : \\\"value1\\\" } \\n\r\n{ \\\"create\\\" : { \\\"_index\\\" : \\\"test\\\", \\\"_type\\\" : \\\"type1\\\", \\\"_id\\\" : \\\"3\\\" } } \\n\r\n{ \\\"field1\\\" : \\\"value3\\\" } \\n\r\n{ \\\"update\\\" : {\\\"_id\\\" : \\\"1\\\", \\\"_type\\\" : \\\"type1\\\", \\\"_index\\\" : \\\"index1\\\"} } \\n\r\n{ \\\"doc\\\" : {\\\"field2\" : \"value2\"} } \\n"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "queryParameters": {
                                        "pretty": {
                                            "name": "pretty",
                                            "displayName": "pretty",
                                            "type": "boolean",
                                            "required": false,
                                            "example": "true",
                                            "repeat": false,
                                            "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "format": {
                                            "name": "format",
                                            "displayName": "format",
                                            "type": "string",
                                            "required": false,
                                            "example": "yaml",
                                            "repeat": false,
                                            "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "human": {
                                            "name": "human",
                                            "displayName": "human",
                                            "type": "boolean",
                                            "required": false,
                                            "default": true,
                                            "example": "false",
                                            "repeat": false,
                                            "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "flat_settings": {
                                            "name": "flat_settings",
                                            "displayName": "flat_settings",
                                            "type": "boolean",
                                            "required": false,
                                            "repeat": false,
                                            "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "The bulk API makes it possible to perform many index/delete operations in a single API call. This can greatly increase the indexing speed.",
                                    "method": "post",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/_bulk",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "_bulk"
                            ]
                        },
                        {
                            "relativeUri": "/_query",
                            "type": "base",
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "query",
                                                    "example": "{\n  \"_indices\" : {\n    \"twitter\" : {\n      \"_shards\" : {\n        \"total\" : 5 ,\n        \"successful\" : 5 ,\n        \"failed\" : 0\n      }\n    }\n  }\n}",
                                                    "schemaContent": "query"
                                                }
                                            }
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "countReq",
                                            "example": "{\n  \"query\" : {\n    \"term\" : {\n      \"user\" : \"kimchy\"\n    }\n  }\n}",
                                            "schemaContent": "countReq"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "queryParameters": {
                                        "q": {
                                            "name": "q",
                                            "displayName": "q",
                                            "type": "string",
                                            "required": true,
                                            "example": "user:kimchy",
                                            "repeat": false,
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "df": {
                                            "name": "df",
                                            "displayName": "df",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "The default field to use when no field prefix is defined within the query.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "analyzer": {
                                            "name": "analyzer",
                                            "displayName": "analyzer",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "The analyzer name to be used when analyzing the query string.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "default_operator": {
                                            "name": "default_operator",
                                            "displayName": "default_operator",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "The default operator to be used",
                                            "enum": [
                                                "AND",
                                                "OR"
                                            ],
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "replication": {
                                            "name": "replication",
                                            "displayName": "replication",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "The replication of the operation can be done in an asynchronous manner to the replicas (the operation will return once it has be executed on the primary shard).",
                                            "enum": [
                                                "async"
                                            ],
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "consistency": {
                                            "name": "consistency",
                                            "displayName": "consistency",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "enum": [
                                                "quorum",
                                                "one",
                                                "all"
                                            ],
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "The delete by query API allows to delete documents from one or more indices and one or more types based on a query. The query can either be provided using a simple query string as a parameter, or using the Query DSL defined within the request body.",
                                    "method": "delete",
                                    "is": [
                                        "canDeleteSelected"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/_query",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "_query"
                            ]
                        },
                        {
                            "relativeUri": "/_search",
                            "type": "searchType",
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "searchResp",
                                                    "example": "{\n  \"_shards\" : {\n    \"total\" : 5 ,\n    \"successful\" : 5 ,\n    \"failed\" : 0\n  } ,\n  \"hits\" : {\n    \"total\" : 1 ,\n    \"hits\" : [\n      {\n        \"_index\" : \"twitter\" ,\n        \"_type\" : \"tweet\" ,\n        \"_id\" : \"1\" ,\n        \"_source\" : {\n          \"user\" : \"kimchy\" ,\n          \"postDate\" : \"2009-11-15T14:12:12\" ,\n          \"message\" : \"trying out Elasticsearch\"\n        }\n      }\n    ]\n  }\n}",
                                                    "schemaContent": "searchResp"
                                                }
                                            }
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "countReq",
                                            "example": "{\n  \"query\" : {\n    \"term\" : {\n      \"user\" : \"kimchy\"\n    }\n  }\n}",
                                            "schemaContent": "countReq"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "queryParameters": {
                                        "q": {
                                            "name": "q",
                                            "displayName": "q",
                                            "type": "string",
                                            "required": false,
                                            "example": "user:kimchy",
                                            "repeat": false,
                                            "description": "The query string (maps to the query_string query, see Query String Query for more details).",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "df": {
                                            "name": "df",
                                            "displayName": "df",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "The default field to use when no field prefix is defined within the query.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "analyzer": {
                                            "name": "analyzer",
                                            "displayName": "analyzer",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "The analyzer name to be used when analyzing the query string.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "default_operator": {
                                            "name": "default_operator",
                                            "displayName": "default_operator",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "The default operator to be used, can be AND or OR. Defaults to OR.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "explain": {
                                            "name": "explain",
                                            "displayName": "explain",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "For each hit, contain an explanation of how scoring of the hits was computed.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "fields": {
                                            "name": "fields",
                                            "displayName": "fields",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "The selective stored fields of the document to return for each hit, comma delimited. Not specifying any value will cause no fields to return.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "sort": {
                                            "name": "sort",
                                            "displayName": "sort",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "Sorting to perform. Can either be in the form of fieldName, or fieldName:asc/fieldName:desc. The fieldName can either be an actual field within the document, or the special _score name to indicate sorting based on scores. There can be several sort parameters (order is important).",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "track_scores": {
                                            "name": "track_scores",
                                            "displayName": "track_scores",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "When sorting, set to true in order to still track scores and return them as part of each hit.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "timeout": {
                                            "name": "timeout",
                                            "displayName": "timeout",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "A search timeout, bounding the search request to be executed within the specified time value and bail with the hits accumulated up to that point when expired. Defaults to no timeout.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "from": {
                                            "name": "from",
                                            "displayName": "from",
                                            "type": "string",
                                            "required": false,
                                            "default": 0,
                                            "repeat": false,
                                            "description": "The starting from index of the hits to return. Defaults to 0.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "size": {
                                            "name": "size",
                                            "displayName": "size",
                                            "type": "string",
                                            "required": false,
                                            "default": 10,
                                            "repeat": false,
                                            "description": "The number of hits to return. Defaults to 10.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "search_type": {
                                            "name": "search_type",
                                            "displayName": "search_type",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "The type of the search operation to perform. Can be dfs_query_then_fetch, dfs_query_and_fetch, query_then_fetch, query_and_fetch, count, scan. Defaults to query_then_fetch. See Search Type for more details on the different types of search that can be performed.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "lowercase_expanded_terms": {
                                            "name": "lowercase_expanded_terms",
                                            "displayName": "lowercase_expanded_terms",
                                            "type": "boolean",
                                            "required": false,
                                            "default": true,
                                            "repeat": false,
                                            "description": "Should terms be automatically lowercased or not. Defaults to true.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "analyze_wildcard": {
                                            "name": "analyze_wildcard",
                                            "displayName": "analyze_wildcard",
                                            "type": "boolean",
                                            "required": false,
                                            "repeat": false,
                                            "description": "Should wildcard and prefix queries be analyzed or not. Defaults to false.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "pretty": {
                                            "name": "pretty",
                                            "displayName": "pretty",
                                            "type": "boolean",
                                            "required": false,
                                            "example": "true",
                                            "repeat": false,
                                            "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "format": {
                                            "name": "format",
                                            "displayName": "format",
                                            "type": "string",
                                            "required": false,
                                            "example": "yaml",
                                            "repeat": false,
                                            "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "human": {
                                            "name": "human",
                                            "displayName": "human",
                                            "type": "boolean",
                                            "required": false,
                                            "default": true,
                                            "example": "false",
                                            "repeat": false,
                                            "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "flat_settings": {
                                            "name": "flat_settings",
                                            "displayName": "flat_settings",
                                            "type": "boolean",
                                            "required": false,
                                            "repeat": false,
                                            "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "case": {
                                            "name": "case",
                                            "displayName": "case",
                                            "type": "string",
                                            "required": false,
                                            "example": "camelCase",
                                            "repeat": false,
                                            "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "callback": {
                                            "name": "callback",
                                            "displayName": "callback",
                                            "type": "string",
                                            "required": false,
                                            "example": "JSONP",
                                            "repeat": false,
                                            "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Search documents",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/_search",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "_search"
                            ]
                        },
                        {
                            "relativeUri": "/_count",
                            "type": "countType",
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "count",
                                                    "example": "{\n  \"count\" : 1 ,\n  \"_shards\" : {\n    \"total\" : 5 ,\n    \"successful\" : 5 ,\n    \"failed\" : 0\n  }\n}",
                                                    "schemaContent": "count"
                                                }
                                            }
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "countReq",
                                            "example": "{\n  \"query\" : {\n    \"term\" : {\n      \"user\" : \"kimchy\"\n    }\n  }\n}",
                                            "schemaContent": "countReq"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "queryParameters": {
                                        "df": {
                                            "name": "df",
                                            "displayName": "df",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "The default field to use when no field prefix is defined within the query.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "analyzer": {
                                            "name": "analyzer",
                                            "displayName": "analyzer",
                                            "type": "string",
                                            "required": false,
                                            "repeat": false,
                                            "description": "The analyzer name to be used when analyzing the query string.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "default_operator": {
                                            "name": "default_operator",
                                            "displayName": "default_operator",
                                            "type": "string",
                                            "required": false,
                                            "default": "OR",
                                            "repeat": false,
                                            "description": "The default operator to be used, can be AND or OR. Defaults to OR.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "pretty": {
                                            "name": "pretty",
                                            "displayName": "pretty",
                                            "type": "boolean",
                                            "required": false,
                                            "example": "true",
                                            "repeat": false,
                                            "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "format": {
                                            "name": "format",
                                            "displayName": "format",
                                            "type": "string",
                                            "required": false,
                                            "example": "yaml",
                                            "repeat": false,
                                            "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "human": {
                                            "name": "human",
                                            "displayName": "human",
                                            "type": "boolean",
                                            "required": false,
                                            "default": true,
                                            "example": "false",
                                            "repeat": false,
                                            "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "flat_settings": {
                                            "name": "flat_settings",
                                            "displayName": "flat_settings",
                                            "type": "boolean",
                                            "required": false,
                                            "repeat": false,
                                            "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "case": {
                                            "name": "case",
                                            "displayName": "case",
                                            "type": "string",
                                            "required": false,
                                            "example": "camelCase",
                                            "repeat": false,
                                            "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "callback": {
                                            "name": "callback",
                                            "displayName": "callback",
                                            "type": "string",
                                            "required": false,
                                            "example": "JSONP",
                                            "repeat": false,
                                            "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "The count API allows to easily execute a query and get the number of matches for that query.",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/_count",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "_count"
                            ]
                        },
                        {
                            "relativeUri": "/_mapping",
                            "type": "mappingType",
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json"
                                                }
                                            }
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "mappingSample",
                                            "example": "{\n  \"tweet\" : {\n    \"properties\" : {\n      \"message\" : {\n        \"type\" : \"string\" ,\n        \"store\" : true\n      }\n    }\n  }\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"tweet\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"properties\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"message\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"type\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"store\" : {\n                  \"type\" : \"boolean\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "queryParameters": {
                                        "ignore_conflicts": {
                                            "name": "ignore_conflicts",
                                            "displayName": "ignore_conflicts",
                                            "type": "boolean",
                                            "required": false,
                                            "repeat": false,
                                            "description": "When an existing mapping already exists under the given type, the two mapping definitions, the one already defined, and the new ones are merged. The ignore_conflicts parameters can be used to control if conflicts should be ignored or not, by default, it is set to false which means conflicts are not ignored.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "pretty": {
                                            "name": "pretty",
                                            "displayName": "pretty",
                                            "type": "boolean",
                                            "required": false,
                                            "example": "true",
                                            "repeat": false,
                                            "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "format": {
                                            "name": "format",
                                            "displayName": "format",
                                            "type": "string",
                                            "required": false,
                                            "example": "yaml",
                                            "repeat": false,
                                            "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "human": {
                                            "name": "human",
                                            "displayName": "human",
                                            "type": "boolean",
                                            "required": false,
                                            "default": true,
                                            "example": "false",
                                            "repeat": false,
                                            "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "flat_settings": {
                                            "name": "flat_settings",
                                            "displayName": "flat_settings",
                                            "type": "boolean",
                                            "required": false,
                                            "repeat": false,
                                            "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "The put mapping API allows to register specific mapping definition for a specific type.",
                                    "method": "put",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "description": "Allow to delete a mapping (type) along with its data",
                                    "method": "delete",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "resources": [
                                {
                                    "relativeUri": "/field/{fields}",
                                    "type": "mappingType",
                                    "uriParameters": {
                                        "fields": {
                                            "name": "fields",
                                            "displayName": "fields",
                                            "type": "string",
                                            "required": true,
                                            "repeat": false,
                                            "__METADATA__": {
                                                "calculated": true,
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "methods": [
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "mappingFields",
                                                            "example": "{\n  \"twitter\" : {\n    \"tweet\" : {\n      \"text\" : {\n        \"full_name\" : \"text\" ,\n        \"mapping\" : {\n          \"text\" : {\n            \"type\" : \"string\"\n          }\n        }\n      }\n    }\n  }\n}",
                                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"twitter\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"tweet\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"text\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"full_name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"mapping\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"text\" : {\n                      \"type\" : \"object\" ,\n                      \"required\" : false ,\n                      \"properties\" : {\n                        \"type\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
                                                        }
                                                    }
                                                }
                                            },
                                            "protocols": [
                                                "{PROTOCOL}"
                                            ],
                                            "queryParameters": {
                                                "include_defaults": {
                                                    "name": "include_defaults",
                                                    "displayName": "include_defaults",
                                                    "type": "boolean",
                                                    "required": false,
                                                    "example": "true",
                                                    "repeat": false,
                                                    "description": "adding include_defaults=true to the query string will cause the response to include default values, which are normally suppressed.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "pretty": {
                                                    "name": "pretty",
                                                    "displayName": "pretty",
                                                    "type": "boolean",
                                                    "required": false,
                                                    "example": "true",
                                                    "repeat": false,
                                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "format": {
                                                    "name": "format",
                                                    "displayName": "format",
                                                    "type": "string",
                                                    "required": false,
                                                    "example": "yaml",
                                                    "repeat": false,
                                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "human": {
                                                    "name": "human",
                                                    "displayName": "human",
                                                    "type": "boolean",
                                                    "required": false,
                                                    "default": true,
                                                    "example": "false",
                                                    "repeat": false,
                                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "flat_settings": {
                                                    "name": "flat_settings",
                                                    "displayName": "flat_settings",
                                                    "type": "boolean",
                                                    "required": false,
                                                    "repeat": false,
                                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "case": {
                                                    "name": "case",
                                                    "displayName": "case",
                                                    "type": "string",
                                                    "required": false,
                                                    "example": "camelCase",
                                                    "repeat": false,
                                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "callback": {
                                                    "name": "callback",
                                                    "displayName": "callback",
                                                    "type": "string",
                                                    "required": false,
                                                    "example": "JSONP",
                                                    "repeat": false,
                                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "description": "The get mapping API allows to retrieve mapping definitions for an index or index/type.",
                                            "method": "get",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/field/{fields}",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "field",
                                        "{fields}"
                                    ]
                                }
                            ],
                            "displayName": "/_mapping",
                            "description": "",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "_mapping"
                            ]
                        },
                        {
                            "relativeUri": "/_warmer/{warmer}",
                            "type": "warmerType",
                            "uriParameters": {
                                "warmer": {
                                    "name": "warmer",
                                    "displayName": "warmer",
                                    "type": "string",
                                    "required": true,
                                    "repeat": false,
                                    "__METADATA__": {
                                        "calculated": true,
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "methods": [
                                {
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "warmerPutReq",
                                            "example": "{\n  \"query\" : {\n    \"match_all\" : {\n    }\n  } ,\n  \"aggs\" : {\n    \"aggs_1\" : {\n      \"terms\" : {\n        \"field\" : \"field\"\n      }\n    }\n  }\n}",
                                            "schemaContent": "warmerPutReq"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "queryParameters": {
                                        "pretty": {
                                            "name": "pretty",
                                            "displayName": "pretty",
                                            "type": "boolean",
                                            "required": false,
                                            "example": "true",
                                            "repeat": false,
                                            "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "format": {
                                            "name": "format",
                                            "displayName": "format",
                                            "type": "string",
                                            "required": false,
                                            "example": "yaml",
                                            "repeat": false,
                                            "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "human": {
                                            "name": "human",
                                            "displayName": "human",
                                            "type": "boolean",
                                            "required": false,
                                            "default": true,
                                            "example": "false",
                                            "repeat": false,
                                            "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "flat_settings": {
                                            "name": "flat_settings",
                                            "displayName": "flat_settings",
                                            "type": "boolean",
                                            "required": false,
                                            "repeat": false,
                                            "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Allows to put a warmup search request on a specific index (or indices), with the body composing of a regular search request. Types can be provided as part of the URI if the search request is designed to be run only against the specific types.\n",
                                    "method": "put",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "queryParameters": {
                                        "pretty": {
                                            "name": "pretty",
                                            "displayName": "pretty",
                                            "type": "boolean",
                                            "required": false,
                                            "example": "true",
                                            "repeat": false,
                                            "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "format": {
                                            "name": "format",
                                            "displayName": "format",
                                            "type": "string",
                                            "required": false,
                                            "example": "yaml",
                                            "repeat": false,
                                            "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "human": {
                                            "name": "human",
                                            "displayName": "human",
                                            "type": "boolean",
                                            "required": false,
                                            "default": true,
                                            "example": "false",
                                            "repeat": false,
                                            "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "flat_settings": {
                                            "name": "flat_settings",
                                            "displayName": "flat_settings",
                                            "type": "boolean",
                                            "required": false,
                                            "repeat": false,
                                            "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "case": {
                                            "name": "case",
                                            "displayName": "case",
                                            "type": "string",
                                            "required": false,
                                            "example": "camelCase",
                                            "repeat": false,
                                            "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "callback": {
                                            "name": "callback",
                                            "displayName": "callback",
                                            "type": "string",
                                            "required": false,
                                            "example": "JSONP",
                                            "repeat": false,
                                            "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Getting a warmer for specific index (or alias, or several indices) based on its name. The provided name can be a simple wildcard expression or omitted to get all warmers.",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/_warmer/{warmer}",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "_warmer",
                                "{warmer}"
                            ]
                        },
                        {
                            "relativeUri": "/_warmers/{warmer}",
                            "type": "warmerType",
                            "uriParameters": {
                                "warmer": {
                                    "name": "warmer",
                                    "displayName": "warmer",
                                    "type": "string",
                                    "required": true,
                                    "repeat": false,
                                    "__METADATA__": {
                                        "calculated": true,
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "displayName": "/_warmers/{warmer}",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "_warmers",
                                "{warmer}"
                            ]
                        },
                        {
                            "relativeUri": "/_mtermvectors",
                            "type": "multiTermVectors",
                            "displayName": "/_mtermvectors",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "_mtermvectors"
                            ]
                        },
                        {
                            "relativeUri": "/_mget",
                            "type": "mgetType",
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json"
                                                }
                                            }
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "mgetReq",
                                            "example": "{\n  \"docs\" : [\n    {\n      \"_index\" : \"test\" ,\n      \"_type\" : \"type\" ,\n      \"_id\" : \"1\"\n    } , {\n      \"_index\" : \"test\" ,\n      \"_type\" : \"type\" ,\n      \"_id\" : \"2\"\n    }\n  ]\n}",
                                            "schemaContent": "mgetReq"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "queryParameters": {
                                        "pretty": {
                                            "name": "pretty",
                                            "displayName": "pretty",
                                            "type": "boolean",
                                            "required": false,
                                            "example": "true",
                                            "repeat": false,
                                            "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "format": {
                                            "name": "format",
                                            "displayName": "format",
                                            "type": "string",
                                            "required": false,
                                            "example": "yaml",
                                            "repeat": false,
                                            "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "human": {
                                            "name": "human",
                                            "displayName": "human",
                                            "type": "boolean",
                                            "required": false,
                                            "default": true,
                                            "example": "false",
                                            "repeat": false,
                                            "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "flat_settings": {
                                            "name": "flat_settings",
                                            "displayName": "flat_settings",
                                            "type": "boolean",
                                            "required": false,
                                            "repeat": false,
                                            "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "case": {
                                            "name": "case",
                                            "displayName": "case",
                                            "type": "string",
                                            "required": false,
                                            "example": "camelCase",
                                            "repeat": false,
                                            "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "callback": {
                                            "name": "callback",
                                            "displayName": "callback",
                                            "type": "string",
                                            "required": false,
                                            "example": "JSONP",
                                            "repeat": false,
                                            "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Multi GET API allows to get multiple documents based on an index, type (optional) and id (and possibly routing). The response includes a docs array with all the fetched documents, each element similar in structure to a document provided by the get API.",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/_mget",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "_mget"
                            ]
                        },
                        {
                            "relativeUri": "/_validate/query",
                            "type": "validateType",
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json",
                                                    "schema": "valid",
                                                    "example": "{\n  \"valid\" : true ,\n  \"_shards\" : {\n    \"total\" : 1 ,\n    \"successful\" : 1 ,\n    \"failed\" : 0\n  }\n}",
                                                    "schemaContent": "valid"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "queryParameters": {
                                        "pretty": {
                                            "name": "pretty",
                                            "displayName": "pretty",
                                            "type": "boolean",
                                            "required": false,
                                            "example": "true",
                                            "repeat": false,
                                            "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "format": {
                                            "name": "format",
                                            "displayName": "format",
                                            "type": "string",
                                            "required": false,
                                            "example": "yaml",
                                            "repeat": false,
                                            "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "human": {
                                            "name": "human",
                                            "displayName": "human",
                                            "type": "boolean",
                                            "required": false,
                                            "default": true,
                                            "example": "false",
                                            "repeat": false,
                                            "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "flat_settings": {
                                            "name": "flat_settings",
                                            "displayName": "flat_settings",
                                            "type": "boolean",
                                            "required": false,
                                            "repeat": false,
                                            "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "case": {
                                            "name": "case",
                                            "displayName": "case",
                                            "type": "string",
                                            "required": false,
                                            "example": "camelCase",
                                            "repeat": false,
                                            "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "callback": {
                                            "name": "callback",
                                            "displayName": "callback",
                                            "type": "string",
                                            "required": false,
                                            "example": "JSONP",
                                            "repeat": false,
                                            "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "The validate API allows a user to validate a potentially expensive query without executing it.",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/_validate/query",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "_validate",
                                "query"
                            ]
                        },
                        {
                            "relativeUri": "/_percolate",
                            "type": "base",
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200"
                                        }
                                    },
                                    "body": {
                                        "application/json": {
                                            "name": "application/json"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "queryParameters": {
                                        "pretty": {
                                            "name": "pretty",
                                            "displayName": "pretty",
                                            "type": "boolean",
                                            "required": false,
                                            "example": "true",
                                            "repeat": false,
                                            "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "format": {
                                            "name": "format",
                                            "displayName": "format",
                                            "type": "string",
                                            "required": false,
                                            "example": "yaml",
                                            "repeat": false,
                                            "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "human": {
                                            "name": "human",
                                            "displayName": "human",
                                            "type": "boolean",
                                            "required": false,
                                            "default": true,
                                            "example": "false",
                                            "repeat": false,
                                            "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "flat_settings": {
                                            "name": "flat_settings",
                                            "displayName": "flat_settings",
                                            "type": "boolean",
                                            "required": false,
                                            "repeat": false,
                                            "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "case": {
                                            "name": "case",
                                            "displayName": "case",
                                            "type": "string",
                                            "required": false,
                                            "example": "camelCase",
                                            "repeat": false,
                                            "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "callback": {
                                            "name": "callback",
                                            "displayName": "callback",
                                            "type": "string",
                                            "required": false,
                                            "example": "JSONP",
                                            "repeat": false,
                                            "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Traditionally you design documents based on your data and store them into an index and then define queries via the search api in order to retrieve these documents. The percolator works in the opposite direction, first you store queries into an index and then via the percolate api you define documents in order to retrieve these queries.\n\nThe reason that queries can be stored comes from the fact that in Elasticsearch both documents and queries are defined in JSON. This allows you to embed queries into documents via the index api. Elasticsearch can extract the query from a document and make it available to the percolate api. Since documents are also defined as json, you can define a document in a request to the percolate api.\n\nThe percolator and most of its features work in realtime, so once a percolate query is indexed it can immediately be used in the percolate api.\n",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "resources": [
                                {
                                    "relativeUri": "/count",
                                    "methods": [
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json",
                                                            "schema": "percolateCountResponse",
                                                            "example": "{\n  \"total\" : 3\n}",
                                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"total\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    }\n  }\n}"
                                                        }
                                                    }
                                                }
                                            },
                                            "protocols": [
                                                "{PROTOCOL}"
                                            ],
                                            "description": "The count percolate api, only keeps track of the number of matches and doesn't keep track of the actual matches.",
                                            "method": "get",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/count",
                                    "description": "The count percolate api, only keeps track of the number of matches and doesn't keep track of actual matches",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "count"
                                    ]
                                }
                            ],
                            "displayName": "/_percolate",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "_percolate"
                            ]
                        },
                        {
                            "relativeUri": "/_mpercolate",
                            "type": "mpercolateType",
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json"
                                                }
                                            }
                                        }
                                    },
                                    "body": {
                                        "text/plain": {
                                            "name": "text/plain",
                                            "example": "{\\\"percolate\\\" : {\\\"index\\\" : twitter\\\", \\\"type\\\" : \\\"tweet\\\"}} \\n\r\n{\\\"doc\\\" : {\\\"message\\\" : \\\"some text\\\"}} \\n\r\n{\\\"count\\\" : {\\\"index\\\" : twitter\\\", \\\"type\\\" : \\\"tweet\\\"}} \\n\r\n{\\\"doc\\\" : {\\\"message\\\" : \\\"some other text\\\"}} \\n"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "description": "The multi percolate api allows to bundle multiple percolate requests into a single request, similar to what the multi search api does to search requests. The request body format is line based. Each percolate request item takes two lines, the first line is the header and the second line is the body.\n\nThe header can contain any parameter that normally would be set via the request path or query string parameters. T here are several percolate actions, because there are multiple types of percolate requests.\n",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json"
                                                }
                                            }
                                        }
                                    },
                                    "body": {
                                        "text/plain": {
                                            "name": "text/plain",
                                            "example": "{\\\"percolate\\\" : {\\\"index\\\" : twitter\\\", \\\"type\\\" : \\\"tweet\\\"}} \\n\r\n{\\\"doc\\\" : {\\\"message\\\" : \\\"some text\\\"}} \\n\r\n{\\\"count\\\" : {\\\"index\\\" : twitter\\\", \\\"type\\\" : \\\"tweet\\\"}} \\n\r\n{\\\"doc\\\" : {\\\"message\\\" : \\\"some other text\\\"}} \\n"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "description": "The multi percolate api allows to bundle multiple percolate requests into a single request, similar to what the multi search api does to search requests. The request body format is line based. Each percolate request item takes two lines, the first line is the header and the second line is the body.\n\nThe header can contain any parameter that normally would be set via the request path or query string parameters. T here are several percolate actions, because there are multiple types of percolate requests.\n",
                                    "method": "post",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/_mpercolate",
                            "description": "The multi percolate api allows to bundle multiple percolate requests into a single request, similar to what the multi search api does to search requests. The request body format is line based. Each percolate request item takes two lines, the first line is the header and the second line is the body.\n\nThe header can contain any parameter that normally would be set via the request path or query string parameters. T here are several percolate actions, because there are multiple types of percolate requests.\n",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "_mpercolate"
                            ]
                        },
                        {
                            "relativeUri": "/_msearch",
                            "type": "msearchType",
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json"
                                                }
                                            }
                                        }
                                    },
                                    "body": {
                                        "text/plain": {
                                            "name": "text/plain",
                                            "example": "{\\\"index\\\" : \\\"test\\\"} \\n\r\n{\\\"query\\\" : {\\\"match_all\\\" : {}}, \\\"from\\\" : 0, \\\"size\\\" : 10} \\n\r\n{\\\"index\\\" : \\\"test\\\", \\\"search_type\\\" : \\\"count\\\"} \\n\r\n{\\\"query\\\" : {\\\"match_all\\\" : {}}} \\n\r\n{} \\n\r\n{\\\"query\\\" : {\\\"match_all\\\" : {}}} \\n"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "description": "The multi search API allows to execute several search requests within the same API.\n",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json"
                                                }
                                            }
                                        }
                                    },
                                    "body": {
                                        "text/plain": {
                                            "name": "text/plain",
                                            "example": "{\\\"index\\\" : \\\"test\\\"} \\n\r\n{\\\"query\\\" : {\\\"match_all\\\" : {}}, \\\"from\\\" : 0, \\\"size\\\" : 10} \\n\r\n{\\\"index\\\" : \\\"test\\\", \\\"search_type\\\" : \\\"count\\\"} \\n\r\n{\\\"query\\\" : {\\\"match_all\\\" : {}}} \\n\r\n{} \\n\r\n{\\\"query\\\" : {\\\"match_all\\\" : {}}} \\n"
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "description": "The multi search API allows to execute several search requests within the same API.\n",
                                    "method": "post",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/_msearch",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "_msearch"
                            ]
                        }
                    ],
                    "displayName": "/{_type}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{_type}"
                    ]
                },
                {
                    "relativeUri": "/_bulk",
                    "type": "bulkType",
                    "methods": [
                        {
                            "body": {
                                "text/plain": {
                                    "name": "text/plain",
                                    "example": "{ \\\"index\\\" : { \\\"_index\\\" : \\\"test\\\", \\\"_type\\\" : \\\"type1\\\", \\\"_id\\\" : \\\"1\\\" } } \\n\r\n{ \\\"field1\\\" : \\\"value1\\\" } \\n\r\n{ \\\"create\\\" : { \\\"_index\\\" : \\\"test\\\", \\\"_type\\\" : \\\"type1\\\", \\\"_id\\\" : \\\"3\\\" } } \\n\r\n{ \\\"field1\\\" : \\\"value3\\\" } \\n\r\n{ \\\"update\\\" : {\\\"_id\\\" : \\\"1\\\", \\\"_type\\\" : \\\"type1\\\", \\\"_index\\\" : \\\"index1\\\"} } \\n\r\n{ \\\"doc\\\" : {\\\"field2\" : \"value2\"} } \\n"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "The bulk API makes it possible to perform many index/delete operations in a single API call. This can greatly increase the indexing speed.",
                            "method": "post",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/_bulk",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "_bulk"
                    ]
                },
                {
                    "relativeUri": "/_query",
                    "type": "base",
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "query",
                                            "example": "{\n  \"_indices\" : {\n    \"twitter\" : {\n      \"_shards\" : {\n        \"total\" : 5 ,\n        \"successful\" : 5 ,\n        \"failed\" : 0\n      }\n    }\n  }\n}",
                                            "schemaContent": "query"
                                        }
                                    }
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "countReq",
                                    "example": "{\n  \"query\" : {\n    \"term\" : {\n      \"user\" : \"kimchy\"\n    }\n  }\n}",
                                    "schemaContent": "countReq"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "q": {
                                    "name": "q",
                                    "displayName": "q",
                                    "type": "string",
                                    "required": true,
                                    "example": "user:kimchy",
                                    "repeat": false,
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "df": {
                                    "name": "df",
                                    "displayName": "df",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The default field to use when no field prefix is defined within the query.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "analyzer": {
                                    "name": "analyzer",
                                    "displayName": "analyzer",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The analyzer name to be used when analyzing the query string.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "default_operator": {
                                    "name": "default_operator",
                                    "displayName": "default_operator",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The default operator to be used",
                                    "enum": [
                                        "AND",
                                        "OR"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "replication": {
                                    "name": "replication",
                                    "displayName": "replication",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The replication of the operation can be done in an asynchronous manner to the replicas (the operation will return once it has be executed on the primary shard).",
                                    "enum": [
                                        "async"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "consistency": {
                                    "name": "consistency",
                                    "displayName": "consistency",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "enum": [
                                        "quorum",
                                        "one",
                                        "all"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "The delete by query API allows to delete documents from one or more indices and one or more types based on a query. The query can either be provided using a simple query string as a parameter, or using the Query DSL defined within the request body.",
                            "method": "delete",
                            "is": [
                                "canDeleteSelected"
                            ],
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/_query",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "_query"
                    ]
                },
                {
                    "relativeUri": "/.percolator",
                    "type": "base",
                    "methods": [
                        {
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Adding a query to the percolator.",
                            "method": "put",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "case": {
                                    "name": "case",
                                    "displayName": "case",
                                    "type": "string",
                                    "required": false,
                                    "example": "camelCase",
                                    "repeat": false,
                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "callback": {
                                    "name": "callback",
                                    "displayName": "callback",
                                    "type": "string",
                                    "required": false,
                                    "example": "JSONP",
                                    "repeat": false,
                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "returns percolator",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "200": {
                                    "code": "200"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "description": "In order to un-register a percolate query the delete api can be used. So if the previous added query needs to be deleted the following delete requests needs to be executed",
                            "method": "delete",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/.percolator",
                    "description": "Traditionally you design documents based on your data and store them into an index and then define queries via the search api in order to retrieve these documents. The percolator works in the opposite direction, first you store queries into an index and then via the percolate api you define documents in order to retrieve these queries.\n\nThe reason that queries can be stored comes from the fact that in Elasticsearch both documents and queries are defined in JSON. This allows you to embed queries into documents via the index api. Elasticsearch can extract the query from a document and make it available to the percolate api. Since documents are also defined as json, you can define a document in a request to the percolate api.\n\nThe percolator and most of its features work in realtime, so once a percolate query is indexed it can immediately be used in the percolate api.\n",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        ".percolator"
                    ]
                },
                {
                    "relativeUri": "/_search_shards",
                    "type": "base",
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "searchShardsResponse",
                                            "example": "{\n  \"nodes\" : {\n    \"JklnKbD7Tyqi9TP3_Q_tBg\" : {\n      \"name\" : \"Rl'nnd\" ,\n      \"transport_address\" : \"inet[/192.168.1.113:9300]\"\n    }\n  } ,\n  \"shards\" : [\n    [\n      {\n        \"index\" : \"twitter\" ,\n        \"node\" : \"JklnKbD7Tyqi9TP3_Q_tBg\" ,\n        \"primary\" : true ,\n        \"relocating_node\" : null ,\n        \"shard\" : 3 ,\n        \"state\" : \"STARTED\"\n      }\n    ] ,\n    [\n      {\n        \"index\" : \"twitter\" ,\n        \"node\" : \"JklnKbD7Tyqi9TP3_Q_tBg\" ,\n        \"primary\" : true ,\n        \"relocating_node\" : null ,\n        \"shard\" : 4 ,\n        \"state\" : \"STARTED\"\n      }\n    ] ,\n    [\n      {\n        \"index\" : \"twitter\" ,\n        \"node\" : \"JklnKbD7Tyqi9TP3_Q_tBg\" ,\n        \"primary\" : true ,\n        \"relocating_node\" : null ,\n        \"shard\" : 0 ,\n        \"state\" : \"STARTED\"\n      }\n    ] ,\n    [\n      {\n        \"index\" : \"twitter\" ,\n        \"node\" : \"JklnKbD7Tyqi9TP3_Q_tBg\" ,\n        \"primary\" : true ,\n        \"relocating_node\" : null ,\n        \"shard\" : 2 ,\n        \"state\" : \"STARTED\"\n      }\n    ] ,\n    [\n      {\n        \"index\" : \"twitter\" ,\n        \"node\" : \"JklnKbD7Tyqi9TP3_Q_tBg\" ,\n        \"primary\" : true ,\n        \"relocating_node\" : null ,\n        \"shard\" : 1 ,\n        \"state\" : \"STARTED\"\n      }\n    ]\n  ]\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"nodes\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"JklnKbD7Tyqi9TP3_Q_tBg\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"transport_address\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      }\n    } ,\n    \"shards\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"array\"\n        }\n      ]\n    }\n  }\n}"
                                        }
                                    },
                                    "description": ""
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "case": {
                                    "name": "case",
                                    "displayName": "case",
                                    "type": "string",
                                    "required": false,
                                    "example": "camelCase",
                                    "repeat": false,
                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "callback": {
                                    "name": "callback",
                                    "displayName": "callback",
                                    "type": "string",
                                    "required": false,
                                    "example": "JSONP",
                                    "repeat": false,
                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/_search_shards",
                    "description": "The search shards api returns the indices and shards that a search request would be executed against. This can give useful feedback for working out issues or planning optimizations with routing and shard preferences",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "_search_shards"
                    ]
                },
                {
                    "relativeUri": "/_search",
                    "type": "searchType",
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "searchResp",
                                            "example": "{\n  \"_shards\" : {\n    \"total\" : 5 ,\n    \"successful\" : 5 ,\n    \"failed\" : 0\n  } ,\n  \"hits\" : {\n    \"total\" : 1 ,\n    \"hits\" : [\n      {\n        \"_index\" : \"twitter\" ,\n        \"_type\" : \"tweet\" ,\n        \"_id\" : \"1\" ,\n        \"_source\" : {\n          \"user\" : \"kimchy\" ,\n          \"postDate\" : \"2009-11-15T14:12:12\" ,\n          \"message\" : \"trying out Elasticsearch\"\n        }\n      }\n    ]\n  }\n}",
                                            "schemaContent": "searchResp"
                                        }
                                    }
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "countReq",
                                    "example": "{\n  \"query\" : {\n    \"term\" : {\n      \"user\" : \"kimchy\"\n    }\n  }\n}",
                                    "schemaContent": "countReq"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "q": {
                                    "name": "q",
                                    "displayName": "q",
                                    "type": "string",
                                    "required": false,
                                    "example": "user:kimchy",
                                    "repeat": false,
                                    "description": "The query string (maps to the query_string query, see Query String Query for more details).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "df": {
                                    "name": "df",
                                    "displayName": "df",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The default field to use when no field prefix is defined within the query.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "analyzer": {
                                    "name": "analyzer",
                                    "displayName": "analyzer",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The analyzer name to be used when analyzing the query string.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "default_operator": {
                                    "name": "default_operator",
                                    "displayName": "default_operator",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The default operator to be used, can be AND or OR. Defaults to OR.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "explain": {
                                    "name": "explain",
                                    "displayName": "explain",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "For each hit, contain an explanation of how scoring of the hits was computed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "fields": {
                                    "name": "fields",
                                    "displayName": "fields",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The selective stored fields of the document to return for each hit, comma delimited. Not specifying any value will cause no fields to return.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "sort": {
                                    "name": "sort",
                                    "displayName": "sort",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Sorting to perform. Can either be in the form of fieldName, or fieldName:asc/fieldName:desc. The fieldName can either be an actual field within the document, or the special _score name to indicate sorting based on scores. There can be several sort parameters (order is important).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "track_scores": {
                                    "name": "track_scores",
                                    "displayName": "track_scores",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "When sorting, set to true in order to still track scores and return them as part of each hit.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "timeout": {
                                    "name": "timeout",
                                    "displayName": "timeout",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "A search timeout, bounding the search request to be executed within the specified time value and bail with the hits accumulated up to that point when expired. Defaults to no timeout.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "from": {
                                    "name": "from",
                                    "displayName": "from",
                                    "type": "string",
                                    "required": false,
                                    "default": 0,
                                    "repeat": false,
                                    "description": "The starting from index of the hits to return. Defaults to 0.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "size": {
                                    "name": "size",
                                    "displayName": "size",
                                    "type": "string",
                                    "required": false,
                                    "default": 10,
                                    "repeat": false,
                                    "description": "The number of hits to return. Defaults to 10.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "search_type": {
                                    "name": "search_type",
                                    "displayName": "search_type",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The type of the search operation to perform. Can be dfs_query_then_fetch, dfs_query_and_fetch, query_then_fetch, query_and_fetch, count, scan. Defaults to query_then_fetch. See Search Type for more details on the different types of search that can be performed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "lowercase_expanded_terms": {
                                    "name": "lowercase_expanded_terms",
                                    "displayName": "lowercase_expanded_terms",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "repeat": false,
                                    "description": "Should terms be automatically lowercased or not. Defaults to true.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "analyze_wildcard": {
                                    "name": "analyze_wildcard",
                                    "displayName": "analyze_wildcard",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Should wildcard and prefix queries be analyzed or not. Defaults to false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "case": {
                                    "name": "case",
                                    "displayName": "case",
                                    "type": "string",
                                    "required": false,
                                    "example": "camelCase",
                                    "repeat": false,
                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "callback": {
                                    "name": "callback",
                                    "displayName": "callback",
                                    "type": "string",
                                    "required": false,
                                    "example": "JSONP",
                                    "repeat": false,
                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/_search",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "_search"
                    ]
                },
                {
                    "relativeUri": "/_count",
                    "type": "countType",
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "count",
                                            "example": "{\n  \"count\" : 1 ,\n  \"_shards\" : {\n    \"total\" : 5 ,\n    \"successful\" : 5 ,\n    \"failed\" : 0\n  }\n}",
                                            "schemaContent": "count"
                                        }
                                    }
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "countReq",
                                    "example": "{\n  \"query\" : {\n    \"term\" : {\n      \"user\" : \"kimchy\"\n    }\n  }\n}",
                                    "schemaContent": "countReq"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "df": {
                                    "name": "df",
                                    "displayName": "df",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The default field to use when no field prefix is defined within the query.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "analyzer": {
                                    "name": "analyzer",
                                    "displayName": "analyzer",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The analyzer name to be used when analyzing the query string.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "default_operator": {
                                    "name": "default_operator",
                                    "displayName": "default_operator",
                                    "type": "string",
                                    "required": false,
                                    "default": "OR",
                                    "repeat": false,
                                    "description": "The default operator to be used, can be AND or OR. Defaults to OR.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "case": {
                                    "name": "case",
                                    "displayName": "case",
                                    "type": "string",
                                    "required": false,
                                    "example": "camelCase",
                                    "repeat": false,
                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "callback": {
                                    "name": "callback",
                                    "displayName": "callback",
                                    "type": "string",
                                    "required": false,
                                    "example": "JSONP",
                                    "repeat": false,
                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "The count API allows to easily execute a query and get the number of matches for that query.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/_count",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "_count"
                    ]
                },
                {
                    "relativeUri": "/_open",
                    "type": "base",
                    "methods": [
                        {
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "method": "post",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/_open",
                    "description": "The open and close index APIs allow to close an index, and later on opening it. A closed index has almost no overhead on the cluster (except for maintaining its metadata), and is blocked for read/write operations. A closed index can be opened which will then go through the normal recovery process.",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "_open"
                    ]
                },
                {
                    "relativeUri": "/_close",
                    "type": "base",
                    "methods": [
                        {
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "method": "post",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/_close",
                    "description": "The open and close index APIs allow to close an index, and later on opening it. A closed index has almost no overhead on the cluster (except for maintaining its metadata), and is blocked for read/write operations. A closed index can be opened which will then go through the normal recovery process.",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "_close"
                    ]
                },
                {
                    "relativeUri": "/_mapping",
                    "type": "mappingType",
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "include_defaults": {
                                    "name": "include_defaults",
                                    "displayName": "include_defaults",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "adding include_defaults=true to the query string will cause the response to include default values, which are normally suppressed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "case": {
                                    "name": "case",
                                    "displayName": "case",
                                    "type": "string",
                                    "required": false,
                                    "example": "camelCase",
                                    "repeat": false,
                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "callback": {
                                    "name": "callback",
                                    "displayName": "callback",
                                    "type": "string",
                                    "required": false,
                                    "example": "JSONP",
                                    "repeat": false,
                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "The get mapping API allows to retrieve mapping definitions for an index or index/type.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/{types}",
                            "type": "mappingType",
                            "uriParameters": {
                                "types": {
                                    "name": "types",
                                    "displayName": "types",
                                    "type": "string",
                                    "required": true,
                                    "repeat": false,
                                    "__METADATA__": {
                                        "calculated": true,
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "queryParameters": {
                                        "include_defaults": {
                                            "name": "include_defaults",
                                            "displayName": "include_defaults",
                                            "type": "boolean",
                                            "required": false,
                                            "example": "true",
                                            "repeat": false,
                                            "description": "adding include_defaults=true to the query string will cause the response to include default values, which are normally suppressed.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "pretty": {
                                            "name": "pretty",
                                            "displayName": "pretty",
                                            "type": "boolean",
                                            "required": false,
                                            "example": "true",
                                            "repeat": false,
                                            "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "format": {
                                            "name": "format",
                                            "displayName": "format",
                                            "type": "string",
                                            "required": false,
                                            "example": "yaml",
                                            "repeat": false,
                                            "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "human": {
                                            "name": "human",
                                            "displayName": "human",
                                            "type": "boolean",
                                            "required": false,
                                            "default": true,
                                            "example": "false",
                                            "repeat": false,
                                            "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "flat_settings": {
                                            "name": "flat_settings",
                                            "displayName": "flat_settings",
                                            "type": "boolean",
                                            "required": false,
                                            "repeat": false,
                                            "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "case": {
                                            "name": "case",
                                            "displayName": "case",
                                            "type": "string",
                                            "required": false,
                                            "example": "camelCase",
                                            "repeat": false,
                                            "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "callback": {
                                            "name": "callback",
                                            "displayName": "callback",
                                            "type": "string",
                                            "required": false,
                                            "example": "JSONP",
                                            "repeat": false,
                                            "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "Allow to delete a mapping (type) along with its data.",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "method": "delete",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                },
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "queryParameters": {
                                        "ignore_conflicts": {
                                            "name": "ignore_conflicts",
                                            "displayName": "ignore_conflicts",
                                            "type": "boolean",
                                            "required": false,
                                            "repeat": false,
                                            "description": "When an existing mapping already exists under the given type, the two mapping definitions, the one already defined, and the new ones are merged. The ignore_conflicts parameters can be used to control if conflicts should be ignored or not, by default, it is set to false which means conflicts are not ignored.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "pretty": {
                                            "name": "pretty",
                                            "displayName": "pretty",
                                            "type": "boolean",
                                            "required": false,
                                            "example": "true",
                                            "repeat": false,
                                            "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "format": {
                                            "name": "format",
                                            "displayName": "format",
                                            "type": "string",
                                            "required": false,
                                            "example": "yaml",
                                            "repeat": false,
                                            "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "human": {
                                            "name": "human",
                                            "displayName": "human",
                                            "type": "boolean",
                                            "required": false,
                                            "default": true,
                                            "example": "false",
                                            "repeat": false,
                                            "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "flat_settings": {
                                            "name": "flat_settings",
                                            "displayName": "flat_settings",
                                            "type": "boolean",
                                            "required": false,
                                            "repeat": false,
                                            "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "The put mapping API allows to register specific mapping definition for a specific type.",
                                    "method": "put",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "resources": [
                                {
                                    "relativeUri": "/{fields}",
                                    "type": "mappingType",
                                    "uriParameters": {
                                        "fields": {
                                            "name": "fields",
                                            "displayName": "fields",
                                            "type": "string",
                                            "required": true,
                                            "repeat": false,
                                            "__METADATA__": {
                                                "calculated": true,
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "methods": [
                                        {
                                            "responses": {
                                                "200": {
                                                    "code": "200",
                                                    "body": {
                                                        "application/json": {
                                                            "name": "application/json"
                                                        }
                                                    }
                                                }
                                            },
                                            "protocols": [
                                                "{PROTOCOL}"
                                            ],
                                            "queryParameters": {
                                                "include_defaults": {
                                                    "name": "include_defaults",
                                                    "displayName": "include_defaults",
                                                    "type": "boolean",
                                                    "required": false,
                                                    "example": "true",
                                                    "repeat": false,
                                                    "description": "adding include_defaults=true to the query string will cause the response to include default values, which are normally suppressed.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "pretty": {
                                                    "name": "pretty",
                                                    "displayName": "pretty",
                                                    "type": "boolean",
                                                    "required": false,
                                                    "example": "true",
                                                    "repeat": false,
                                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "format": {
                                                    "name": "format",
                                                    "displayName": "format",
                                                    "type": "string",
                                                    "required": false,
                                                    "example": "yaml",
                                                    "repeat": false,
                                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "human": {
                                                    "name": "human",
                                                    "displayName": "human",
                                                    "type": "boolean",
                                                    "required": false,
                                                    "default": true,
                                                    "example": "false",
                                                    "repeat": false,
                                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "flat_settings": {
                                                    "name": "flat_settings",
                                                    "displayName": "flat_settings",
                                                    "type": "boolean",
                                                    "required": false,
                                                    "repeat": false,
                                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "case": {
                                                    "name": "case",
                                                    "displayName": "case",
                                                    "type": "string",
                                                    "required": false,
                                                    "example": "camelCase",
                                                    "repeat": false,
                                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                },
                                                "callback": {
                                                    "name": "callback",
                                                    "displayName": "callback",
                                                    "type": "string",
                                                    "required": false,
                                                    "example": "JSONP",
                                                    "repeat": false,
                                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                                    "__METADATA__": {
                                                        "primitiveValuesMeta": {
                                                            "displayName": {
                                                                "calculated": true
                                                            },
                                                            "type": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "required": {
                                                                "insertedAsDefault": true
                                                            },
                                                            "repeat": {
                                                                "insertedAsDefault": true
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "description": "The get mapping API allows to retrieve mapping definitions for an index or index/type.",
                                            "method": "get",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "protocols": {
                                                        "calculated": true
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "displayName": "/{fields}",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            }
                                        }
                                    },
                                    "relativeUriPathSegments": [
                                        "{fields}"
                                    ]
                                }
                            ],
                            "displayName": "/{types}",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "{types}"
                            ]
                        }
                    ],
                    "displayName": "/_mapping",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "_mapping"
                    ]
                },
                {
                    "relativeUri": "/_alias/{aliasName}",
                    "type": "base",
                    "uriParameters": {
                        "aliasName": {
                            "name": "aliasName",
                            "displayName": "aliasName",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "aliases",
                                            "example": "{\n  \"users\" : {\n    \"aliases\" : {\n      \"user_13\" : {\n        \"filter\" : {\n          \"term\" : {\n            \"user_id\" : 13\n          }\n        } ,\n        \"index_routing\" : \"13\" ,\n        \"search_routing\" : \"13\"\n      } ,\n      \"user_14\" : {\n        \"filter\" : {\n          \"term\" : {\n            \"user_id\" : 14\n          }\n        } ,\n        \"index_routing\" : \"14\" ,\n        \"search_routing\" : \"14\"\n      } ,\n      \"user_12\" : {\n        \"filter\" : {\n          \"term\" : {\n            \"user_id\" : 12\n          }\n        } ,\n        \"index_routing\" : \"12\" ,\n        \"search_routing\" : \"12\"\n      }\n    }\n  }\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"users\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"aliases\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"user_13\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"filter\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"term\" : {\n                      \"type\" : \"object\" ,\n                      \"required\" : false ,\n                      \"properties\" : {\n                        \"user_id\" : {\n                          \"type\" : \"number\" ,\n                          \"required\" : false\n                        }\n                      }\n                    }\n                  }\n                } ,\n                \"index_routing\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"search_routing\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"user_14\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"filter\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"term\" : {\n                      \"type\" : \"object\" ,\n                      \"required\" : false ,\n                      \"properties\" : {\n                        \"user_id\" : {\n                          \"type\" : \"number\" ,\n                          \"required\" : false\n                        }\n                      }\n                    }\n                  }\n                } ,\n                \"index_routing\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"search_routing\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"user_12\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"filter\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"term\" : {\n                      \"type\" : \"object\" ,\n                      \"required\" : false ,\n                      \"properties\" : {\n                        \"user_id\" : {\n                          \"type\" : \"number\" ,\n                          \"required\" : false\n                        }\n                      }\n                    }\n                  }\n                } ,\n                \"index_routing\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"search_routing\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "case": {
                                    "name": "case",
                                    "displayName": "case",
                                    "type": "string",
                                    "required": false,
                                    "example": "camelCase",
                                    "repeat": false,
                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "callback": {
                                    "name": "callback",
                                    "displayName": "callback",
                                    "type": "string",
                                    "required": false,
                                    "example": "JSONP",
                                    "repeat": false,
                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "The get index alias api allows to filter by alias name and index name. This api redirects to the master and fetches the requested index aliases, if available. This api only serialises the found index aliases.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "routing": {
                                    "name": "routing",
                                    "displayName": "routing",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "An optional routing that can be associated with an alias.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "filter": {
                                    "name": "filter",
                                    "displayName": "filter",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "An optional filter that can be associated with an alias.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "An alias can also be added to index with this endpoint",
                            "method": "put",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "description": "deletes alias with a given name",
                            "method": "delete",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/_alias/{aliasName}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "_alias",
                        "{aliasName}"
                    ]
                },
                {
                    "relativeUri": "/_settings",
                    "type": "indexSettingsType",
                    "methods": [
                        {
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "settingsPut",
                                    "example": "{\n  \"index.routing.allocation.include.tag\" : \"value1,value2\"\n}",
                                    "schemaContent": "settingsPut"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Allows to control the allocation of indices on nodes based on include/exclude filters. The filters can be set both on the index level and on the cluster level. Lets start with an example of setting it on the cluster level\nWe can create an index that will only deploy on nodes that have tag set to value1 and value2 by setting index.routing.allocation.include.tag to value1,value2.\n",
                            "method": "put",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "case": {
                                    "name": "case",
                                    "displayName": "case",
                                    "type": "string",
                                    "required": false,
                                    "example": "camelCase",
                                    "repeat": false,
                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "callback": {
                                    "name": "callback",
                                    "displayName": "callback",
                                    "type": "string",
                                    "required": false,
                                    "example": "JSONP",
                                    "repeat": false,
                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Retrieve settings of index/indices.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/_settings",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "_settings"
                    ]
                },
                {
                    "relativeUri": "/_analyze",
                    "type": "analizerType",
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "analyzer": {
                                    "name": "analyzer",
                                    "displayName": "analyzer",
                                    "type": "string",
                                    "required": false,
                                    "example": "standard",
                                    "repeat": false,
                                    "description": "Can be used without specifying an index against one of the many built in analyzers",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "tokenizer": {
                                    "name": "tokenizer",
                                    "displayName": "tokenizer",
                                    "type": "string",
                                    "required": false,
                                    "example": "keyword",
                                    "repeat": false,
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "filters": {
                                    "name": "filters",
                                    "displayName": "filters",
                                    "type": "string",
                                    "required": false,
                                    "example": "lowercase",
                                    "repeat": false,
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "text": {
                                    "name": "text",
                                    "displayName": "text",
                                    "type": "string",
                                    "required": false,
                                    "example": "this+is+a+test",
                                    "repeat": false,
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "case": {
                                    "name": "case",
                                    "displayName": "case",
                                    "type": "string",
                                    "required": false,
                                    "example": "camelCase",
                                    "repeat": false,
                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "callback": {
                                    "name": "callback",
                                    "displayName": "callback",
                                    "type": "string",
                                    "required": false,
                                    "example": "JSONP",
                                    "repeat": false,
                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Performs the analysis process on a text and return the tokens breakdown of the text.\n",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/_analyze",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "_analyze"
                    ]
                },
                {
                    "relativeUri": "/_warmer/{warmerName}",
                    "type": "warmerType",
                    "uriParameters": {
                        "warmerName": {
                            "name": "warmerName",
                            "displayName": "warmerName",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "warmerPutReq",
                                    "example": "{\n  \"query\" : {\n    \"match_all\" : {\n    }\n  } ,\n  \"aggs\" : {\n    \"aggs_1\" : {\n      \"terms\" : {\n        \"field\" : \"field\"\n      }\n    }\n  }\n}",
                                    "schemaContent": "warmerPutReq"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Allows to put a warmup search request on a specific index (or indices), with the body composing of a regular search request. Types can be provided as part of the URI if the search request is designed to be run only against the specific types.\n",
                            "method": "put",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "case": {
                                    "name": "case",
                                    "displayName": "case",
                                    "type": "string",
                                    "required": false,
                                    "example": "camelCase",
                                    "repeat": false,
                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "callback": {
                                    "name": "callback",
                                    "displayName": "callback",
                                    "type": "string",
                                    "required": false,
                                    "example": "JSONP",
                                    "repeat": false,
                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Getting a warmer for specific index (or alias, or several indices) based on its name. The provided name can be a simple wildcard expression or omitted to get all warmers.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/_warmer/{warmerName}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "_warmer",
                        "{warmerName}"
                    ]
                },
                {
                    "relativeUri": "/_warmers/{warmerName}",
                    "type": "warmerType",
                    "uriParameters": {
                        "warmerName": {
                            "name": "warmerName",
                            "displayName": "warmerName",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "warmerPutReq",
                                    "example": "{\n  \"query\" : {\n    \"match_all\" : {\n    }\n  } ,\n  \"aggs\" : {\n    \"aggs_1\" : {\n      \"terms\" : {\n        \"field\" : \"field\"\n      }\n    }\n  }\n}",
                                    "schemaContent": "warmerPutReq"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Allows to put a warmup search request on a specific index (or indices), with the body composing of a regular search request. Types can be provided as part of the URI if the search request is designed to be run only against the specific types.\n",
                            "method": "put",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "case": {
                                    "name": "case",
                                    "displayName": "case",
                                    "type": "string",
                                    "required": false,
                                    "example": "camelCase",
                                    "repeat": false,
                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "callback": {
                                    "name": "callback",
                                    "displayName": "callback",
                                    "type": "string",
                                    "required": false,
                                    "example": "JSONP",
                                    "repeat": false,
                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Getting a warmer for specific index (or alias, or several indices) based on its name. The provided name can be a simple wildcard expression or omitted to get all warmers.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/_warmers/{warmerName}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "_warmers",
                        "{warmerName}"
                    ]
                },
                {
                    "relativeUri": "/_status",
                    "type": "base",
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "case": {
                                    "name": "case",
                                    "displayName": "case",
                                    "type": "string",
                                    "required": false,
                                    "example": "camelCase",
                                    "repeat": false,
                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "callback": {
                                    "name": "callback",
                                    "displayName": "callback",
                                    "type": "string",
                                    "required": false,
                                    "example": "JSONP",
                                    "repeat": false,
                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/_status",
                    "description": "The indices status API allows to get a comprehensive status information of one or more indices.",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "_status"
                    ]
                },
                {
                    "relativeUri": "/_stats",
                    "type": "base",
                    "methods": [
                        {
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "case": {
                                    "name": "case",
                                    "displayName": "case",
                                    "type": "string",
                                    "required": false,
                                    "example": "camelCase",
                                    "repeat": false,
                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "callback": {
                                    "name": "callback",
                                    "displayName": "callback",
                                    "type": "string",
                                    "required": false,
                                    "example": "JSONP",
                                    "repeat": false,
                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/{statSpec}",
                            "uriParameters": {
                                "statSpec": {
                                    "name": "statSpec",
                                    "displayName": "statSpec",
                                    "type": "string",
                                    "required": true,
                                    "repeat": false,
                                    "enum": [
                                        "warmer",
                                        "flush",
                                        "get",
                                        "store",
                                        "search",
                                        "docs",
                                        "indexing",
                                        "merge",
                                        "fielddata",
                                        "suggest",
                                        "completion",
                                        "refresh"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/{statSpec}",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "{statSpec}"
                            ]
                        }
                    ],
                    "displayName": "/_stats",
                    "description": "Indices level stats provide statistics on different operations happening on an index. The API provides statistics on the index level scope (though most stats can also be retrieved using node level scope).",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "_stats"
                    ]
                },
                {
                    "relativeUri": "/_segments",
                    "type": "segmentsType",
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "segments",
                                            "example": "{\n  \"_3\" : {\n    \"generation\" : 3 ,\n    \"num_docs\" : 1121 ,\n    \"deleted_docs\" : 53 ,\n    \"size_in_bytes\" : 228288 ,\n    \"memory_in_bytes\" : 3211 ,\n    \"committed\" : true ,\n    \"search\" : true ,\n    \"version\" : \"4.6\" ,\n    \"compound\" : true\n  }\n}",
                                            "schemaContent": "segments"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "case": {
                                    "name": "case",
                                    "displayName": "case",
                                    "type": "string",
                                    "required": false,
                                    "example": "camelCase",
                                    "repeat": false,
                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "callback": {
                                    "name": "callback",
                                    "displayName": "callback",
                                    "type": "string",
                                    "required": false,
                                    "example": "JSONP",
                                    "repeat": false,
                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Provide low level segments information that a Lucene index (shard level) is built with. Allows to be used to provide more information on the state of a shard and an index, possibly optimization information, data \"wasted\" on deletes, and so on.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/_segments",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "_segments"
                    ]
                },
                {
                    "relativeUri": "/_recovery",
                    "type": "recoveryType",
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "recovery",
                                            "example": "{\n  \"index1\" : {\n    \"shards\" : [\n      {\n        \"id\" : 0 ,\n        \"type\" : \"snapshot\" ,\n        \"stage\" : \"index\" ,\n        \"primary\" : true ,\n        \"start_time\" : \"2014-02-24T12:15:59.716\" ,\n        \"stop_time\" : 0 ,\n        \"total_time_in_millis\" : 175576 ,\n        \"source\" : {\n          \"repository\" : \"my_repository\" ,\n          \"snapshot\" : \"my_snapshot\" ,\n          \"index\" : \"index1\"\n        } ,\n        \"target\" : {\n          \"id\" : \"ryqJ5lO5S4-lSFbGntkEkg\" ,\n          \"hostname\" : \"my.fqdn\" ,\n          \"ip\" : \"10.0.1.7\" ,\n          \"name\" : \"my_es_node\"\n        } ,\n        \"index\" : {\n          \"files\" : {\n            \"total\" : 73 ,\n            \"reused\" : 0 ,\n            \"recovered\" : 69 ,\n            \"percent\" : \"94.5%\"\n          } ,\n          \"bytes\" : {\n            \"total\" : 79063092 ,\n            \"reused\" : 0 ,\n            \"recovered\" : 68891939 ,\n            \"percent\" : \"87.1%\"\n          } ,\n          \"total_time_in_millis\" : 0\n        } ,\n        \"translog\" : {\n          \"recovered\" : 0 ,\n          \"total_time_in_millis\" : 0\n        } ,\n        \"start\" : {\n          \"check_index_time\" : 0 ,\n          \"total_time_in_millis\" : 0\n        }\n      }\n    ]\n  }\n}",
                                            "schemaContent": "recovery"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "detailed": {
                                    "name": "detailed",
                                    "displayName": "detailed",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Display a detailed view. This is primarily useful for viewing the recovery of physical index files.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "active_only": {
                                    "name": "active_only",
                                    "displayName": "active_only",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Display only those recoveries that are currently on-going.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "case": {
                                    "name": "case",
                                    "displayName": "case",
                                    "type": "string",
                                    "required": false,
                                    "example": "camelCase",
                                    "repeat": false,
                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "callback": {
                                    "name": "callback",
                                    "displayName": "callback",
                                    "type": "string",
                                    "required": false,
                                    "example": "JSONP",
                                    "repeat": false,
                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "The indices recovery API provides insight into on-going index shard recoveries. Recovery status may be reported for specific indices, or cluster-wide.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/_recovery",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "_recovery"
                    ]
                },
                {
                    "relativeUri": "/_cache/clear",
                    "type": "cacheClearType",
                    "methods": [
                        {
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "filter": {
                                    "name": "filter",
                                    "displayName": "filter",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The API, by default, will clear all caches. Specific caches can be cleaned explicitly by setting filter, field_data or id_cache to true.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "field_data": {
                                    "name": "field_data",
                                    "displayName": "field_data",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The API, by default, will clear all caches. Specific caches can be cleaned explicitly by setting filter, field_data or id_cache to true.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "id_cache": {
                                    "name": "id_cache",
                                    "displayName": "id_cache",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The API, by default, will clear all caches. Specific caches can be cleaned explicitly by setting filter, field_data or id_cache to true.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "The clear cache API allows to clear either all caches or specific cached associated with one ore more indices.",
                            "method": "post",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/_cache/clear",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "_cache",
                        "clear"
                    ]
                },
                {
                    "relativeUri": "/_flush",
                    "type": "flushType",
                    "methods": [
                        {
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "The flush API allows to flush one or more indices through an API. The flush process of an index basically frees memory from the index by flushing data to the index storage and clearing the internal transaction log. By default, Elasticsearch uses memory heuristics in order to automatically trigger flush operations as required in order to clear memory.",
                            "method": "post",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/_flush",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "_flush"
                    ]
                },
                {
                    "relativeUri": "/_refresh",
                    "type": "refreshType",
                    "methods": [
                        {
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "The refresh API allows to explicitly refresh one or more index, making all operations performed since the last refresh available for search. The (near) real-time capabilities depend on the index engine used. For example, the internal one requires refresh to be called, but by default a refresh is scheduled periodically.",
                            "method": "post",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/_refresh",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "_refresh"
                    ]
                },
                {
                    "relativeUri": "/_optimize",
                    "type": "optimizeType",
                    "methods": [
                        {
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "max_num_segments": {
                                    "name": "max_num_segments",
                                    "displayName": "max_num_segments",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The number of segments to optimize to. To fully optimize the index, set it to 1. Defaults to simply checking if a merge needs to execute, and if so, executes it.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "only_expunge_deletes": {
                                    "name": "only_expunge_deletes",
                                    "displayName": "only_expunge_deletes",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Should the optimize process only expunge segments with deletes in it. In Lucene, a document is not deleted from a segment, just marked as deleted. During a merge process of segments, a new segment is created that does not have those deletes. This flag allows to only merge segments that have deletes. Defaults to false. Note that this won't override the index.merge.policy.expunge_deletes_allowed threshold.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flush": {
                                    "name": "flush",
                                    "displayName": "flush",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "repeat": false,
                                    "description": "Should a flush be performed after the optimize. Defaults to true.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "wait_for_merge": {
                                    "name": "wait_for_merge",
                                    "displayName": "wait_for_merge",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "repeat": false,
                                    "description": "Should the request wait for the merge to end. Defaults to true. Note, a merge can potentially be a very heavy operation, so it might make sense to run it set to false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "force": {
                                    "name": "force",
                                    "displayName": "force",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Force a merge operation, even if there is a single segment in the shard with no deletions. [1.1.0]",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "The optimize API allows to optimize one or more indices through an API. The optimize process basically optimizes the index for faster search operations (and relates to the number of segments a Lucene index holds within each shard). The optimize operation allows to reduce the number of segments by merging them.",
                            "method": "post",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/_optimize",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "_optimize"
                    ]
                },
                {
                    "relativeUri": "/_mtermvectors",
                    "type": "multiTermVectors",
                    "displayName": "/_mtermvectors",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "_mtermvectors"
                    ]
                },
                {
                    "relativeUri": "/_mget",
                    "type": "mgetType",
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json"
                                        }
                                    }
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "mgetReq",
                                    "example": "{\n  \"docs\" : [\n    {\n      \"_index\" : \"test\" ,\n      \"_type\" : \"type\" ,\n      \"_id\" : \"1\"\n    } , {\n      \"_index\" : \"test\" ,\n      \"_type\" : \"type\" ,\n      \"_id\" : \"2\"\n    }\n  ]\n}",
                                    "schemaContent": "mgetReq"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "case": {
                                    "name": "case",
                                    "displayName": "case",
                                    "type": "string",
                                    "required": false,
                                    "example": "camelCase",
                                    "repeat": false,
                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "callback": {
                                    "name": "callback",
                                    "displayName": "callback",
                                    "type": "string",
                                    "required": false,
                                    "example": "JSONP",
                                    "repeat": false,
                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Multi GET API allows to get multiple documents based on an index, type (optional) and id (and possibly routing). The response includes a docs array with all the fetched documents, each element similar in structure to a document provided by the get API.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/_mget",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "_mget"
                    ]
                },
                {
                    "relativeUri": "/_validate/query",
                    "type": "validateType",
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "valid",
                                            "example": "{\n  \"valid\" : true ,\n  \"_shards\" : {\n    \"total\" : 1 ,\n    \"successful\" : 1 ,\n    \"failed\" : 0\n  }\n}",
                                            "schemaContent": "valid"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "case": {
                                    "name": "case",
                                    "displayName": "case",
                                    "type": "string",
                                    "required": false,
                                    "example": "camelCase",
                                    "repeat": false,
                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "callback": {
                                    "name": "callback",
                                    "displayName": "callback",
                                    "type": "string",
                                    "required": false,
                                    "example": "JSONP",
                                    "repeat": false,
                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "The validate API allows a user to validate a potentially expensive query without executing it.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/_validate/query",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "_validate",
                        "query"
                    ]
                },
                {
                    "relativeUri": "/_mpercolate",
                    "type": "mpercolateType",
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json"
                                        }
                                    }
                                }
                            },
                            "body": {
                                "text/plain": {
                                    "name": "text/plain",
                                    "example": "{\\\"percolate\\\" : {\\\"index\\\" : twitter\\\", \\\"type\\\" : \\\"tweet\\\"}} \\n\r\n{\\\"doc\\\" : {\\\"message\\\" : \\\"some text\\\"}} \\n\r\n{\\\"count\\\" : {\\\"index\\\" : twitter\\\", \\\"type\\\" : \\\"tweet\\\"}} \\n\r\n{\\\"doc\\\" : {\\\"message\\\" : \\\"some other text\\\"}} \\n"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "description": "The multi percolate api allows to bundle multiple percolate requests into a single request, similar to what the multi search api does to search requests. The request body format is line based. Each percolate request item takes two lines, the first line is the header and the second line is the body.\n\nThe header can contain any parameter that normally would be set via the request path or query string parameters. T here are several percolate actions, because there are multiple types of percolate requests.\n",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json"
                                        }
                                    }
                                }
                            },
                            "body": {
                                "text/plain": {
                                    "name": "text/plain",
                                    "example": "{\\\"percolate\\\" : {\\\"index\\\" : twitter\\\", \\\"type\\\" : \\\"tweet\\\"}} \\n\r\n{\\\"doc\\\" : {\\\"message\\\" : \\\"some text\\\"}} \\n\r\n{\\\"count\\\" : {\\\"index\\\" : twitter\\\", \\\"type\\\" : \\\"tweet\\\"}} \\n\r\n{\\\"doc\\\" : {\\\"message\\\" : \\\"some other text\\\"}} \\n"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "description": "The multi percolate api allows to bundle multiple percolate requests into a single request, similar to what the multi search api does to search requests. The request body format is line based. Each percolate request item takes two lines, the first line is the header and the second line is the body.\n\nThe header can contain any parameter that normally would be set via the request path or query string parameters. T here are several percolate actions, because there are multiple types of percolate requests.\n",
                            "method": "post",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/_mpercolate",
                    "description": "The multi percolate api allows to bundle multiple percolate requests into a single request, similar to what the multi search api does to search requests. The request body format is line based. Each percolate request item takes two lines, the first line is the header and the second line is the body.\n\nThe header can contain any parameter that normally would be set via the request path or query string parameters. T here are several percolate actions, because there are multiple types of percolate requests.\n",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "_mpercolate"
                    ]
                },
                {
                    "relativeUri": "/_msearch",
                    "type": "msearchType",
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json"
                                        }
                                    }
                                }
                            },
                            "body": {
                                "text/plain": {
                                    "name": "text/plain",
                                    "example": "{\\\"index\\\" : \\\"test\\\"} \\n\r\n{\\\"query\\\" : {\\\"match_all\\\" : {}}, \\\"from\\\" : 0, \\\"size\\\" : 10} \\n\r\n{\\\"index\\\" : \\\"test\\\", \\\"search_type\\\" : \\\"count\\\"} \\n\r\n{\\\"query\\\" : {\\\"match_all\\\" : {}}} \\n\r\n{} \\n\r\n{\\\"query\\\" : {\\\"match_all\\\" : {}}} \\n"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "description": "The multi search API allows to execute several search requests within the same API.\n",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json"
                                        }
                                    }
                                }
                            },
                            "body": {
                                "text/plain": {
                                    "name": "text/plain",
                                    "example": "{\\\"index\\\" : \\\"test\\\"} \\n\r\n{\\\"query\\\" : {\\\"match_all\\\" : {}}, \\\"from\\\" : 0, \\\"size\\\" : 10} \\n\r\n{\\\"index\\\" : \\\"test\\\", \\\"search_type\\\" : \\\"count\\\"} \\n\r\n{\\\"query\\\" : {\\\"match_all\\\" : {}}} \\n\r\n{} \\n\r\n{\\\"query\\\" : {\\\"match_all\\\" : {}}} \\n"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "description": "The multi search API allows to execute several search requests within the same API.\n",
                            "method": "post",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/_msearch",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "_msearch"
                    ]
                }
            ],
            "displayName": "/{_index}",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "{_index}"
            ]
        },
        {
            "relativeUri": "/_mget",
            "type": "mgetType",
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            }
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json",
                            "schema": "mgetReq",
                            "example": "{\n  \"docs\" : [\n    {\n      \"_index\" : \"test\" ,\n      \"_type\" : \"type\" ,\n      \"_id\" : \"1\"\n    } , {\n      \"_index\" : \"test\" ,\n      \"_type\" : \"type\" ,\n      \"_id\" : \"2\"\n    }\n  ]\n}",
                            "schemaContent": "mgetReq"
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "queryParameters": {
                        "pretty": {
                            "name": "pretty",
                            "displayName": "pretty",
                            "type": "boolean",
                            "required": false,
                            "example": "true",
                            "repeat": false,
                            "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "format": {
                            "name": "format",
                            "displayName": "format",
                            "type": "string",
                            "required": false,
                            "example": "yaml",
                            "repeat": false,
                            "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "human": {
                            "name": "human",
                            "displayName": "human",
                            "type": "boolean",
                            "required": false,
                            "default": true,
                            "example": "false",
                            "repeat": false,
                            "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "flat_settings": {
                            "name": "flat_settings",
                            "displayName": "flat_settings",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "case": {
                            "name": "case",
                            "displayName": "case",
                            "type": "string",
                            "required": false,
                            "example": "camelCase",
                            "repeat": false,
                            "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "callback": {
                            "name": "callback",
                            "displayName": "callback",
                            "type": "string",
                            "required": false,
                            "example": "JSONP",
                            "repeat": false,
                            "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Multi GET API allows to get multiple documents based on an index, type (optional) and id (and possibly routing). The response includes a docs array with all the fetched documents, each element similar in structure to a document provided by the get API.",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/_mget",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "_mget"
            ]
        },
        {
            "relativeUri": "/_bulk",
            "type": "bulkType",
            "methods": [
                {
                    "body": {
                        "text/plain": {
                            "name": "text/plain",
                            "example": "{ \\\"index\\\" : { \\\"_index\\\" : \\\"test\\\", \\\"_type\\\" : \\\"type1\\\", \\\"_id\\\" : \\\"1\\\" } } \\n\r\n{ \\\"field1\\\" : \\\"value1\\\" } \\n\r\n{ \\\"create\\\" : { \\\"_index\\\" : \\\"test\\\", \\\"_type\\\" : \\\"type1\\\", \\\"_id\\\" : \\\"3\\\" } } \\n\r\n{ \\\"field1\\\" : \\\"value3\\\" } \\n\r\n{ \\\"update\\\" : {\\\"_id\\\" : \\\"1\\\", \\\"_type\\\" : \\\"type1\\\", \\\"_index\\\" : \\\"index1\\\"} } \\n\r\n{ \\\"doc\\\" : {\\\"field2\" : \"value2\"} } \\n"
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "queryParameters": {
                        "pretty": {
                            "name": "pretty",
                            "displayName": "pretty",
                            "type": "boolean",
                            "required": false,
                            "example": "true",
                            "repeat": false,
                            "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "format": {
                            "name": "format",
                            "displayName": "format",
                            "type": "string",
                            "required": false,
                            "example": "yaml",
                            "repeat": false,
                            "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "human": {
                            "name": "human",
                            "displayName": "human",
                            "type": "boolean",
                            "required": false,
                            "default": true,
                            "example": "false",
                            "repeat": false,
                            "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "flat_settings": {
                            "name": "flat_settings",
                            "displayName": "flat_settings",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "The possible actions are index, create, delete and update. index and create expect a source on the next line, and have the same semantics as the op_type parameter to the standard index API (i.e. create will fail if a document with the same index and type exists already, whereas index will add or replace a document as necessary). delete does not expect a source on the following line, and has the same semantics as the standard delete API. update expects that the partial doc, upsert and script and its options are specified on the next line.",
                    "method": "post",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/_bulk",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "_bulk"
            ]
        },
        {
            "relativeUri": "/_nodes",
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "nodes",
                                    "example": "{\n  \"cluster_name\" : \"test-cluster-MacBook-Air-de-David.local\" ,\n  \"nodes\" : {\n    \"hJLXmY_NTrCytiIMbX4_1g\" : {\n      \"name\" : \"node4\" ,\n      \"transport_address\" : \"inet[/172.18.58.139:9303]\" ,\n      \"hostname\" : \"MacBook-Air-de-David.local\" ,\n      \"version\" : \"0.90.0.Beta2-SNAPSHOT\" ,\n      \"http_address\" : \"inet[/172.18.58.139:9203]\" ,\n      \"plugins\" : [\n        {\n          \"name\" : \"test-plugin\" ,\n          \"description\" : \"test-plugin description\" ,\n          \"site\" : true ,\n          \"jvm\" : false\n        } , {\n          \"name\" : \"test-no-version-plugin\" ,\n          \"description\" : \"test-no-version-plugin description\" ,\n          \"site\" : true ,\n          \"jvm\" : false\n        } , {\n          \"name\" : \"dummy\" ,\n          \"description\" : \"No description found for dummy.\" ,\n          \"url\" : \"/_plugin/dummy/\" ,\n          \"site\" : false ,\n          \"jvm\" : true\n        }\n      ]\n    }\n  }\n}",
                                    "schemaContent": "nodes"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "description": "The cluster nodes info API allows to retrieve one or more (or all) of the cluster nodes information.",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/{nodesIds}/hot_threads",
                    "type": "base",
                    "uriParameters": {
                        "nodesIds": {
                            "name": "nodesIds",
                            "displayName": "nodesIds",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "text/plain": {
                                            "name": "text/plain"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "threads": {
                                    "name": "threads",
                                    "displayName": "threads",
                                    "type": "number",
                                    "required": false,
                                    "repeat": false,
                                    "description": "number of hot threads to provide, defaults to 3.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "interval": {
                                    "name": "interval",
                                    "displayName": "interval",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "the interval to do the second sampling of threads. Defaults to 500ms",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "type": {
                                    "name": "type",
                                    "displayName": "type",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The type to sample, defaults to cpu, but supports wait and block to see hot threads that are in wait or block state.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "case": {
                                    "name": "case",
                                    "displayName": "case",
                                    "type": "string",
                                    "required": false,
                                    "example": "camelCase",
                                    "repeat": false,
                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "callback": {
                                    "name": "callback",
                                    "displayName": "callback",
                                    "type": "string",
                                    "required": false,
                                    "example": "JSONP",
                                    "repeat": false,
                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/{nodesIds}/hot_threads",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{nodesIds}",
                        "hot_threads"
                    ]
                },
                {
                    "relativeUri": "/stats",
                    "type": "base",
                    "methods": [
                        {
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "case": {
                                    "name": "case",
                                    "displayName": "case",
                                    "type": "string",
                                    "required": false,
                                    "example": "camelCase",
                                    "repeat": false,
                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "callback": {
                                    "name": "callback",
                                    "displayName": "callback",
                                    "type": "string",
                                    "required": false,
                                    "example": "JSONP",
                                    "repeat": false,
                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/stats",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "stats"
                    ]
                },
                {
                    "relativeUri": "/hot_threads",
                    "type": "base",
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "text/plain": {
                                            "name": "text/plain"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "threads": {
                                    "name": "threads",
                                    "displayName": "threads",
                                    "type": "number",
                                    "required": false,
                                    "repeat": false,
                                    "description": "number of hot threads to provide, defaults to 3.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "interval": {
                                    "name": "interval",
                                    "displayName": "interval",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "the interval to do the second sampling of threads. Defaults to 500ms.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "type": {
                                    "name": "type",
                                    "displayName": "type",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The type to sample, defaults to cpu, but supports wait and block to see hot threads that are in wait or block state.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "case": {
                                    "name": "case",
                                    "displayName": "case",
                                    "type": "string",
                                    "required": false,
                                    "example": "camelCase",
                                    "repeat": false,
                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "callback": {
                                    "name": "callback",
                                    "displayName": "callback",
                                    "type": "string",
                                    "required": false,
                                    "example": "JSONP",
                                    "repeat": false,
                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/hot_threads",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "hot_threads"
                    ]
                },
                {
                    "relativeUri": "/{nodeIds}/stats{statSpec}",
                    "type": "base",
                    "uriParameters": {
                        "nodeIds": {
                            "name": "nodeIds",
                            "displayName": "nodeIds",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "statSpec": {
                            "name": "statSpec",
                            "displayName": "statSpec",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "fields": {
                                    "name": "fields",
                                    "displayName": "fields",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "You can get information about field data memory usage on node level or on index level.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "case": {
                                    "name": "case",
                                    "displayName": "case",
                                    "type": "string",
                                    "required": false,
                                    "example": "camelCase",
                                    "repeat": false,
                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "callback": {
                                    "name": "callback",
                                    "displayName": "callback",
                                    "type": "string",
                                    "required": false,
                                    "example": "JSONP",
                                    "repeat": false,
                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "By default, all stats are returned. You can limit this by combining any of indices, \nos, \nprocess, \njvm, \nnetwork, \ntransport, \nhttp, \nfs, \nbreaker and \nthread_pool. For example:\nindices   \n Indices stats about size, document count, indexing and deletion times, search times, field cache size , merges and flushes \n\nfs   \n File system information, data path, free disk space, read/write stats \n\nhttp   \n HTTP connection information \n\njvm   \n JVM stats, memory pool information, garbage collection, buffer pools \n\nnetwork   \n TCP information \n\nos   \n Operating system stats, load average, cpu, mem, swap \n\nprocess   \n Process statistics, memory consumption, cpu usage, open file descriptors \n\nthread_pool   \n Statistics about each thread pool, including current size, queue and rejected tasks \n\ntransport   \n Transport statistics about sent and received bytes in cluster communication \n\nbreaker   \n Statistics about the field data circuit breaker\n",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/{nodeIds}/stats{statSpec}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{nodeIds}",
                        "stats{statSpec}"
                    ]
                },
                {
                    "relativeUri": "/{nodeInfoSpec}",
                    "type": "base",
                    "uriParameters": {
                        "nodeInfoSpec": {
                            "name": "nodeInfoSpec",
                            "displayName": "nodeInfoSpec",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "nodeInfoResult",
                                            "example": "{\n  \"cluster_name\" : \"test-cluster-MacBook-Air-de-David.local\" ,\n  \"nodes\" : {\n    \"hJLXmY_NTrCytiIMbX4_1g\" : {\n      \"name\" : \"node4\" ,\n      \"transport_address\" : \"inet[/172.18.58.139:9303]\" ,\n      \"hostname\" : \"MacBook-Air-de-David.local\" ,\n      \"version\" : \"0.90.0.Beta2-SNAPSHOT\" ,\n      \"http_address\" : \"inet[/172.18.58.139:9203]\" ,\n      \"plugins\" : [\n        {\n          \"name\" : \"test-plugin\" ,\n          \"description\" : \"test-plugin description\" ,\n          \"site\" : true ,\n          \"jvm\" : false\n        } , {\n          \"name\" : \"test-no-version-plugin\" ,\n          \"description\" : \"test-no-version-plugin description\" ,\n          \"site\" : true ,\n          \"jvm\" : false\n        } , {\n          \"name\" : \"dummy\" ,\n          \"description\" : \"No description found for dummy.\" ,\n          \"url\" : \"/_plugin/dummy/\" ,\n          \"site\" : false ,\n          \"jvm\" : true\n        }\n      ]\n    }\n  }\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"cluster_name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"nodes\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"hJLXmY_NTrCytiIMbX4_1g\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"transport_address\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"hostname\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"version\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"http_address\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"plugins\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"object\" ,\n                  \"properties\" : {\n                    \"name\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"description\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"site\" : {\n                      \"type\" : \"boolean\" ,\n                      \"required\" : false\n                    } ,\n                    \"jvm\" : {\n                      \"type\" : \"boolean\" ,\n                      \"required\" : false\n                    }\n                  }\n                } , {\n                  \"type\" : \"object\" ,\n                  \"properties\" : {\n                    \"name\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"description\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"url\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"site\" : {\n                      \"type\" : \"boolean\" ,\n                      \"required\" : false\n                    } ,\n                    \"jvm\" : {\n                      \"type\" : \"boolean\" ,\n                      \"required\" : false\n                    }\n                  }\n                }\n              ]\n            }\n          }\n        }\n      }\n    }\n  }\n}"
                                        }
                                    },
                                    "description": ""
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "case": {
                                    "name": "case",
                                    "displayName": "case",
                                    "type": "string",
                                    "required": false,
                                    "example": "camelCase",
                                    "repeat": false,
                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "callback": {
                                    "name": "callback",
                                    "displayName": "callback",
                                    "type": "string",
                                    "required": false,
                                    "example": "JSONP",
                                    "repeat": false,
                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "The cluster nodes info API allows to retrieve one or more (or all) of the cluster nodes information.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/{nodeInfoSpec}",
                    "description": "",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{nodeInfoSpec}"
                    ]
                }
            ],
            "displayName": "/_nodes",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "_nodes"
            ]
        },
        {
            "relativeUri": "/_cluster",
            "resources": [
                {
                    "relativeUri": "/pending_tasks",
                    "type": "base",
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "tasksStatus",
                                            "example": "{\n  \"tasks\" : [\n    {\n      \"insert_order\" : 101 ,\n      \"priority\" : \"URGENT\" ,\n      \"source\" : \"create-index [foo_9], cause [api]\" ,\n      \"time_in_queue_millis\" : 86 ,\n      \"time_in_queue\" : \"86ms\"\n    } , {\n      \"insert_order\" : 46 ,\n      \"priority\" : \"HIGH\" ,\n      \"source\" : \"shard-started ([foo_2][1], node[tMTocMvQQgGCkj7QDHl3OA], [P], s[INITIALIZING]), reason [after recovery from gateway]\" ,\n      \"time_in_queue_millis\" : 842 ,\n      \"time_in_queue\" : \"842ms\"\n    } , {\n      \"insert_order\" : 45 ,\n      \"priority\" : \"HIGH\" ,\n      \"source\" : \"shard-started ([foo_2][0], node[tMTocMvQQgGCkj7QDHl3OA], [P], s[INITIALIZING]), reason [after recovery from gateway]\" ,\n      \"time_in_queue_millis\" : 858 ,\n      \"time_in_queue\" : \"858ms\"\n    }\n  ]\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"tasks\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"insert_order\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"priority\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"source\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"time_in_queue_millis\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"time_in_queue\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "case": {
                                    "name": "case",
                                    "displayName": "case",
                                    "type": "string",
                                    "required": false,
                                    "example": "camelCase",
                                    "repeat": false,
                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "callback": {
                                    "name": "callback",
                                    "displayName": "callback",
                                    "type": "string",
                                    "required": false,
                                    "example": "JSONP",
                                    "repeat": false,
                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "The pending cluster tasks API returns a list of any cluster-level changes (e.g. create index, update mapping, allocate or fail shard) which have not yet been executed.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/pending_tasks",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "pending_tasks"
                    ]
                },
                {
                    "relativeUri": "/stats",
                    "type": "base",
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "stats",
                                            "example": "{\n  \"cluster_name\" : \"elasticsearch\" ,\n  \"status\" : \"green\" ,\n  \"indices\" : {\n    \"count\" : 3 ,\n    \"shards\" : {\n      \"total\" : 35 ,\n      \"primaries\" : 15 ,\n      \"replication\" : 1.333333333333333 ,\n      \"index\" : {\n        \"shards\" : {\n          \"min\" : 10 ,\n          \"max\" : 15 ,\n          \"avg\" : 11.66666666666666\n        } ,\n        \"primaries\" : {\n          \"min\" : 5 ,\n          \"max\" : 5 ,\n          \"avg\" : 5\n        } ,\n        \"replication\" : {\n          \"min\" : 1 ,\n          \"max\" : 2 ,\n          \"avg\" : 1.3333333333333333\n        }\n      }\n    } ,\n    \"docs\" : {\n      \"count\" : 2 ,\n      \"deleted\" : 0\n    } ,\n    \"store\" : {\n      \"size\" : \"5.6kb\" ,\n      \"size_in_bytes\" : 5770 ,\n      \"throttle_time\" : \"0s\" ,\n      \"throttle_time_in_millis\" : 0\n    } ,\n    \"fielddata\" : {\n      \"memory_size\" : \"0b\" ,\n      \"memory_size_in_bytes\" : 0 ,\n      \"evictions\" : 0\n    } ,\n    \"filter_cache\" : {\n      \"memory_size\" : \"0b\" ,\n      \"memory_size_in_bytes\" : 0 ,\n      \"evictions\" : 0\n    } ,\n    \"id_cache\" : {\n      \"memory_size\" : \"0b\" ,\n      \"memory_size_in_bytes\" : 0\n    } ,\n    \"completion\" : {\n      \"size\" : \"0b\" ,\n      \"size_in_bytes\" : 0\n    } ,\n    \"segments\" : {\n      \"count\" : 2\n    }\n  } ,\n  \"nodes\" : {\n    \"count\" : {\n      \"total\" : 2 ,\n      \"master_only\" : 0 ,\n      \"data_only\" : 0 ,\n      \"master_data\" : 2 ,\n      \"client\" : 0\n    } ,\n    \"versions\" : [\n      \"0.90.8\"\n    ] ,\n    \"os\" : {\n      \"available_processors\" : 4 ,\n      \"mem\" : {\n        \"total\" : \"8gb\" ,\n        \"total_in_bytes\" : 8589934592\n      } ,\n      \"cpu\" : [\n        {\n          \"vendor\" : \"Intel\" ,\n          \"model\" : \"MacBookAir5,2\" ,\n          \"mhz\" : 2000 ,\n          \"total_cores\" : 4 ,\n          \"total_sockets\" : 4 ,\n          \"cores_per_socket\" : 16 ,\n          \"cache_size\" : \"256b\" ,\n          \"cache_size_in_bytes\" : 256 ,\n          \"count\" : 1\n        }\n      ]\n    } ,\n    \"process\" : {\n      \"cpu\" : {\n        \"percent\" : 3\n      } ,\n      \"open_file_descriptors\" : {\n        \"min\" : 200 ,\n        \"max\" : 346 ,\n        \"avg\" : 273\n      }\n    } ,\n    \"jvm\" : {\n      \"max_uptime\" : \"24s\" ,\n      \"max_uptime_in_millis\" : 24054 ,\n      \"version\" : [\n        {\n          \"version\" : \"1.6.0_45\" ,\n          \"vm_name\" : \"Java HotSpot(TM) 64-Bit Server VM\" ,\n          \"vm_version\" : \"20.45-b01-451\" ,\n          \"vm_vendor\" : \"Apple Inc.\" ,\n          \"count\" : 2\n        }\n      ] ,\n      \"mem\" : {\n        \"heap_used\" : \"38.3mb\" ,\n        \"heap_used_in_bytes\" : 40237120 ,\n        \"heap_max\" : \"1.9gb\" ,\n        \"heap_max_in_bytes\" : 2130051072\n      } ,\n      \"threads\" : 89\n    } ,\n    \"fs\" : {\n      \"total\" : \"232.9gb\" ,\n      \"total_in_bytes\" : 250140434432 ,\n      \"free\" : \"31.3gb\" ,\n      \"free_in_bytes\" : 33705881600 ,\n      \"available\" : \"31.1gb\" ,\n      \"available_in_bytes\" : 33443737600 ,\n      \"disk_reads\" : 21202753 ,\n      \"disk_writes\" : 27028840 ,\n      \"disk_io_op\" : 48231593 ,\n      \"disk_read_size\" : \"528gb\" ,\n      \"disk_read_size_in_bytes\" : 566980806656 ,\n      \"disk_write_size\" : \"617.9gb\" ,\n      \"disk_write_size_in_bytes\" : 663525366784 ,\n      \"disk_io_size\" : \"1145.9gb\" ,\n      \"disk_io_size_in_bytes\" : 1230506173440\n    } ,\n    \"plugins\" : [\n      {\n        \"name\" : \"inquisitor\" ,\n        \"description\" : \"\" ,\n        \"url\" : \"/_plugin/inquisitor/\" ,\n        \"jvm\" : false ,\n        \"site\" : true\n      }\n    ]\n  }\n}",
                                            "schemaContent": "stats"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "case": {
                                    "name": "case",
                                    "displayName": "case",
                                    "type": "string",
                                    "required": false,
                                    "example": "camelCase",
                                    "repeat": false,
                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "callback": {
                                    "name": "callback",
                                    "displayName": "callback",
                                    "type": "string",
                                    "required": false,
                                    "example": "JSONP",
                                    "repeat": false,
                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "The Cluster Stats API allows to retrieve statistics from a cluster wide perspective. The API returns basic index metrics (shard numbers, store size, memory usage) and information about the current nodes that form the cluster (number, roles, os, jvm versions, memory usage, cpu and installed plugins).",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/stats",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "stats"
                    ]
                },
                {
                    "relativeUri": "/state",
                    "type": "base",
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "case": {
                                    "name": "case",
                                    "displayName": "case",
                                    "type": "string",
                                    "required": false,
                                    "example": "camelCase",
                                    "repeat": false,
                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "callback": {
                                    "name": "callback",
                                    "displayName": "callback",
                                    "type": "string",
                                    "required": false,
                                    "example": "JSONP",
                                    "repeat": false,
                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "The cluster state API allows to get a comprehensive state information of the whole cluster.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "resources": [
                        {
                            "relativeUri": "/{metrics}/{indices}",
                            "type": "base",
                            "uriParameters": {
                                "metrics": {
                                    "name": "metrics",
                                    "displayName": "metrics",
                                    "type": "string",
                                    "required": true,
                                    "repeat": false,
                                    "__METADATA__": {
                                        "calculated": true,
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "indices": {
                                    "name": "indices",
                                    "displayName": "indices",
                                    "type": "string",
                                    "required": true,
                                    "repeat": false,
                                    "__METADATA__": {
                                        "calculated": true,
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "methods": [
                                {
                                    "responses": {
                                        "200": {
                                            "code": "200",
                                            "body": {
                                                "application/json": {
                                                    "name": "application/json"
                                                }
                                            }
                                        }
                                    },
                                    "protocols": [
                                        "{PROTOCOL}"
                                    ],
                                    "queryParameters": {
                                        "pretty": {
                                            "name": "pretty",
                                            "displayName": "pretty",
                                            "type": "boolean",
                                            "required": false,
                                            "example": "true",
                                            "repeat": false,
                                            "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "format": {
                                            "name": "format",
                                            "displayName": "format",
                                            "type": "string",
                                            "required": false,
                                            "example": "yaml",
                                            "repeat": false,
                                            "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "human": {
                                            "name": "human",
                                            "displayName": "human",
                                            "type": "boolean",
                                            "required": false,
                                            "default": true,
                                            "example": "false",
                                            "repeat": false,
                                            "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "flat_settings": {
                                            "name": "flat_settings",
                                            "displayName": "flat_settings",
                                            "type": "boolean",
                                            "required": false,
                                            "repeat": false,
                                            "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "case": {
                                            "name": "case",
                                            "displayName": "case",
                                            "type": "string",
                                            "required": false,
                                            "example": "camelCase",
                                            "repeat": false,
                                            "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        },
                                        "callback": {
                                            "name": "callback",
                                            "displayName": "callback",
                                            "type": "string",
                                            "required": false,
                                            "example": "JSONP",
                                            "repeat": false,
                                            "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                            "__METADATA__": {
                                                "primitiveValuesMeta": {
                                                    "displayName": {
                                                        "calculated": true
                                                    },
                                                    "type": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "required": {
                                                        "insertedAsDefault": true
                                                    },
                                                    "repeat": {
                                                        "insertedAsDefault": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "description": "As the cluster state can grow (depending on the number of shards and indices, your mapping, templates), it is possible to filter the cluster state response specifying the parts in the URL.",
                                    "method": "get",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "protocols": {
                                                "calculated": true
                                            }
                                        }
                                    }
                                }
                            ],
                            "displayName": "/{metrics}/{indices}",
                            "description": "metrics can be a comma-separated list of\nversion - Shows the cluster state version. \nmaster_node - Shows the elected master_node part of the response \nnodes -  Shows the nodes part of the response \nrouting_table  - Shows the routing_table part of the response. If you supply a comma separated list of \nindices, the returned output will only contain the indices listed. \nmetadata - Shows the metadata part of the response. If you supply a comma separated list of indices, the \nreturned output will only contain the indices listed. blocks   Shows the blocks part of the response\n",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    }
                                }
                            },
                            "relativeUriPathSegments": [
                                "{metrics}",
                                "{indices}"
                            ]
                        }
                    ],
                    "displayName": "/state",
                    "description": "",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "state"
                    ]
                },
                {
                    "relativeUri": "/settings",
                    "type": "base",
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "case": {
                                    "name": "case",
                                    "displayName": "case",
                                    "type": "string",
                                    "required": false,
                                    "example": "camelCase",
                                    "repeat": false,
                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "callback": {
                                    "name": "callback",
                                    "displayName": "callback",
                                    "type": "string",
                                    "required": false,
                                    "example": "JSONP",
                                    "repeat": false,
                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Cluster wide settings can be returned using",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        },
                        {
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "clusterSettings",
                                    "example": "{\n  \"persistent\" : {\n    \"discovery.zen.minimum_master_nodes\" : \"2\"\n  }\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"persistent\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"discovery.zen.minimum_master_nodes\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Allows to update cluster wide specific settings. Settings updated can either be persistent (applied cross restarts) or transient (will not survive a full cluster restart).",
                            "method": "put",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/settings",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "settings"
                    ]
                },
                {
                    "relativeUri": "/reroute",
                    "type": "base",
                    "methods": [
                        {
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "rerouteSpec",
                                    "example": "{\n  \"commands\" : [\n    {\n      \"move\" : {\n        \"index\" : \"test\" ,\n        \"shard\" : 0 ,\n        \"from_node\" : \"node1\" ,\n        \"to_node\" : \"node2\"\n      }\n    } , {\n      \"allocate\" : {\n        \"index\" : \"test\" ,\n        \"shard\" : 1 ,\n        \"node\" : \"node3\"\n      }\n    }\n  ]\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"commands\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"move\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"index\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"shard\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"from_node\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"to_node\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        } , {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"allocate\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"index\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"shard\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"node\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "The reroute command allows to explicitly execute a cluster reroute allocation command including specific commands. For example, a shard can be moved from one node to another explicitly, an allocation can be canceled, or an unassigned shard can be explicitly allocated on a specific node.\n\nAn important aspect to remember is the fact that once when an allocation occurs, the cluster will aim at re-balancing its state back to an even state. For example, if the allocation includes moving a shard from node1 to \nnode2, in an \neven state, then another shard will be moved from \nnode2 to \nnode1 to even things out.\n\nThe cluster can be set to disable allocations, which means that only the explicitly allocations will be performed. Obviously, only once all commands has been applied, the cluster will aim to be re-balance its state.\n\nAnother option is to run the commands in dry_run (as a URI flag, or in the request body). This will \ncause the commands to apply to the current cluster state, and return the resulting cluster after the commands (and re-balancing) has been applied.\n\nIf the explain parameter is specified, a detailed explanation of why the commands could or could \nnot be executed is returned.\n\nThe commands supported are:\nmove \n Move a started shard from one node to another node. Accepts index and \nshard for index \nname and shard number, from_node for the node to move the shard \nfrom, and \nto_node for \nthe node to move the shard to. \ncancel \n Cancel allocation of a shard (or recovery). Accepts index and \nshard for index name and \nshard number, and node for the node to cancel the shard allocation on. It also accepts \nallow_primary flag to explicitly specify that it is allowed to cancel allocation for a primary \nshard. \nallocate \n Allocate an unassigned shard to a node. Accepts the index and \nshard for index name and \nshard number, and node to allocate the shard to. It also accepts \nallow_primary flag to \nexplicitly specify that it is allowed to explicitly allocate a primary shard (might result in data loss).\n",
                            "method": "post",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/reroute",
                    "description": "",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "reroute"
                    ]
                },
                {
                    "relativeUri": "/health/{indicesList}",
                    "type": "base",
                    "uriParameters": {
                        "indicesList": {
                            "name": "indicesList",
                            "displayName": "indicesList",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "wait_for_status": {
                                    "name": "wait_for_status",
                                    "displayName": "wait_for_status",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "One of green, yellow or  red. Will wait (until the timeout provided) until the status of the cluster changes to the one provided or better, i.e. green >  yellow >  red. By default, will  not wait for any status.",
                                    "enum": [
                                        "red",
                                        "green",
                                        "yellow"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "timeout": {
                                    "name": "timeout",
                                    "displayName": "timeout",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "level": {
                                    "name": "level",
                                    "displayName": "level",
                                    "type": "string",
                                    "required": false,
                                    "default": "cluster",
                                    "repeat": false,
                                    "description": "Can be one of cluster, \nindices or \nshards. Controls the details level of the health \ninformation returned. Defaults to cluster.\n",
                                    "enum": [
                                        "shards",
                                        "cluster",
                                        "indices"
                                    ],
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "wait_for_relocating_shards": {
                                    "name": "wait_for_relocating_shards",
                                    "displayName": "wait_for_relocating_shards",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "A number controlling to how many relocating shards to wait for. Usually will be 0 to indicate \nto wait till all relocations have happened. Defaults to not wait.\n",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "wait_for_nodes": {
                                    "name": "wait_for_nodes",
                                    "displayName": "wait_for_nodes",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The request waits until the specified number N of nodes is available. It also accepts  >=N,  <=N,  >N and  <N. Alternatively, it is possible to use  ge(N),  le(N),  gt(N) and  lt(N) notation.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "case": {
                                    "name": "case",
                                    "displayName": "case",
                                    "type": "string",
                                    "required": false,
                                    "example": "camelCase",
                                    "repeat": false,
                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "callback": {
                                    "name": "callback",
                                    "displayName": "callback",
                                    "type": "string",
                                    "required": false,
                                    "example": "JSONP",
                                    "repeat": false,
                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "The cluster health API allows to get a very simple status on the health of the cluster.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/health/{indicesList}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "health",
                        "{indicesList}"
                    ]
                },
                {
                    "relativeUri": "/nodes/{nodeList}/_shutdown",
                    "uriParameters": {
                        "nodeList": {
                            "name": "nodeList",
                            "displayName": "nodeList",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "delay": {
                                    "name": "delay",
                                    "displayName": "delay",
                                    "type": "string",
                                    "required": false,
                                    "default": "1s",
                                    "example": "10s",
                                    "repeat": false,
                                    "description": "By default, the shutdown will be executed after a 1 second delay (1s). The delay can be customized by setting the delay parameter in a time value format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "The nodes shutdown API allows to shutdown one or more (or all) nodes in the cluster.",
                            "method": "post",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/nodes/{nodeList}/_shutdown",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "nodes",
                        "{nodeList}",
                        "_shutdown"
                    ]
                }
            ],
            "displayName": "/_cluster",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "_cluster"
            ]
        },
        {
            "relativeUri": "/_cat",
            "resources": [
                {
                    "relativeUri": "/nodes",
                    "type": "catResource",
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "v": {
                                    "name": "v",
                                    "displayName": "v",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Each of the commands accepts a query string parameter v to turn on verbose output.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "help": {
                                    "name": "help",
                                    "displayName": "help",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Each of the commands accepts a query string parameter help which will output its available columns.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "h": {
                                    "name": "h",
                                    "displayName": "h",
                                    "type": "string",
                                    "required": false,
                                    "example": "h=ip,port,heapPercent,name",
                                    "repeat": false,
                                    "description": "Each of the commands accepts a query string parameter h which forces only those columns to appear.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "bytes": {
                                    "name": "bytes",
                                    "displayName": "bytes",
                                    "type": "string",
                                    "required": false,
                                    "example": "bytes=b",
                                    "repeat": false,
                                    "description": "Well use a byte-level resolution.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "case": {
                                    "name": "case",
                                    "displayName": "case",
                                    "type": "string",
                                    "required": false,
                                    "example": "camelCase",
                                    "repeat": false,
                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "callback": {
                                    "name": "callback",
                                    "displayName": "callback",
                                    "type": "string",
                                    "required": false,
                                    "example": "JSONP",
                                    "repeat": false,
                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "The nodes command shows the cluster topology.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/nodes",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "nodes"
                    ]
                },
                {
                    "relativeUri": "/health",
                    "type": "catResource",
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "ts": {
                                    "name": "ts",
                                    "displayName": "ts",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "ts allows to disable the timestamping",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "v": {
                                    "name": "v",
                                    "displayName": "v",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Each of the commands accepts a query string parameter v to turn on verbose output.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "help": {
                                    "name": "help",
                                    "displayName": "help",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Each of the commands accepts a query string parameter help which will output its available columns.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "h": {
                                    "name": "h",
                                    "displayName": "h",
                                    "type": "string",
                                    "required": false,
                                    "example": "h=ip,port,heapPercent,name",
                                    "repeat": false,
                                    "description": "Each of the commands accepts a query string parameter h which forces only those columns to appear.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "bytes": {
                                    "name": "bytes",
                                    "displayName": "bytes",
                                    "type": "string",
                                    "required": false,
                                    "example": "bytes=b",
                                    "repeat": false,
                                    "description": "Well use a byte-level resolution.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "case": {
                                    "name": "case",
                                    "displayName": "case",
                                    "type": "string",
                                    "required": false,
                                    "example": "camelCase",
                                    "repeat": false,
                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "callback": {
                                    "name": "callback",
                                    "displayName": "callback",
                                    "type": "string",
                                    "required": false,
                                    "example": "JSONP",
                                    "repeat": false,
                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "health is a terse, one-line representation of the same information from /_cluster/health. It has one option ts to disable the timestamping.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/health",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "health"
                    ]
                },
                {
                    "relativeUri": "/indices",
                    "type": "catResource",
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "v": {
                                    "name": "v",
                                    "displayName": "v",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Each of the commands accepts a query string parameter v to turn on verbose output.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "help": {
                                    "name": "help",
                                    "displayName": "help",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Each of the commands accepts a query string parameter help which will output its available columns.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "h": {
                                    "name": "h",
                                    "displayName": "h",
                                    "type": "string",
                                    "required": false,
                                    "example": "h=ip,port,heapPercent,name",
                                    "repeat": false,
                                    "description": "Each of the commands accepts a query string parameter h which forces only those columns to appear.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "bytes": {
                                    "name": "bytes",
                                    "displayName": "bytes",
                                    "type": "string",
                                    "required": false,
                                    "example": "bytes=b",
                                    "repeat": false,
                                    "description": "Well use a byte-level resolution.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "case": {
                                    "name": "case",
                                    "displayName": "case",
                                    "type": "string",
                                    "required": false,
                                    "example": "camelCase",
                                    "repeat": false,
                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "callback": {
                                    "name": "callback",
                                    "displayName": "callback",
                                    "type": "string",
                                    "required": false,
                                    "example": "JSONP",
                                    "repeat": false,
                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "The indices command provides a cross-section of each index. This information spans nodes.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/indices",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "indices"
                    ]
                },
                {
                    "relativeUri": "/fielddata",
                    "type": "catResource",
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "fields": {
                                    "name": "fields",
                                    "displayName": "fields",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "comma separated list of fields",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "v": {
                                    "name": "v",
                                    "displayName": "v",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Each of the commands accepts a query string parameter v to turn on verbose output.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "help": {
                                    "name": "help",
                                    "displayName": "help",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Each of the commands accepts a query string parameter help which will output its available columns.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "h": {
                                    "name": "h",
                                    "displayName": "h",
                                    "type": "string",
                                    "required": false,
                                    "example": "h=ip,port,heapPercent,name",
                                    "repeat": false,
                                    "description": "Each of the commands accepts a query string parameter h which forces only those columns to appear.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "bytes": {
                                    "name": "bytes",
                                    "displayName": "bytes",
                                    "type": "string",
                                    "required": false,
                                    "example": "bytes=b",
                                    "repeat": false,
                                    "description": "Well use a byte-level resolution.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "case": {
                                    "name": "case",
                                    "displayName": "case",
                                    "type": "string",
                                    "required": false,
                                    "example": "camelCase",
                                    "repeat": false,
                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "callback": {
                                    "name": "callback",
                                    "displayName": "callback",
                                    "type": "string",
                                    "required": false,
                                    "example": "JSONP",
                                    "repeat": false,
                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "fielddata shows information about currently loaded fielddata on a per-node basis.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/fielddata",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "fielddata"
                    ]
                },
                {
                    "relativeUri": "/pending_tasks",
                    "type": "catResource",
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "v": {
                                    "name": "v",
                                    "displayName": "v",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Each of the commands accepts a query string parameter v to turn on verbose output.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "help": {
                                    "name": "help",
                                    "displayName": "help",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Each of the commands accepts a query string parameter help which will output its available columns.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "h": {
                                    "name": "h",
                                    "displayName": "h",
                                    "type": "string",
                                    "required": false,
                                    "example": "h=ip,port,heapPercent,name",
                                    "repeat": false,
                                    "description": "Each of the commands accepts a query string parameter h which forces only those columns to appear.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "bytes": {
                                    "name": "bytes",
                                    "displayName": "bytes",
                                    "type": "string",
                                    "required": false,
                                    "example": "bytes=b",
                                    "repeat": false,
                                    "description": "Well use a byte-level resolution.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "case": {
                                    "name": "case",
                                    "displayName": "case",
                                    "type": "string",
                                    "required": false,
                                    "example": "camelCase",
                                    "repeat": false,
                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "callback": {
                                    "name": "callback",
                                    "displayName": "callback",
                                    "type": "string",
                                    "required": false,
                                    "example": "JSONP",
                                    "repeat": false,
                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "pending_tasks provides the same information as the /_cluster/pending_tasks API in a convenient tabular format.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/pending_tasks",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "pending_tasks"
                    ]
                },
                {
                    "relativeUri": "/allocation",
                    "type": "catResource",
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "v": {
                                    "name": "v",
                                    "displayName": "v",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Each of the commands accepts a query string parameter v to turn on verbose output.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "help": {
                                    "name": "help",
                                    "displayName": "help",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Each of the commands accepts a query string parameter help which will output its available columns.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "h": {
                                    "name": "h",
                                    "displayName": "h",
                                    "type": "string",
                                    "required": false,
                                    "example": "h=ip,port,heapPercent,name",
                                    "repeat": false,
                                    "description": "Each of the commands accepts a query string parameter h which forces only those columns to appear.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "bytes": {
                                    "name": "bytes",
                                    "displayName": "bytes",
                                    "type": "string",
                                    "required": false,
                                    "example": "bytes=b",
                                    "repeat": false,
                                    "description": "Well use a byte-level resolution.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "case": {
                                    "name": "case",
                                    "displayName": "case",
                                    "type": "string",
                                    "required": false,
                                    "example": "camelCase",
                                    "repeat": false,
                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "callback": {
                                    "name": "callback",
                                    "displayName": "callback",
                                    "type": "string",
                                    "required": false,
                                    "example": "JSONP",
                                    "repeat": false,
                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "allocation provides a snapshot of how shards have located around the cluster and the state of disk usage.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/allocation",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "allocation"
                    ]
                },
                {
                    "relativeUri": "/thread_pool",
                    "type": "catResource",
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "v": {
                                    "name": "v",
                                    "displayName": "v",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Each of the commands accepts a query string parameter v to turn on verbose output.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "help": {
                                    "name": "help",
                                    "displayName": "help",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Each of the commands accepts a query string parameter help which will output its available columns.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "h": {
                                    "name": "h",
                                    "displayName": "h",
                                    "type": "string",
                                    "required": false,
                                    "example": "h=ip,port,heapPercent,name",
                                    "repeat": false,
                                    "description": "Each of the commands accepts a query string parameter h which forces only those columns to appear.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "bytes": {
                                    "name": "bytes",
                                    "displayName": "bytes",
                                    "type": "string",
                                    "required": false,
                                    "example": "bytes=b",
                                    "repeat": false,
                                    "description": "Well use a byte-level resolution.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "case": {
                                    "name": "case",
                                    "displayName": "case",
                                    "type": "string",
                                    "required": false,
                                    "example": "camelCase",
                                    "repeat": false,
                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "callback": {
                                    "name": "callback",
                                    "displayName": "callback",
                                    "type": "string",
                                    "required": false,
                                    "example": "JSONP",
                                    "repeat": false,
                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "The thread_pool command shows cluster wide thread pool statistics per node. By default the active, queue and rejected statistics are returned for the bulk, index and search thread pools.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/thread_pool",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "thread_pool"
                    ]
                },
                {
                    "relativeUri": "/shards",
                    "type": "catResource",
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "v": {
                                    "name": "v",
                                    "displayName": "v",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Each of the commands accepts a query string parameter v to turn on verbose output.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "help": {
                                    "name": "help",
                                    "displayName": "help",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Each of the commands accepts a query string parameter help which will output its available columns.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "h": {
                                    "name": "h",
                                    "displayName": "h",
                                    "type": "string",
                                    "required": false,
                                    "example": "h=ip,port,heapPercent,name",
                                    "repeat": false,
                                    "description": "Each of the commands accepts a query string parameter h which forces only those columns to appear.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "bytes": {
                                    "name": "bytes",
                                    "displayName": "bytes",
                                    "type": "string",
                                    "required": false,
                                    "example": "bytes=b",
                                    "repeat": false,
                                    "description": "Well use a byte-level resolution.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "case": {
                                    "name": "case",
                                    "displayName": "case",
                                    "type": "string",
                                    "required": false,
                                    "example": "camelCase",
                                    "repeat": false,
                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "callback": {
                                    "name": "callback",
                                    "displayName": "callback",
                                    "type": "string",
                                    "required": false,
                                    "example": "JSONP",
                                    "repeat": false,
                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "The shards command is the detailed view of what nodes contain which shards. It will tell you if it's \na primary or replica, the number of docs, the bytes it takes on disk, and the node where it's located.\n",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/shards",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "shards"
                    ]
                },
                {
                    "relativeUri": "/aliases",
                    "type": "catResource",
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "v": {
                                    "name": "v",
                                    "displayName": "v",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Each of the commands accepts a query string parameter v to turn on verbose output.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "help": {
                                    "name": "help",
                                    "displayName": "help",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Each of the commands accepts a query string parameter help which will output its available columns.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "h": {
                                    "name": "h",
                                    "displayName": "h",
                                    "type": "string",
                                    "required": false,
                                    "example": "h=ip,port,heapPercent,name",
                                    "repeat": false,
                                    "description": "Each of the commands accepts a query string parameter h which forces only those columns to appear.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "bytes": {
                                    "name": "bytes",
                                    "displayName": "bytes",
                                    "type": "string",
                                    "required": false,
                                    "example": "bytes=b",
                                    "repeat": false,
                                    "description": "We'll use a byte-level resolution.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "case": {
                                    "name": "case",
                                    "displayName": "case",
                                    "type": "string",
                                    "required": false,
                                    "example": "camelCase",
                                    "repeat": false,
                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "callback": {
                                    "name": "callback",
                                    "displayName": "callback",
                                    "type": "string",
                                    "required": false,
                                    "example": "JSONP",
                                    "repeat": false,
                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "aliases shows information about currently configured aliases to indices including filter and \nrouting infos.\n",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/aliases",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "aliases"
                    ]
                },
                {
                    "relativeUri": "/recovery",
                    "type": "catResource",
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "v": {
                                    "name": "v",
                                    "displayName": "v",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Each of the commands accepts a query string parameter v to turn on verbose output.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "help": {
                                    "name": "help",
                                    "displayName": "help",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Each of the commands accepts a query string parameter help which will output its available columns.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "h": {
                                    "name": "h",
                                    "displayName": "h",
                                    "type": "string",
                                    "required": false,
                                    "example": "h=ip,port,heapPercent,name",
                                    "repeat": false,
                                    "description": "Each of the commands accepts a query string parameter h which forces only those columns to appear.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "bytes": {
                                    "name": "bytes",
                                    "displayName": "bytes",
                                    "type": "string",
                                    "required": false,
                                    "example": "bytes=b",
                                    "repeat": false,
                                    "description": "Well use a byte-level resolution.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "case": {
                                    "name": "case",
                                    "displayName": "case",
                                    "type": "string",
                                    "required": false,
                                    "example": "camelCase",
                                    "repeat": false,
                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "callback": {
                                    "name": "callback",
                                    "displayName": "callback",
                                    "type": "string",
                                    "required": false,
                                    "example": "JSONP",
                                    "repeat": false,
                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "The recovery command is a view of index shard recoveries, both on-going and previously completed. It is a more compact view of the JSON recovery API.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/recovery",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "recovery"
                    ]
                },
                {
                    "relativeUri": "/plugins",
                    "type": "catResource",
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "v": {
                                    "name": "v",
                                    "displayName": "v",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Each of the commands accepts a query string parameter v to turn on verbose output.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "help": {
                                    "name": "help",
                                    "displayName": "help",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Each of the commands accepts a query string parameter help which will output its available columns.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "h": {
                                    "name": "h",
                                    "displayName": "h",
                                    "type": "string",
                                    "required": false,
                                    "example": "h=ip,port,heapPercent,name",
                                    "repeat": false,
                                    "description": "Each of the commands accepts a query string parameter h which forces only those columns to appear.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "bytes": {
                                    "name": "bytes",
                                    "displayName": "bytes",
                                    "type": "string",
                                    "required": false,
                                    "example": "bytes=b",
                                    "repeat": false,
                                    "description": "Well use a byte-level resolution.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "case": {
                                    "name": "case",
                                    "displayName": "case",
                                    "type": "string",
                                    "required": false,
                                    "example": "camelCase",
                                    "repeat": false,
                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "callback": {
                                    "name": "callback",
                                    "displayName": "callback",
                                    "type": "string",
                                    "required": false,
                                    "example": "JSONP",
                                    "repeat": false,
                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "The plugins command provides a view per node of running plugins. This information spans nodes.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/plugins",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "plugins"
                    ]
                },
                {
                    "relativeUri": "/master",
                    "type": "catResource",
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "v": {
                                    "name": "v",
                                    "displayName": "v",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Each of the commands accepts a query string parameter v to turn on verbose output.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "help": {
                                    "name": "help",
                                    "displayName": "help",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Each of the commands accepts a query string parameter help which will output its available columns.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "h": {
                                    "name": "h",
                                    "displayName": "h",
                                    "type": "string",
                                    "required": false,
                                    "example": "h=ip,port,heapPercent,name",
                                    "repeat": false,
                                    "description": "Each of the commands accepts a query string parameter h which forces only those columns to appear.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "bytes": {
                                    "name": "bytes",
                                    "displayName": "bytes",
                                    "type": "string",
                                    "required": false,
                                    "example": "bytes=b",
                                    "repeat": false,
                                    "description": "Well use a byte-level resolution.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "case": {
                                    "name": "case",
                                    "displayName": "case",
                                    "type": "string",
                                    "required": false,
                                    "example": "camelCase",
                                    "repeat": false,
                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "callback": {
                                    "name": "callback",
                                    "displayName": "callback",
                                    "type": "string",
                                    "required": false,
                                    "example": "JSONP",
                                    "repeat": false,
                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "master doesn't have any extra options. It simply displays the master's node ID, bound IP address, and node name.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/master",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "master"
                    ]
                },
                {
                    "relativeUri": "/count/{indicesSelection}",
                    "type": "catResource",
                    "uriParameters": {
                        "indicesSelection": {
                            "name": "indicesSelection",
                            "displayName": "indicesSelection",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "v": {
                                    "name": "v",
                                    "displayName": "v",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Each of the commands accepts a query string parameter v to turn on verbose output.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "help": {
                                    "name": "help",
                                    "displayName": "help",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Each of the commands accepts a query string parameter help which will output its available columns.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "h": {
                                    "name": "h",
                                    "displayName": "h",
                                    "type": "string",
                                    "required": false,
                                    "example": "h=ip,port,heapPercent,name",
                                    "repeat": false,
                                    "description": "Each of the commands accepts a query string parameter h which forces only those columns to appear.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "bytes": {
                                    "name": "bytes",
                                    "displayName": "bytes",
                                    "type": "string",
                                    "required": false,
                                    "example": "bytes=b",
                                    "repeat": false,
                                    "description": "Well use a byte-level resolution.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "case": {
                                    "name": "case",
                                    "displayName": "case",
                                    "type": "string",
                                    "required": false,
                                    "example": "camelCase",
                                    "repeat": false,
                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "callback": {
                                    "name": "callback",
                                    "displayName": "callback",
                                    "type": "string",
                                    "required": false,
                                    "example": "JSONP",
                                    "repeat": false,
                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "count provides quick access to the document count of the entire cluster, or individual indices.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/count/{indicesSelection}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "count",
                        "{indicesSelection}"
                    ]
                }
            ],
            "displayName": "/_cat",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "_cat"
            ]
        },
        {
            "relativeUri": "/_bench",
            "type": "base",
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "benchResponse",
                                    "example": "{\n  \"status\" : \"complete\" ,\n  \"competitors\" : {\n    \"my_competitor\" : {\n      \"summary\" : {\n        \"nodes\" : [\n          \"localhost\"\n        ] ,\n        \"total_iterations\" : 5 ,\n        \"completed_iterations\" : 5 ,\n        \"total_queries\" : 1000 ,\n        \"concurrency\" : 5 ,\n        \"multiplier\" : 100 ,\n        \"avg_warmup_time\" : 43 ,\n        \"statistics\" : {\n          \"min\" : 1 ,\n          \"max\" : 10 ,\n          \"mean\" : 4.19 ,\n          \"qps\" : 238.663 ,\n          \"std_dev\" : 1.938 ,\n          \"millis_per_hit\" : 1.064 ,\n          \"percentile_10\" : 2 ,\n          \"percentile_25\" : 3 ,\n          \"percentile_50\" : 4 ,\n          \"percentile_75\" : 5 ,\n          \"percentile_90\" : 7 ,\n          \"percentile_99\" : 10\n        }\n      }\n    }\n  }\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"status\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"competitors\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"my_competitor\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"summary\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"nodes\" : {\n                  \"type\" : \"array\" ,\n                  \"required\" : false ,\n                  \"items\" : [\n                    {\n                      \"type\" : \"string\"\n                    }\n                  ]\n                } ,\n                \"total_iterations\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"completed_iterations\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"total_queries\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"concurrency\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"multiplier\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"avg_warmup_time\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"statistics\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"min\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"max\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"mean\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"qps\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"std_dev\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"millis_per_hit\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"percentile_10\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"percentile_25\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"percentile_50\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"percentile_75\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"percentile_90\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"percentile_99\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json",
                            "schema": "benchSample",
                            "example": "{\n  \"name\" : \"my_benchmark\" ,\n  \"competitors\" : [\n    {\n      \"name\" : \"my_competitor\" ,\n      \"requests\" : [\n        {\n          \"query\" : {\n            \"match\" : {\n              \"_all\" : \"a*\"\n            }\n          }\n        }\n      ]\n    }\n  ]\n}",
                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"competitors\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"requests\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"object\" ,\n                  \"properties\" : {\n                    \"query\" : {\n                      \"type\" : \"object\" ,\n                      \"required\" : false ,\n                      \"properties\" : {\n                        \"match\" : {\n                          \"type\" : \"object\" ,\n                          \"required\" : false ,\n                          \"properties\" : {\n                            \"_all\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              ]\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "queryParameters": {
                        "pretty": {
                            "name": "pretty",
                            "displayName": "pretty",
                            "type": "boolean",
                            "required": false,
                            "example": "true",
                            "repeat": false,
                            "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "format": {
                            "name": "format",
                            "displayName": "format",
                            "type": "string",
                            "required": false,
                            "example": "yaml",
                            "repeat": false,
                            "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "human": {
                            "name": "human",
                            "displayName": "human",
                            "type": "boolean",
                            "required": false,
                            "default": true,
                            "example": "false",
                            "repeat": false,
                            "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "flat_settings": {
                            "name": "flat_settings",
                            "displayName": "flat_settings",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "The benchmark API provides a standard mechanism for submitting queries and measuring their performance relative to one another.",
                    "method": "put",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                },
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "benchResponse",
                                    "example": "{\n  \"status\" : \"complete\" ,\n  \"competitors\" : {\n    \"my_competitor\" : {\n      \"summary\" : {\n        \"nodes\" : [\n          \"localhost\"\n        ] ,\n        \"total_iterations\" : 5 ,\n        \"completed_iterations\" : 5 ,\n        \"total_queries\" : 1000 ,\n        \"concurrency\" : 5 ,\n        \"multiplier\" : 100 ,\n        \"avg_warmup_time\" : 43 ,\n        \"statistics\" : {\n          \"min\" : 1 ,\n          \"max\" : 10 ,\n          \"mean\" : 4.19 ,\n          \"qps\" : 238.663 ,\n          \"std_dev\" : 1.938 ,\n          \"millis_per_hit\" : 1.064 ,\n          \"percentile_10\" : 2 ,\n          \"percentile_25\" : 3 ,\n          \"percentile_50\" : 4 ,\n          \"percentile_75\" : 5 ,\n          \"percentile_90\" : 7 ,\n          \"percentile_99\" : 10\n        }\n      }\n    }\n  }\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"status\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"competitors\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"my_competitor\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"summary\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"nodes\" : {\n                  \"type\" : \"array\" ,\n                  \"required\" : false ,\n                  \"items\" : [\n                    {\n                      \"type\" : \"string\"\n                    }\n                  ]\n                } ,\n                \"total_iterations\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"completed_iterations\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"total_queries\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"concurrency\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"multiplier\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"avg_warmup_time\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"statistics\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"min\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"max\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"mean\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"qps\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"std_dev\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"millis_per_hit\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"percentile_10\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"percentile_25\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"percentile_50\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"percentile_75\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"percentile_90\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    } ,\n                    \"percentile_99\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "queryParameters": {
                        "pretty": {
                            "name": "pretty",
                            "displayName": "pretty",
                            "type": "boolean",
                            "required": false,
                            "example": "true",
                            "repeat": false,
                            "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "format": {
                            "name": "format",
                            "displayName": "format",
                            "type": "string",
                            "required": false,
                            "example": "yaml",
                            "repeat": false,
                            "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "human": {
                            "name": "human",
                            "displayName": "human",
                            "type": "boolean",
                            "required": false,
                            "default": true,
                            "example": "false",
                            "repeat": false,
                            "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "flat_settings": {
                            "name": "flat_settings",
                            "displayName": "flat_settings",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "case": {
                            "name": "case",
                            "displayName": "case",
                            "type": "string",
                            "required": false,
                            "example": "camelCase",
                            "repeat": false,
                            "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "callback": {
                            "name": "callback",
                            "displayName": "callback",
                            "type": "string",
                            "required": false,
                            "example": "JSONP",
                            "repeat": false,
                            "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "View all active benchmarks.",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/abort/{benchName}",
                    "uriParameters": {
                        "benchName": {
                            "name": "benchName",
                            "displayName": "benchName",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "benchAbortResponse",
                                            "example": "{\n  \"aborted_benchmarks\" : [\n    {\n      \"node\" : \"localhost\" ,\n      \"benchmark_name\" : \"my_benchmark\" ,\n      \"aborted\" : true\n    }\n  ]\n}",
                                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"aborted_benchmarks\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"node\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"benchmark_name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"aborted\" : {\n              \"type\" : \"boolean\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "description": "Abort a benchmark.",
                            "method": "post",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/abort/{benchName}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "abort",
                        "{benchName}"
                    ]
                }
            ],
            "displayName": "/_bench",
            "description": "",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "_bench"
            ]
        },
        {
            "relativeUri": "/_suggest",
            "type": "base",
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "suggestResponse",
                                    "example": "{\n  \"suggest\" : {\n    \"my-title-suggestions-1\" : [\n      {\n        \"text\" : \"devloping\" ,\n        \"offset\" : 0 ,\n        \"length\" : 9 ,\n        \"options\" : [\n          {\n            \"text\" : \"developing\" ,\n            \"freq\" : 77 ,\n            \"score\" : 0.8888889\n          } , {\n            \"text\" : \"deloping\" ,\n            \"freq\" : 1 ,\n            \"score\" : 0.875\n          } , {\n            \"text\" : \"deploying\" ,\n            \"freq\" : 2 ,\n            \"score\" : 0.7777778\n          }\n        ]\n      } , {\n        \"text\" : \"distibutd\" ,\n        \"offset\" : 10 ,\n        \"length\" : 9 ,\n        \"options\" : [\n          {\n            \"text\" : \"distributed\" ,\n            \"freq\" : 217 ,\n            \"score\" : 0.7777778\n          } , {\n            \"text\" : \"disributed\" ,\n            \"freq\" : 1 ,\n            \"score\" : 0.7777778\n          } , {\n            \"text\" : \"distribute\" ,\n            \"freq\" : 1 ,\n            \"score\" : 0.7777778\n          }\n        ]\n      } , {\n        \"text\" : \"saerch\" ,\n        \"offset\" : 20 ,\n        \"length\" : 6 ,\n        \"options\" : [\n          {\n            \"text\" : \"search\" ,\n            \"freq\" : 1038 ,\n            \"score\" : 0.8333333\n          } , {\n            \"text\" : \"smerch\" ,\n            \"freq\" : 3 ,\n            \"score\" : 0.8333333\n          } , {\n            \"text\" : \"serch\" ,\n            \"freq\" : 2 ,\n            \"score\" : 0.8\n          }\n        ]\n      } , {\n        \"text\" : \"engies\" ,\n        \"offset\" : 27 ,\n        \"length\" : 6 ,\n        \"options\" : [\n          {\n            \"text\" : \"engines\" ,\n            \"freq\" : 568 ,\n            \"score\" : 0.8333333\n          } , {\n            \"text\" : \"engles\" ,\n            \"freq\" : 3 ,\n            \"score\" : 0.8333333\n          } , {\n            \"text\" : \"eggies\" ,\n            \"freq\" : 1 ,\n            \"score\" : 0.8333333\n          }\n        ]\n      }\n    ]\n  }\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"suggest\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"my-title-suggestions-1\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"text\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"offset\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"length\" : {\n                  \"type\" : \"number\" ,\n                  \"required\" : false\n                } ,\n                \"options\" : {\n                  \"type\" : \"array\" ,\n                  \"required\" : false ,\n                  \"items\" : [\n                    {\n                      \"type\" : \"object\" ,\n                      \"properties\" : {\n                        \"text\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"freq\" : {\n                          \"type\" : \"number\" ,\n                          \"required\" : false\n                        } ,\n                        \"score\" : {\n                          \"type\" : \"number\" ,\n                          \"required\" : false\n                        }\n                      }\n                    }\n                  ]\n                }\n              }\n            }\n          ]\n        }\n      }\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json",
                            "schema": "suggestExample",
                            "example": "{\n  \"my-suggestion\" : {\n    \"text\" : \"the amsterdma meetpu\" ,\n    \"term\" : {\n      \"field\" : \"body\"\n    }\n  }\n}",
                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"my-suggestion\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"text\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"term\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"field\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      }\n    }\n  }\n}"
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "queryParameters": {
                        "pretty": {
                            "name": "pretty",
                            "displayName": "pretty",
                            "type": "boolean",
                            "required": false,
                            "example": "true",
                            "repeat": false,
                            "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "format": {
                            "name": "format",
                            "displayName": "format",
                            "type": "string",
                            "required": false,
                            "example": "yaml",
                            "repeat": false,
                            "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "human": {
                            "name": "human",
                            "displayName": "human",
                            "type": "boolean",
                            "required": false,
                            "default": true,
                            "example": "false",
                            "repeat": false,
                            "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "flat_settings": {
                            "name": "flat_settings",
                            "displayName": "flat_settings",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "The suggest feature suggests similar looking terms based on a provided text by using a suggester. Parts of the suggest feature are still under development",
                    "method": "post",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/_suggest",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "_suggest"
            ]
        },
        {
            "relativeUri": "/_mpercolate",
            "type": "mpercolateType",
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            }
                        }
                    },
                    "body": {
                        "text/plain": {
                            "name": "text/plain",
                            "example": "{\\\"percolate\\\" : {\\\"index\\\" : twitter\\\", \\\"type\\\" : \\\"tweet\\\"}} \\n\r\n{\\\"doc\\\" : {\\\"message\\\" : \\\"some text\\\"}} \\n\r\n{\\\"count\\\" : {\\\"index\\\" : twitter\\\", \\\"type\\\" : \\\"tweet\\\"}} \\n\r\n{\\\"doc\\\" : {\\\"message\\\" : \\\"some other text\\\"}} \\n"
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "description": "The multi percolate api allows to bundle multiple percolate requests into a single request, similar to what the multi search api does to search requests. The request body format is line based. Each percolate request item takes two lines, the first line is the header and the second line is the body.\n\nThe header can contain any parameter that normally would be set via the request path or query string parameters. T here are several percolate actions, because there are multiple types of percolate requests.\n",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                },
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            }
                        }
                    },
                    "body": {
                        "text/plain": {
                            "name": "text/plain",
                            "example": "{\\\"percolate\\\" : {\\\"index\\\" : twitter\\\", \\\"type\\\" : \\\"tweet\\\"}} \\n\r\n{\\\"doc\\\" : {\\\"message\\\" : \\\"some text\\\"}} \\n\r\n{\\\"count\\\" : {\\\"index\\\" : twitter\\\", \\\"type\\\" : \\\"tweet\\\"}} \\n\r\n{\\\"doc\\\" : {\\\"message\\\" : \\\"some other text\\\"}} \\n"
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "description": "The multi percolate api allows to bundle multiple percolate requests into a single request, similar to what the multi search api does to search requests. The request body format is line based. Each percolate request item takes two lines, the first line is the header and the second line is the body.\n\nThe header can contain any parameter that normally would be set via the request path or query string parameters. T here are several percolate actions, because there are multiple types of percolate requests.\n",
                    "method": "post",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/_mpercolate",
            "description": "The multi percolate api allows to bundle multiple percolate requests into a single request, similar to what the multi search api does to search requests. The request body format is line based. Each percolate request item takes two lines, the first line is the header and the second line is the body.\n\nThe header can contain any parameter that normally would be set via the request path or query string parameters. T here are several percolate actions, because there are multiple types of percolate requests.\n",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "_mpercolate"
            ]
        },
        {
            "relativeUri": "/_search",
            "type": "searchType",
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "searchResp",
                                    "example": "{\n  \"_shards\" : {\n    \"total\" : 5 ,\n    \"successful\" : 5 ,\n    \"failed\" : 0\n  } ,\n  \"hits\" : {\n    \"total\" : 1 ,\n    \"hits\" : [\n      {\n        \"_index\" : \"twitter\" ,\n        \"_type\" : \"tweet\" ,\n        \"_id\" : \"1\" ,\n        \"_source\" : {\n          \"user\" : \"kimchy\" ,\n          \"postDate\" : \"2009-11-15T14:12:12\" ,\n          \"message\" : \"trying out Elasticsearch\"\n        }\n      }\n    ]\n  }\n}",
                                    "schemaContent": "searchResp"
                                }
                            }
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json",
                            "schema": "countReq",
                            "example": "{\n  \"query\" : {\n    \"term\" : {\n      \"user\" : \"kimchy\"\n    }\n  }\n}",
                            "schemaContent": "countReq"
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "queryParameters": {
                        "q": {
                            "name": "q",
                            "displayName": "q",
                            "type": "string",
                            "required": false,
                            "example": "user:kimchy",
                            "repeat": false,
                            "description": "The query string (maps to the query_string query, see Query String Query for more details).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "df": {
                            "name": "df",
                            "displayName": "df",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "The default field to use when no field prefix is defined within the query.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "analyzer": {
                            "name": "analyzer",
                            "displayName": "analyzer",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "The analyzer name to be used when analyzing the query string.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "default_operator": {
                            "name": "default_operator",
                            "displayName": "default_operator",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "The default operator to be used, can be AND or OR. Defaults to OR.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "explain": {
                            "name": "explain",
                            "displayName": "explain",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "For each hit, contain an explanation of how scoring of the hits was computed.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "fields": {
                            "name": "fields",
                            "displayName": "fields",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "The selective stored fields of the document to return for each hit, comma delimited. Not specifying any value will cause no fields to return.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "sort": {
                            "name": "sort",
                            "displayName": "sort",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Sorting to perform. Can either be in the form of fieldName, or fieldName:asc/fieldName:desc. The fieldName can either be an actual field within the document, or the special _score name to indicate sorting based on scores. There can be several sort parameters (order is important).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "track_scores": {
                            "name": "track_scores",
                            "displayName": "track_scores",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "When sorting, set to true in order to still track scores and return them as part of each hit.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "timeout": {
                            "name": "timeout",
                            "displayName": "timeout",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "A search timeout, bounding the search request to be executed within the specified time value and bail with the hits accumulated up to that point when expired. Defaults to no timeout.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "from": {
                            "name": "from",
                            "displayName": "from",
                            "type": "string",
                            "required": false,
                            "default": 0,
                            "repeat": false,
                            "description": "The starting from index of the hits to return. Defaults to 0.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "size": {
                            "name": "size",
                            "displayName": "size",
                            "type": "string",
                            "required": false,
                            "default": 10,
                            "repeat": false,
                            "description": "The number of hits to return. Defaults to 10.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "search_type": {
                            "name": "search_type",
                            "displayName": "search_type",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "The type of the search operation to perform. Can be dfs_query_then_fetch, dfs_query_and_fetch, query_then_fetch, query_and_fetch, count, scan. Defaults to query_then_fetch. See Search Type for more details on the different types of search that can be performed.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "lowercase_expanded_terms": {
                            "name": "lowercase_expanded_terms",
                            "displayName": "lowercase_expanded_terms",
                            "type": "boolean",
                            "required": false,
                            "default": true,
                            "repeat": false,
                            "description": "Should terms be automatically lowercased or not. Defaults to true.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "analyze_wildcard": {
                            "name": "analyze_wildcard",
                            "displayName": "analyze_wildcard",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "description": "Should wildcard and prefix queries be analyzed or not. Defaults to false.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "pretty": {
                            "name": "pretty",
                            "displayName": "pretty",
                            "type": "boolean",
                            "required": false,
                            "example": "true",
                            "repeat": false,
                            "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "format": {
                            "name": "format",
                            "displayName": "format",
                            "type": "string",
                            "required": false,
                            "example": "yaml",
                            "repeat": false,
                            "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "human": {
                            "name": "human",
                            "displayName": "human",
                            "type": "boolean",
                            "required": false,
                            "default": true,
                            "example": "false",
                            "repeat": false,
                            "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "flat_settings": {
                            "name": "flat_settings",
                            "displayName": "flat_settings",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "case": {
                            "name": "case",
                            "displayName": "case",
                            "type": "string",
                            "required": false,
                            "example": "camelCase",
                            "repeat": false,
                            "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "callback": {
                            "name": "callback",
                            "displayName": "callback",
                            "type": "string",
                            "required": false,
                            "example": "JSONP",
                            "repeat": false,
                            "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/template",
                    "type": "searchType",
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json",
                                            "schema": "searchResp",
                                            "example": "{\n  \"_shards\" : {\n    \"total\" : 5 ,\n    \"successful\" : 5 ,\n    \"failed\" : 0\n  } ,\n  \"hits\" : {\n    \"total\" : 1 ,\n    \"hits\" : [\n      {\n        \"_index\" : \"twitter\" ,\n        \"_type\" : \"tweet\" ,\n        \"_id\" : \"1\" ,\n        \"_source\" : {\n          \"user\" : \"kimchy\" ,\n          \"postDate\" : \"2009-11-15T14:12:12\" ,\n          \"message\" : \"trying out Elasticsearch\"\n        }\n      }\n    ]\n  }\n}",
                                            "schemaContent": "searchResp"
                                        }
                                    }
                                }
                            },
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "searchTemplate",
                                    "example": "{\n  \"template\" : {\n    \"query\" : {\n      \"match\" : {\n        \"title\" : \"{{query_string}}\"\n      }\n    }\n  } ,\n  \"params\" : {\n    \"query_string\" : \"search for these words\"\n  }\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"template\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"query\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"match\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"title\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        }\n      }\n    } ,\n    \"params\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"query_string\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "q": {
                                    "name": "q",
                                    "displayName": "q",
                                    "type": "string",
                                    "required": false,
                                    "example": "user:kimchy",
                                    "repeat": false,
                                    "description": "The query string (maps to the query_string query, see Query String Query for more details).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "df": {
                                    "name": "df",
                                    "displayName": "df",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The default field to use when no field prefix is defined within the query.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "analyzer": {
                                    "name": "analyzer",
                                    "displayName": "analyzer",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The analyzer name to be used when analyzing the query string.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "default_operator": {
                                    "name": "default_operator",
                                    "displayName": "default_operator",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The default operator to be used, can be AND or OR. Defaults to OR.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "explain": {
                                    "name": "explain",
                                    "displayName": "explain",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "For each hit, contain an explanation of how scoring of the hits was computed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "fields": {
                                    "name": "fields",
                                    "displayName": "fields",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The selective stored fields of the document to return for each hit, comma delimited. Not specifying any value will cause no fields to return.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "sort": {
                                    "name": "sort",
                                    "displayName": "sort",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Sorting to perform. Can either be in the form of fieldName, or fieldName:asc/fieldName:desc. The fieldName can either be an actual field within the document, or the special _score name to indicate sorting based on scores. There can be several sort parameters (order is important).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "track_scores": {
                                    "name": "track_scores",
                                    "displayName": "track_scores",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "When sorting, set to true in order to still track scores and return them as part of each hit.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "timeout": {
                                    "name": "timeout",
                                    "displayName": "timeout",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "A search timeout, bounding the search request to be executed within the specified time value and bail with the hits accumulated up to that point when expired. Defaults to no timeout.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "from": {
                                    "name": "from",
                                    "displayName": "from",
                                    "type": "string",
                                    "required": false,
                                    "default": 0,
                                    "repeat": false,
                                    "description": "The starting from index of the hits to return. Defaults to 0.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "size": {
                                    "name": "size",
                                    "displayName": "size",
                                    "type": "string",
                                    "required": false,
                                    "default": 10,
                                    "repeat": false,
                                    "description": "The number of hits to return. Defaults to 10.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "search_type": {
                                    "name": "search_type",
                                    "displayName": "search_type",
                                    "type": "string",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The type of the search operation to perform. Can be dfs_query_then_fetch, dfs_query_and_fetch, query_then_fetch, query_and_fetch, count, scan. Defaults to query_then_fetch. See Search Type for more details on the different types of search that can be performed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "lowercase_expanded_terms": {
                                    "name": "lowercase_expanded_terms",
                                    "displayName": "lowercase_expanded_terms",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "repeat": false,
                                    "description": "Should terms be automatically lowercased or not. Defaults to true.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "analyze_wildcard": {
                                    "name": "analyze_wildcard",
                                    "displayName": "analyze_wildcard",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "Should wildcard and prefix queries be analyzed or not. Defaults to false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "case": {
                                    "name": "case",
                                    "displayName": "case",
                                    "type": "string",
                                    "required": false,
                                    "example": "camelCase",
                                    "repeat": false,
                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "callback": {
                                    "name": "callback",
                                    "displayName": "callback",
                                    "type": "string",
                                    "required": false,
                                    "example": "JSONP",
                                    "repeat": false,
                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "The /_search/template endpoint allows to use the mustache language to pre render search \nrequests, before they are executed and fill existing templates with template parameters.\n",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/template",
                    "description": "",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "template"
                    ]
                }
            ],
            "displayName": "/_search",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "_search"
            ]
        },
        {
            "relativeUri": "/_mapping",
            "type": "mappingType",
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "queryParameters": {
                        "include_defaults": {
                            "name": "include_defaults",
                            "displayName": "include_defaults",
                            "type": "boolean",
                            "required": false,
                            "example": "true",
                            "repeat": false,
                            "description": "adding include_defaults=true to the query string will cause the response to include default values, which are normally suppressed.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "pretty": {
                            "name": "pretty",
                            "displayName": "pretty",
                            "type": "boolean",
                            "required": false,
                            "example": "true",
                            "repeat": false,
                            "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "format": {
                            "name": "format",
                            "displayName": "format",
                            "type": "string",
                            "required": false,
                            "example": "yaml",
                            "repeat": false,
                            "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "human": {
                            "name": "human",
                            "displayName": "human",
                            "type": "boolean",
                            "required": false,
                            "default": true,
                            "example": "false",
                            "repeat": false,
                            "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "flat_settings": {
                            "name": "flat_settings",
                            "displayName": "flat_settings",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "case": {
                            "name": "case",
                            "displayName": "case",
                            "type": "string",
                            "required": false,
                            "example": "camelCase",
                            "repeat": false,
                            "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "callback": {
                            "name": "callback",
                            "displayName": "callback",
                            "type": "string",
                            "required": false,
                            "example": "JSONP",
                            "repeat": false,
                            "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "The get mapping API allows to retrieve mapping definitions for an index or index/type.",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/{_index}",
                    "type": "mappingType",
                    "uriParameters": {
                        "_index": {
                            "name": "_index",
                            "displayName": "_index",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "include_defaults": {
                                    "name": "include_defaults",
                                    "displayName": "include_defaults",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "adding include_defaults=true to the query string will cause the response to include default values, which are normally suppressed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "case": {
                                    "name": "case",
                                    "displayName": "case",
                                    "type": "string",
                                    "required": false,
                                    "example": "camelCase",
                                    "repeat": false,
                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "callback": {
                                    "name": "callback",
                                    "displayName": "callback",
                                    "type": "string",
                                    "required": false,
                                    "example": "JSONP",
                                    "repeat": false,
                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "The get mapping API allows to retrieve mapping definitions for an index or index/type.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/{_index}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{_index}"
                    ]
                }
            ],
            "displayName": "/_mapping",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "_mapping"
            ]
        },
        {
            "relativeUri": "/_aliases",
            "type": "base",
            "methods": [
                {
                    "responses": {
                        "201": {
                            "code": "201"
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json",
                            "schema": "aliasOps",
                            "example": "{\n  \"actions\" : [\n    {\n      \"remove\" : {\n        \"index\" : \"test1\" ,\n        \"alias\" : \"alias1\"\n      }\n    } , {\n      \"add\" : {\n        \"index\" : \"test1\" ,\n        \"alias\" : \"alias2\"\n      }\n    }\n  ]\n}",
                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"actions\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"remove\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"index\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"alias\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        } , {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"add\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"index\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"alias\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "queryParameters": {
                        "pretty": {
                            "name": "pretty",
                            "displayName": "pretty",
                            "type": "boolean",
                            "required": false,
                            "example": "true",
                            "repeat": false,
                            "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "format": {
                            "name": "format",
                            "displayName": "format",
                            "type": "string",
                            "required": false,
                            "example": "yaml",
                            "repeat": false,
                            "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "human": {
                            "name": "human",
                            "displayName": "human",
                            "type": "boolean",
                            "required": false,
                            "default": true,
                            "example": "false",
                            "repeat": false,
                            "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "flat_settings": {
                            "name": "flat_settings",
                            "displayName": "flat_settings",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "APIs in elasticsearch accept an index name when working against a specific index, and several indices when applicable. The index aliases API allow to alias an index with a name, with all APIs automatically converting the alias name to the actual index name. An alias can also be mapped to more than one index, and when specifying it, the alias will automatically expand to the aliases indices. An alias can also be associated with a filter that will automatically be applied when searching, and routing values.",
                    "method": "post",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/_aliases",
            "description": "",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "_aliases"
            ]
        },
        {
            "relativeUri": "/_settings",
            "type": "indexSettingsType",
            "methods": [
                {
                    "body": {
                        "application/json": {
                            "name": "application/json",
                            "schema": "settingsPut",
                            "example": "{\n  \"index.routing.allocation.include.tag\" : \"value1,value2\"\n}",
                            "schemaContent": "settingsPut"
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "queryParameters": {
                        "pretty": {
                            "name": "pretty",
                            "displayName": "pretty",
                            "type": "boolean",
                            "required": false,
                            "example": "true",
                            "repeat": false,
                            "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "format": {
                            "name": "format",
                            "displayName": "format",
                            "type": "string",
                            "required": false,
                            "example": "yaml",
                            "repeat": false,
                            "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "human": {
                            "name": "human",
                            "displayName": "human",
                            "type": "boolean",
                            "required": false,
                            "default": true,
                            "example": "false",
                            "repeat": false,
                            "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "flat_settings": {
                            "name": "flat_settings",
                            "displayName": "flat_settings",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Allows to control the allocation of indices on nodes based on include/exclude filters. The filters can be set both on the index level and on the cluster level. Lets start with an example of setting it on the cluster level\nWe can create an index that will only deploy on nodes that have tag set to value1 and value2 by setting index.routing.allocation.include.tag to value1,value2.\n",
                    "method": "put",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                },
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "queryParameters": {
                        "pretty": {
                            "name": "pretty",
                            "displayName": "pretty",
                            "type": "boolean",
                            "required": false,
                            "example": "true",
                            "repeat": false,
                            "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "format": {
                            "name": "format",
                            "displayName": "format",
                            "type": "string",
                            "required": false,
                            "example": "yaml",
                            "repeat": false,
                            "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "human": {
                            "name": "human",
                            "displayName": "human",
                            "type": "boolean",
                            "required": false,
                            "default": true,
                            "example": "false",
                            "repeat": false,
                            "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "flat_settings": {
                            "name": "flat_settings",
                            "displayName": "flat_settings",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "case": {
                            "name": "case",
                            "displayName": "case",
                            "type": "string",
                            "required": false,
                            "example": "camelCase",
                            "repeat": false,
                            "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "callback": {
                            "name": "callback",
                            "displayName": "callback",
                            "type": "string",
                            "required": false,
                            "example": "JSONP",
                            "repeat": false,
                            "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Retrieve settings of index/indices.",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/_settings",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "_settings"
            ]
        },
        {
            "relativeUri": "/_analyze",
            "type": "analizerType",
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "queryParameters": {
                        "analyzer": {
                            "name": "analyzer",
                            "displayName": "analyzer",
                            "type": "string",
                            "required": false,
                            "example": "standard",
                            "repeat": false,
                            "description": "Can be used without specifying an index against one of the many built in analyzers",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "tokenizer": {
                            "name": "tokenizer",
                            "displayName": "tokenizer",
                            "type": "string",
                            "required": false,
                            "example": "keyword",
                            "repeat": false,
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "filters": {
                            "name": "filters",
                            "displayName": "filters",
                            "type": "string",
                            "required": false,
                            "example": "lowercase",
                            "repeat": false,
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "text": {
                            "name": "text",
                            "displayName": "text",
                            "type": "string",
                            "required": false,
                            "example": "this+is+a+test",
                            "repeat": false,
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "pretty": {
                            "name": "pretty",
                            "displayName": "pretty",
                            "type": "boolean",
                            "required": false,
                            "example": "true",
                            "repeat": false,
                            "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "format": {
                            "name": "format",
                            "displayName": "format",
                            "type": "string",
                            "required": false,
                            "example": "yaml",
                            "repeat": false,
                            "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "human": {
                            "name": "human",
                            "displayName": "human",
                            "type": "boolean",
                            "required": false,
                            "default": true,
                            "example": "false",
                            "repeat": false,
                            "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "flat_settings": {
                            "name": "flat_settings",
                            "displayName": "flat_settings",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "case": {
                            "name": "case",
                            "displayName": "case",
                            "type": "string",
                            "required": false,
                            "example": "camelCase",
                            "repeat": false,
                            "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "callback": {
                            "name": "callback",
                            "displayName": "callback",
                            "type": "string",
                            "required": false,
                            "example": "JSONP",
                            "repeat": false,
                            "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Performs the analysis process on a text and return the tokens breakdown of the text.\n",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/_analyze",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "_analyze"
            ]
        },
        {
            "relativeUri": "/_template/{templateId}",
            "type": "base",
            "uriParameters": {
                "templateId": {
                    "name": "templateId",
                    "displayName": "templateId",
                    "type": "string",
                    "required": true,
                    "repeat": false,
                    "__METADATA__": {
                        "calculated": true,
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            },
                            "type": {
                                "insertedAsDefault": true
                            },
                            "required": {
                                "insertedAsDefault": true
                            },
                            "repeat": {
                                "insertedAsDefault": true
                            }
                        }
                    }
                }
            },
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200"
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json",
                            "schema": "indexTemplate",
                            "example": "{\n  \"template\" : \"te*\" ,\n  \"settings\" : {\n    \"number_of_shards\" : 1\n  } ,\n  \"aliases\" : {\n    \"alias1\" : {\n    } ,\n    \"alias2\" : {\n      \"filter\" : {\n        \"term\" : {\n          \"user\" : \"kimchy\"\n        }\n      } ,\n      \"routing\" : \"kimchy\"\n    } ,\n    \"{index}-alias\" : {\n    }\n  }\n}",
                            "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"template\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"settings\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"number_of_shards\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"aliases\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"alias1\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false\n        } ,\n        \"alias2\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"filter\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"term\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"user\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                }\n              }\n            } ,\n            \"routing\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"{index}-alias\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "queryParameters": {
                        "pretty": {
                            "name": "pretty",
                            "displayName": "pretty",
                            "type": "boolean",
                            "required": false,
                            "example": "true",
                            "repeat": false,
                            "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "format": {
                            "name": "format",
                            "displayName": "format",
                            "type": "string",
                            "required": false,
                            "example": "yaml",
                            "repeat": false,
                            "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "human": {
                            "name": "human",
                            "displayName": "human",
                            "type": "boolean",
                            "required": false,
                            "default": true,
                            "example": "false",
                            "repeat": false,
                            "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "flat_settings": {
                            "name": "flat_settings",
                            "displayName": "flat_settings",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Create index template",
                    "method": "put",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                },
                {
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "description": "Index templates are identified by a name (in the above case template_1) and can be deleted as \nwell\n",
                    "method": "delete",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                },
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "indexTemplate",
                                    "example": "{\n  \"template\" : \"te*\" ,\n  \"settings\" : {\n    \"number_of_shards\" : 1\n  } ,\n  \"aliases\" : {\n    \"alias1\" : {\n    } ,\n    \"alias2\" : {\n      \"filter\" : {\n        \"term\" : {\n          \"user\" : \"kimchy\"\n        }\n      } ,\n      \"routing\" : \"kimchy\"\n    } ,\n    \"{index}-alias\" : {\n    }\n  }\n}",
                                    "schemaContent": "{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"template\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"settings\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"number_of_shards\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"aliases\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"alias1\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false\n        } ,\n        \"alias2\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"filter\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"term\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"user\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                }\n              }\n            } ,\n            \"routing\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        } ,\n        \"{index}-alias\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "queryParameters": {
                        "pretty": {
                            "name": "pretty",
                            "displayName": "pretty",
                            "type": "boolean",
                            "required": false,
                            "example": "true",
                            "repeat": false,
                            "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "format": {
                            "name": "format",
                            "displayName": "format",
                            "type": "string",
                            "required": false,
                            "example": "yaml",
                            "repeat": false,
                            "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "human": {
                            "name": "human",
                            "displayName": "human",
                            "type": "boolean",
                            "required": false,
                            "default": true,
                            "example": "false",
                            "repeat": false,
                            "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "flat_settings": {
                            "name": "flat_settings",
                            "displayName": "flat_settings",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "case": {
                            "name": "case",
                            "displayName": "case",
                            "type": "string",
                            "required": false,
                            "example": "camelCase",
                            "repeat": false,
                            "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "callback": {
                            "name": "callback",
                            "displayName": "callback",
                            "type": "string",
                            "required": false,
                            "example": "JSONP",
                            "repeat": false,
                            "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Return index template",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/_template/{templateId}",
            "description": "Index templates allow to define templates that will automatically be applied to new indices created. The templates include both settings and mappings, and a simple pattern template that controls if the template will be applied to the index created",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "_template",
                "{templateId}"
            ]
        },
        {
            "relativeUri": "/_warmer/{warmer_name}",
            "type": "warmerType",
            "uriParameters": {
                "warmer_name": {
                    "name": "warmer_name",
                    "displayName": "warmer_name",
                    "type": "string",
                    "required": true,
                    "repeat": false,
                    "__METADATA__": {
                        "calculated": true,
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            },
                            "type": {
                                "insertedAsDefault": true
                            },
                            "required": {
                                "insertedAsDefault": true
                            },
                            "repeat": {
                                "insertedAsDefault": true
                            }
                        }
                    }
                }
            },
            "methods": [
                {
                    "body": {
                        "application/json": {
                            "name": "application/json",
                            "schema": "warmerPutReq",
                            "example": "{\n  \"query\" : {\n    \"match_all\" : {\n    }\n  } ,\n  \"aggs\" : {\n    \"aggs_1\" : {\n      \"terms\" : {\n        \"field\" : \"field\"\n      }\n    }\n  }\n}",
                            "schemaContent": "warmerPutReq"
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "queryParameters": {
                        "pretty": {
                            "name": "pretty",
                            "displayName": "pretty",
                            "type": "boolean",
                            "required": false,
                            "example": "true",
                            "repeat": false,
                            "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "format": {
                            "name": "format",
                            "displayName": "format",
                            "type": "string",
                            "required": false,
                            "example": "yaml",
                            "repeat": false,
                            "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "human": {
                            "name": "human",
                            "displayName": "human",
                            "type": "boolean",
                            "required": false,
                            "default": true,
                            "example": "false",
                            "repeat": false,
                            "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "flat_settings": {
                            "name": "flat_settings",
                            "displayName": "flat_settings",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Allows to put a warmup search request on a specific index (or indices), with the body composing of a regular search request. Types can be provided as part of the URI if the search request is designed to be run only against the specific types.\n",
                    "method": "put",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/_warmer/{warmer_name}",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "_warmer",
                "{warmer_name}"
            ]
        },
        {
            "relativeUri": "/_warmers/{warmer_name}",
            "type": "warmerType",
            "uriParameters": {
                "warmer_name": {
                    "name": "warmer_name",
                    "displayName": "warmer_name",
                    "type": "string",
                    "required": true,
                    "repeat": false,
                    "__METADATA__": {
                        "calculated": true,
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            },
                            "type": {
                                "insertedAsDefault": true
                            },
                            "required": {
                                "insertedAsDefault": true
                            },
                            "repeat": {
                                "insertedAsDefault": true
                            }
                        }
                    }
                }
            },
            "methods": [
                {
                    "body": {
                        "application/json": {
                            "name": "application/json",
                            "schema": "warmerPutReq",
                            "example": "{\n  \"query\" : {\n    \"match_all\" : {\n    }\n  } ,\n  \"aggs\" : {\n    \"aggs_1\" : {\n      \"terms\" : {\n        \"field\" : \"field\"\n      }\n    }\n  }\n}",
                            "schemaContent": "warmerPutReq"
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "queryParameters": {
                        "pretty": {
                            "name": "pretty",
                            "displayName": "pretty",
                            "type": "boolean",
                            "required": false,
                            "example": "true",
                            "repeat": false,
                            "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "format": {
                            "name": "format",
                            "displayName": "format",
                            "type": "string",
                            "required": false,
                            "example": "yaml",
                            "repeat": false,
                            "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "human": {
                            "name": "human",
                            "displayName": "human",
                            "type": "boolean",
                            "required": false,
                            "default": true,
                            "example": "false",
                            "repeat": false,
                            "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "flat_settings": {
                            "name": "flat_settings",
                            "displayName": "flat_settings",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Allows to put a warmup search request on a specific index (or indices), with the body composing of a regular search request. Types can be provided as part of the URI if the search request is designed to be run only against the specific types.\n",
                    "method": "put",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/_warmers/{warmer_name}",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "_warmers",
                "{warmer_name}"
            ]
        },
        {
            "relativeUri": "/_status",
            "type": "base",
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "queryParameters": {
                        "pretty": {
                            "name": "pretty",
                            "displayName": "pretty",
                            "type": "boolean",
                            "required": false,
                            "example": "true",
                            "repeat": false,
                            "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "format": {
                            "name": "format",
                            "displayName": "format",
                            "type": "string",
                            "required": false,
                            "example": "yaml",
                            "repeat": false,
                            "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "human": {
                            "name": "human",
                            "displayName": "human",
                            "type": "boolean",
                            "required": false,
                            "default": true,
                            "example": "false",
                            "repeat": false,
                            "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "flat_settings": {
                            "name": "flat_settings",
                            "displayName": "flat_settings",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "case": {
                            "name": "case",
                            "displayName": "case",
                            "type": "string",
                            "required": false,
                            "example": "camelCase",
                            "repeat": false,
                            "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "callback": {
                            "name": "callback",
                            "displayName": "callback",
                            "type": "string",
                            "required": false,
                            "example": "JSONP",
                            "repeat": false,
                            "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "The indices status API allows to get a comprehensive status information of one or more indices.",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/_status",
            "description": "",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "_status"
            ]
        },
        {
            "relativeUri": "/_stats",
            "type": "base",
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "queryParameters": {
                        "pretty": {
                            "name": "pretty",
                            "displayName": "pretty",
                            "type": "boolean",
                            "required": false,
                            "example": "true",
                            "repeat": false,
                            "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "format": {
                            "name": "format",
                            "displayName": "format",
                            "type": "string",
                            "required": false,
                            "example": "yaml",
                            "repeat": false,
                            "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "human": {
                            "name": "human",
                            "displayName": "human",
                            "type": "boolean",
                            "required": false,
                            "default": true,
                            "example": "false",
                            "repeat": false,
                            "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "flat_settings": {
                            "name": "flat_settings",
                            "displayName": "flat_settings",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "case": {
                            "name": "case",
                            "displayName": "case",
                            "type": "string",
                            "required": false,
                            "example": "camelCase",
                            "repeat": false,
                            "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "callback": {
                            "name": "callback",
                            "displayName": "callback",
                            "type": "string",
                            "required": false,
                            "example": "JSONP",
                            "repeat": false,
                            "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Indices level stats provide statistics on different operations happening on an index. The API provides statistics on the index level scope (though most stats can also be retrieved using node level scope).\n\nThe following returns high level aggregation and index level stats for all indices\n",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "resources": [
                {
                    "relativeUri": "/{statSpec}",
                    "type": "base",
                    "uriParameters": {
                        "statSpec": {
                            "name": "statSpec",
                            "displayName": "statSpec",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {
                                "calculated": true,
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "methods": [
                        {
                            "responses": {
                                "200": {
                                    "code": "200",
                                    "body": {
                                        "application/json": {
                                            "name": "application/json"
                                        }
                                    }
                                }
                            },
                            "protocols": [
                                "{PROTOCOL}"
                            ],
                            "queryParameters": {
                                "pretty": {
                                    "name": "pretty",
                                    "displayName": "pretty",
                                    "type": "boolean",
                                    "required": false,
                                    "example": "true",
                                    "repeat": false,
                                    "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "format": {
                                    "name": "format",
                                    "displayName": "format",
                                    "type": "string",
                                    "required": false,
                                    "example": "yaml",
                                    "repeat": false,
                                    "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "human": {
                                    "name": "human",
                                    "displayName": "human",
                                    "type": "boolean",
                                    "required": false,
                                    "default": true,
                                    "example": "false",
                                    "repeat": false,
                                    "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "flat_settings": {
                                    "name": "flat_settings",
                                    "displayName": "flat_settings",
                                    "type": "boolean",
                                    "required": false,
                                    "repeat": false,
                                    "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "case": {
                                    "name": "case",
                                    "displayName": "case",
                                    "type": "string",
                                    "required": false,
                                    "example": "camelCase",
                                    "repeat": false,
                                    "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                },
                                "callback": {
                                    "name": "callback",
                                    "displayName": "callback",
                                    "type": "string",
                                    "required": false,
                                    "example": "JSONP",
                                    "repeat": false,
                                    "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                                    "__METADATA__": {
                                        "primitiveValuesMeta": {
                                            "displayName": {
                                                "calculated": true
                                            },
                                            "type": {
                                                "insertedAsDefault": true
                                            },
                                            "required": {
                                                "insertedAsDefault": true
                                            },
                                            "repeat": {
                                                "insertedAsDefault": true
                                            }
                                        }
                                    }
                                }
                            },
                            "description": "Indices level stats provide statistics on different operations happening on an index.",
                            "method": "get",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "protocols": {
                                        "calculated": true
                                    }
                                }
                            }
                        }
                    ],
                    "displayName": "/{statSpec}",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "displayName": {
                                "calculated": true
                            }
                        }
                    },
                    "relativeUriPathSegments": [
                        "{statSpec}"
                    ]
                }
            ],
            "displayName": "/_stats",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "_stats"
            ]
        },
        {
            "relativeUri": "/_segments",
            "type": "segmentsType",
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "segments",
                                    "example": "{\n  \"_3\" : {\n    \"generation\" : 3 ,\n    \"num_docs\" : 1121 ,\n    \"deleted_docs\" : 53 ,\n    \"size_in_bytes\" : 228288 ,\n    \"memory_in_bytes\" : 3211 ,\n    \"committed\" : true ,\n    \"search\" : true ,\n    \"version\" : \"4.6\" ,\n    \"compound\" : true\n  }\n}",
                                    "schemaContent": "segments"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "queryParameters": {
                        "pretty": {
                            "name": "pretty",
                            "displayName": "pretty",
                            "type": "boolean",
                            "required": false,
                            "example": "true",
                            "repeat": false,
                            "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "format": {
                            "name": "format",
                            "displayName": "format",
                            "type": "string",
                            "required": false,
                            "example": "yaml",
                            "repeat": false,
                            "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "human": {
                            "name": "human",
                            "displayName": "human",
                            "type": "boolean",
                            "required": false,
                            "default": true,
                            "example": "false",
                            "repeat": false,
                            "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "flat_settings": {
                            "name": "flat_settings",
                            "displayName": "flat_settings",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "case": {
                            "name": "case",
                            "displayName": "case",
                            "type": "string",
                            "required": false,
                            "example": "camelCase",
                            "repeat": false,
                            "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "callback": {
                            "name": "callback",
                            "displayName": "callback",
                            "type": "string",
                            "required": false,
                            "example": "JSONP",
                            "repeat": false,
                            "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Provide low level segments information that a Lucene index (shard level) is built with. Allows to be used to provide more information on the state of a shard and an index, possibly optimization information, data \"wasted\" on deletes, and so on.",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/_segments",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "_segments"
            ]
        },
        {
            "relativeUri": "/_recovery",
            "type": "recoveryType",
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json",
                                    "schema": "recovery",
                                    "example": "{\n  \"index1\" : {\n    \"shards\" : [\n      {\n        \"id\" : 0 ,\n        \"type\" : \"snapshot\" ,\n        \"stage\" : \"index\" ,\n        \"primary\" : true ,\n        \"start_time\" : \"2014-02-24T12:15:59.716\" ,\n        \"stop_time\" : 0 ,\n        \"total_time_in_millis\" : 175576 ,\n        \"source\" : {\n          \"repository\" : \"my_repository\" ,\n          \"snapshot\" : \"my_snapshot\" ,\n          \"index\" : \"index1\"\n        } ,\n        \"target\" : {\n          \"id\" : \"ryqJ5lO5S4-lSFbGntkEkg\" ,\n          \"hostname\" : \"my.fqdn\" ,\n          \"ip\" : \"10.0.1.7\" ,\n          \"name\" : \"my_es_node\"\n        } ,\n        \"index\" : {\n          \"files\" : {\n            \"total\" : 73 ,\n            \"reused\" : 0 ,\n            \"recovered\" : 69 ,\n            \"percent\" : \"94.5%\"\n          } ,\n          \"bytes\" : {\n            \"total\" : 79063092 ,\n            \"reused\" : 0 ,\n            \"recovered\" : 68891939 ,\n            \"percent\" : \"87.1%\"\n          } ,\n          \"total_time_in_millis\" : 0\n        } ,\n        \"translog\" : {\n          \"recovered\" : 0 ,\n          \"total_time_in_millis\" : 0\n        } ,\n        \"start\" : {\n          \"check_index_time\" : 0 ,\n          \"total_time_in_millis\" : 0\n        }\n      }\n    ]\n  }\n}",
                                    "schemaContent": "recovery"
                                }
                            }
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "queryParameters": {
                        "detailed": {
                            "name": "detailed",
                            "displayName": "detailed",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "description": "Display a detailed view. This is primarily useful for viewing the recovery of physical index files.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "active_only": {
                            "name": "active_only",
                            "displayName": "active_only",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "description": "Display only those recoveries that are currently on-going.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "pretty": {
                            "name": "pretty",
                            "displayName": "pretty",
                            "type": "boolean",
                            "required": false,
                            "example": "true",
                            "repeat": false,
                            "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "format": {
                            "name": "format",
                            "displayName": "format",
                            "type": "string",
                            "required": false,
                            "example": "yaml",
                            "repeat": false,
                            "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "human": {
                            "name": "human",
                            "displayName": "human",
                            "type": "boolean",
                            "required": false,
                            "default": true,
                            "example": "false",
                            "repeat": false,
                            "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "flat_settings": {
                            "name": "flat_settings",
                            "displayName": "flat_settings",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "case": {
                            "name": "case",
                            "displayName": "case",
                            "type": "string",
                            "required": false,
                            "example": "camelCase",
                            "repeat": false,
                            "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "callback": {
                            "name": "callback",
                            "displayName": "callback",
                            "type": "string",
                            "required": false,
                            "example": "JSONP",
                            "repeat": false,
                            "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "The indices recovery API provides insight into on-going index shard recoveries. Recovery status may be reported for specific indices, or cluster-wide.",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/_recovery",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "_recovery"
            ]
        },
        {
            "relativeUri": "/_cache/clear",
            "type": "cacheClearType",
            "methods": [
                {
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "queryParameters": {
                        "filter": {
                            "name": "filter",
                            "displayName": "filter",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "description": "The API, by default, will clear all caches. Specific caches can be cleaned explicitly by setting filter, field_data or id_cache to true.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "field_data": {
                            "name": "field_data",
                            "displayName": "field_data",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "description": "The API, by default, will clear all caches. Specific caches can be cleaned explicitly by setting filter, field_data or id_cache to true.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "id_cache": {
                            "name": "id_cache",
                            "displayName": "id_cache",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "description": "The API, by default, will clear all caches. Specific caches can be cleaned explicitly by setting filter, field_data or id_cache to true.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "pretty": {
                            "name": "pretty",
                            "displayName": "pretty",
                            "type": "boolean",
                            "required": false,
                            "example": "true",
                            "repeat": false,
                            "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "format": {
                            "name": "format",
                            "displayName": "format",
                            "type": "string",
                            "required": false,
                            "example": "yaml",
                            "repeat": false,
                            "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "human": {
                            "name": "human",
                            "displayName": "human",
                            "type": "boolean",
                            "required": false,
                            "default": true,
                            "example": "false",
                            "repeat": false,
                            "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "flat_settings": {
                            "name": "flat_settings",
                            "displayName": "flat_settings",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "The clear cache API allows to clear either all caches or specific cached associated with one ore more indices.",
                    "method": "post",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/_cache/clear",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "_cache",
                "clear"
            ]
        },
        {
            "relativeUri": "/_flush",
            "type": "flushType",
            "methods": [
                {
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "queryParameters": {
                        "pretty": {
                            "name": "pretty",
                            "displayName": "pretty",
                            "type": "boolean",
                            "required": false,
                            "example": "true",
                            "repeat": false,
                            "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "format": {
                            "name": "format",
                            "displayName": "format",
                            "type": "string",
                            "required": false,
                            "example": "yaml",
                            "repeat": false,
                            "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "human": {
                            "name": "human",
                            "displayName": "human",
                            "type": "boolean",
                            "required": false,
                            "default": true,
                            "example": "false",
                            "repeat": false,
                            "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "flat_settings": {
                            "name": "flat_settings",
                            "displayName": "flat_settings",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "The flush API allows to flush one or more indices through an API. The flush process of an index basically frees memory from the index by flushing data to the index storage and clearing the internal transaction log. By default, Elasticsearch uses memory heuristics in order to automatically trigger flush operations as required in order to clear memory.",
                    "method": "post",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/_flush",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "_flush"
            ]
        },
        {
            "relativeUri": "/_refresh",
            "type": "refreshType",
            "methods": [
                {
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "queryParameters": {
                        "pretty": {
                            "name": "pretty",
                            "displayName": "pretty",
                            "type": "boolean",
                            "required": false,
                            "example": "true",
                            "repeat": false,
                            "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "format": {
                            "name": "format",
                            "displayName": "format",
                            "type": "string",
                            "required": false,
                            "example": "yaml",
                            "repeat": false,
                            "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "human": {
                            "name": "human",
                            "displayName": "human",
                            "type": "boolean",
                            "required": false,
                            "default": true,
                            "example": "false",
                            "repeat": false,
                            "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "flat_settings": {
                            "name": "flat_settings",
                            "displayName": "flat_settings",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "The refresh API allows to explicitly refresh one or more index, making all operations performed since the last refresh available for search. The (near) real-time capabilities depend on the index engine used. For example, the internal one requires refresh to be called, but by default a refresh is scheduled periodically.",
                    "method": "post",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/_refresh",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "_refresh"
            ]
        },
        {
            "relativeUri": "/_optimize",
            "type": "optimizeType",
            "methods": [
                {
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "queryParameters": {
                        "max_num_segments": {
                            "name": "max_num_segments",
                            "displayName": "max_num_segments",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "The number of segments to optimize to. To fully optimize the index, set it to 1. Defaults to simply checking if a merge needs to execute, and if so, executes it.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "only_expunge_deletes": {
                            "name": "only_expunge_deletes",
                            "displayName": "only_expunge_deletes",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Should the optimize process only expunge segments with deletes in it. In Lucene, a document is not deleted from a segment, just marked as deleted. During a merge process of segments, a new segment is created that does not have those deletes. This flag allows to only merge segments that have deletes. Defaults to false. Note that this won't override the index.merge.policy.expunge_deletes_allowed threshold.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "flush": {
                            "name": "flush",
                            "displayName": "flush",
                            "type": "boolean",
                            "required": false,
                            "default": true,
                            "repeat": false,
                            "description": "Should a flush be performed after the optimize. Defaults to true.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "wait_for_merge": {
                            "name": "wait_for_merge",
                            "displayName": "wait_for_merge",
                            "type": "boolean",
                            "required": false,
                            "default": true,
                            "repeat": false,
                            "description": "Should the request wait for the merge to end. Defaults to true. Note, a merge can potentially be a very heavy operation, so it might make sense to run it set to false.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "force": {
                            "name": "force",
                            "displayName": "force",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Force a merge operation, even if there is a single segment in the shard with no deletions. [1.1.0]",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "pretty": {
                            "name": "pretty",
                            "displayName": "pretty",
                            "type": "boolean",
                            "required": false,
                            "example": "true",
                            "repeat": false,
                            "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "format": {
                            "name": "format",
                            "displayName": "format",
                            "type": "string",
                            "required": false,
                            "example": "yaml",
                            "repeat": false,
                            "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "human": {
                            "name": "human",
                            "displayName": "human",
                            "type": "boolean",
                            "required": false,
                            "default": true,
                            "example": "false",
                            "repeat": false,
                            "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "flat_settings": {
                            "name": "flat_settings",
                            "displayName": "flat_settings",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "The optimize API allows to optimize one or more indices through an API. The optimize process basically optimizes the index for faster search operations (and relates to the number of segments a Lucene index holds within each shard). The optimize operation allows to reduce the number of segments by merging them.",
                    "method": "post",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/_optimize",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "_optimize"
            ]
        },
        {
            "relativeUri": "/_mtermvectors",
            "type": "multiTermVectors",
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            }
                        }
                    },
                    "body": {
                        "application/json": {
                            "name": "application/json",
                            "schema": "multiTermVectorsRequest",
                            "example": "{\n  \"docs\" : [\n    {\n      \"_index\" : \"testidx\" ,\n      \"_type\" : \"test\" ,\n      \"_id\" : \"2\" ,\n      \"term_statistics\" : true\n    } , {\n      \"_index\" : \"testidx\" ,\n      \"_type\" : \"test\" ,\n      \"_id\" : \"1\" ,\n      \"fields\" : [\n        \"text\"\n      ]\n    }\n  ]\n}",
                            "schemaContent": "multiTermVectorsRequest"
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "queryParameters": {
                        "pretty": {
                            "name": "pretty",
                            "displayName": "pretty",
                            "type": "boolean",
                            "required": false,
                            "example": "true",
                            "repeat": false,
                            "description": "When appending ?pretty=true to any request made, the JSON returned will be pretty formatted (use it for debugging only!).",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "format": {
                            "name": "format",
                            "displayName": "format",
                            "type": "string",
                            "required": false,
                            "example": "yaml",
                            "repeat": false,
                            "description": "Another option is to set format=yaml which will cause the result to be returned in the (sometimes) more readable yaml format.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "human": {
                            "name": "human",
                            "displayName": "human",
                            "type": "boolean",
                            "required": false,
                            "default": true,
                            "example": "false",
                            "repeat": false,
                            "description": "Statistics are returned in a format suitable for humans (eg \"exists_time\": \"1h\" or \"size\": \"1kb\") and for computers (eg \"exists_time_in_millis\": 3600000` or \"size_in_bytes\": 1024). The human readable values can be turned off by adding ?human=false to the query string. This makes sense when the stats results are being consumed by a monitoring tool, rather than intended for human consumption. The default for the human flag is false.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "flat_settings": {
                            "name": "flat_settings",
                            "displayName": "flat_settings",
                            "type": "boolean",
                            "required": false,
                            "repeat": false,
                            "description": "The flat_settings flag affects rendering of the lists of settings. When flat_settings` flag is true settings are returned in a flat format",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "case": {
                            "name": "case",
                            "displayName": "case",
                            "type": "string",
                            "required": false,
                            "example": "camelCase",
                            "repeat": false,
                            "description": "All REST APIs accept the case parameter. When set to camelCase, all field names in the result will be returned in camel casing, otherwise, underscore casing will be used. Note, this does not apply to the source document indexed.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        },
                        "callback": {
                            "name": "callback",
                            "displayName": "callback",
                            "type": "string",
                            "required": false,
                            "example": "JSONP",
                            "repeat": false,
                            "description": "By default JSONP resposes are enabled. All REST APIs accept a callback parameter resulting in a JSONP result.",
                            "__METADATA__": {
                                "primitiveValuesMeta": {
                                    "displayName": {
                                        "calculated": true
                                    },
                                    "type": {
                                        "insertedAsDefault": true
                                    },
                                    "required": {
                                        "insertedAsDefault": true
                                    },
                                    "repeat": {
                                        "insertedAsDefault": true
                                    }
                                }
                            }
                        }
                    },
                    "description": "Multi termvectors API allows to get multiple termvectors based on an index, type and id. The response includes a docs array with all the fetched termvectors, each element having the structure provided by the termvectors API\n",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/_mtermvectors",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "_mtermvectors"
            ]
        },
        {
            "relativeUri": "/_msearch",
            "type": "msearchType",
            "methods": [
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            }
                        }
                    },
                    "body": {
                        "text/plain": {
                            "name": "text/plain",
                            "example": "{\\\"index\\\" : \\\"test\\\"} \\n\r\n{\\\"query\\\" : {\\\"match_all\\\" : {}}, \\\"from\\\" : 0, \\\"size\\\" : 10} \\n\r\n{\\\"index\\\" : \\\"test\\\", \\\"search_type\\\" : \\\"count\\\"} \\n\r\n{\\\"query\\\" : {\\\"match_all\\\" : {}}} \\n\r\n{} \\n\r\n{\\\"query\\\" : {\\\"match_all\\\" : {}}} \\n"
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "description": "The multi search API allows to execute several search requests within the same API.\n",
                    "method": "get",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                },
                {
                    "responses": {
                        "200": {
                            "code": "200",
                            "body": {
                                "application/json": {
                                    "name": "application/json"
                                }
                            }
                        }
                    },
                    "body": {
                        "text/plain": {
                            "name": "text/plain",
                            "example": "{\\\"index\\\" : \\\"test\\\"} \\n\r\n{\\\"query\\\" : {\\\"match_all\\\" : {}}, \\\"from\\\" : 0, \\\"size\\\" : 10} \\n\r\n{\\\"index\\\" : \\\"test\\\", \\\"search_type\\\" : \\\"count\\\"} \\n\r\n{\\\"query\\\" : {\\\"match_all\\\" : {}}} \\n\r\n{} \\n\r\n{\\\"query\\\" : {\\\"match_all\\\" : {}}} \\n"
                        }
                    },
                    "protocols": [
                        "{PROTOCOL}"
                    ],
                    "description": "The multi search API allows to execute several search requests within the same API.\n",
                    "method": "post",
                    "__METADATA__": {
                        "primitiveValuesMeta": {
                            "protocols": {
                                "calculated": true
                            }
                        }
                    }
                }
            ],
            "displayName": "/_msearch",
            "__METADATA__": {
                "primitiveValuesMeta": {
                    "displayName": {
                        "calculated": true
                    }
                }
            },
            "relativeUriPathSegments": [
                "_msearch"
            ]
        }
    ],
    "documentation": [
        {
            "title": "Headline",
            "content": "Elasticsearch can be used to search all kinds of documents. It provides scalable search, has near real-time search, and supports multitenancy. Elasticsearch is distributed, which means that indices can be divided into shards and each shard can have zero or more replicas. Each node hosts one or more shards, and acts as a coordinator to delegate operations to the correct shard(s). Rebalancing and routing are done automatically."
        }
    ],
    "__METADATA__": {
        "primitiveValuesMeta": {
            "protocols": {
                "calculated": true
            }
        }
    }
}