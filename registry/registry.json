{"apis": [
    {"Mandrill": {"RAMLFiles": [
        {
            "name": "\"Mandrill API\"",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Mandrill/master/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Mandrill/master/api.json",
            "baseUri": "https://mandrillapp.com/api/",
            "version": "1.0",
            "resourcesCount": 104,
            "methodsCount": 90
        },
        {
            "name": "\"Mandrill API\"",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Mandrill/staging/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Mandrill/staging/api.json",
            "baseUri": "https://mandrillapp.com/api/",
            "version": "1.0",
            "resourcesCount": 104,
            "methodsCount": 90
        }
    ]}},
    {"Parse": {"RAMLFiles": [{
        "name": "Parse",
        "description": "descriptionexamle",
        "RAMLVersion": "0.8",
        "location": "https://raw.githubusercontent.com/raml-apis/Parse/production/parse.raml",
        "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Parse/production/parse.json",
        "baseUri": "https://api.parse.com/{version}",
        "version": "1",
        "securitySchemes": [
            {"basic": {
                "name": "basic",
                "type": "Basic Authentication"
            }},
            {"commonSchema": {
                "name": "commonSchema",
                "type": "x-header-schema",
                "description": "Schema which requires Application ID and REST API Key",
                "describedBy": {"headers": {
                    "X-Parse-Application-Id": {
                        "name": "X-Parse-Application-Id",
                        "displayName": "X-Parse-Application-Id",
                        "type": "string",
                        "required": true,
                        "example": "GzBxtflDl76RdiZFLujo4uNVxS7MIZXbEy6D3Tle",
                        "repeat": false,
                        "description": "Id of the application",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    },
                    "X-Parse-REST-API-Key": {
                        "name": "X-Parse-REST-API-Key",
                        "displayName": "X-Parse-REST-API-Key",
                        "type": "string",
                        "required": true,
                        "example": "UugJz3YVpU0gKgK7OfIYQQAntOxFGKPK615Qmjc9",
                        "repeat": false,
                        "description": "REST API key of the application.",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    }
                }}
            }},
            {"sessionTokenSchema": {
                "name": "sessionTokenSchema",
                "type": "x-header-schema",
                "description": "Schema which requires Application ID, REST API Key and Session Token",
                "describedBy": {"headers": {
                    "X-Parse-Application-Id": {
                        "name": "X-Parse-Application-Id",
                        "displayName": "X-Parse-Application-Id",
                        "type": "string",
                        "required": true,
                        "example": "GzBxtflDl76RdiZFLujo4uNVxS7MIZXbEy6D3Tle",
                        "repeat": false,
                        "description": "Id of the application",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    },
                    "X-Parse-REST-API-Key": {
                        "name": "X-Parse-REST-API-Key",
                        "displayName": "X-Parse-REST-API-Key",
                        "type": "string",
                        "required": true,
                        "example": "UugJz3YVpU0gKgK7OfIYQQAntOxFGKPK615Qmjc9",
                        "repeat": false,
                        "description": "REST API key of the application.",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    },
                    "X-Parse-Session-Token": {
                        "name": "X-Parse-Session-Token",
                        "displayName": "X-Parse-Session-Token",
                        "type": "string",
                        "required": true,
                        "example": "pnktnjyb996sj4p156gjtp4im",
                        "repeat": false,
                        "description": "Session token",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    }
                }}
            }},
            {"masterSchema": {
                "name": "masterSchema",
                "type": "x-header-schema",
                "description": "Schema which requires Application ID and Master Key",
                "describedBy": {"headers": {
                    "X-Parse-Application-Id": {
                        "name": "X-Parse-Application-Id",
                        "displayName": "X-Parse-Application-Id",
                        "type": "string",
                        "required": true,
                        "example": "GzBxtflDl76RdiZFLujo4uNVxS7MIZXbEy6D3Tle",
                        "repeat": false,
                        "description": "Id of the application",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    },
                    "X-Parse-Master-Key": {
                        "name": "X-Parse-Master-Key",
                        "displayName": "X-Parse-Master-Key",
                        "type": "string",
                        "required": true,
                        "example": "ooE8rNiYKd5FTnT6gGJNXyq5mlXCSk2xLRPMBwZs",
                        "repeat": false,
                        "description": "Master key of the application.",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    }
                }}
            }}
        ],
        "resourcesCount": 20,
        "methodsCount": 29,
        "developerPortalURI": "https://parse.com/docs/rest"
    }]}},
    {"Quizlet": {"RAMLFiles": [
        {
            "name": "\"Quizlet\"",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Quizlet/master/quizlet.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Quizlet/master/quizlet.json",
            "baseUri": "https://api.quizlet.com/{version}",
            "version": "2.0",
            "resourcesCount": 22,
            "methodsCount": 30
        },
        {
            "name": "\"Quizlet\"",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Quizlet/staging/quizlet.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Quizlet/staging/quizlet.json",
            "baseUri": "https://api.quizlet.com/{version}",
            "version": "2.0",
            "resourcesCount": 22,
            "methodsCount": 30
        }
    ]}},
    {"Zuora": {
        "logo": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Zuora/logo.png",
        "RAMLFiles": [{
            "name": "Zuora",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Zuora/production/zuora.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Zuora/production/zuora.json",
            "baseUri": "https://{partitionName}.zuora.com/rest/{version}",
            "version": "v1",
            "securitySchemes": [{"basic": {
                "name": "basic",
                "type": "Basic Authentication",
                "description": "Include the apiAccessKeyId and apiSecretAccessKey in the request header, which re-authenticates the user with each request."
            }}],
            "resourcesCount": 23,
            "methodsCount": 23,
            "developerPortalURI": "https://knowledgecenter.zuora.com/D_REST_API"
        }]
    }},
    {"Postmark": {"RAMLFiles": [
        {
            "name": "Postmark",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Postmark/master/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Postmark/master/api.json",
            "baseUri": "http://api.postmarkapp.com",
            "resourcesCount": 9,
            "methodsCount": 9
        },
        {
            "name": "Postmark",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Postmark/staging/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Postmark/staging/api.json",
            "baseUri": "http://api.postmarkapp.com",
            "resourcesCount": 9,
            "methodsCount": 9
        }
    ]}},
    {"Fitbit": {"RAMLFiles": [
        {
            "name": "\"Fitbit API\"",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Fitbit/master/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Fitbit/master/api.json",
            "baseUri": "http://api.fitbit.com/{version}/",
            "version": "1",
            "securitySchemes": [{"oauth_1_0": {
                "name": "oauth_1_0",
                "type": "OAuth 1.0",
                "description": "The Fitbit API uses OAuth Authentication as described in The OAuth 1.0 Protocol\n(draft-hammer-oauth-10). OAuth is an open protocol for clients of the Fitbi\nAPI to access Fitbit content on behalf of a Fitbit user.\n",
                "settings": {
                    "requestTokenUri": "https://api.fitbit.com/oauth/request_token",
                    "authorizationUri": "http://www.fitbit.com/oauth/authorize",
                    "tokenCredentialsUri": "https://api.fitbit.com/oauth/access_token"
                }
            }}],
            "resourcesCount": 68,
            "methodsCount": 78
        },
        {
            "name": "\"Fitbit API\"",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Fitbit/staging/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Fitbit/staging/api.json",
            "baseUri": "http://api.fitbit.com/{version}/",
            "version": "1",
            "securitySchemes": [{"oauth_1_0": {
                "name": "oauth_1_0",
                "type": "OAuth 1.0",
                "description": "The Fitbit API uses OAuth Authentication as described in The OAuth 1.0 Protocol\n(draft-hammer-oauth-10). OAuth is an open protocol for clients of the Fitbi\nAPI to access Fitbit content on behalf of a Fitbit user.\n",
                "settings": {
                    "requestTokenUri": "https://api.fitbit.com/oauth/request_token",
                    "authorizationUri": "http://www.fitbit.com/oauth/authorize",
                    "tokenCredentialsUri": "https://api.fitbit.com/oauth/access_token"
                }
            }}],
            "resourcesCount": 68,
            "methodsCount": 78
        }
    ]}},
    {"PagerDuty": {"RAMLFiles": [
        {
            "name": "PagerDuty Integration",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/PagerDuty/production/integration.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/PagerDuty/production/integration.json",
            "baseUri": "https://events.pagerduty.com/generic/{version}/",
            "version": "2010-04-15",
            "securitySchemes": [
                {"basic": {
                    "name": "basic",
                    "type": "Basic Authentication"
                }},
                {"tokenSchema": {
                    "name": "tokenSchema",
                    "type": "x-token-schema",
                    "description": "Schema which requires Application ID and REST API Key",
                    "describedBy": {"headers": {"Authorization": {
                        "name": "Authorization",
                        "displayName": "Authorization",
                        "type": "string",
                        "required": true,
                        "example": "Token token=E7px6VVr3PVHZPJq51oa",
                        "repeat": false,
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    }}}
                }}
            ],
            "resourcesCount": 1,
            "methodsCount": 1
        },
        {
            "name": "PagerDuty",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/PagerDuty/production/pagerDuty.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/PagerDuty/production/pagerDuty.json",
            "baseUri": "https://{serviceName}.pagerduty.com/api/{version}",
            "version": "v1",
            "securitySchemes": [
                {"basic": {
                    "name": "basic",
                    "type": "Basic Authentication"
                }},
                {"tokenSchema": {
                    "name": "tokenSchema",
                    "type": "x-token-schema",
                    "description": "Schema which requires Application ID and REST API Key",
                    "describedBy": {"headers": {"Authorization": {
                        "name": "Authorization",
                        "displayName": "Authorization",
                        "type": "string",
                        "required": true,
                        "example": "Token token=E7px6VVr3PVHZPJq51oa",
                        "repeat": false,
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    }}}
                }}
            ],
            "resourcesCount": 41,
            "methodsCount": 69
        }
    ]}},
    {"Jobvite": {"RAMLFiles": [
        {
            "name": "Jobvite API v1",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Jobvite/master/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Jobvite/master/api.json",
            "baseUri": "https://api.jobvite.com/{version}",
            "version": "v1",
            "resourcesCount": 5,
            "methodsCount": 5
        },
        {
            "name": "Jobvite API v1",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Jobvite/staging/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Jobvite/staging/api.json",
            "baseUri": "https://api.jobvite.com/{version}",
            "version": "v1",
            "resourcesCount": 5,
            "methodsCount": 5
        }
    ]}},
    {"EwayRapid": {"RAMLFiles": [
        {
            "name": "Rapid API",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/EwayRapid/master/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/EwayRapid/master/api.json",
            "baseUri": "https://api.ewaypayments.com/",
            "version": "3.1",
            "securitySchemes": [{"basic": {
                "name": "basic",
                "type": "Basic",
                "description": "All requests, other than form POSTs, should be sent using basic authentication.\n",
                "describedBy": {
                    "securedBy": ["basic"],
                    "headers": {"Authorization": {
                        "name": "Authorization",
                        "displayName": "Authorization",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Example of Authorization header:\nAuthorization: Basic BDOM0dF1WeYYjUQ5TZzMQEE74Y5Ef2x55YtlOp0ES1yMzQ=\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    }},
                    "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                }
            }}],
            "resourcesCount": 5,
            "methodsCount": 6
        },
        {
            "name": "Rapid API",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/EwayRapid/staging/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/EwayRapid/staging/api.json",
            "baseUri": "https://api.ewaypayments.com/",
            "version": "3.1",
            "securitySchemes": [{"basic": {
                "name": "basic",
                "type": "Basic",
                "description": "All requests, other than form POSTs, should be sent using basic authentication.\n",
                "describedBy": {
                    "securedBy": ["basic"],
                    "headers": {"Authorization": {
                        "name": "Authorization",
                        "displayName": "Authorization",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Example of Authorization header:\nAuthorization: Basic BDOM0dF1WeYYjUQ5TZzMQEE74Y5Ef2x55YtlOp0ES1yMzQ=\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    }},
                    "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                }
            }}],
            "resourcesCount": 5,
            "methodsCount": 6
        }
    ]}},
    {"AdhereTech": {"RAMLFiles": [{
        "name": "AdhereTech External API",
        "description": "descriptionexamle",
        "RAMLVersion": "1.0",
        "location": "https://raw.githubusercontent.com/raml-apis/AdhereTech/raml1.0/api.raml",
        "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/AdhereTech/raml1.0/api.json",
        "baseUri": "adheretech.com/api/{version}",
        "version": "v1",
        "securitySchemes": [{"auth": {
            "name": "auth",
            "type": "Basic Authentication"
        }}],
        "resourcesCount": 24,
        "methodsCount": 44
    }]}},
    {"Zendesk": {
        "logo": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Zendesk/logo.png",
        "RAMLFiles": [{
            "name": "Zendesk",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Zendesk/production/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Zendesk/production/api.json",
            "baseUri": "https://{domain}.zendesk.com/api/{version}",
            "version": "v2",
            "securitySchemes": [
                {"oauth_2_0": {
                    "name": "oauth_2_0",
                    "type": "OAuth 2.0",
                    "description": "You can use OAuth 2 to authenticate all your application's API requests to Zendesk. OAuth provides a secure way for your application to access Zendesk data without requiring that sensitive information like usernames and passwords be sent with the requests.\nTo use OAuth authentication, you need to register your application with Zendesk. You also need to add some functionality to your application to support the OAuth authorization flow.\n",
                    "describedBy": {
                        "responses": {"404": {
                            "code": "404",
                            "description": "Unauthorized"
                        }},
                        "securedBy": ["oauth_2_0"],
                        "headers": {"Authorization": {
                            "name": "Authorization",
                            "displayName": "Authorization",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Set the token in the request's authorization header as follows: Authorization: Bearer {a_valid_access_token}",
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "required": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true}
                            }}
                        }},
                        "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                    },
                    "settings": {
                        "accessTokenUri": "https://{domain}.zendesk.com/oauth/tokens",
                        "authorizationUri": "https://{domain}.zendesk.com/oauth/authorizations/new",
                        "authorizationGrants": ["code"],
                        "scopes": [
                            "read",
                            "write"
                        ]
                    }
                }},
                {"basic": {
                    "name": "basic",
                    "type": "Basic Authentication",
                    "description": "Authorize against the API using basic authentication with your email and password credentials."
                }},
                {"x-token": {
                    "name": "x-token",
                    "type": "x-token",
                    "description": "Authorize against the API with username and API token. In fact, this schema works the same way as Basic with '{email_address}/token' as username and '{api_token}' as password.   \n",
                    "describedBy": {
                        "securedBy": ["oauth_2_0"],
                        "headers": {"Authorization": {
                            "name": "Authorization",
                            "displayName": "Authorization",
                            "type": "string",
                            "required": false,
                            "example": "Basic bWFyay0xOTY3QGxpc3QucnUvdG9rZW46bzhXTnBZRW4yMXpIUU9XMHZBbmtJSmRqdERDb1p4VER2R1dWbjdReg==",
                            "repeat": false,
                            "description": "Expected Base64 encoded string with following content: '{email_address}/token:{api_token}'",
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "required": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true}
                            }}
                        }},
                        "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                    }
                }}
            ],
            "resourcesCount": 431,
            "methodsCount": 428,
            "developerPortalURI": "https://developer.zendesk.com"
        }]
    }},
    {"MediaWiki": {"RAMLFiles": [{
        "name": "MediaWiki",
        "description": "descriptionexamle",
        "RAMLVersion": "1.0",
        "location": "https://raw.githubusercontent.com/raml-apis/MediaWiki/raml1.0/api.raml",
        "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/MediaWiki/raml1.0/api.json",
        "baseUri": "https://en.wikipedia.org/w/api.php",
        "version": "v1",
        "resourcesCount": 1,
        "methodsCount": 1
    }]}},
    {"Yammer": {
        "logo": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Yammer/logo.png",
        "RAMLFiles": [{
            "name": "Yammer",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Yammer/production/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Yammer/production/api.json",
            "baseUri": "https://www.yammer.com/api/{version}",
            "version": "v1",
            "securitySchemes": [{"oauth_2_0": {
                "name": "oauth_2_0",
                "type": "OAuth 2.0",
                "description": "",
                "describedBy": {
                    "securedBy": ["oauth_2_0"],
                    "headers": {"Authorization": {
                        "name": "Authorization",
                        "displayName": "Authorization",
                        "type": "string",
                        "required": false,
                        "example": "Bearer _token_",
                        "repeat": false,
                        "description": "Used to send a valid OAuth 2 access token. The token must be preceeded by the word \"Bearer\".\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    }},
                    "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                },
                "settings": {
                    "accessTokenUri": "https://www.yammer.com/oauth2/access_token.json",
                    "authorizationUri": "https://www.yammer.com/dialog/oauth",
                    "authorizationGrants": ["code"]
                }
            }}],
            "resourcesCount": 35,
            "methodsCount": 42,
            "developerPortalURI": "https://developer.yammer.com/restapi/"
        }]
    }},
    {"Facebook": {"RAMLFiles": [
        {
            "name": "Facebook",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Facebook/production/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Facebook/production/api.json",
            "baseUri": "https://graph.facebook.com/{version}",
            "version": "v2.0",
            "securitySchemes": [{"oauth_2_0": {
                "name": "oauth_2_0",
                "type": "OAuth 2.0",
                "description": "Facebook API uses the OAuth 2.0 protocol for simple, but effective\nauthentication and authorization. The one thing to keep in mind is tha\nall requests to the API must be made over SSL (https:// not http://)\n",
                "describedBy": {
                    "securedBy": ["oauth_2_0"],
                    "queryParameters": {"access_token": {
                        "name": "access_token",
                        "displayName": "access_token",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"Authorization\" header\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    }},
                    "headers": {"Authorization": {
                        "name": "Authorization",
                        "displayName": "Authorization",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"access_token\" queryParameters string parameter.\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    }},
                    "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                },
                "settings": {
                    "accessTokenUri": "https://graph.facebook.com/oauth/access_token",
                    "authorizationUri": "https://graph.facebook.com/oauth/authorize",
                    "authorizationGrants": [
                        "code",
                        "token"
                    ]
                }
            }}],
            "resourcesCount": 244,
            "methodsCount": 381
        },
        {
            "name": "Facebook Video Upload",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Facebook/production/postVideo.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Facebook/production/postVideo.json",
            "baseUri": "https://graph-video.facebook.com/{version}",
            "version": "v2.3",
            "securitySchemes": [{"oauth_2_0": {
                "name": "oauth_2_0",
                "type": "OAuth 2.0",
                "description": "Facebook API uses the OAuth 2.0 protocol for simple, but effective\nauthentication and authorization. The one thing to keep in mind is tha\nall requests to the API must be made over SSL (https:// not http://)\n",
                "describedBy": {
                    "securedBy": ["oauth_2_0"],
                    "queryParameters": {"access_token": {
                        "name": "access_token",
                        "displayName": "access_token",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"Authorization\" header\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    }},
                    "headers": {"Authorization": {
                        "name": "Authorization",
                        "displayName": "Authorization",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"access_token\" queryParameters string parameter.\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    }},
                    "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                },
                "settings": {
                    "accessTokenUri": "https://graph.facebook.com/oauth/access_token",
                    "authorizationUri": "https://graph.facebook.com/oauth/authorize",
                    "authorizationGrants": [
                        "code",
                        "token"
                    ]
                }
            }}],
            "resourcesCount": 4,
            "methodsCount": 2
        }
    ]}},
    {"FlightStats": {"RAMLFiles": [
        {
            "name": "FlightStats",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/FlightStats/production/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/FlightStats/production/api.json",
            "baseUri": "https://api.flightstats.com/flex",
            "version": "v1",
            "securitySchemes": [
                {"apiHeaderKey": {
                    "name": "apiHeaderKey",
                    "type": "x-ApiKey",
                    "description": "Any API request requires your key. Authentication via headers parameters or query parameters.\n",
                    "describedBy": {
                        "securedBy": ["apiHeaderKey"],
                        "headers": {
                            "appId": {
                                "name": "appId",
                                "displayName": "appId",
                                "type": "string",
                                "required": false,
                                "repeat": false,
                                "description": "Authentication header parameters",
                                "__METADATA__": {"primitiveValuesMeta": {
                                    "displayName": {"calculated": true},
                                    "type": {"insertedAsDefault": true},
                                    "required": {"insertedAsDefault": true},
                                    "repeat": {"insertedAsDefault": true}
                                }}
                            },
                            "appKey": {
                                "name": "appKey",
                                "displayName": "appKey",
                                "type": "string",
                                "required": false,
                                "repeat": false,
                                "description": "Authentication header parameters",
                                "__METADATA__": {"primitiveValuesMeta": {
                                    "displayName": {"calculated": true},
                                    "type": {"insertedAsDefault": true},
                                    "required": {"insertedAsDefault": true},
                                    "repeat": {"insertedAsDefault": true}
                                }}
                            }
                        },
                        "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                    }
                }},
                {"apiQueryKey": {
                    "name": "apiQueryKey",
                    "type": "x-ApiKey",
                    "description": "Any API request requires your key. Authentication via headers parameters or query parameters.\n",
                    "describedBy": {
                        "securedBy": ["apiHeaderKey"],
                        "queryParameters": {
                            "appId": {
                                "name": "appId",
                                "displayName": "appId",
                                "type": "string",
                                "required": false,
                                "repeat": false,
                                "description": "Authentication query parameters",
                                "__METADATA__": {"primitiveValuesMeta": {
                                    "displayName": {"calculated": true},
                                    "type": {"insertedAsDefault": true},
                                    "required": {"insertedAsDefault": true},
                                    "repeat": {"insertedAsDefault": true}
                                }}
                            },
                            "appKey": {
                                "name": "appKey",
                                "displayName": "appKey",
                                "type": "string",
                                "required": false,
                                "repeat": false,
                                "description": "Authentication query parameters",
                                "__METADATA__": {"primitiveValuesMeta": {
                                    "displayName": {"calculated": true},
                                    "type": {"insertedAsDefault": true},
                                    "required": {"insertedAsDefault": true},
                                    "repeat": {"insertedAsDefault": true}
                                }}
                            }
                        },
                        "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                    }
                }}
            ],
            "resourcesCount": 80,
            "methodsCount": 59
        },
        {
            "name": "Flight Status And Track",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/FlightStats/production/flightStatusAndTrack.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/FlightStats/production/flightStatusAndTrack.json",
            "baseUri": "https://api.flightstats.com/flex/flightstatus/rest/{version}",
            "version": "v2",
            "securitySchemes": [
                {"apiHeaderKey": {
                    "name": "apiHeaderKey",
                    "type": "x-ApiKey",
                    "description": "Any API request requires your key. Authentication via headers parameters or query parameters.\n",
                    "describedBy": {
                        "securedBy": ["apiHeaderKey"],
                        "headers": {
                            "appId": {
                                "name": "appId",
                                "displayName": "appId",
                                "type": "string",
                                "required": false,
                                "repeat": false,
                                "description": "Authentication header parameters",
                                "__METADATA__": {"primitiveValuesMeta": {
                                    "displayName": {"calculated": true},
                                    "type": {"insertedAsDefault": true},
                                    "required": {"insertedAsDefault": true},
                                    "repeat": {"insertedAsDefault": true}
                                }}
                            },
                            "appKey": {
                                "name": "appKey",
                                "displayName": "appKey",
                                "type": "string",
                                "required": false,
                                "repeat": false,
                                "description": "Authentication header parameters",
                                "__METADATA__": {"primitiveValuesMeta": {
                                    "displayName": {"calculated": true},
                                    "type": {"insertedAsDefault": true},
                                    "required": {"insertedAsDefault": true},
                                    "repeat": {"insertedAsDefault": true}
                                }}
                            }
                        },
                        "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                    }
                }},
                {"apiQueryKey": {
                    "name": "apiQueryKey",
                    "type": "x-ApiKey",
                    "description": "Any API request requires your key. Authentication via headers parameters or query parameters.\n",
                    "describedBy": {
                        "securedBy": ["apiHeaderKey"],
                        "queryParameters": {
                            "appId": {
                                "name": "appId",
                                "displayName": "appId",
                                "type": "string",
                                "required": false,
                                "repeat": false,
                                "description": "Authentication query parameters",
                                "__METADATA__": {"primitiveValuesMeta": {
                                    "displayName": {"calculated": true},
                                    "type": {"insertedAsDefault": true},
                                    "required": {"insertedAsDefault": true},
                                    "repeat": {"insertedAsDefault": true}
                                }}
                            },
                            "appKey": {
                                "name": "appKey",
                                "displayName": "appKey",
                                "type": "string",
                                "required": false,
                                "repeat": false,
                                "description": "Authentication query parameters",
                                "__METADATA__": {"primitiveValuesMeta": {
                                    "displayName": {"calculated": true},
                                    "type": {"insertedAsDefault": true},
                                    "required": {"insertedAsDefault": true},
                                    "repeat": {"insertedAsDefault": true}
                                }}
                            }
                        },
                        "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                    }
                }}
            ],
            "resourcesCount": 28,
            "methodsCount": 16
        }
    ]}},
    {"Blogger": {"RAMLFiles": [{
        "name": "Blogger",
        "description": "descriptionexamle",
        "RAMLVersion": "0.8",
        "location": "https://raw.githubusercontent.com/raml-apis/Blogger/production/api.raml",
        "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Blogger/production/api.json",
        "baseUri": "https://www.googleapis.com/blogger/{version}",
        "version": "v3",
        "securitySchemes": [{"oauth_2_0": {
            "name": "oauth_2_0",
            "type": "OAuth 2.0",
            "description": "Google recommend using OAuth 2.0 to authorize requests.\n",
            "describedBy": {
                "responses": {"401": {
                    "code": "401",
                    "description": "Authorization error.\n"
                }},
                "securedBy": ["oauth_2_0"],
                "queryParameters": {"access_token": {
                    "name": "access_token",
                    "displayName": "access_token",
                    "type": "string",
                    "required": false,
                    "repeat": false,
                    "description": "Used to send a valid OAuth 2 access token\n",
                    "__METADATA__": {"primitiveValuesMeta": {
                        "displayName": {"calculated": true},
                        "type": {"insertedAsDefault": true},
                        "required": {"insertedAsDefault": true},
                        "repeat": {"insertedAsDefault": true}
                    }}
                }},
                "headers": {"Authorization": {
                    "name": "Authorization",
                    "displayName": "Authorization",
                    "type": "string",
                    "required": false,
                    "repeat": false,
                    "description": "Used to send a valid OAuth 2 access token.\n",
                    "__METADATA__": {"primitiveValuesMeta": {
                        "displayName": {"calculated": true},
                        "type": {"insertedAsDefault": true},
                        "required": {"insertedAsDefault": true},
                        "repeat": {"insertedAsDefault": true}
                    }}
                }},
                "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
            },
            "settings": {
                "accessTokenUri": "https://accounts.google.com/o/oauth2/token",
                "authorizationUri": "https://accounts.google.com/o/oauth2/auth",
                "authorizationGrants": ["code"],
                "scopes": ["https://www.googleapis.com/auth/blogger"]
            }
        }}],
        "resourcesCount": 23,
        "methodsCount": 31
    }]}},
    {"Xero": {"RAMLFiles": [
        {
            "name": "Xero.com API",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Xero/master/xeroAPI.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Xero/master/xeroAPI.json",
            "baseUri": "https://api.xero.com/api.xro/2.0",
            "version": "2.35",
            "securitySchemes": [
                {"public": {
                    "name": "public",
                    "type": "OAuth 1.0",
                    "description": "Public applications use the standard 3 legged OAuth process where a user can authorise your application to have access to their Xero organisation. Public applications can either be web based or desktop/mobile installed. Access tokens expire after 30 minutes.\n",
                    "describedBy": {
                        "securedBy": [
                            "public",
                            "private"
                        ],
                        "queryParameters": {"access_token": {
                            "name": "access_token",
                            "displayName": "access_token",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"Authorization\" header\n",
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "required": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true}
                            }}
                        }},
                        "headers": {"Authorization": {
                            "name": "Authorization",
                            "displayName": "Authorization",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Used to send a valid OAuth access token. Do not use together with\nthe \"access_token\" query string parameter.\n",
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "required": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true}
                            }}
                        }},
                        "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                    },
                    "settings": {
                        "requestTokenUri": "https://api.xero.com/oauth/RequestToken",
                        "authorizationUri": "https://api.xero.com/oauth/Authorize",
                        "tokenCredentialsUri": "https://api.xero.com/oauth/AccessToken"
                    }
                }},
                {"private": {
                    "name": "private",
                    "type": "OAuth 1.0",
                    "description": "Private applications use 2 legged OAuth and bypass the user authorization workflow in the standard OAuth process. Private applications are linked to a single Xero organisation which is chosen when you register your application. Access tokens for private applications don't expire unless the application is deleted or disconnected from within the Xero organisation.\nYou can create a maximum of 2 private applications against a single Xero organisation.\n",
                    "describedBy": {
                        "securedBy": [
                            "public",
                            "private"
                        ],
                        "queryParameters": {"access_token": {
                            "name": "access_token",
                            "displayName": "access_token",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"Authorization\" header\n",
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "required": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true}
                            }}
                        }},
                        "headers": {"Authorization": {
                            "name": "Authorization",
                            "displayName": "Authorization",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"access_token\" query string parameter.\n",
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "required": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true}
                            }}
                        }},
                        "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                    },
                    "settings": {
                        "requestTokenUri": "https://api.xero.com/oauth/RequestToken",
                        "authorizationUri": "https://api.xero.com/oauth/Authorize",
                        "tokenCredentialsUri": "https://api.xero.com/oauth/AccessToken"
                    }
                }}
            ],
            "resourcesCount": 47,
            "methodsCount": 71
        },
        {
            "name": "Xero.com API",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Xero/staging/xeroAPI.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Xero/staging/xeroAPI.json",
            "baseUri": "https://api.xero.com/api.xro/2.0",
            "version": "2.35",
            "securitySchemes": [
                {"public": {
                    "name": "public",
                    "type": "OAuth 1.0",
                    "description": "Public applications use the standard 3 legged OAuth process where a user can authorise your application to have access to their Xero organisation. Public applications can either be web based or desktop/mobile installed. Access tokens expire after 30 minutes.\n",
                    "describedBy": {
                        "securedBy": [
                            "public",
                            "private"
                        ],
                        "queryParameters": {"access_token": {
                            "name": "access_token",
                            "displayName": "access_token",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"Authorization\" header\n",
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "required": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true}
                            }}
                        }},
                        "headers": {"Authorization": {
                            "name": "Authorization",
                            "displayName": "Authorization",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Used to send a valid OAuth access token. Do not use together with\nthe \"access_token\" query string parameter.\n",
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "required": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true}
                            }}
                        }},
                        "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                    },
                    "settings": {
                        "requestTokenUri": "https://api.xero.com/oauth/RequestToken",
                        "authorizationUri": "https://api.xero.com/oauth/Authorize",
                        "tokenCredentialsUri": "https://api.xero.com/oauth/AccessToken"
                    }
                }},
                {"private": {
                    "name": "private",
                    "type": "OAuth 1.0",
                    "description": "Private applications use 2 legged OAuth and bypass the user authorization workflow in the standard OAuth process. Private applications are linked to a single Xero organisation which is chosen when you register your application. Access tokens for private applications don't expire unless the application is deleted or disconnected from within the Xero organisation.\nYou can create a maximum of 2 private applications against a single Xero organisation.\n",
                    "describedBy": {
                        "securedBy": [
                            "public",
                            "private"
                        ],
                        "queryParameters": {"access_token": {
                            "name": "access_token",
                            "displayName": "access_token",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"Authorization\" header\n",
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "required": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true}
                            }}
                        }},
                        "headers": {"Authorization": {
                            "name": "Authorization",
                            "displayName": "Authorization",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"access_token\" query string parameter.\n",
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "required": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true}
                            }}
                        }},
                        "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                    },
                    "settings": {
                        "requestTokenUri": "https://api.xero.com/oauth/RequestToken",
                        "authorizationUri": "https://api.xero.com/oauth/Authorize",
                        "tokenCredentialsUri": "https://api.xero.com/oauth/AccessToken"
                    }
                }}
            ],
            "resourcesCount": 47,
            "methodsCount": 71
        }
    ]}},
    {"GoogleCalendar": {
        "logo": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/GoogleCalendar/logo.png",
        "RAMLFiles": [
            {
                "name": "Google Calendar",
                "description": "descriptionexamle",
                "RAMLVersion": "0.8",
                "location": "https://raw.githubusercontent.com/raml-apis/GoogleCalendar/production/api.raml",
                "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/GoogleCalendar/production/api.json",
                "baseUri": "https://www.googleapis.com/calendar/{version}",
                "version": "v3",
                "securitySchemes": [{"oauth_2_0": {
                    "name": "oauth_2_0",
                    "type": "OAuth 2.0",
                    "description": "Google recommend using OAuth 2.0 to authorize requests.\n",
                    "describedBy": {
                        "responses": {"401": {
                            "code": "401",
                            "description": "Authorization error.\n"
                        }},
                        "securedBy": ["oauth_2_0"],
                        "queryParameters": {"access_token": {
                            "name": "access_token",
                            "displayName": "access_token",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Used to send a valid OAuth 2 access token\n",
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "required": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true}
                            }}
                        }},
                        "headers": {"Authorization": {
                            "name": "Authorization",
                            "displayName": "Authorization",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Used to send a valid OAuth 2 access token.\n",
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "required": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true}
                            }}
                        }},
                        "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                    },
                    "settings": {
                        "accessTokenUri": "https://accounts.google.com/o/oauth2/token",
                        "authorizationUri": "https://accounts.google.com/o/oauth2/auth",
                        "authorizationGrants": ["code"],
                        "scopes": ["https://www.googleapis.com/auth/calendar"]
                    }
                }}],
                "resourcesCount": 23,
                "methodsCount": 37,
                "developerPortalURI": "https://developers.google.com/google-apps/calendar/v3/reference/​"
            },
            {
                "name": "Google Calendar",
                "description": "descriptionexamle",
                "RAMLVersion": "1.0",
                "location": "https://raw.githubusercontent.com/raml-apis/GoogleCalendar/raml1.0/api.raml",
                "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/GoogleCalendar/raml1.0/api.json",
                "baseUri": "https://www.googleapis.com/calendar/{version}",
                "version": "v3",
                "securitySchemes": [{"oauth_2_0": {
                    "name": "oauth_2_0",
                    "type": "OAuth 2.0",
                    "description": "Google recommend using OAuth 2.0 to authorize requests.\n",
                    "describedBy": {
                        "queryParameters": {"access_token": {
                            "name": "access_token",
                            "displayName": "access_token",
                            "type": ["string"],
                            "repeat": false,
                            "required": true,
                            "description": "Used to send a valid OAuth 2 access token\n",
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true},
                                "required": {"insertedAsDefault": true}
                            }}
                        }},
                        "headers": {"Authorization": {
                            "name": "Authorization",
                            "displayName": "Authorization",
                            "type": ["string"],
                            "repeat": false,
                            "required": true,
                            "description": "Used to send a valid OAuth 2 access token.\n",
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true},
                                "required": {"insertedAsDefault": true}
                            }}
                        }},
                        "responses": [{
                            "code": "401",
                            "description": "Authorization error.\n"
                        }]
                    },
                    "settings": {
                        "accessTokenUri": "https://accounts.google.com/o/oauth2/token",
                        "authorizationUri": "https://accounts.google.com/o/oauth2/auth",
                        "authorizationGrants": ["code"],
                        "scopes": ["https://www.googleapis.com/auth/calendar"]
                    }
                }}],
                "resourcesCount": 23,
                "methodsCount": 37,
                "developerPortalURI": "https://developers.google.com/google-apps/calendar/v3/reference/​"
            }
        ]
    }},
    {"Stormpath": {"RAMLFiles": [{
        "name": "StormPath",
        "description": "descriptionexamle",
        "RAMLVersion": "0.8",
        "location": "https://raw.githubusercontent.com/raml-apis/Stormpath/production/api.raml",
        "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Stormpath/production/api.json",
        "baseUri": "https://api.stormpath.com/{version}",
        "version": "v1",
        "securitySchemes": [
            {"basic": {
                "name": "basic",
                "type": "Basic Authentication"
            }},
            {"digest": {
                "name": "digest",
                "type": "x-digest-schema",
                "description": "Stormpath also supports a more secure authentication scheme known as digest authentication.\nThis approach computes a cryptographic digest of the request and sends the digest value\nalong with the request. If the transmitted digest matches what the Stormpath API server\ncomputes for the same request, the request is authenticated.\n\nThis technique is especially secure because the API key secret is never transmitted outside\nof the application, making it extremely difficult for anything (or anyone) outside of the\napplication to interfere with a request or see the secret.\n\nWe recommend using digest authentication whenever possible because it is inherently more\nsecure. However, due to its complexity, it might not be feasible for some projects.\n\nAll Stormpath SDKs (currently Java, Ruby, PHP, and Python) use this more secure digest\nauthentication so we recommend that you use the SDKs whenever possible. However, if we do not\nyet have an SDK for your programming language, you should use basic authentication over HTTPS.\n\nFinally, if you would like to use Stormpath digest authentication in a programming language\nthat Stormpath does not yet support, you can attempt to port the algorithm to that language.\nYou can try to replicate the algorithm and use Stormpath existing code as examples to help:\n\nJava: Sauthc1Signer (the sign method) https://github.com/stormpath/stormpath-sdk-java/blob/master/impl/src/main/java/com/stormpath/sdk/impl/http/authc/Sauthc1Signer.java\nRuby: Sauthc1Signer (the sign_request method) https://github.com/stormpath/stormpath-sdk-ruby/blob/master/lib/stormpath-sdk/http/authc/sauthc1_signer.rb\nPHP: Sauthc1Signer (the signRequest method) https://github.com/stormpath/stormpath-sdk-php/blob/master/src/Stormpath/Http/Authc/Sauthc1Signer.php\nPython: Sauthc1Signer (the call method) https://github.com/stormpath/stormpath-sdk-python/blob/master/stormpath/auth.py\n\nIf you port the algorithm to other languages, please let us know. We are happy to help.\nEmail us at support@stormpath.com and we will help as best as we can.\n",
                "describedBy": {
                    "securedBy": ["basic"],
                    "headers": {"Authorisation": {
                        "name": "Authorisation",
                        "displayName": "Authorisation",
                        "type": "string",
                        "required": true,
                        "repeat": false,
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    }},
                    "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                }
            }}
        ],
        "resourcesCount": 35,
        "methodsCount": 49,
        "developerPortalURI": "http://docs.stormpath.com/rest/product-guide"
    }]}},
    {"23andMe": {"RAMLFiles": [
        {
            "name": "23andMe",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/23andMe/staging/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/23andMe/staging/api.json",
            "baseUri": "https://api.23andme.com/{version}",
            "version": "1",
            "securitySchemes": [{"oauth_2_0": {
                "name": "oauth_2_0",
                "type": "OAuth 2.0",
                "describedBy": {
                    "securedBy": ["oauth_2_0"],
                    "queryParameters": {"access_token": {
                        "name": "access_token",
                        "displayName": "access_token",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"Authorization\" header\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    }},
                    "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                },
                "settings": {
                    "accessTokenUri": "https://api.23andme.com/token/",
                    "authorizationUri": "https://api.23andme.com/authorize/",
                    "authorizationGrants": ["code"],
                    "scopes": [
                        "genomes",
                        "basic",
                        "names",
                        "email",
                        "haplogroups",
                        "ancestry",
                        "family_tree",
                        "relatives",
                        "relatives:write",
                        "analyses",
                        "profile:read",
                        "profile:write",
                        "publish",
                        "introduction:read",
                        "introduction:write",
                        "phenotypes:write:sex"
                    ]
                }
            }}],
            "resourcesCount": 38,
            "methodsCount": 43
        },
        {
            "name": "23andMe Reseller",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/23andMe/staging/reseller.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/23andMe/staging/reseller.json",
            "baseUri": "https://api.23andme.com/{version}",
            "version": "2",
            "securitySchemes": [{"oauth_2_0": {
                "name": "oauth_2_0",
                "type": "OAuth 2.0",
                "describedBy": {
                    "securedBy": ["oauth_2_0"],
                    "queryParameters": {"access_token": {
                        "name": "access_token",
                        "displayName": "access_token",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"Authorization\" header\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    }},
                    "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                },
                "settings": {
                    "accessTokenUri": "https://api.23andme.com/token/",
                    "authorizationUri": "https://api.23andme.com/authorize/",
                    "authorizationGrants": ["code"],
                    "scopes": [
                        "genomes",
                        "basic",
                        "names",
                        "email",
                        "haplogroups",
                        "ancestry",
                        "family_tree",
                        "relatives",
                        "relatives:write",
                        "analyses",
                        "profile:read",
                        "profile:write",
                        "publish",
                        "introduction:read",
                        "introduction:write",
                        "phenotypes:write:sex"
                    ]
                }
            }}],
            "resourcesCount": 2,
            "methodsCount": 2
        }
    ]}},
    {"Box": {"RAMLFiles": [
        {
            "name": "Box",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Box/production/boxAPI.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Box/production/boxAPI.json",
            "baseUri": "https://api.box.com/{version}/",
            "version": "2.0",
            "securitySchemes": [{"oauth_2_0": {
                "name": "oauth_2_0",
                "type": "OAuth 2.0",
                "description": "The Box API uses OAuth 2 for authentication. An authorization header containing\na valid access_token must be included in every request.\n",
                "describedBy": {
                    "securedBy": ["oauth_2_0"],
                    "queryParameters": {"access_token": {
                        "name": "access_token",
                        "displayName": "access_token",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"Authorization\" header\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    }},
                    "headers": {"Authorization": {
                        "name": "Authorization",
                        "displayName": "Authorization",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"access_token\" query string parameter.\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    }},
                    "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                },
                "settings": {
                    "accessTokenUri": "https://www.box.com/api/oauth2/token",
                    "authorizationUri": "https://www.box.com/api/oauth2/authorize",
                    "authorizationGrants": ["code"]
                }
            }}],
            "resourcesCount": 42,
            "methodsCount": 66
        },
        {
            "name": "Box.com upload API",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Box/production/boxUploadAPI.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Box/production/boxUploadAPI.json",
            "baseUri": "https://upload.box.com/api/{version}",
            "version": "2.0",
            "securitySchemes": [{"oauth_2_0": {
                "name": "oauth_2_0",
                "type": "OAuth 2.0",
                "description": "The Box API uses OAuth 2 for authentication. An authorization header containing\na valid access_token must be included in every request.\n",
                "describedBy": {
                    "securedBy": ["oauth_2_0"],
                    "queryParameters": {"access_token": {
                        "name": "access_token",
                        "displayName": "access_token",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"Authorization\" header\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    }},
                    "headers": {"Authorization": {
                        "name": "Authorization",
                        "displayName": "Authorization",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"access_token\" query string parameter.\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    }},
                    "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                },
                "settings": {
                    "accessTokenUri": "https://www.box.com/api/oauth2/token",
                    "authorizationUri": "https://www.box.com/api/oauth2/authorize",
                    "authorizationGrants": ["code"]
                }
            }}],
            "resourcesCount": 3,
            "methodsCount": 2
        },
        {
            "name": "Box",
            "description": "descriptionexamle",
            "RAMLVersion": "1.0",
            "location": "https://raw.githubusercontent.com/raml-apis/Box/raml1.0/boxAPI.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Box/raml1.0/boxAPI.json",
            "baseUri": "https://api.box.com/{version}/",
            "version": "2.0",
            "securitySchemes": [{"oauth_2_0": {
                "name": "oauth_2_0",
                "type": "OAuth 2.0",
                "description": "The Box API uses OAuth 2 for authentication. An authorization header containing\na valid access_token must be included in every request.\n",
                "describedBy": {
                    "queryParameters": {"access_token": {
                        "name": "access_token",
                        "displayName": "access_token",
                        "type": ["string"],
                        "repeat": false,
                        "required": true,
                        "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"Authorization\" header\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true}
                        }}
                    }},
                    "headers": {"Authorization": {
                        "name": "Authorization",
                        "displayName": "Authorization",
                        "type": ["string"],
                        "repeat": false,
                        "required": true,
                        "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"access_token\" query string parameter.\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true}
                        }}
                    }}
                },
                "settings": {
                    "accessTokenUri": "https://www.box.com/api/oauth2/token",
                    "authorizationUri": "https://www.box.com/api/oauth2/authorize",
                    "authorizationGrants": ["code"]
                }
            }}],
            "resourcesCount": 42,
            "methodsCount": 66
        },
        {
            "name": "Box.com upload API",
            "description": "descriptionexamle",
            "RAMLVersion": "1.0",
            "location": "https://raw.githubusercontent.com/raml-apis/Box/raml1.0/boxUploadAPI.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Box/raml1.0/boxUploadAPI.json",
            "baseUri": "https://upload.box.com/api/{version}",
            "version": "2.0",
            "securitySchemes": [{"oauth_2_0": {
                "name": "oauth_2_0",
                "type": "OAuth 2.0",
                "description": "The Box API uses OAuth 2 for authentication. An authorization header containing\na valid access_token must be included in every request.\n",
                "describedBy": {
                    "queryParameters": {"access_token": {
                        "name": "access_token",
                        "displayName": "access_token",
                        "type": ["string"],
                        "repeat": false,
                        "required": true,
                        "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"Authorization\" header\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true}
                        }}
                    }},
                    "headers": {"Authorization": {
                        "name": "Authorization",
                        "displayName": "Authorization",
                        "type": ["string"],
                        "repeat": false,
                        "required": true,
                        "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"access_token\" query string parameter.\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true}
                        }}
                    }}
                },
                "settings": {
                    "accessTokenUri": "https://www.box.com/api/oauth2/token",
                    "authorizationUri": "https://www.box.com/api/oauth2/authorize",
                    "authorizationGrants": ["code"]
                }
            }}],
            "resourcesCount": 3,
            "methodsCount": 2
        }
    ]}},
    {"GoogleContacts": {
        "logo": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/GoogleContacts/logo.png",
        "RAMLFiles": [{
            "name": "Google Contacts API",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/GoogleContacts/production/gc.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/GoogleContacts/production/gc.json",
            "baseUri": "https://www.google.com/m8/feeds",
            "version": "v3",
            "securitySchemes": [
                {"oauth_2_0": {
                    "name": "oauth_2_0",
                    "type": "OAuth 2.0",
                    "description": "Google recommend using OAuth 2.0 to authorize requests.\n",
                    "describedBy": {
                        "responses": {"401": {
                            "code": "401",
                            "description": "Authorization error.\n"
                        }},
                        "securedBy": [
                            "oauth_2_0",
                            "oauth_1_0"
                        ],
                        "queryParameters": {"access_token": {
                            "name": "access_token",
                            "displayName": "access_token",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Used to send a valid OAuth 2 access token\n",
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "required": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true}
                            }}
                        }},
                        "headers": {"Authorization": {
                            "name": "Authorization",
                            "displayName": "Authorization",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Used to send a valid OAuth 2 access token.\n",
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "required": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true}
                            }}
                        }},
                        "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                    },
                    "settings": {
                        "accessTokenUri": "https://accounts.google.com/o/oauth2/token",
                        "authorizationUri": "https://accounts.google.com/o/oauth2/auth",
                        "authorizationGrants": ["code"],
                        "scopes": ["https://www.google.com/m8/feeds"]
                    }
                }},
                {"oauth_1_0": {
                    "name": "oauth_1_0",
                    "type": "OAuth 1.0",
                    "description": "**Important**: OAuth 1.0 has been officially deprecated as of April 20, 2012. It will continue to work as per our deprecation policy,\nbut we encourage you to migrate to OAuth 2.0 as soon as possible.\n",
                    "settings": {
                        "requestTokenUri": "https://www.google.com/accounts/OAuthGetRequestToken",
                        "authorizationUri": "https://www.google.com/accounts/OAuthAuthorizeToken",
                        "tokenCredentialsUri": "https://www.google.com/accounts/OAuthGetAccessToken"
                    }
                }}
            ],
            "resourcesCount": 7,
            "methodsCount": 15,
            "developerPortalURI": "https://developers.google.com/google-apps/contacts/v3/"
        }]
    }},
    {"LinkedIn": {
        "logo": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/LinkedIn/logo.png",
        "RAMLFiles": [{
            "name": "LinkedIn",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/LinkedIn/production/linkedin.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/LinkedIn/production/linkedin.json",
            "baseUri": "https://api.linkedin.com/{version}",
            "version": "v1",
            "securitySchemes": [
                {"oauth_2_0": {
                    "name": "oauth_2_0",
                    "type": "OAuth 2.0",
                    "description": "LinkedIn supports OAuth 2.0 for authenticating all API requests.\n",
                    "describedBy": {
                        "securedBy": [
                            "oauth_2_0",
                            "oauth_1_0"
                        ],
                        "queryParameters": {"oauth2_access_token": {
                            "name": "oauth2_access_token",
                            "displayName": "oauth2_access_token",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Used to send a valid OAuth 2 access token\n",
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "required": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true}
                            }}
                        }},
                        "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                    },
                    "settings": {
                        "accessTokenUri": "https://www.linkedin.com/uas/oauth2/accessToken",
                        "authorizationUri": "https://www.linkedin.com/uas/oauth2/authorization",
                        "authorizationGrants": ["code"]
                    }
                }},
                {"oauth_1_0": {
                    "name": "oauth_1_0",
                    "type": "OAuth 1.0",
                    "description": "OAuth 1.0 continues to be supported for all API requests, but OAuth 2.0 is now preferred.\n",
                    "settings": {
                        "requestTokenUri": "https://api.linkedin.com/uas/oauth/requestToken",
                        "authorizationUri": "https//www.linkedin.com/uas/oauth/authenticate",
                        "tokenCredentialsUri": "https://api.linkedin.com/uas/oauth/accessToken"
                    }
                }}
            ],
            "resourcesCount": 59,
            "methodsCount": 60,
            "developerPortalURI": "https://developer.linkedin.com/rest​"
        }]
    }},
    {"Uber": {"RAMLFiles": [
        {
            "name": "Uber",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Uber/production/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Uber/production/api.json",
            "baseUri": "https://{apiMode}.uber.com/{version}",
            "version": "v1",
            "securitySchemes": [
                {"oauth_2_0": {
                    "name": "oauth_2_0",
                    "type": "OAuth 2.0",
                    "description": "Google recommend using OAuth 2.0 to authorize requests.\n",
                    "describedBy": {
                        "responses": {"401": {
                            "code": "401",
                            "description": "Authorization error.\n"
                        }},
                        "securedBy": ["oauth_2_0"],
                        "queryParameters": {"access_token": {
                            "name": "access_token",
                            "displayName": "access_token",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Used to send a valid OAuth 2 access token\n",
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "required": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true}
                            }}
                        }},
                        "headers": {"Authorization": {
                            "name": "Authorization",
                            "displayName": "Authorization",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Used to send a valid OAuth 2 access token.\n",
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "required": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true}
                            }}
                        }},
                        "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                    },
                    "settings": {
                        "accessTokenUri": "https://login.uber.com/oauth/token",
                        "authorizationUri": "https://login.uber.com/oauth/authorize",
                        "authorizationGrants": ["code"],
                        "scopes": [
                            "profile",
                            "history",
                            "history_lite",
                            "request",
                            "request_receipt"
                        ]
                    }
                }},
                {"bearer": {
                    "name": "bearer",
                    "type": "x-bearer",
                    "description": "Basically, you need to set the header 'Authorization' to 'Bearer <API_KEY>'. If you're having trouble with this, email support@stripe.com\n",
                    "describedBy": {
                        "securedBy": ["oauth_2_0"],
                        "headers": {"Authorization": {
                            "name": "Authorization",
                            "displayName": "Authorization",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "required": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true}
                            }}
                        }},
                        "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                    }
                }}
            ],
            "resourcesCount": 12,
            "methodsCount": 12
        },
        {
            "name": "Uber user activity",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Uber/production/userActivity.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Uber/production/userActivity.json",
            "baseUri": "https://{apiMode}.uber.com/{version}",
            "version": "v1.2",
            "securitySchemes": [
                {"oauth_2_0": {
                    "name": "oauth_2_0",
                    "type": "OAuth 2.0",
                    "description": "Google recommend using OAuth 2.0 to authorize requests.\n",
                    "describedBy": {
                        "responses": {"401": {
                            "code": "401",
                            "description": "Authorization error.\n"
                        }},
                        "securedBy": ["oauth_2_0"],
                        "queryParameters": {"access_token": {
                            "name": "access_token",
                            "displayName": "access_token",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Used to send a valid OAuth 2 access token\n",
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "required": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true}
                            }}
                        }},
                        "headers": {"Authorization": {
                            "name": "Authorization",
                            "displayName": "Authorization",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Used to send a valid OAuth 2 access token.\n",
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "required": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true}
                            }}
                        }},
                        "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                    },
                    "settings": {
                        "accessTokenUri": "https://login.uber.com/oauth/token",
                        "authorizationUri": "https://login.uber.com/oauth/authorize",
                        "authorizationGrants": ["code"],
                        "scopes": [
                            "profile",
                            "history",
                            "history_lite",
                            "request",
                            "request_receipt"
                        ]
                    }
                }},
                {"bearer": {
                    "name": "bearer",
                    "type": "x-bearer",
                    "description": "Basically, you need to set the header 'Authorization' to 'Bearer <API_KEY>'. If you're having trouble with this, email support@stripe.com\n",
                    "describedBy": {
                        "securedBy": ["oauth_2_0"],
                        "headers": {"Authorization": {
                            "name": "Authorization",
                            "displayName": "Authorization",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "required": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true}
                            }}
                        }},
                        "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                    }
                }}
            ],
            "resourcesCount": 1,
            "methodsCount": 1
        },
        {
            "name": "Uber",
            "description": "descriptionexamle",
            "RAMLVersion": "1.0",
            "location": "https://raw.githubusercontent.com/raml-apis/Uber/raml1.0/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Uber/raml1.0/api.json",
            "baseUri": "https://{apiMode}.uber.com/{version}",
            "version": "v1",
            "securitySchemes": [
                {"oauth_2_0": {
                    "name": "oauth_2_0",
                    "type": "OAuth 2.0",
                    "description": "Google recommend using OAuth 2.0 to authorize requests.\n",
                    "describedBy": {
                        "queryParameters": {"access_token": {
                            "name": "access_token",
                            "displayName": "access_token",
                            "type": ["string"],
                            "repeat": false,
                            "required": true,
                            "description": "Used to send a valid OAuth 2 access token\n",
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true},
                                "required": {"insertedAsDefault": true}
                            }}
                        }},
                        "headers": {"Authorization": {
                            "name": "Authorization",
                            "displayName": "Authorization",
                            "type": ["string"],
                            "repeat": false,
                            "required": true,
                            "description": "Used to send a valid OAuth 2 access token.\n",
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true},
                                "required": {"insertedAsDefault": true}
                            }}
                        }},
                        "responses": [{
                            "code": "401",
                            "description": "Authorization error.\n"
                        }]
                    },
                    "settings": {
                        "accessTokenUri": "https://login.uber.com/oauth/token",
                        "authorizationUri": "https://login.uber.com/oauth/authorize",
                        "authorizationGrants": ["code"],
                        "scopes": [
                            "profile",
                            "history",
                            "history_lite",
                            "request",
                            "request_receipt"
                        ]
                    }
                }},
                {"bearer": {
                    "name": "bearer",
                    "type": "x-bearer",
                    "description": "Basically, you need to set the header 'Authorization' to 'Bearer <API_KEY>'. If you're having trouble with this, email support@stripe.com\n",
                    "describedBy": {"headers": {"Authorization": {
                        "name": "Authorization",
                        "displayName": "Authorization",
                        "type": ["string"],
                        "repeat": false,
                        "required": true,
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true}
                        }}
                    }}}
                }}
            ],
            "resourcesCount": 12,
            "methodsCount": 12
        },
        {
            "name": "Uber user activity",
            "description": "descriptionexamle",
            "RAMLVersion": "1.0",
            "location": "https://raw.githubusercontent.com/raml-apis/Uber/raml1.0/userActivity.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Uber/raml1.0/userActivity.json",
            "baseUri": "https://{apiMode}.uber.com/{version}",
            "version": "v1.2",
            "securitySchemes": [
                {"oauth_2_0": {
                    "name": "oauth_2_0",
                    "type": "OAuth 2.0",
                    "description": "Google recommend using OAuth 2.0 to authorize requests.\n",
                    "describedBy": {
                        "queryParameters": {"access_token": {
                            "name": "access_token",
                            "displayName": "access_token",
                            "type": ["string"],
                            "repeat": false,
                            "required": true,
                            "description": "Used to send a valid OAuth 2 access token\n",
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true},
                                "required": {"insertedAsDefault": true}
                            }}
                        }},
                        "headers": {"Authorization": {
                            "name": "Authorization",
                            "displayName": "Authorization",
                            "type": ["string"],
                            "repeat": false,
                            "required": true,
                            "description": "Used to send a valid OAuth 2 access token.\n",
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true},
                                "required": {"insertedAsDefault": true}
                            }}
                        }},
                        "responses": [{
                            "code": "401",
                            "description": "Authorization error.\n"
                        }]
                    },
                    "settings": {
                        "accessTokenUri": "https://login.uber.com/oauth/token",
                        "authorizationUri": "https://login.uber.com/oauth/authorize",
                        "authorizationGrants": ["code"],
                        "scopes": [
                            "profile",
                            "history",
                            "history_lite",
                            "request",
                            "request_receipt"
                        ]
                    }
                }},
                {"bearer": {
                    "name": "bearer",
                    "type": "x-bearer",
                    "description": "Basically, you need to set the header 'Authorization' to 'Bearer <API_KEY>'. If you're having trouble with this, email support@stripe.com\n",
                    "describedBy": {"headers": {"Authorization": {
                        "name": "Authorization",
                        "displayName": "Authorization",
                        "type": ["string"],
                        "repeat": false,
                        "required": true,
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true}
                        }}
                    }}}
                }}
            ],
            "resourcesCount": 1,
            "methodsCount": 1
        }
    ]}},
    {"Slack": {
        "logo": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Slack/logo.png",
        "RAMLFiles": [
            {
                "name": "Slack",
                "description": "descriptionexamle",
                "RAMLVersion": "0.8",
                "location": "https://raw.githubusercontent.com/raml-apis/Slack/production/slack.raml",
                "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Slack/production/slack.json",
                "baseUri": "https://slack.com/api",
                "securitySchemes": [{"oauth_2_0": {
                    "name": "oauth_2_0",
                    "type": "OAuth 2.0",
                    "description": "",
                    "describedBy": {
                        "securedBy": ["oauth_2_0"],
                        "queryParameters": {"token": {
                            "name": "token",
                            "displayName": "token",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Used to send a valid OAuth 2 access token. \n",
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "required": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true}
                            }}
                        }},
                        "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                    },
                    "settings": {
                        "accessTokenUri": "https://slack.com/api/oauth.access",
                        "authorizationUri": "https://slack.com/oauth/authorize",
                        "authorizationGrants": ["code"],
                        "scopes": [
                            "identify",
                            "read",
                            "post"
                        ]
                    }
                }}],
                "resourcesCount": 29,
                "methodsCount": 29,
                "developerPortalURI": "https://api.slack.com/"
            },
            {
                "name": "Slack",
                "description": "descriptionexamle",
                "RAMLVersion": "1.0",
                "location": "https://raw.githubusercontent.com/raml-apis/Slack/raml1.0/slack.raml",
                "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Slack/raml1.0/slack.json",
                "baseUri": "https://slack.com/api",
                "securitySchemes": [{"oauth_2_0": {
                    "name": "oauth_2_0",
                    "type": "OAuth 2.0",
                    "description": "",
                    "describedBy": {"queryParameters": {"token": {
                        "name": "token",
                        "displayName": "token",
                        "type": ["string"],
                        "repeat": false,
                        "required": true,
                        "description": "Used to send a valid OAuth 2 access token. \n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true}
                        }}
                    }}},
                    "settings": {
                        "accessTokenUri": "https://slack.com/api/oauth.access",
                        "authorizationUri": "https://slack.com/oauth/authorize",
                        "authorizationGrants": ["code"],
                        "scopes": [
                            "identify",
                            "read",
                            "post"
                        ]
                    }
                }}],
                "resourcesCount": 29,
                "methodsCount": 29,
                "developerPortalURI": "https://api.slack.com/"
            }
        ]
    }},
    {"SalesforceChatter": {"RAMLFiles": [{
        "name": "Chatter",
        "description": "descriptionexamle",
        "RAMLVersion": "0.8",
        "location": "https://raw.githubusercontent.com/raml-apis/SalesforceChatter/production/api.raml",
        "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/SalesforceChatter/production/api.json",
        "baseUri": "https://na1.salesforce.com/services/data/{version}",
        "version": "v34.0",
        "resourcesCount": 295,
        "methodsCount": 639
    }]}},
    {"Office365": {"RAMLFiles": [
        {
            "name": "Office 365",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Office365/master/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Office365/master/api.json",
            "baseUri": "https://outlook.office365.com/ews/odata/Me",
            "resourcesCount": 39,
            "methodsCount": 67
        },
        {
            "name": "Files REST API in Office 365",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Office365/master/fileAPI.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Office365/master/fileAPI.json",
            "baseUri": "https://outlook.office365.com/ews/odata/Me",
            "resourcesCount": 10,
            "methodsCount": 13
        },
        {
            "name": "Office 365",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Office365/staging/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Office365/staging/api.json",
            "baseUri": "https://outlook.office365.com/ews/odata/Me",
            "resourcesCount": 39,
            "methodsCount": 67
        },
        {
            "name": "Files REST API in Office 365",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Office365/staging/fileAPI.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Office365/staging/fileAPI.json",
            "baseUri": "https://outlook.office365.com/ews/odata/Me",
            "resourcesCount": 10,
            "methodsCount": 13
        }
    ]}},
    {"Magento": {"RAMLFiles": [
        {
            "name": "Magento",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Magento/master/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Magento/master/api.json",
            "baseUri": "{protocol}://{domain}/api/rest",
            "version": "1",
            "securitySchemes": [{"oauth_1_0": {
                "name": "oauth_1_0",
                "type": "OAuth 1.0",
                "description": "",
                "settings": {
                    "requestTokenUri": "{protocol}://{domain}/oauth/initiate",
                    "authorizationUri": "{protocol}://{domain}/oauth/oauth_authorize",
                    "tokenCredentialsUri": "{protocol}://{domain}/oauth/token"
                }
            }}],
            "resourcesCount": 24,
            "methodsCount": 43
        },
        {
            "name": "Magento",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Magento/staging/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Magento/staging/api.json",
            "baseUri": "{protocol}://{domain}/api/rest",
            "version": "1",
            "securitySchemes": [{"oauth_1_0": {
                "name": "oauth_1_0",
                "type": "OAuth 1.0",
                "description": "",
                "settings": {
                    "requestTokenUri": "{protocol}://{domain}/oauth/initiate",
                    "authorizationUri": "{protocol}://{domain}/oauth/oauth_authorize",
                    "tokenCredentialsUri": "{protocol}://{domain}/oauth/token"
                }
            }}],
            "resourcesCount": 24,
            "methodsCount": 43
        }
    ]}},
    {"Wordpress": {"RAMLFiles": [
        {
            "name": "WordPress API",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Wordpress/master/wordpress.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Wordpress/master/wordpress.json",
            "baseUri": "https://public-api.wordpress.com/rest/{version}",
            "version": "v1.1",
            "securitySchemes": [{"oauth_2_0": {
                "name": "oauth_2_0",
                "type": "OAuth 2.0",
                "description": "WordPress supports OAuth 2.0 for authenticating all API requests.\n\n**Receiving an Access Token**\nTo act on a user's behalf and make calls from our API you will need an access token. To get an access token you need to go through the access token flow and prompt the user to authorize your application to act on his or her behalf.\n\nAccess tokens are currently per blog per user for most of our endpoints. This means that you will need a separate access token for each blog that a user owns and that you want access to. There are certain endpoints like likes and follows where you can use a users token on any blog to act on their behalf.\n\nTo begin, you will need to send the user to the authorization endpoint.\n\nhttps://public-api.wordpress.com/oauth2/authorize?client_id=your_client_id&redirect_uri=your_url&response_type=code\n\nclient_id should be set to your application's client id. response_type should always be set to 'code'. redirect_uri should be set to the URL that the user will be redirected back to after the request is authorized. The redirect_uri should be set in the applications manager.\n\nThe redirect to your application will include a code which you will need in the next step. If the user has denied access to your app, the redirect will include ?error=access_denied\n\nOptionally you may also pass along a blog parameter (&blog=) with the URL to a WordPress.com blog or Jetpack site. If you do not pass along a URL, or if the user does not have administrative access to manage the blog you passed along, then the user will be prompted to select the blog they are granting you access to.\n\nOnce the user has authorized the request, he or she will be redirected to the redirect_url. The request will look like the following:\n\nhttp://developer.wordpress.com/?code=cw9hk1xG9k\n\nThis is a time-limited code that your application can exchange for a full authorization token. To do this you will need to pass the code to the token endpoint by making a POST request to the token endpoint: https://public-api.wordpress.com/oauth2/token.\n\n<pre><code>$curl = curl_init( \"https://public-api.wordpress.com/oauth2/token\" );\ncurl_setopt( $curl, CURLOPT_POST, true );\ncurl_setopt( $curl, CURLOPT_POSTFIELDS, array(\n    'client_id' => your_client_id,\n    'redirect_uri' => your_redirect_url,\n    'client_secret' => your_client_secret_key,\n    'code' => $_GET['code'], // The code from the previous request\n    'grant_type' => 'authorization_code'\n) );\ncurl_setopt( $curl, CURLOPT_RETURNTRANSFER, 1);\n$auth = curl_exec( $curl );\n$secret = json_decode($auth);\n$access_key = $secret->access_token;</pre></code>\n\nYou are required to pass client_id, client_secret, and redirect_uri for web applications. These parameters have to match the details for your application, and the redirect_uri must match the redirect_uri used during the Authorize step (above). grant_type has to be set to 'authorization_code'. code must match the code you received in the redirect.\n\nIf everything works correctly and the user grants authorization, you will get back a JSON-encoded string containing the token and some basic information about the blog:\n\n<pre><code>{\n    \"access_token\": \"YOUR_API_TOKEN\",\n    \"blog_id\": \"blog id\",\n    \"blog_url\": \"blog url\",\n    \"token_type\": \"bearer\"\n}</pre></code>\nYou now have an access token which should be stored securely with the blog id and blog url. This access token allows our application to act on the behalf of the user on this specific blog.\n",
                "describedBy": {
                    "securedBy": ["oauth_2_0"],
                    "headers": {"Authorization": {
                        "name": "Authorization",
                        "displayName": "Authorization",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Used to send a valid OAuth 2 access token. In order to make an authenticated call to your APIS, you need to include your access token with the call. OAuth2 uses a BEARER token that is passed along in an Authorization header.\n\nThis sould contain the string \"Bearer\" and your API token joined with the space char:\n\"Bearer \" + YOUR_API_TOKEN.\n\nExample:\n<pre><code><?php\n  $access_key = \"YOUR_API_TOKEN\";\n  $curl = curl_init( \"https://public-api.wordpress.com/rest/v1/sites/33534099/posts/43/?pretty=true\" );\n  curl_setopt( $curl, CURLOPT_HTTPHEADER, array( 'Authorization: Bearer ' . $access_key ) );\n  curl_exec( $curl );\n?></code></pre>\n\nThe above example would return blog post '43' from the developer blog.\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    }},
                    "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                },
                "settings": {
                    "accessTokenUri": "https://public-api.wordpress.com/oauth2/token",
                    "authorizationUri": "https://public-api.wordpress.com/oauth2/authorize",
                    "authorizationGrants": [
                        "code",
                        "token"
                    ]
                }
            }}],
            "resourcesCount": 56,
            "methodsCount": 53
        },
        {
            "name": "WordPress API",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Wordpress/staging/wordpress.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Wordpress/staging/wordpress.json",
            "baseUri": "https://public-api.wordpress.com/rest/{version}",
            "version": "v1.1",
            "securitySchemes": [{"oauth_2_0": {
                "name": "oauth_2_0",
                "type": "OAuth 2.0",
                "description": "WordPress supports OAuth 2.0 for authenticating all API requests.\n\n**Receiving an Access Token**\nTo act on a user's behalf and make calls from our API you will need an access token. To get an access token you need to go through the access token flow and prompt the user to authorize your application to act on his or her behalf.\n\nAccess tokens are currently per blog per user for most of our endpoints. This means that you will need a separate access token for each blog that a user owns and that you want access to. There are certain endpoints like likes and follows where you can use a users token on any blog to act on their behalf.\n\nTo begin, you will need to send the user to the authorization endpoint.\n\nhttps://public-api.wordpress.com/oauth2/authorize?client_id=your_client_id&redirect_uri=your_url&response_type=code\n\nclient_id should be set to your application's client id. response_type should always be set to 'code'. redirect_uri should be set to the URL that the user will be redirected back to after the request is authorized. The redirect_uri should be set in the applications manager.\n\nThe redirect to your application will include a code which you will need in the next step. If the user has denied access to your app, the redirect will include ?error=access_denied\n\nOptionally you may also pass along a blog parameter (&blog=) with the URL to a WordPress.com blog or Jetpack site. If you do not pass along a URL, or if the user does not have administrative access to manage the blog you passed along, then the user will be prompted to select the blog they are granting you access to.\n\nOnce the user has authorized the request, he or she will be redirected to the redirect_url. The request will look like the following:\n\nhttp://developer.wordpress.com/?code=cw9hk1xG9k\n\nThis is a time-limited code that your application can exchange for a full authorization token. To do this you will need to pass the code to the token endpoint by making a POST request to the token endpoint: https://public-api.wordpress.com/oauth2/token.\n\n<pre><code>$curl = curl_init( \"https://public-api.wordpress.com/oauth2/token\" );\ncurl_setopt( $curl, CURLOPT_POST, true );\ncurl_setopt( $curl, CURLOPT_POSTFIELDS, array(\n    'client_id' => your_client_id,\n    'redirect_uri' => your_redirect_url,\n    'client_secret' => your_client_secret_key,\n    'code' => $_GET['code'], // The code from the previous request\n    'grant_type' => 'authorization_code'\n) );\ncurl_setopt( $curl, CURLOPT_RETURNTRANSFER, 1);\n$auth = curl_exec( $curl );\n$secret = json_decode($auth);\n$access_key = $secret->access_token;</pre></code>\n\nYou are required to pass client_id, client_secret, and redirect_uri for web applications. These parameters have to match the details for your application, and the redirect_uri must match the redirect_uri used during the Authorize step (above). grant_type has to be set to 'authorization_code'. code must match the code you received in the redirect.\n\nIf everything works correctly and the user grants authorization, you will get back a JSON-encoded string containing the token and some basic information about the blog:\n\n<pre><code>{\n    \"access_token\": \"YOUR_API_TOKEN\",\n    \"blog_id\": \"blog id\",\n    \"blog_url\": \"blog url\",\n    \"token_type\": \"bearer\"\n}</pre></code>\nYou now have an access token which should be stored securely with the blog id and blog url. This access token allows our application to act on the behalf of the user on this specific blog.\n",
                "describedBy": {
                    "securedBy": ["oauth_2_0"],
                    "headers": {"Authorization": {
                        "name": "Authorization",
                        "displayName": "Authorization",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Used to send a valid OAuth 2 access token. In order to make an authenticated call to your APIS, you need to include your access token with the call. OAuth2 uses a BEARER token that is passed along in an Authorization header.\n\nThis sould contain the string \"Bearer\" and your API token joined with the space char:\n\"Bearer \" + YOUR_API_TOKEN.\n\nExample:\n<pre><code><?php\n  $access_key = \"YOUR_API_TOKEN\";\n  $curl = curl_init( \"https://public-api.wordpress.com/rest/v1/sites/33534099/posts/43/?pretty=true\" );\n  curl_setopt( $curl, CURLOPT_HTTPHEADER, array( 'Authorization: Bearer ' . $access_key ) );\n  curl_exec( $curl );\n?></code></pre>\n\nThe above example would return blog post '43' from the developer blog.\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    }},
                    "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                },
                "settings": {
                    "accessTokenUri": "https://public-api.wordpress.com/oauth2/token",
                    "authorizationUri": "https://public-api.wordpress.com/oauth2/authorize",
                    "authorizationGrants": [
                        "code",
                        "token"
                    ]
                }
            }}],
            "resourcesCount": 56,
            "methodsCount": 53
        }
    ]}},
    {"Instagram": {"RAMLFiles": [
        {
            "name": "Instagram",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Instagram/production/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Instagram/production/api.json",
            "baseUri": "https://api.instagram.com/{version}/",
            "version": "v1",
            "securitySchemes": [
                {"oauth_2_0": {
                    "name": "oauth_2_0",
                    "type": "OAuth 2.0",
                    "description": "Instagram's API uses the OAuth 2.0 protocol for simple, but effective\nauthentication and authorization. The one thing to keep in mind is tha\nall requests to the API must be made over SSL (https:// not http://)\n",
                    "describedBy": {
                        "securedBy": [
                            "oauth_2_0",
                            "clientId"
                        ],
                        "queryParameters": {"access_token": {
                            "name": "access_token",
                            "displayName": "access_token",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"Authorization\" header\n",
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "required": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true}
                            }}
                        }},
                        "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                    },
                    "settings": {
                        "accessTokenUri": "https://api.instagram.com/oauth/access_token",
                        "authorizationUri": "https://api.instagram.com/oauth/authorize",
                        "authorizationGrants": [
                            "code",
                            "token"
                        ],
                        "scopes": [
                            "basic",
                            "comments",
                            "relationships",
                            "likes"
                        ]
                    }
                }},
                {"clientId": {
                    "name": "clientId",
                    "type": "x-customHeader",
                    "description": "in many situations, you may not need to authenticate users at all.\nFor instance, you may request popular photos without authenticating\n(i.e. you do not need to provide an access_token; just use your client ID with your request).\nWe only require authentication in cases where your application is making requests on behalf of a user\n(commenting, liking, browsing a user's feed, etc.).\n",
                    "describedBy": {
                        "securedBy": [
                            "oauth_2_0",
                            "clientId"
                        ],
                        "queryParameters": {"client_id": {
                            "name": "client_id",
                            "displayName": "client_id",
                            "type": "string",
                            "required": false,
                            "example": "9e0dbc0a3b8d436ca65ae2df9825c893",
                            "repeat": false,
                            "description": "Client_id is is identifier of  your server, script, or program with a specific application\nthis parameter is required if you are accessing APIs without authenticating\n",
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "required": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true}
                            }}
                        }},
                        "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                    }
                }}
            ],
            "resourcesCount": 28,
            "methodsCount": 30,
            "developerPortalURI": "http://instagram.com/developer​"
        },
        {
            "name": "Instagram",
            "description": "descriptionexamle",
            "RAMLVersion": "1.0",
            "location": "https://raw.githubusercontent.com/raml-apis/Instagram/raml1.0/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Instagram/raml1.0/api.json",
            "baseUri": "https://api.instagram.com/{version}/",
            "version": "v1",
            "securitySchemes": [
                {"oauth_2_0": {
                    "name": "oauth_2_0",
                    "type": "OAuth 2.0",
                    "description": "Instagram's API uses the OAuth 2.0 protocol for simple, but effective\nauthentication and authorization. The one thing to keep in mind is tha\nall requests to the API must be made over SSL (https:// not http://)\n",
                    "describedBy": {"queryParameters": {"access_token": {
                        "name": "access_token",
                        "displayName": "access_token",
                        "type": ["string"],
                        "repeat": false,
                        "required": true,
                        "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"Authorization\" header\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true}
                        }}
                    }}},
                    "settings": {
                        "accessTokenUri": "https://api.instagram.com/oauth/access_token",
                        "authorizationUri": "https://api.instagram.com/oauth/authorize",
                        "authorizationGrants": [
                            "code",
                            "token"
                        ],
                        "scopes": [
                            "basic",
                            "comments",
                            "relationships",
                            "likes"
                        ]
                    }
                }},
                {"clientId": {
                    "name": "clientId",
                    "type": "x-customHeader",
                    "description": "in many situations, you may not need to authenticate users at all.\nFor instance, you may request popular photos without authenticating\n(i.e. you do not need to provide an access_token; just use your client ID with your request).\nWe only require authentication in cases where your application is making requests on behalf of a user\n(commenting, liking, browsing a user's feed, etc.).\n",
                    "describedBy": {"queryParameters": {"client_id": {
                        "name": "client_id",
                        "displayName": "client_id",
                        "type": ["string"],
                        "example": "9e0dbc0a3b8d436ca65ae2df9825c893",
                        "repeat": false,
                        "required": true,
                        "description": "Client_id is is identifier of  your server, script, or program with a specific application\nthis parameter is required if you are accessing APIs without authenticating\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true}
                        }},
                        "structuredExample": {
                            "value": "9e0dbc0a3b8d436ca65ae2df9825c893",
                            "strict": true,
                            "name": null,
                            "structuredValue": "9e0dbc0a3b8d436ca65ae2df9825c893"
                        }
                    }}}
                }}
            ],
            "resourcesCount": 28,
            "methodsCount": 30,
            "developerPortalURI": "http://instagram.com/developer​"
        }
    ]}},
    {"Twilio": {
        "logo": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Twilio/logo.png",
        "RAMLFiles": [{
            "name": "Twilio API",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Twilio/production/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Twilio/production/api.json",
            "baseUri": "https://api.twilio.com/{version}",
            "version": "2010-04-01",
            "securitySchemes": [{"basic": {
                "name": "basic",
                "type": "Basic Authentication",
                "describedBy": {
                    "securedBy": ["basic"],
                    "headers": {"Authorization": {
                        "name": "Authorization",
                        "displayName": "Authorization",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "The Authorization field value consists of credentials\ncontaining the authentication information of the user agent for the\nrealm of the resource being requested.\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    }},
                    "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                }
            }}],
            "resourcesCount": 86,
            "methodsCount": 116,
            "developerPortalURI": "www.twilio.com/docs/api/rest"
        }]
    }},
    {"Zillow": {"RAMLFiles": [{
        "name": "Zillow",
        "description": "descriptionexamle",
        "RAMLVersion": "0.8",
        "location": "https://raw.githubusercontent.com/raml-apis/Zillow/production/api.raml",
        "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Zillow/production/api.json",
        "baseUri": "http://www.zillow.com/webservice",
        "securitySchemes": [{"zwsIdSchema": {
            "name": "zwsIdSchema",
            "type": "x-zws-id-schema",
            "describedBy": {
                "securedBy": ["zwsIdSchema"],
                "queryParameters": {"zws-id": {
                    "name": "zws-id",
                    "displayName": "zws-id",
                    "type": "string",
                    "required": false,
                    "repeat": false,
                    "description": "The Zillow Web Service Identifier. Each subscriber to Zillow Web Services is uniquely\nidentified by an ID sequence and every request to Web services requires this ID.\n",
                    "__METADATA__": {"primitiveValuesMeta": {
                        "displayName": {"calculated": true},
                        "type": {"insertedAsDefault": true},
                        "required": {"insertedAsDefault": true},
                        "repeat": {"insertedAsDefault": true}
                    }}
                }},
                "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
            }
        }}],
        "resourcesCount": 14,
        "methodsCount": 13,
        "developerPortalURI": "http://www.zillow.com/howto/api/APIOverview.htm"
    }]}},
    {"StackExchange": {
        "logo": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/StackExchange/logo.png",
        "RAMLFiles": [{
            "name": "StackExchange",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/StackExchange/production/stackExchange.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/StackExchange/production/stackExchange.json",
            "baseUri": "https://api.stackexchange.com/{version}",
            "version": "2.0",
            "securitySchemes": [{"oauth_2_0": {
                "name": "oauth_2_0",
                "type": "OAuth 2.0",
                "description": "The Stack Exchange API offers user authentication via OAuth 2.0, specifically templated after Facebook's implementation. There are two flows, an explicit grant for server side applications and an implicit one for pure browser based ones.\n\n#The explicit OAuth 2.0 flow consists of the following steps:\n1. Send a user to https://stackexchange.com/oauth, with these query string parameters\n- client_id\n- scope\n- redirect_uri - must be under an apps registered domain\n- state - optional\n2. The user approves your app\n3. The user is redirected to redirect_uri, with these query string parameters\n- code\n- state - optional, only returned if provided in the first step\n4. POST (application/x-www-form-urlencoded) the following parameters to https://stackexchange.com/oauth/access_token\n- client_id\n- client_secret\n- code - from the previous step\n- redirect_uri - must be the same as the provided in the first step\nThis request is responded to with either an error (HTTP status code 400) or an access token of the form access_token=...&expires=1234. expires will only be set if scope does not include no_expiry, the use of which is strongly advised against unless your app truly needs perpetual access.\n\n#The implicit OAuth 2.0 flow consists of the following steps:\n\n1. Open a new window at https://stackexchange.com/oauth/dialog, with these query string parameters\n- client_id\n- scope (details)\n- redirect_uri - must be under an apps registered domain\n- state - optional\n2. The user approves your app\n3. The user is redirected to redirect_uri, with these parameters in the hash\n- access_token\n- expires - optional, only if scope doesn't contain no_expiry\nThe explicit flow should be used by server-side applications, with special care taken to never leak client_secret. Client side applications should use the implicit flow.\n\nOnce you have authenticated a user once, regardless of flow, subsequent re-authorizations will occur without requiring user action. Naturally, should a user revoke an applications permissions then further action will be required to re-authorize.\n\nApplications using the implicit flow can make use of our provided minimalistic Javascript SDK.\n\n#Scope\n\nWith an empty scope, authentication will only allow an application to identify a user via the /me method. In order to access other information, different scope values must be sent. Multiple values may be sent in scope by comma or space delimitting them.\n\n- read_inbox - access a user's global inbox\n- no_expiry - access_token's with this scope do not expire\n- write_access - perform write operations as a user 2.1\n- private_info - access full history of a user's private actions on the site 2.1\n\n#Desktop Applications\n\nDesktop applications cannot participate directly in OAuth 2.0 flows, however the embeddable browser controls available in most frameworks make it possible to work around this limitation.\n\nDesktop applications should use the implicit client-side flow, hosting the process within a browser control. For redirect_uri, a value of https://stackexchange.com/oauth/login_success should be used. Upon a successful authentication, access_token will be placed in the url hash as with a standard implicit authentication.\n\n#Usage\n\nAccess tokens can be passed (as access_token) to any method to grant applications an increased throttle quota. When passing an access token an app must pass its request key as well, if you don't have a request key you can obtain one by registering your application on Stack Apps (http://stackapps.com/users/login?returnurl=/apps/oauth/register).\n",
                "describedBy": {
                    "securedBy": ["oauth_2_0"],
                    "queryParameters": {
                        "access_token": {
                            "name": "access_token",
                            "displayName": "access_token",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true}
                            }}
                        },
                        "key": {
                            "name": "key",
                            "displayName": "key",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true}
                            }}
                        }
                    },
                    "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                },
                "settings": {
                    "accessTokenUri": "https://stackexchange.com/oauth/access_token",
                    "authorizationUri": "https://stackexchange.com/oauth",
                    "authorizationGrants": ["token"]
                }
            }}],
            "resourcesCount": 141,
            "methodsCount": 124,
            "developerPortalURI": "https://api.stackexchange.com/docs​"
        }]
    }},
    {"XKCD": {
        "logo": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/XKCD/logo.png",
        "RAMLFiles": [
            {
                "name": "XKCD",
                "description": "descriptionexamle",
                "RAMLVersion": "0.8",
                "location": "https://raw.githubusercontent.com/raml-apis/XKCD/production/api.raml",
                "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/XKCD/production/api.json",
                "baseUri": "http://xkcd.com",
                "resourcesCount": 2,
                "methodsCount": 2,
                "developerPortalURI": "http://xkcd.com/about"
            },
            {
                "name": "XKCD",
                "description": "descriptionexamle",
                "RAMLVersion": "1.0",
                "location": "https://raw.githubusercontent.com/raml-apis/XKCD/raml1.0/api.raml",
                "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/XKCD/raml1.0/api.json",
                "baseUri": "http://xkcd.com",
                "resourcesCount": 2,
                "methodsCount": 2,
                "developerPortalURI": "http://xkcd.com/about"
            }
        ]
    }},
    {"GrooveShark": {"RAMLFiles": [
        {
            "name": "Grooveshark API",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/GrooveShark/master/grooveshark.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/GrooveShark/master/grooveshark.json",
            "baseUri": "http://api.grooveshark.com/ws3.php",
            "version": "3",
            "resourcesCount": 1,
            "methodsCount": 1
        },
        {
            "name": "Grooveshark API",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/GrooveShark/staging/grooveshark.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/GrooveShark/staging/grooveshark.json",
            "baseUri": "http://api.grooveshark.com/ws3.php",
            "version": "3",
            "resourcesCount": 1,
            "methodsCount": 1
        }
    ]}},
    {"AmazonS3": {"RAMLFiles": [
        {
            "name": "Amazon S3 Buckets",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/AmazonS3/production/amazonS3Bucket.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/AmazonS3/production/amazonS3Bucket.json",
            "baseUri": "https://{bucketName}.{region}.amazonaws.com/",
            "version": "2006-03-01",
            "resourcesCount": 22,
            "methodsCount": 47
        },
        {
            "name": "Amazon S3 Services",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/AmazonS3/production/amazonS3Services.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/AmazonS3/production/amazonS3Services.json",
            "baseUri": "https://s3.amazonaws.com/",
            "version": "2006-03-01",
            "resourcesCount": 1,
            "methodsCount": 1
        }
    ]}},
    {"GitHub": {"RAMLFiles": [
        {
            "name": "GitHub",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/GitHub/production/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/GitHub/production/api.json",
            "baseUri": "https://api.github.com",
            "version": "v3",
            "securitySchemes": [{"oauth_2_0": {
                "name": "oauth_2_0",
                "type": "OAuth 2.0",
                "description": "OAuth2 is a protocol that lets external apps request authorization to private\ndetails in a user's GitHub account without getting their password. This is\npreferred over Basic Authentication because tokens can be limited to specific\ntypes of data, and can be revoked by users at any time.\n",
                "describedBy": {
                    "responses": {"404": {
                        "code": "404",
                        "description": "Unauthorized"
                    }},
                    "securedBy": ["oauth_2_0"],
                    "queryParameters": {"access_token": {
                        "name": "access_token",
                        "displayName": "access_token",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"Authorization\" header\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    }},
                    "headers": {"Authorization": {
                        "name": "Authorization",
                        "displayName": "Authorization",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"access_token\" query string parameter.\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    }},
                    "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                },
                "settings": {
                    "accessTokenUri": "https://github.com/login/oauth/access_token",
                    "authorizationUri": "https://github.com/login/oauth/authorize",
                    "authorizationGrants": ["code"],
                    "scopes": [
                        "user",
                        "user:email",
                        "user:follow",
                        "public_repo",
                        "repo",
                        "repo:status",
                        "delete_repo",
                        "notifications",
                        "gist"
                    ]
                }
            }}],
            "resourcesCount": 161,
            "methodsCount": 244
        },
        {
            "name": "GitHub Upload",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/GitHub/production/uploadsApi.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/GitHub/production/uploadsApi.json",
            "baseUri": "https://uploads.github.com/",
            "version": "v3",
            "securitySchemes": [{"oauth_2_0": {
                "name": "oauth_2_0",
                "type": "OAuth 2.0",
                "description": "OAuth2 is a protocol that lets external apps request authorization to private\ndetails in a user's GitHub account without getting their password. This is\npreferred over Basic Authentication because tokens can be limited to specific\ntypes of data, and can be revoked by users at any time.\n",
                "describedBy": {
                    "responses": {"404": {
                        "code": "404",
                        "description": "Unauthorized"
                    }},
                    "securedBy": ["oauth_2_0"],
                    "queryParameters": {"access_token": {
                        "name": "access_token",
                        "displayName": "access_token",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"Authorization\" header\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    }},
                    "headers": {"Authorization": {
                        "name": "Authorization",
                        "displayName": "Authorization",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"access_token\" query string parameter.\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    }},
                    "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                },
                "settings": {
                    "accessTokenUri": "https://github.com/login/oauth/access_token",
                    "authorizationUri": "https://github.com/login/oauth/authorize",
                    "authorizationGrants": ["code"],
                    "scopes": [
                        "user",
                        "user:email",
                        "user:follow",
                        "public_repo",
                        "repo",
                        "repo:status",
                        "delete_repo",
                        "notifications",
                        "gist"
                    ]
                }
            }}],
            "resourcesCount": 2,
            "methodsCount": 1
        },
        {
            "name": "GitHub",
            "description": "descriptionexamle",
            "RAMLVersion": "1.0",
            "location": "https://raw.githubusercontent.com/raml-apis/GitHub/raml1.0/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/GitHub/raml1.0/api.json",
            "baseUri": "https://api.github.com",
            "version": "v3",
            "securitySchemes": [{"oauth_2_0": {
                "name": "oauth_2_0",
                "type": "OAuth 2.0",
                "description": "OAuth2 is a protocol that lets external apps request authorization to private\ndetails in a user's GitHub account without getting their password. This is\npreferred over Basic Authentication because tokens can be limited to specific\ntypes of data, and can be revoked by users at any time.\n",
                "describedBy": {
                    "queryParameters": {"access_token": {
                        "name": "access_token",
                        "displayName": "access_token",
                        "type": ["string"],
                        "repeat": false,
                        "required": true,
                        "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"Authorization\" header\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true}
                        }}
                    }},
                    "headers": {"Authorization": {
                        "name": "Authorization",
                        "displayName": "Authorization",
                        "type": ["string"],
                        "repeat": false,
                        "required": true,
                        "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"access_token\" query string parameter.\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true}
                        }}
                    }},
                    "responses": [{
                        "code": "404",
                        "description": "Unauthorized"
                    }]
                },
                "settings": {
                    "accessTokenUri": "https://github.com/login/oauth/access_token",
                    "authorizationUri": "https://github.com/login/oauth/authorize",
                    "authorizationGrants": ["code"],
                    "scopes": [
                        "user",
                        "user:email",
                        "user:follow",
                        "public_repo",
                        "repo",
                        "repo:status",
                        "delete_repo",
                        "notifications",
                        "gist"
                    ]
                }
            }}],
            "resourcesCount": 162,
            "methodsCount": 245
        },
        {
            "name": "GitHub Upload",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/GitHub/raml1.0/uploadsApi.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/GitHub/raml1.0/uploadsApi.json",
            "baseUri": "https://uploads.github.com/",
            "version": "v3",
            "securitySchemes": [{"oauth_2_0": {
                "name": "oauth_2_0",
                "type": "OAuth 2.0",
                "description": "OAuth2 is a protocol that lets external apps request authorization to private\ndetails in a user's GitHub account without getting their password. This is\npreferred over Basic Authentication because tokens can be limited to specific\ntypes of data, and can be revoked by users at any time.\n",
                "describedBy": {
                    "responses": {"404": {
                        "code": "404",
                        "description": "Unauthorized"
                    }},
                    "securedBy": ["oauth_2_0"],
                    "queryParameters": {"access_token": {
                        "name": "access_token",
                        "displayName": "access_token",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"Authorization\" header\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    }},
                    "headers": {"Authorization": {
                        "name": "Authorization",
                        "displayName": "Authorization",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"access_token\" query string parameter.\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    }},
                    "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                },
                "settings": {
                    "accessTokenUri": "https://github.com/login/oauth/access_token",
                    "authorizationUri": "https://github.com/login/oauth/authorize",
                    "authorizationGrants": ["code"],
                    "scopes": [
                        "user",
                        "user:email",
                        "user:follow",
                        "public_repo",
                        "repo",
                        "repo:status",
                        "delete_repo",
                        "notifications",
                        "gist"
                    ]
                }
            }}],
            "resourcesCount": 2,
            "methodsCount": 1
        }
    ]}},
    {"GoogleDrive": {"RAMLFiles": [
        {
            "name": "Google Drive",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/GoogleDrive/production/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/GoogleDrive/production/api.json",
            "baseUri": "https://www.googleapis.com/drive/{version}",
            "version": "v2",
            "securitySchemes": [{"oauth_2_0": {
                "name": "oauth_2_0",
                "type": "OAuth 2.0",
                "description": "Google recommend using OAuth 2.0 to authorize requests.\n",
                "describedBy": {
                    "responses": {"401": {
                        "code": "401",
                        "description": "Authorization error.\n"
                    }},
                    "securedBy": ["oauth_2_0"],
                    "queryParameters": {"access_token": {
                        "name": "access_token",
                        "displayName": "access_token",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Used to send a valid OAuth 2 access token\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    }},
                    "headers": {"Authorization": {
                        "name": "Authorization",
                        "displayName": "Authorization",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Used to send a valid OAuth 2 access token.\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    }},
                    "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                },
                "settings": {
                    "accessTokenUri": "https://accounts.google.com/o/oauth2/token",
                    "authorizationUri": "https://accounts.google.com/o/oauth2/auth",
                    "authorizationGrants": ["code"],
                    "scopes": ["https://www.googleapis.com/auth/drive"]
                }
            }}],
            "resourcesCount": 31,
            "methodsCount": 58
        },
        {
            "name": "Google Drive Upload",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/GoogleDrive/production/uploadApi.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/GoogleDrive/production/uploadApi.json",
            "baseUri": "https://www.googleapis.com/upload/drive/{version}",
            "version": "v2",
            "securitySchemes": [{"oauth_2_0": {
                "name": "oauth_2_0",
                "type": "OAuth 2.0",
                "description": "Google recommend using OAuth 2.0 to authorize requests.\n",
                "describedBy": {
                    "responses": {"401": {
                        "code": "401",
                        "description": "Authorization error.\n"
                    }},
                    "securedBy": ["oauth_2_0"],
                    "queryParameters": {"access_token": {
                        "name": "access_token",
                        "displayName": "access_token",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Used to send a valid OAuth 2 access token\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    }},
                    "headers": {"Authorization": {
                        "name": "Authorization",
                        "displayName": "Authorization",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Used to send a valid OAuth 2 access token.\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    }},
                    "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                },
                "settings": {
                    "accessTokenUri": "https://accounts.google.com/o/oauth2/token",
                    "authorizationUri": "https://accounts.google.com/o/oauth2/auth",
                    "authorizationGrants": ["code"],
                    "scopes": ["https://www.googleapis.com/auth/drive"]
                }
            }}],
            "resourcesCount": 3,
            "methodsCount": 3
        }
    ]}},
    {"SmartSheet": {"RAMLFiles": [{
        "name": "Smartsheet",
        "description": "descriptionexamle",
        "RAMLVersion": "0.8",
        "location": "https://raw.githubusercontent.com/raml-apis/SmartSheet/production/api.raml",
        "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/SmartSheet/production/api.json",
        "baseUri": "https://api.smartsheet.com/{version}",
        "version": "1.1",
        "securitySchemes": [{"oauth_2_0": {
            "name": "oauth_2_0",
            "type": "OAuth 2.0",
            "describedBy": {
                "queryParameters": {"access_token": {
                    "name": "access_token",
                    "displayName": "access_token",
                    "type": "string",
                    "required": false,
                    "repeat": false,
                    "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"Authorization\" header\n",
                    "__METADATA__": {"primitiveValuesMeta": {
                        "displayName": {"calculated": true},
                        "type": {"insertedAsDefault": true},
                        "required": {"insertedAsDefault": true},
                        "repeat": {"insertedAsDefault": true}
                    }}
                }},
                "headers": {"Authorization": {
                    "name": "Authorization",
                    "displayName": "Authorization",
                    "type": "string",
                    "required": false,
                    "repeat": false,
                    "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"access_token\" queryParameters string parameter.\n",
                    "__METADATA__": {"primitiveValuesMeta": {
                        "displayName": {"calculated": true},
                        "type": {"insertedAsDefault": true},
                        "required": {"insertedAsDefault": true},
                        "repeat": {"insertedAsDefault": true}
                    }}
                }}
            },
            "settings": {
                "accessTokenUri": "https://api.smartsheet.com/1.1/token",
                "authorizationUri": "https://www.smartsheet.com/b/authorize",
                "authorizationGrants": ["code"],
                "scopes": [
                    "READ_SHEETS",
                    "WRITE_SHEETS",
                    "SHARE_SHEETS",
                    "DELETE_SHEETS",
                    "CREATE_SHEETS",
                    "ADMIN_USERS",
                    "ADMIN_SHEETS",
                    "ADMIN_WORKSPACES"
                ]
            }
        }}],
        "resourcesCount": 84,
        "methodsCount": 109,
        "developerPortalURI": "https://www.smartsheet.com/developers/api-documentation​"
    }]}},
    {"Twitter": {"RAMLFiles": [
        {
            "name": "Twitter API",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Twitter/production/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Twitter/production/api.json",
            "baseUri": "https://api.twitter.com/{version}/",
            "version": "1.1",
            "securitySchemes": [{"oauth_1_0": {
                "name": "oauth_1_0",
                "type": "OAuth 1.0",
                "description": "Twitter offers applications the ability to issue authenticated requests on\nbehalf of the application itself (as opposed to on behalf of a specific user).\n",
                "settings": {
                    "requestTokenUri": "https://api.twitter.com/oauth/request_token",
                    "authorizationUri": "https://api.twitter.com/oauth/authorize",
                    "tokenCredentialsUri": "https://api.twitter.com/oauth/access_token"
                }
            }}],
            "resourcesCount": 113,
            "methodsCount": 96
        },
        {
            "name": "Twitter Streaming API",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Twitter/production/userstreamApi.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Twitter/production/userstreamApi.json",
            "baseUri": "https://{userstream}.twitter.com/{version}",
            "version": "1.1",
            "securitySchemes": [{"oauth_1_0": {
                "name": "oauth_1_0",
                "type": "OAuth 1.0",
                "description": "Twitter offers applications the ability to issue authenticated requests on\nbehalf of the application itself (as opposed to on behalf of a specific user).\n",
                "settings": {
                    "requestTokenUri": "https://api.twitter.com/oauth/request_token",
                    "authorizationUri": "https://api.twitter.com/oauth/authorize",
                    "tokenCredentialsUri": "https://api.twitter.com/oauth/access_token"
                }
            }}],
            "resourcesCount": 1,
            "methodsCount": 1
        }
    ]}},
    {"OpenStack": {"RAMLFiles": [
        {
            "name": "OpenStack Compute API",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/OpenStack/master/computeAPI.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/OpenStack/master/computeAPI.json",
            "baseUri": "https://servers.api.openstack.com",
            "version": "v2.1",
            "resourcesCount": 77,
            "methodsCount": 90
        },
        {
            "name": "OpenStack Database Service API",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/OpenStack/master/databasesAPI.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/OpenStack/master/databasesAPI.json",
            "baseUri": "http://docs.openstack.org/database/api",
            "version": "v1.0",
            "resourcesCount": 13,
            "methodsCount": 17
        },
        {
            "name": "OpenStack Data Processing API",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/OpenStack/master/dataprocessingAPI.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/OpenStack/master/dataprocessingAPI.json",
            "baseUri": "https://servers.api.openstack.com",
            "version": "v1.1",
            "resourcesCount": 30,
            "methodsCount": 44
        },
        {
            "name": "OpenStack Identity API",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/OpenStack/master/identityAPI.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/OpenStack/master/identityAPI.json",
            "baseUri": "http://localhost:35357",
            "version": "v3",
            "resourcesCount": 46,
            "methodsCount": 74
        },
        {
            "name": "OpenStack Identity API extensions",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/OpenStack/master/identityExtensionsAPI.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/OpenStack/master/identityExtensionsAPI.json",
            "baseUri": "http://localhost:35357",
            "version": "v3",
            "resourcesCount": 15,
            "methodsCount": 12
        },
        {
            "name": "OpenStack Image Service API",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/OpenStack/master/imageAPI.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/OpenStack/master/imageAPI.json",
            "baseUri": "https://glance.example.com/",
            "version": "v2",
            "resourcesCount": 14,
            "methodsCount": 19
        },
        {
            "name": "OpenStack Networking API",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/OpenStack/master/netconnAPI.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/OpenStack/master/netconnAPI.json",
            "baseUri": "https://servers.api.openstack.com/",
            "version": "v2.0",
            "resourcesCount": 57,
            "methodsCount": 117
        },
        {
            "name": "OpenStack Object Storage API",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/OpenStack/master/objectAPI.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/OpenStack/master/objectAPI.json",
            "baseUri": "https://storage.swiftdrive.com/",
            "version": "v1",
            "resourcesCount": 4,
            "methodsCount": 13
        },
        {
            "name": "OpenStack Orchestration API",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/OpenStack/master/orchestrationAPI.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/OpenStack/master/orchestrationAPI.json",
            "baseUri": "https://heat.example.com/",
            "version": "v1",
            "resourcesCount": 33,
            "methodsCount": 40
        },
        {
            "name": "OpenStack Telemetry API",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/OpenStack/master/telemetryAPI.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/OpenStack/master/telemetryAPI.json",
            "baseUri": "http://www.example.com",
            "version": "v2",
            "resourcesCount": 13,
            "methodsCount": 17
        },
        {
            "name": "OpenStack Block Storage API",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/OpenStack/master/volumeAPI.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/OpenStack/master/volumeAPI.json",
            "baseUri": "https://volume.example.com/",
            "version": "v2",
            "resourcesCount": 37,
            "methodsCount": 50
        },
        {
            "name": "OpenStack Compute API",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/OpenStack/staging/computeAPI.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/OpenStack/staging/computeAPI.json",
            "baseUri": "https://servers.api.openstack.com",
            "version": "v2.1",
            "resourcesCount": 77,
            "methodsCount": 87
        },
        {
            "name": "OpenStack Database Service API",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/OpenStack/staging/databasesAPI.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/OpenStack/staging/databasesAPI.json",
            "baseUri": "http://docs.openstack.org/database/api",
            "version": "v1.0",
            "resourcesCount": 13,
            "methodsCount": 15
        },
        {
            "name": "OpenStack Data Processing API",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/OpenStack/staging/dataprocessingAPI.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/OpenStack/staging/dataprocessingAPI.json",
            "baseUri": "https://servers.api.openstack.com",
            "version": "v1.1",
            "resourcesCount": 30,
            "methodsCount": 42
        },
        {
            "name": "OpenStack Identity API",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/OpenStack/staging/identityAPI.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/OpenStack/staging/identityAPI.json",
            "baseUri": "http://localhost:35357",
            "version": "v3",
            "resourcesCount": 43,
            "methodsCount": 64
        },
        {
            "name": "OpenStack Identity API extensions",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/OpenStack/staging/identityExtensionsAPI.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/OpenStack/staging/identityExtensionsAPI.json",
            "baseUri": "http://localhost:35357",
            "version": "v3",
            "resourcesCount": 15,
            "methodsCount": 11
        },
        {
            "name": "OpenStack Image Service API",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/OpenStack/staging/imageAPI.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/OpenStack/staging/imageAPI.json",
            "baseUri": "https://glance.example.com/",
            "version": "v2",
            "resourcesCount": 14,
            "methodsCount": 18
        },
        {
            "name": "OpenStack Networking API",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/OpenStack/staging/netconnAPI.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/OpenStack/staging/netconnAPI.json",
            "baseUri": "https://servers.api.openstack.com/",
            "version": "v2.0",
            "resourcesCount": 57,
            "methodsCount": 114
        },
        {
            "name": "OpenStack Object Storage API",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/OpenStack/staging/objectAPI.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/OpenStack/staging/objectAPI.json",
            "baseUri": "https://storage.swiftdrive.com/",
            "version": "v1",
            "resourcesCount": 4,
            "methodsCount": 13
        },
        {
            "name": "OpenStack Orchestration API",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/OpenStack/staging/orchestrationAPI.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/OpenStack/staging/orchestrationAPI.json",
            "baseUri": "https://heat.example.com/",
            "version": "v1",
            "resourcesCount": 33,
            "methodsCount": 39
        },
        {
            "name": "OpenStack Telemetry API",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/OpenStack/staging/telemetryAPI.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/OpenStack/staging/telemetryAPI.json",
            "baseUri": "http://www.example.com",
            "version": "v2",
            "resourcesCount": 13,
            "methodsCount": 17
        },
        {
            "name": "OpenStack Block Storage API",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/OpenStack/staging/volumeAPI.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/OpenStack/staging/volumeAPI.json",
            "baseUri": "https://volume.example.com/",
            "version": "v2",
            "resourcesCount": 37,
            "methodsCount": 48
        }
    ]}},
    {"HealthCare": {
        "logo": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/HealthCare/logo.png",
        "RAMLFiles": [{
            "name": "Healthcare",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/HealthCare/production/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/HealthCare/production/api.json",
            "baseUri": "https://www.healthcare.gov/",
            "resourcesCount": 18,
            "methodsCount": 16,
            "developerPortalURI": "https://www.healthcare.gov/developers"
        }]
    }},
    {"Squareup": {"RAMLFiles": [{
        "name": "Squareup",
        "description": "descriptionexamle",
        "RAMLVersion": "0.8",
        "location": "https://raw.githubusercontent.com/raml-apis/Squareup/production/squareup.raml",
        "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Squareup/production/squareup.json",
        "baseUri": "https://connect.squareup.com/{version}",
        "version": "v1",
        "securitySchemes": [{"oauth_2_0": {
            "name": "oauth_2_0",
            "type": "OAuth 2.0",
            "description": "",
            "describedBy": {
                "securedBy": ["oauth_2_0"],
                "headers": {"Authorization": {
                    "name": "Authorization",
                    "displayName": "Authorization",
                    "type": "string",
                    "required": false,
                    "example": "Bearer ACCESS_TOKEN",
                    "repeat": false,
                    "description": "Used to send a valid OAuth 2 access token.\n",
                    "__METADATA__": {"primitiveValuesMeta": {
                        "displayName": {"calculated": true},
                        "type": {"insertedAsDefault": true},
                        "required": {"insertedAsDefault": true},
                        "repeat": {"insertedAsDefault": true}
                    }}
                }},
                "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
            },
            "settings": {
                "authorizationUri": "https://connect.squareup.com/oauth2/authorize",
                "authorizationGrants": ["code"],
                "scopes": [
                    "MERCHANT_PROFILE_READ",
                    "PAYMENTS_READ",
                    "PAYMENTS_WRITE",
                    "SETTLEMENTS_READ",
                    "BANK_ACCOUNTS_READ",
                    "ITEMS_READ",
                    "ITEMS_WRITE",
                    "ORDERS_READ",
                    "ORDERS_WRITE"
                ]
            }
        }}],
        "resourcesCount": 35,
        "methodsCount": 56
    }]}},
    {"PivotalTracker": {"RAMLFiles": [
        {
            "name": "Pivotal Tracker",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/PivotalTracker/production/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/PivotalTracker/production/api.json",
            "baseUri": "https://www.pivotaltracker.com/services/{version}",
            "version": "v5",
            "securitySchemes": [{"customSchema": {
                "name": "customSchema",
                "type": "x-custom",
                "describedBy": {
                    "securedBy": ["customSchema"],
                    "headers": {"X-TrackerToken": {
                        "name": "X-TrackerToken",
                        "displayName": "X-TrackerToken",
                        "type": "string",
                        "required": true,
                        "repeat": false,
                        "description": "Specifies the authentication scheme.",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    }},
                    "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                }
            }}],
            "resourcesCount": 58,
            "methodsCount": 98
        },
        {
            "name": "PivotalTracker Attachment Download",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/PivotalTracker/production/attachmentDownload.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/PivotalTracker/production/attachmentDownload.json",
            "baseUri": "https://www.pivotaltracker.com/",
            "version": "v5",
            "securitySchemes": [{"customSchema": {
                "name": "customSchema",
                "type": "x-custom",
                "describedBy": {
                    "securedBy": ["customSchema"],
                    "headers": {"X-TrackerToken": {
                        "name": "X-TrackerToken",
                        "displayName": "X-TrackerToken",
                        "type": "string",
                        "required": true,
                        "repeat": false,
                        "description": "Specifies the authentication scheme.",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    }},
                    "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                }
            }}],
            "resourcesCount": 1,
            "methodsCount": 1
        }
    ]}},
    {"Eloqua": {"RAMLFiles": [
        {
            "name": "Eloqua",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Eloqua/master/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Eloqua/master/api.json",
            "baseUri": "https://secure.eloqua.com",
            "securitySchemes": [{"basic": {
                "name": "basic",
                "type": "Basic Authentication"
            }}],
            "resourcesCount": 549,
            "methodsCount": 575
        },
        {
            "name": "Eloqua",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Eloqua/staging/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Eloqua/staging/api.json",
            "baseUri": "https://secure.eloqua.com",
            "securitySchemes": [{"basic": {
                "name": "basic",
                "type": "Basic Authentication"
            }}],
            "resourcesCount": 549,
            "methodsCount": 575
        }
    ]}},
    {"AzureTableStorage": {"RAMLFiles": [{
        "name": "Azure Table Storage",
        "description": "descriptionexamle",
        "RAMLVersion": "0.8",
        "location": "https://raw.githubusercontent.com/raml-apis/AzureTableStorage/production/tablestorage.raml",
        "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/AzureTableStorage/production/tablestorage.json",
        "baseUri": "https://{accountName}.table.core.windows.net",
        "version": "v1",
        "securitySchemes": [{"customSchema": {
            "name": "customSchema",
            "type": "x-custom",
            "describedBy": {"headers": {"Authorization": {
                "name": "Authorization",
                "displayName": "Authorization",
                "type": "string",
                "required": true,
                "repeat": false,
                "description": "Specifies the authentication scheme, account name, and signature. For more information, see Authentication for the Windows Azure Storage Services.",
                "__METADATA__": {"primitiveValuesMeta": {
                    "displayName": {"calculated": true},
                    "type": {"insertedAsDefault": true},
                    "repeat": {"insertedAsDefault": true}
                }}
            }}}
        }}],
        "resourcesCount": 7,
        "methodsCount": 14,
        "developerPortalURI": "http://msdn.microsoft.com/en-us/library/azure/dd179423.aspx​"
    }]}},
    {"Elasticsearch": {"RAMLFiles": [{
        "name": "Elasticsearch",
        "description": "descriptionexamle",
        "RAMLVersion": "0.8",
        "location": "https://raw.githubusercontent.com/raml-apis/Elasticsearch/production/api.raml",
        "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Elasticsearch/production/api.json",
        "baseUri": "{protocol}://{domain}:{port}",
        "resourcesCount": 111,
        "methodsCount": 138,
        "developerPortalURI": "http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/index.html"
    }]}},
    {"Stripe": {
        "logo": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Stripe/logo.png",
        "RAMLFiles": [{
            "name": "Stripe",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Stripe/production/stripe.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Stripe/production/stripe.json",
            "baseUri": "https://api.stripe.com/{version}",
            "version": "v1",
            "securitySchemes": [
                {"oauth_2_0": {
                    "name": "oauth_2_0",
                    "type": "OAuth 2.0",
                    "description": "The Box API uses OAuth 2 for authentication. An authorization header containing\na valid access_token must be included in every request.\n",
                    "describedBy": {
                        "securedBy": [
                            "oauth_2_0",
                            "basic"
                        ],
                        "queryParameters": {"access_token": {
                            "name": "access_token",
                            "displayName": "access_token",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"Authorization\" header\n",
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "required": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true}
                            }}
                        }},
                        "headers": {"Authorization": {
                            "name": "Authorization",
                            "displayName": "Authorization",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"access_token\" query string parameter.\n",
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "required": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true}
                            }}
                        }},
                        "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                    },
                    "settings": {
                        "accessTokenUri": "https://connect.stripe.com/oauth/token",
                        "authorizationUri": "https://connect.stripe.com/oauth/authorize",
                        "authorizationGrants": ["code"]
                    }
                }},
                {"basic": {
                    "name": "basic",
                    "type": "Basic Authentication",
                    "description": "Authentication to the API occurs via HTTP Basic Auth. Provide your API key as the basic auth username. You do no\nneed to provide a password.\n",
                    "describedBy": {
                        "securedBy": [
                            "oauth_2_0",
                            "basic"
                        ],
                        "headers": {"Authorization": {
                            "name": "Authorization",
                            "displayName": "Authorization",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "The Authorization field value consists of credentials\ncontaining the authentication information of the user agent for the\nrealm of the resource being requested.\n",
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "required": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true}
                            }}
                        }},
                        "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                    }
                }}
            ],
            "resourcesCount": 41,
            "methodsCount": 67,
            "developerPortalURI": "https://stripe.com/docs"
        }]
    }},
    {"Geonames": {
        "logo": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Geonames/logo.png",
        "RAMLFiles": [{
            "name": "GeoNames",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Geonames/production/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Geonames/production/api.json",
            "baseUri": "http://api.geonames.org",
            "securitySchemes": [{"usernameSchema": {"name": "usernameSchema"}}],
            "resourcesCount": 38,
            "methodsCount": 40,
            "developerPortalURI": "http://www.geonames.org/export/web-services.html​"
        }]
    }},
    {"SlideShare": {
        "logo": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/SlideShare/logo.png",
        "RAMLFiles": [{
            "name": "Slideshare",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/SlideShare/production/slideshare.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/SlideShare/production/slideshare.json",
            "baseUri": "https://www.slideshare.net/api/{version}",
            "version": "2",
            "securitySchemes": [{"apiKey": {
                "name": "apiKey",
                "type": "x-ApiKey",
                "description": "All requests made using the SlideShare API must have some parameters.\n",
                "describedBy": {
                    "securedBy": ["apiKey"],
                    "queryParameters": {
                        "api_key": {
                            "name": "api_key",
                            "displayName": "api_key",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "description": "Set this to the API Key that SlideShare has provided for you.\n",
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true}
                            }}
                        },
                        "ts": {
                            "name": "ts",
                            "displayName": "ts",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "description": "Set this to the current time in Unix TimeStamp format, to the nearest second(?).\n",
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true}
                            }}
                        },
                        "hash": {
                            "name": "hash",
                            "displayName": "hash",
                            "type": "string",
                            "required": true,
                            "repeat": false,
                            "description": "Set this to the SHA1 hash of the concatenation of the shared secret and the timestamp (ts). i.e. SHA1 (sharedsecret + timestamp). The order of the terms in the concatenation is important.\n",
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true}
                            }}
                        }
                    },
                    "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                }
            }}],
            "resourcesCount": 17,
            "methodsCount": 17,
            "developerPortalURI": "http://www.slideshare.net/developers/documentation"
        }]
    }},
    {"AccuWeather": {"RAMLFiles": [{
        "name": "AccuWeather API",
        "description": "descriptionexamle",
        "RAMLVersion": "0.8",
        "location": "https://raw.githubusercontent.com/raml-apis/AccuWeather/production/accuWeather.raml",
        "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/AccuWeather/production/accuWeather.json",
        "baseUri": "http://{apiDomain}.accuweather.com",
        "version": "v1",
        "securitySchemes": [{"api_key": {
            "name": "api_key",
            "type": "x-API-Key-Signatures",
            "description": "Access to the AccuWeather API requires an API key.  Contact sales@accuweather.com to receive an API key. \n",
            "describedBy": {
                "securedBy": ["api_key"],
                "queryParameters": {"key": {
                    "name": "key",
                    "displayName": "key",
                    "type": "string",
                    "required": true,
                    "example": "ABDE12456AB2324445",
                    "repeat": false,
                    "description": "Your unique API key",
                    "__METADATA__": {"primitiveValuesMeta": {
                        "displayName": {"calculated": true},
                        "type": {"insertedAsDefault": true},
                        "repeat": {"insertedAsDefault": true}
                    }}
                }},
                "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
            }
        }}],
        "resourcesCount": 46,
        "methodsCount": 37
    }]}},
    {"Bufferapp": {"RAMLFiles": [
        {
            "name": "Bufferapp",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Bufferapp/production/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Bufferapp/production/api.json",
            "baseUri": "https://api.bufferapp.com/{version}/",
            "version": "1",
            "securitySchemes": [{"oauth_2_0": {
                "name": "oauth_2_0",
                "type": "OAuth 2.0",
                "description": "Body example for authorisation request:\n\nclient_id=...&\nredirect_uri=...&\nresponse_type=code\n\nBidy example for token request:\n\nPOST Data\nclient_id=...&\nclient_secret=...&\nredirect_uri=...&\ncode=...&\ngrant_type=authorization_code\n\nAll requests to the Buffer API must be made using HTTPS, with the access token provided in the HTTP Authorization header, request body or query string.\n",
                "describedBy": {
                    "securedBy": ["oauth_2_0"],
                    "queryParameters": {"access_token": {
                        "name": "access_token",
                        "displayName": "access_token",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    }},
                    "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                },
                "settings": {
                    "accessTokenUri": "https://api.bufferapp.com/1/oauth2/token.json",
                    "authorizationUri": "https://bufferapp.com/oauth2/authorize",
                    "authorizationGrants": ["code"]
                }
            }}],
            "resourcesCount": 23,
            "methodsCount": 18,
            "developerPortalURI": "https://bufferapp.com/developers/api"
        },
        {
            "name": "Bufferapp",
            "description": "descriptionexamle",
            "RAMLVersion": "1.0",
            "location": "https://raw.githubusercontent.com/raml-apis/Bufferapp/raml1.0/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Bufferapp/raml1.0/api.json",
            "baseUri": "https://api.bufferapp.com/{version}/",
            "version": "1",
            "securitySchemes": [{"oauth_2_0": {
                "name": "oauth_2_0",
                "type": "OAuth 2.0",
                "description": "Body example for authorisation request:\n\nclient_id=...&\nredirect_uri=...&\nresponse_type=code\n\nBidy example for token request:\n\nPOST Data\nclient_id=...&\nclient_secret=...&\nredirect_uri=...&\ncode=...&\ngrant_type=authorization_code\n\nAll requests to the Buffer API must be made using HTTPS, with the access token provided in the HTTP Authorization header, request body or query string.\n",
                "describedBy": {"queryParameters": {"access_token": {
                    "name": "access_token",
                    "displayName": "access_token",
                    "type": ["string"],
                    "repeat": false,
                    "required": true,
                    "__METADATA__": {"primitiveValuesMeta": {
                        "displayName": {"calculated": true},
                        "type": {"insertedAsDefault": true},
                        "repeat": {"insertedAsDefault": true},
                        "required": {"insertedAsDefault": true}
                    }}
                }}},
                "settings": {
                    "accessTokenUri": "https://api.bufferapp.com/1/oauth2/token.json",
                    "authorizationUri": "https://bufferapp.com/oauth2/authorize",
                    "authorizationGrants": ["code"]
                }
            }}],
            "resourcesCount": 23,
            "methodsCount": 18,
            "developerPortalURI": "https://bufferapp.com/developers/api"
        }
    ]}},
    {"Salesforce": {"RAMLFiles": [{
        "name": "SalesForce",
        "description": "descriptionexamle",
        "RAMLVersion": "0.8",
        "location": "https://raw.githubusercontent.com/raml-apis/Salesforce/production/salesforce.raml",
        "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Salesforce/production/salesforce.json",
        "baseUri": "https://{domain}/services/data",
        "version": "v1",
        "securitySchemes": [
            {"oauth_2_0": {
                "name": "oauth_2_0",
                "type": "OAuth 2.0",
                "description": "",
                "describedBy": {
                    "securedBy": ["oauth_2_0"],
                    "headers": {"Authorization": {
                        "name": "Authorization",
                        "displayName": "Authorization",
                        "type": "string",
                        "required": false,
                        "example": "Bearer _token_",
                        "repeat": false,
                        "description": "Used to send a valid OAuth 2 access token. The token must be preceeded by the word \"Bearer\".\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    }},
                    "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                },
                "settings": {
                    "accessTokenUri": "https://login.salesforce.com/services/oauth2/token",
                    "authorizationUri": "https://login.salesforce.com/services/oauth2/authorize",
                    "authorizationGrants": ["code"]
                }
            }},
            {"tokenSchema": {
                "name": "tokenSchema",
                "type": "x-custom",
                "describedBy": {
                    "securedBy": ["oauth_2_0"],
                    "headers": {"Authorization": {
                        "name": "Authorization",
                        "displayName": "Authorization",
                        "type": "string",
                        "required": false,
                        "example": "Bearer _token_",
                        "repeat": false,
                        "description": "Used to send a valid OAuth 2 access token. The token must be preceeded by the word \"Bearer\".\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    }},
                    "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                }
            }}
        ],
        "resourcesCount": 37,
        "methodsCount": 68,
        "developerPortalURI": "https://www.salesforce.com/us/developer/docs/api_rest/Content/resources_list.htm"
    }]}},
    {"PayPal": {"RAMLFiles": [
        {
            "name": "Pay Pal API",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/PayPal/master/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/PayPal/master/api.json",
            "baseUri": "https://api.sandbox.paypal.com/{version}",
            "version": "v1",
            "securitySchemes": [
                {"oauth_2_0_app": {
                    "name": "oauth_2_0_app",
                    "type": "OAuth 2.0",
                    "description": "With each API call, you�ll need to set request headers, including an OAuth 2.0 access token. Get an access token by using the OAuth 2.0 client_credentials token grant type with your clientId:secret as your Basic Auth credentials. For more information, see Make your first call. You can use your Sandbox access token to try any of the code in this reference.\n",
                    "describedBy": {
                        "securedBy": ["oauth_2_0"],
                        "queryParameters": {"access_token": {
                            "name": "access_token",
                            "displayName": "access_token",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"Authorization\" header\n",
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "required": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true}
                            }}
                        }},
                        "headers": {"Authorization": {
                            "name": "Authorization",
                            "displayName": "Authorization",
                            "type": "string",
                            "required": false,
                            "example": "Bearer _token_",
                            "repeat": false,
                            "description": "Used to send a valid OAuth 2 access token. The token must be preceeded by the word \"Bearer\".\n",
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "required": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true}
                            }}
                        }},
                        "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                    },
                    "settings": {
                        "accessTokenUri": "https://api.sandbox.paypal.com/v1/oauth2/token",
                        "authorizationUri": "https://api.sandbox.paypal.com/v1/oauth2/authorize",
                        "authorizationGrants": ["credentials"]
                    }
                }},
                {"oauth_2_0_user": {
                    "name": "oauth_2_0_user",
                    "type": "OAuth 2.0",
                    "description": "With each API call, you�ll need to set request headers, including an OAuth 2.0 access token. Get an access token by using the OAuth 2.0 client_credentials token grant type with your clientId:secret as your Basic Auth credentials. For more information, see Make your first call. You can use your Sandbox access token to try any of the code in this reference.\n",
                    "describedBy": {
                        "securedBy": ["oauth_2_0"],
                        "queryParameters": {"access_token": {
                            "name": "access_token",
                            "displayName": "access_token",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"Authorization\" header\n",
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "required": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true}
                            }}
                        }},
                        "headers": {"Authorization": {
                            "name": "Authorization",
                            "displayName": "Authorization",
                            "type": "string",
                            "required": false,
                            "example": "Bearer _token_",
                            "repeat": false,
                            "description": "Used to send a valid OAuth 2 access token. The token must be preceeded by the word \"Bearer\".\n",
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "required": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true}
                            }}
                        }},
                        "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                    },
                    "settings": {
                        "accessTokenUri": "https://api.sandbox.paypal.com/v1/identity/openidconnect/tokenservice",
                        "authorizationUri": "https://www.sandbox.paypal.com/webapps/auth/protocol/openidconnect/v1/authorize",
                        "authorizationGrants": ["code"],
                        "scopes": ["https://uri.paypal.com/services/invoicing openid https://api.paypal.com/v1/payments/.* https://api.paypal.com/v1/vault/credit-card/.* https://api.paypal.com/v1/vault/credit-card"]
                    }
                }}
            ],
            "resourcesCount": 43,
            "methodsCount": 49
        },
        {
            "name": "Pay Pal API",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/PayPal/staging/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/PayPal/staging/api.json",
            "baseUri": "https://api.sandbox.paypal.com/{version}",
            "version": "v1",
            "securitySchemes": [
                {"oauth_2_0_app": {
                    "name": "oauth_2_0_app",
                    "type": "OAuth 2.0",
                    "description": "With each API call, you�ll need to set request headers, including an OAuth 2.0 access token. Get an access token by using the OAuth 2.0 client_credentials token grant type with your clientId:secret as your Basic Auth credentials. For more information, see Make your first call. You can use your Sandbox access token to try any of the code in this reference.\n",
                    "describedBy": {
                        "securedBy": ["oauth_2_0"],
                        "queryParameters": {"access_token": {
                            "name": "access_token",
                            "displayName": "access_token",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"Authorization\" header\n",
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "required": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true}
                            }}
                        }},
                        "headers": {"Authorization": {
                            "name": "Authorization",
                            "displayName": "Authorization",
                            "type": "string",
                            "required": false,
                            "example": "Bearer _token_",
                            "repeat": false,
                            "description": "Used to send a valid OAuth 2 access token. The token must be preceeded by the word \"Bearer\".\n",
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "required": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true}
                            }}
                        }},
                        "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                    },
                    "settings": {
                        "accessTokenUri": "https://api.sandbox.paypal.com/v1/oauth2/token",
                        "authorizationUri": "https://api.sandbox.paypal.com/v1/oauth2/authorize",
                        "authorizationGrants": ["credentials"]
                    }
                }},
                {"oauth_2_0_user": {
                    "name": "oauth_2_0_user",
                    "type": "OAuth 2.0",
                    "description": "With each API call, you�ll need to set request headers, including an OAuth 2.0 access token. Get an access token by using the OAuth 2.0 client_credentials token grant type with your clientId:secret as your Basic Auth credentials. For more information, see Make your first call. You can use your Sandbox access token to try any of the code in this reference.\n",
                    "describedBy": {
                        "securedBy": ["oauth_2_0"],
                        "queryParameters": {"access_token": {
                            "name": "access_token",
                            "displayName": "access_token",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"Authorization\" header\n",
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "required": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true}
                            }}
                        }},
                        "headers": {"Authorization": {
                            "name": "Authorization",
                            "displayName": "Authorization",
                            "type": "string",
                            "required": false,
                            "example": "Bearer _token_",
                            "repeat": false,
                            "description": "Used to send a valid OAuth 2 access token. The token must be preceeded by the word \"Bearer\".\n",
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "required": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true}
                            }}
                        }},
                        "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                    },
                    "settings": {
                        "accessTokenUri": "https://api.sandbox.paypal.com/v1/identity/openidconnect/tokenservice",
                        "authorizationUri": "https://www.sandbox.paypal.com/webapps/auth/protocol/openidconnect/v1/authorize",
                        "authorizationGrants": ["code"],
                        "scopes": ["https://uri.paypal.com/services/invoicing openid https://api.paypal.com/v1/payments/.* https://api.paypal.com/v1/vault/credit-card/.* https://api.paypal.com/v1/vault/credit-card"]
                    }
                }}
            ],
            "resourcesCount": 43,
            "methodsCount": 49
        }
    ]}},
    {"GooglePrediction": {"RAMLFiles": [{
        "name": "Google Predicion",
        "description": "descriptionexamle",
        "RAMLVersion": "0.8",
        "location": "https://raw.githubusercontent.com/raml-apis/GooglePrediction/staging/api.raml",
        "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/GooglePrediction/staging/api.json",
        "baseUri": "https://www.googleapis.com/prediction/{version}",
        "version": "v1.6",
        "securitySchemes": [{"oauth_2_0": {
            "name": "oauth_2_0",
            "type": "OAuth 2.0",
            "description": "Google recommend using OAuth 2.0 to authorize requests.\n",
            "describedBy": {
                "responses": {"401": {
                    "code": "401",
                    "description": "Authorization error.\n"
                }},
                "queryParameters": {"access_token": {
                    "name": "access_token",
                    "displayName": "access_token",
                    "type": "string",
                    "required": false,
                    "repeat": false,
                    "description": "Used to send a valid OAuth 2 access token\n",
                    "__METADATA__": {"primitiveValuesMeta": {
                        "displayName": {"calculated": true},
                        "type": {"insertedAsDefault": true},
                        "required": {"insertedAsDefault": true},
                        "repeat": {"insertedAsDefault": true}
                    }}
                }},
                "headers": {"Authorization": {
                    "name": "Authorization",
                    "displayName": "Authorization",
                    "type": "string",
                    "required": false,
                    "repeat": false,
                    "description": "Used to send a valid OAuth 2 access token.\n",
                    "__METADATA__": {"primitiveValuesMeta": {
                        "displayName": {"calculated": true},
                        "type": {"insertedAsDefault": true},
                        "required": {"insertedAsDefault": true},
                        "repeat": {"insertedAsDefault": true}
                    }}
                }}
            },
            "settings": {
                "accessTokenUri": "https://accounts.google.com/o/oauth2/token",
                "authorizationUri": "https://accounts.google.com/o/oauth2/auth",
                "authorizationGrants": ["code"],
                "scopes": [
                    "https//www.googleapis.com/auth/prediction",
                    "https//www.googleapis.com/auth/devstorage.full_control"
                ]
            }
        }}],
        "resourcesCount": 7,
        "methodsCount": 8
    }]}},
    {"Meetup": {"RAMLFiles": [
        {
            "name": "Meetup",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Meetup/master/meetup.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Meetup/master/meetup.json",
            "baseUri": "https://api.meetup.com/",
            "version": "v3",
            "securitySchemes": [
                {"oauth_2_0": {
                    "name": "oauth_2_0",
                    "type": "OAuth 2.0",
                    "description": "#OAuth 2 Requests over HTTPS\nThe Meetup API implements rfc6749, the superseding specification for OAuth 1, OAuth 2. This protocol requires all communication with the Meetup servers to use HTTPS. If your application does not, you will receive an error.\n\nWe provide implementations of both the server and implicit protocol flows. We provide the following endpoints for both where necessary.\n\nAuthorization https://secure.meetup.com/oauth2/authorize\nAccess Tokens https://secure.meetup.com/oauth2/access\nBefore you can use OAuth 2 for user authorization, you need to either register a new OAuth consumer or add a redirect_uri to your existing consumer by clicking the edit link next to you consumer's listing. The redirect_uri you register for a given client will be used to validate future oauth2 requests. Any redirect_uri parameter that starts with the registered uri will be considered valid. For instance if you register the uri http://foo.com, http://foo.com/authed will be considered valid while http://bar.foo.com will not.\n\nOAuth 2 consumers are also valid OAuth 1.0a consumers.\n",
                    "describedBy": {
                        "responses": {
                            "401": {
                                "code": "401",
                                "description": "Bad or expired token. This can happen if the user or Dropbox\nrevoked or expired an access token. To fix, you should re-\nauthenticate the user.\n"
                            },
                            "403": {
                                "code": "403",
                                "description": "Bad OAuth request (wrong consumer key, bad nonce, expired\ntimestamp...). Unfortunately, re-authenticating the user won't help here.\n"
                            }
                        },
                        "securedBy": ["oauth_2_0"],
                        "queryParameters": {"access_token": {
                            "name": "access_token",
                            "displayName": "access_token",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"Authorization\" header\n",
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "required": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true}
                            }}
                        }},
                        "headers": {"Authorization": {
                            "name": "Authorization",
                            "displayName": "Authorization",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Used to send a valid OAuth 2 access token. Do not use\nwith the \"access_token\" query string parameter.\n",
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "required": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true}
                            }}
                        }},
                        "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                    },
                    "settings": {
                        "accessTokenUri": "https://secure.meetup.com/oauth2/access",
                        "authorizationUri": "https://secure.meetup.com/oauth2/authorize",
                        "authorizationGrants": ["code"]
                    }
                }},
                {"oauth_1_0": {
                    "name": "oauth_1_0",
                    "type": "OAuth 1.0",
                    "description": "OAuth 1.0 continues to be supported for all API requests, but OAuth 2.0 is now preferred.\n\n#OAuth 1.0a Signed Requests\nThe Meetup API supports authentication of third-party applications using the OAuth protocol. This allows your application to access a user's data and RSVP to events on behalf of the user (after they have explicitly granted permission). If you would like to set up an OAuth consumer to use for your application, you can create one here. The procedure to making requests with OAuth is as follows:\n\nFetch a request token, by using the request token URL: https://api.meetup.com/oauth/request/ signed with your consumer credentials. You must include an oauth_callback parameter. Set it to URL that the user will be redirected to after authorizing the application, or oob for out-of-band authentication. The response will include a key and secret for a request token.\nRedirect the user to the authorization url:\nhttp://www.meetup.com/authorize/?oauth_token=request_token_key.\nAfter authorizing, the user is redirected to your callback url with the oauth_token and an oauth_verifier parameter that your application will need acquire an access token. For out-of-band authorization, the verifier is displayed as a \"pin\" for the user to enter into your application.\nFetch an access token using the access token URL: https://api.meetup.com/oauth/access/. If the user has chosen to allow the application and a correct oauth_verifier parameter is supplied, the request will return an access token key and secret which can be used for subsequent requests.\nMake API calls as normal - but with the necessary OAuth parameters or headers added to the request. Meetup users can see a list of applications they've authorized in their account settings page, and choose to remove an application. After a user chooses to remove an application, the access token will expire and any requests made with the token will fail. The user will need to re-authorize the application in order to allow access to continue with a new token.\nSignatures are used to ensure the identity of the consumer application. Currently, the Meetup implementation of OAuth supports plaintext and HMAC_SHA1 as signature methods. For the URL portion of the signature base string, use the following values:\n\nRequest Tokens: https://api.meetup.com/oauth/request/\nAccess Tokens: https://api.meetup.com/oauth/access/\nProtected Resources (API calls): http://api.meetup.com/\nFor complete details on how to form signatures for OAuth requests, refer to the OAuth specification details.\n\n#OAuth Authentication\nEndpoint: http://www.meetup.com/authenticate/?oauth_token=request_token_key\n\nIn addition to the standard OAuth 1.0a authorization flow, we support an authentication endpoint for sites that wish to use Meetup to sign in users. Under certain conditions this endpoint will immediately redirect back to the callback URL:\n\nThe user is already logged in to Meetup, and\nThe user has already authorized your application and that authorization has not been revoked, and\nThe provided request token is valid\nWhen these conditions are not satisfied the authentication endpoint behaves the same as the authorization endpoint, sending the user to the sign in or authorization page as appropriate.\n\n#API Request Signing\nOAuth requests must also satisfy the following requirements:\n\nInclude a timestamp (oauth_timestamp) which must match to within a 5 minute window of the server time, expressed in the number of seconds since January 1, 1970 00:00:00 GMT.\nInclude a nonce (oauth_nonce) which is a unique, randomly generated number that is specific to this request.\nInclude the consumer key (oauth_consumer_key) which is used to identify the application making the request.\nInclude the signature method (oauth_signature_method) and signature (oauth_signature) which are cryptographically generated digests of the resource URL, the parameters, the consumer secret, and the nonce + timestamp values.\nIf any of these components are missing or invalid, the OAuth request will be rejected with an error. The tedious part of assembling these parameters is easily addressed by using one of the open source OAuth clients or the Meetup Python client, which has bundled support for OAuth requests.\n\nYou should store access tokens (key and secret) so that they can be re-used without forcing the user to authorize a new token every time. Initialize MeetupOAuth with an access_key and access_secret if you want an API client specific to a given user, which eliminates the need to specify a sess with each API call. The app.py script included with the python-api-client implements a basic command-line driven OAuth flow with token persistence and client-user binding.\n",
                    "describedBy": {
                        "securedBy": ["oauth_2_0"],
                        "queryParameters": {
                            "oauth_timestamp": {
                                "name": "oauth_timestamp",
                                "displayName": "oauth_timestamp",
                                "type": "string",
                                "required": false,
                                "repeat": false,
                                "description": "Include a timestamp (oauth_timestamp) which must match to within a 5 minute window of the server time, expressed in the number of seconds since January 1, 1970 00:00:00 GMT.\n",
                                "__METADATA__": {"primitiveValuesMeta": {
                                    "displayName": {"calculated": true},
                                    "type": {"insertedAsDefault": true},
                                    "required": {"insertedAsDefault": true},
                                    "repeat": {"insertedAsDefault": true}
                                }}
                            },
                            "oauth_nonce": {
                                "name": "oauth_nonce",
                                "displayName": "oauth_nonce",
                                "type": "string",
                                "required": false,
                                "repeat": false,
                                "description": "Include a nonce (oauth_nonce) which is a unique, randomly generated number that is specific to this request.\n",
                                "__METADATA__": {"primitiveValuesMeta": {
                                    "displayName": {"calculated": true},
                                    "type": {"insertedAsDefault": true},
                                    "required": {"insertedAsDefault": true},
                                    "repeat": {"insertedAsDefault": true}
                                }}
                            },
                            "oauth_consumer_key": {
                                "name": "oauth_consumer_key",
                                "displayName": "oauth_consumer_key",
                                "type": "string",
                                "required": false,
                                "repeat": false,
                                "description": "Include the consumer key (oauth_consumer_key) which is used to identify the application making the request.\n",
                                "__METADATA__": {"primitiveValuesMeta": {
                                    "displayName": {"calculated": true},
                                    "type": {"insertedAsDefault": true},
                                    "required": {"insertedAsDefault": true},
                                    "repeat": {"insertedAsDefault": true}
                                }}
                            },
                            "oauth_signature_method": {
                                "name": "oauth_signature_method",
                                "displayName": "oauth_signature_method",
                                "type": "string",
                                "required": false,
                                "repeat": false,
                                "description": "Include the signature method (oauth_signature_method) and signature (oauth_signature) which are cryptographically generated digests of the resource URL, the parameters, the consumer secret, and the nonce + timestamp values.\n",
                                "__METADATA__": {"primitiveValuesMeta": {
                                    "displayName": {"calculated": true},
                                    "type": {"insertedAsDefault": true},
                                    "required": {"insertedAsDefault": true},
                                    "repeat": {"insertedAsDefault": true}
                                }}
                            },
                            "oauth_signature": {
                                "name": "oauth_signature",
                                "displayName": "oauth_signature",
                                "type": "string",
                                "required": false,
                                "repeat": false,
                                "description": "Include the signature method (oauth_signature_method) and signature (oauth_signature) which are cryptographically generated digests of the resource URL, the parameters, the consumer secret, and the nonce + timestamp values.\n",
                                "__METADATA__": {"primitiveValuesMeta": {
                                    "displayName": {"calculated": true},
                                    "type": {"insertedAsDefault": true},
                                    "required": {"insertedAsDefault": true},
                                    "repeat": {"insertedAsDefault": true}
                                }}
                            }
                        },
                        "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                    },
                    "settings": {
                        "requestTokenUri": "https://api.meetup.com/oauth/request/",
                        "authorizationUri": "http://www.meetup.com/authorize/",
                        "tokenCredentialsUri": "https://api.meetup.com/oauth/access/"
                    }
                }},
                {"api_key": {
                    "name": "api_key",
                    "type": "x-API-Key-Signatures",
                    "description": "#API Key signatures\nSimilar to OAuth signing, this method of authentication certifies that a request was approved by a particular user. Unlike OAuth-signed requests, key-signed requests may be reused and recycled as long as their corresponding API key is valid. If a signed URL is released to the public, any application can use it to interact with Meetup as if it had that API key; the difference is that it can not change definitive parameters or use the signature against other API methods.\n\nBecause requests are signed with an API key as well as a Meetup private key, it is not possible for applications to sign them independently. Instead they pass a \"sign=true\" parameter along with a standard read request authorized by an API key. This causes a \"signed_url\" field to be returned in the response metadata. OAuth requests may not be signed with an API key, as this would allow a consumer to continue act on behalf of a user even if its access token is revoked.\n\nURL: any read method\nFormats: json, xml\nParameters: all of the required parameters for the standard request must be supplied, as well as the following:\n\nsign Set to \"true\"\nkey API key authentication is required.\n#Variable Parameters:\nCertain parameters are excluded from the URL signature calculation so that they may be updated to recycle the request.\n\noffset Paging through long responses.\nformat Change the response format to xml or json.\ncallback Specify a JavaScript callback to handle the results.\n\n#Response Data\nAlong with the normal results and metadata, a \"signed_url\" is returned that can be used to repeat the request. In JSON it is in the \"meta\" object, in XML the \"head\" element.\n\nsigned_url Full signed url, may include default values for parameters not specified in the original request. Parameters may be reordered when reusing but only the value of the \"variable parameters\" may be altered.\n\n#Examples:\nGet the upcoming NY Tech Meetups.\n\nhttps://api.meetup.com/events.json?key=ABDE12456AB2324445&group_urlname=ny-tech&sign=true\nThe returned \"signed_url\" field to be published and reused.\n\nhttp://api.meetup.com/events/?radius=25.0&order=time&group_urlname=ny-tech&offset=0&format=json&page=20&sig_id=123456780&sig=xxxxxx\n",
                    "describedBy": {
                        "securedBy": ["oauth_2_0"],
                        "queryParameters": {
                            "key": {
                                "name": "key",
                                "displayName": "key",
                                "type": "string",
                                "required": true,
                                "example": "ABDE12456AB2324445",
                                "repeat": false,
                                "description": "Your unique API key",
                                "__METADATA__": {"primitiveValuesMeta": {
                                    "displayName": {"calculated": true},
                                    "type": {"insertedAsDefault": true},
                                    "repeat": {"insertedAsDefault": true}
                                }}
                            },
                            "sign": {
                                "name": "sign",
                                "displayName": "sign",
                                "type": "string",
                                "required": true,
                                "example": "true",
                                "repeat": false,
                                "description": "Should have the 'true' value.\n",
                                "__METADATA__": {"primitiveValuesMeta": {
                                    "displayName": {"calculated": true},
                                    "type": {"insertedAsDefault": true},
                                    "repeat": {"insertedAsDefault": true}
                                }}
                            }
                        },
                        "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                    }
                }}
            ],
            "resourcesCount": 95,
            "methodsCount": 114
        },
        {
            "name": "Meetup",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Meetup/staging/meetup.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Meetup/staging/meetup.json",
            "baseUri": "https://api.meetup.com/",
            "version": "v3",
            "securitySchemes": [
                {"oauth_2_0": {
                    "name": "oauth_2_0",
                    "type": "OAuth 2.0",
                    "description": "#OAuth 2 Requests over HTTPS\nThe Meetup API implements rfc6749, the superseding specification for OAuth 1, OAuth 2. This protocol requires all communication with the Meetup servers to use HTTPS. If your application does not, you will receive an error.\n\nWe provide implementations of both the server and implicit protocol flows. We provide the following endpoints for both where necessary.\n\nAuthorization https://secure.meetup.com/oauth2/authorize\nAccess Tokens https://secure.meetup.com/oauth2/access\nBefore you can use OAuth 2 for user authorization, you need to either register a new OAuth consumer or add a redirect_uri to your existing consumer by clicking the edit link next to you consumer's listing. The redirect_uri you register for a given client will be used to validate future oauth2 requests. Any redirect_uri parameter that starts with the registered uri will be considered valid. For instance if you register the uri http://foo.com, http://foo.com/authed will be considered valid while http://bar.foo.com will not.\n\nOAuth 2 consumers are also valid OAuth 1.0a consumers.\n",
                    "describedBy": {
                        "responses": {
                            "401": {
                                "code": "401",
                                "description": "Bad or expired token. This can happen if the user or Dropbox\nrevoked or expired an access token. To fix, you should re-\nauthenticate the user.\n"
                            },
                            "403": {
                                "code": "403",
                                "description": "Bad OAuth request (wrong consumer key, bad nonce, expired\ntimestamp...). Unfortunately, re-authenticating the user won't help here.\n"
                            }
                        },
                        "securedBy": ["oauth_2_0"],
                        "queryParameters": {"access_token": {
                            "name": "access_token",
                            "displayName": "access_token",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"Authorization\" header\n",
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "required": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true}
                            }}
                        }},
                        "headers": {"Authorization": {
                            "name": "Authorization",
                            "displayName": "Authorization",
                            "type": "string",
                            "required": false,
                            "repeat": false,
                            "description": "Used to send a valid OAuth 2 access token. Do not use\nwith the \"access_token\" query string parameter.\n",
                            "__METADATA__": {"primitiveValuesMeta": {
                                "displayName": {"calculated": true},
                                "type": {"insertedAsDefault": true},
                                "required": {"insertedAsDefault": true},
                                "repeat": {"insertedAsDefault": true}
                            }}
                        }},
                        "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                    },
                    "settings": {
                        "accessTokenUri": "https://secure.meetup.com/oauth2/access",
                        "authorizationUri": "https://secure.meetup.com/oauth2/authorize",
                        "authorizationGrants": ["code"]
                    }
                }},
                {"oauth_1_0": {
                    "name": "oauth_1_0",
                    "type": "OAuth 1.0",
                    "description": "OAuth 1.0 continues to be supported for all API requests, but OAuth 2.0 is now preferred.\n\n#OAuth 1.0a Signed Requests\nThe Meetup API supports authentication of third-party applications using the OAuth protocol. This allows your application to access a user's data and RSVP to events on behalf of the user (after they have explicitly granted permission). If you would like to set up an OAuth consumer to use for your application, you can create one here. The procedure to making requests with OAuth is as follows:\n\nFetch a request token, by using the request token URL: https://api.meetup.com/oauth/request/ signed with your consumer credentials. You must include an oauth_callback parameter. Set it to URL that the user will be redirected to after authorizing the application, or oob for out-of-band authentication. The response will include a key and secret for a request token.\nRedirect the user to the authorization url:\nhttp://www.meetup.com/authorize/?oauth_token=request_token_key.\nAfter authorizing, the user is redirected to your callback url with the oauth_token and an oauth_verifier parameter that your application will need acquire an access token. For out-of-band authorization, the verifier is displayed as a \"pin\" for the user to enter into your application.\nFetch an access token using the access token URL: https://api.meetup.com/oauth/access/. If the user has chosen to allow the application and a correct oauth_verifier parameter is supplied, the request will return an access token key and secret which can be used for subsequent requests.\nMake API calls as normal - but with the necessary OAuth parameters or headers added to the request. Meetup users can see a list of applications they've authorized in their account settings page, and choose to remove an application. After a user chooses to remove an application, the access token will expire and any requests made with the token will fail. The user will need to re-authorize the application in order to allow access to continue with a new token.\nSignatures are used to ensure the identity of the consumer application. Currently, the Meetup implementation of OAuth supports plaintext and HMAC_SHA1 as signature methods. For the URL portion of the signature base string, use the following values:\n\nRequest Tokens: https://api.meetup.com/oauth/request/\nAccess Tokens: https://api.meetup.com/oauth/access/\nProtected Resources (API calls): http://api.meetup.com/\nFor complete details on how to form signatures for OAuth requests, refer to the OAuth specification details.\n\n#OAuth Authentication\nEndpoint: http://www.meetup.com/authenticate/?oauth_token=request_token_key\n\nIn addition to the standard OAuth 1.0a authorization flow, we support an authentication endpoint for sites that wish to use Meetup to sign in users. Under certain conditions this endpoint will immediately redirect back to the callback URL:\n\nThe user is already logged in to Meetup, and\nThe user has already authorized your application and that authorization has not been revoked, and\nThe provided request token is valid\nWhen these conditions are not satisfied the authentication endpoint behaves the same as the authorization endpoint, sending the user to the sign in or authorization page as appropriate.\n\n#API Request Signing\nOAuth requests must also satisfy the following requirements:\n\nInclude a timestamp (oauth_timestamp) which must match to within a 5 minute window of the server time, expressed in the number of seconds since January 1, 1970 00:00:00 GMT.\nInclude a nonce (oauth_nonce) which is a unique, randomly generated number that is specific to this request.\nInclude the consumer key (oauth_consumer_key) which is used to identify the application making the request.\nInclude the signature method (oauth_signature_method) and signature (oauth_signature) which are cryptographically generated digests of the resource URL, the parameters, the consumer secret, and the nonce + timestamp values.\nIf any of these components are missing or invalid, the OAuth request will be rejected with an error. The tedious part of assembling these parameters is easily addressed by using one of the open source OAuth clients or the Meetup Python client, which has bundled support for OAuth requests.\n\nYou should store access tokens (key and secret) so that they can be re-used without forcing the user to authorize a new token every time. Initialize MeetupOAuth with an access_key and access_secret if you want an API client specific to a given user, which eliminates the need to specify a sess with each API call. The app.py script included with the python-api-client implements a basic command-line driven OAuth flow with token persistence and client-user binding.\n",
                    "describedBy": {
                        "securedBy": ["oauth_2_0"],
                        "queryParameters": {
                            "oauth_timestamp": {
                                "name": "oauth_timestamp",
                                "displayName": "oauth_timestamp",
                                "type": "string",
                                "required": false,
                                "repeat": false,
                                "description": "Include a timestamp (oauth_timestamp) which must match to within a 5 minute window of the server time, expressed in the number of seconds since January 1, 1970 00:00:00 GMT.\n",
                                "__METADATA__": {"primitiveValuesMeta": {
                                    "displayName": {"calculated": true},
                                    "type": {"insertedAsDefault": true},
                                    "required": {"insertedAsDefault": true},
                                    "repeat": {"insertedAsDefault": true}
                                }}
                            },
                            "oauth_nonce": {
                                "name": "oauth_nonce",
                                "displayName": "oauth_nonce",
                                "type": "string",
                                "required": false,
                                "repeat": false,
                                "description": "Include a nonce (oauth_nonce) which is a unique, randomly generated number that is specific to this request.\n",
                                "__METADATA__": {"primitiveValuesMeta": {
                                    "displayName": {"calculated": true},
                                    "type": {"insertedAsDefault": true},
                                    "required": {"insertedAsDefault": true},
                                    "repeat": {"insertedAsDefault": true}
                                }}
                            },
                            "oauth_consumer_key": {
                                "name": "oauth_consumer_key",
                                "displayName": "oauth_consumer_key",
                                "type": "string",
                                "required": false,
                                "repeat": false,
                                "description": "Include the consumer key (oauth_consumer_key) which is used to identify the application making the request.\n",
                                "__METADATA__": {"primitiveValuesMeta": {
                                    "displayName": {"calculated": true},
                                    "type": {"insertedAsDefault": true},
                                    "required": {"insertedAsDefault": true},
                                    "repeat": {"insertedAsDefault": true}
                                }}
                            },
                            "oauth_signature_method": {
                                "name": "oauth_signature_method",
                                "displayName": "oauth_signature_method",
                                "type": "string",
                                "required": false,
                                "repeat": false,
                                "description": "Include the signature method (oauth_signature_method) and signature (oauth_signature) which are cryptographically generated digests of the resource URL, the parameters, the consumer secret, and the nonce + timestamp values.\n",
                                "__METADATA__": {"primitiveValuesMeta": {
                                    "displayName": {"calculated": true},
                                    "type": {"insertedAsDefault": true},
                                    "required": {"insertedAsDefault": true},
                                    "repeat": {"insertedAsDefault": true}
                                }}
                            },
                            "oauth_signature": {
                                "name": "oauth_signature",
                                "displayName": "oauth_signature",
                                "type": "string",
                                "required": false,
                                "repeat": false,
                                "description": "Include the signature method (oauth_signature_method) and signature (oauth_signature) which are cryptographically generated digests of the resource URL, the parameters, the consumer secret, and the nonce + timestamp values.\n",
                                "__METADATA__": {"primitiveValuesMeta": {
                                    "displayName": {"calculated": true},
                                    "type": {"insertedAsDefault": true},
                                    "required": {"insertedAsDefault": true},
                                    "repeat": {"insertedAsDefault": true}
                                }}
                            }
                        },
                        "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                    },
                    "settings": {
                        "requestTokenUri": "https://api.meetup.com/oauth/request/",
                        "authorizationUri": "http://www.meetup.com/authorize/",
                        "tokenCredentialsUri": "https://api.meetup.com/oauth/access/"
                    }
                }},
                {"api_key": {
                    "name": "api_key",
                    "type": "x-API-Key-Signatures",
                    "description": "#API Key signatures\nSimilar to OAuth signing, this method of authentication certifies that a request was approved by a particular user. Unlike OAuth-signed requests, key-signed requests may be reused and recycled as long as their corresponding API key is valid. If a signed URL is released to the public, any application can use it to interact with Meetup as if it had that API key; the difference is that it can not change definitive parameters or use the signature against other API methods.\n\nBecause requests are signed with an API key as well as a Meetup private key, it is not possible for applications to sign them independently. Instead they pass a \"sign=true\" parameter along with a standard read request authorized by an API key. This causes a \"signed_url\" field to be returned in the response metadata. OAuth requests may not be signed with an API key, as this would allow a consumer to continue act on behalf of a user even if its access token is revoked.\n\nURL: any read method\nFormats: json, xml\nParameters: all of the required parameters for the standard request must be supplied, as well as the following:\n\nsign Set to \"true\"\nkey API key authentication is required.\n#Variable Parameters:\nCertain parameters are excluded from the URL signature calculation so that they may be updated to recycle the request.\n\noffset Paging through long responses.\nformat Change the response format to xml or json.\ncallback Specify a JavaScript callback to handle the results.\n\n#Response Data\nAlong with the normal results and metadata, a \"signed_url\" is returned that can be used to repeat the request. In JSON it is in the \"meta\" object, in XML the \"head\" element.\n\nsigned_url Full signed url, may include default values for parameters not specified in the original request. Parameters may be reordered when reusing but only the value of the \"variable parameters\" may be altered.\n\n#Examples:\nGet the upcoming NY Tech Meetups.\n\nhttps://api.meetup.com/events.json?key=ABDE12456AB2324445&group_urlname=ny-tech&sign=true\nThe returned \"signed_url\" field to be published and reused.\n\nhttp://api.meetup.com/events/?radius=25.0&order=time&group_urlname=ny-tech&offset=0&format=json&page=20&sig_id=123456780&sig=xxxxxx\n",
                    "describedBy": {
                        "securedBy": ["oauth_2_0"],
                        "queryParameters": {
                            "key": {
                                "name": "key",
                                "displayName": "key",
                                "type": "string",
                                "required": true,
                                "example": "ABDE12456AB2324445",
                                "repeat": false,
                                "description": "Your unique API key",
                                "__METADATA__": {"primitiveValuesMeta": {
                                    "displayName": {"calculated": true},
                                    "type": {"insertedAsDefault": true},
                                    "repeat": {"insertedAsDefault": true}
                                }}
                            },
                            "sign": {
                                "name": "sign",
                                "displayName": "sign",
                                "type": "string",
                                "required": true,
                                "example": "true",
                                "repeat": false,
                                "description": "Should have the 'true' value.\n",
                                "__METADATA__": {"primitiveValuesMeta": {
                                    "displayName": {"calculated": true},
                                    "type": {"insertedAsDefault": true},
                                    "repeat": {"insertedAsDefault": true}
                                }}
                            }
                        },
                        "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                    }
                }}
            ],
            "resourcesCount": 95,
            "methodsCount": 114
        }
    ]}},
    {"Twitch": {
        "logo": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Twitch/logo.png",
        "RAMLFiles": [{
            "name": "Twitch",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Twitch/production/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Twitch/production/api.json",
            "baseUri": "https://api.twitch.tv/kraken",
            "version": "v2",
            "securitySchemes": [{"oauth_2_0": {
                "name": "oauth_2_0",
                "type": "OAuth 2.0",
                "description": "The Twitch API uses the OAuth 2.0 protocol for simple, but effective\nauthentication and authorization. The one thing to keep in mind is tha\nall requests to the API must be made over SSL (https:// not http://)\n",
                "describedBy": {
                    "queryParameters": {"access_token": {
                        "name": "access_token",
                        "displayName": "access_token",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"Authorization\" header\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    }},
                    "headers": {"Authorization": {
                        "name": "Authorization",
                        "displayName": "Authorization",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"access_token\" queryParameters string parameter.\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    }}
                },
                "settings": {
                    "accessTokenUri": "https://api.twitch.tv/kraken/oauth2/token",
                    "authorizationUri": "https://api.twitch.tv/kraken/oauth2/authorize",
                    "authorizationGrants": ["code"],
                    "scopes": [
                        "user_read",
                        "user_blocks_edit",
                        "user_blocks_read",
                        "user_follows_edit",
                        "channel_read",
                        "channel_editor",
                        "channel_commercial",
                        "channel_stream",
                        "channel_subscriptions",
                        "user_subscriptions",
                        "channel_check_subscription",
                        "chat_login"
                    ]
                }
            }}],
            "resourcesCount": 36,
            "methodsCount": 37,
            "developerPortalURI": "https://github.com/justintv/Twitch-API/blob/master/README.md"
        }]
    }},
    {"NewRelic": {
        "logo": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/NewRelic/logo.png",
        "RAMLFiles": [{
            "name": "NewRelic",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/NewRelic/production/newRelic.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/NewRelic/production/newRelic.json",
            "baseUri": "https://api.newrelic.com/{version}",
            "version": "v2",
            "securitySchemes": [{"x-Api-Key": {
                "name": "x-Api-Key",
                "type": "x-Api-Key",
                "describedBy": {"headers": {"X-Api-Key": {
                    "name": "X-Api-Key",
                    "displayName": "API Key",
                    "type": "string",
                    "required": false,
                    "example": "apikey",
                    "repeat": false,
                    "description": "API authentication header",
                    "__METADATA__": {"primitiveValuesMeta": {
                        "type": {"insertedAsDefault": true},
                        "required": {"insertedAsDefault": true},
                        "repeat": {"insertedAsDefault": true}
                    }}
                }}}
            }}],
            "resourcesCount": 40,
            "methodsCount": 29,
            "developerPortalURI": "http://docs.newrelic.com/docs/apis/getting-started-with-the-new-relic-rest-api"
        }]
    }},
    {"Bitly": {
        "logo": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Bitly/logo.png",
        "RAMLFiles": [{
            "name": "Bitly",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Bitly/production/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Bitly/production/api.json",
            "baseUri": "https://api-ssl.bitly.com/{version}/",
            "version": "v3",
            "securitySchemes": [{"oauth_2_0": {
                "name": "oauth_2_0",
                "type": "OAuth 2.0",
                "description": "OAuth 2.0 is a simple and secure authentication mechanism. It allows applications\nto acquire an access token for bitly via a quick redirect to the bitly site. Once\nan application has an access token, it can access a user's link metrics, and\nshorten links using that user's bitly account.\n",
                "describedBy": {
                    "securedBy": ["oauth_2_0"],
                    "queryParameters": {"access_token": {
                        "name": "access_token",
                        "displayName": "access_token",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"Authorization\" header\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    }},
                    "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                },
                "settings": {
                    "accessTokenUri": "https://api-ssl.bitly.com/oauth/access_token",
                    "authorizationUri": "https://bitly.com/oauth/authorize",
                    "authorizationGrants": ["code"]
                }
            }}],
            "resourcesCount": 63,
            "methodsCount": 59,
            "developerPortalURI": "http://dev.bitly.com/"
        }]
    }},
    {"FuelEconomy": {"RAMLFiles": [
        {
            "name": "Fuel Economy",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/FuelEconomy/production/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/FuelEconomy/production/api.json",
            "baseUri": "http://www.fueleconomy.gov/ws/rest",
            "resourcesCount": 20,
            "methodsCount": 16,
            "developerPortalURI": "http://www.fueleconomy.gov/feg/ws/index.shtml"
        },
        {
            "name": "Fuel Economy",
            "description": "descriptionexamle",
            "RAMLVersion": "1.0",
            "location": "https://raw.githubusercontent.com/raml-apis/FuelEconomy/raml1.0/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/FuelEconomy/raml1.0/api.json",
            "baseUri": "http://www.fueleconomy.gov/ws/rest",
            "resourcesCount": 20,
            "methodsCount": 16,
            "developerPortalURI": "http://www.fueleconomy.gov/feg/ws/index.shtml"
        }
    ]}},
    {"Jira": {"RAMLFiles": [
        {
            "name": "Jira",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Jira/production/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Jira/production/api.json",
            "baseUri": "{protocol}://{domain}/rest/api/{version}",
            "version": "2",
            "securitySchemes": [{"basic": {
                "name": "basic",
                "type": "Basic Authentication"
            }}],
            "resourcesCount": 135,
            "methodsCount": 213
        },
        {
            "name": "Jira Authorization API",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Jira/production/authApi.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Jira/production/authApi.json",
            "resourcesCount": 3,
            "methodsCount": 4
        }
    ]}},
    {"WeatherUnderground": {"RAMLFiles": [
        {
            "name": "Weather Underground",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/WeatherUnderground/production/wunderground.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/WeatherUnderground/production/wunderground.json",
            "baseUri": "http://api.wunderground.com/api/{api_key}",
            "version": "v1",
            "resourcesCount": 63,
            "methodsCount": 42
        },
        {
            "name": "Weather Underground AutoComplete",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/WeatherUnderground/production/wundergroundAutocompleteApi.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/WeatherUnderground/production/wundergroundAutocompleteApi.json",
            "baseUri": "http://autocomplete.wunderground.com",
            "version": "v1",
            "resourcesCount": 1,
            "methodsCount": 1
        }
    ]}},
    {"Flickr": {"RAMLFiles": [
        {
            "name": "Flickr API",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Flickr/master/flickr.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Flickr/master/flickr.json",
            "baseUri": "https://api.flickr.com/services",
            "resourcesCount": 3,
            "methodsCount": 4
        },
        {
            "name": "Flickr API",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Flickr/staging/flickr.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Flickr/staging/flickr.json",
            "baseUri": "https://api.flickr.com/services",
            "resourcesCount": 3,
            "methodsCount": 4
        }
    ]}},
    {"Freebase": {"RAMLFiles": [
        {
            "name": "Get Started with the Freebase API",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Freebase/master/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Freebase/master/api.json",
            "baseUri": "https://www.googleapis.com/freebase/{version}",
            "version": "v1",
            "resourcesCount": 6,
            "methodsCount": 6
        },
        {
            "name": "Get Started with the Freebase API",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/Freebase/staging/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/Freebase/staging/api.json",
            "baseUri": "https://www.googleapis.com/freebase/{version}",
            "version": "v1",
            "resourcesCount": 6,
            "methodsCount": 6
        }
    ]}},
    {"BlockScore": {
        "logo": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/BlockScore/logo.png",
        "RAMLFiles": [{
            "name": "BlockScore",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/BlockScore/staging/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/BlockScore/staging/api.json",
            "baseUri": "https://api.blockscore.com",
            "version": "4",
            "securitySchemes": [{"basic": {
                "name": "basic",
                "type": "Basic Authentication",
                "describedBy": {
                    "securedBy": ["basic"],
                    "headers": {"Authorization": {
                        "name": "Authorization",
                        "displayName": "Authorization",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "The Authorization field value consists of credentials\ncontaining the authentication information of the user agent for the\nrealm of the resource being requested.\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    }},
                    "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                }
            }}],
            "resourcesCount": 12,
            "methodsCount": 18,
            "developerPortalURI": "https://developer.flightstats.com/api-docs/"
        }]
    }},
    {"GoogleMail": {"RAMLFiles": [
        {
            "name": "GMail",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/GoogleMail/production/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/GoogleMail/production/api.json",
            "baseUri": "https://www.googleapis.com/gmail/{version}/users",
            "version": "v1",
            "securitySchemes": [{"oauth_2_0": {
                "name": "oauth_2_0",
                "type": "OAuth 2.0",
                "description": "",
                "describedBy": {
                    "securedBy": ["oauth_2_0"],
                    "queryParameters": {"access_token": {
                        "name": "access_token",
                        "displayName": "access_token",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"Authorization\" header\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    }},
                    "headers": {"Authorization": {
                        "name": "Authorization",
                        "displayName": "Authorization",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"access_token\" queryParameters string parameter.\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    }},
                    "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                },
                "settings": {
                    "accessTokenUri": "https://accounts.google.com/o/oauth2/token",
                    "authorizationUri": "https://accounts.google.com/o/oauth2/auth",
                    "authorizationGrants": ["code"],
                    "scopes": ["https://mail.google.com/"]
                }
            }}],
            "resourcesCount": 21,
            "methodsCount": 30
        },
        {
            "name": "GMail Media Upload",
            "description": "descriptionexamle",
            "RAMLVersion": "0.8",
            "location": "https://raw.githubusercontent.com/raml-apis/GoogleMail/production/uploadApi.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/GoogleMail/production/uploadApi.json",
            "baseUri": "https://www.googleapis.com/upload/gmail/{version}/users",
            "version": "v1",
            "securitySchemes": [{"oauth_2_0": {
                "name": "oauth_2_0",
                "type": "OAuth 2.0",
                "description": "",
                "describedBy": {
                    "securedBy": ["oauth_2_0"],
                    "queryParameters": {"access_token": {
                        "name": "access_token",
                        "displayName": "access_token",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"Authorization\" header\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    }},
                    "headers": {"Authorization": {
                        "name": "Authorization",
                        "displayName": "Authorization",
                        "type": "string",
                        "required": false,
                        "repeat": false,
                        "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"access_token\" queryParameters string parameter.\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true}
                        }}
                    }},
                    "__METADATA__": {"primitiveValuesMeta": {"securedBy": {"calculated": true}}}
                },
                "settings": {
                    "accessTokenUri": "https://accounts.google.com/o/oauth2/token",
                    "authorizationUri": "https://accounts.google.com/o/oauth2/auth",
                    "authorizationGrants": ["code"],
                    "scopes": ["https://mail.google.com/"]
                }
            }}],
            "resourcesCount": 7,
            "methodsCount": 6
        },
        {
            "name": "GMail",
            "description": "descriptionexamle",
            "RAMLVersion": "1.0",
            "location": "https://raw.githubusercontent.com/raml-apis/GoogleMail/raml1.0/api.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/GoogleMail/raml1.0/api.json",
            "baseUri": "https://www.googleapis.com/gmail/{version}/users",
            "version": "v1",
            "securitySchemes": [{"oauth_2_0": {
                "name": "oauth_2_0",
                "type": "OAuth 2.0",
                "description": "",
                "describedBy": {
                    "queryParameters": {"access_token": {
                        "name": "access_token",
                        "displayName": "access_token",
                        "type": ["string"],
                        "repeat": false,
                        "required": true,
                        "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"Authorization\" header\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true}
                        }}
                    }},
                    "headers": {"Authorization": {
                        "name": "Authorization",
                        "displayName": "Authorization",
                        "type": ["string"],
                        "repeat": false,
                        "required": true,
                        "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"access_token\" queryParameters string parameter.\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true}
                        }}
                    }}
                },
                "settings": {
                    "accessTokenUri": "https://accounts.google.com/o/oauth2/token",
                    "authorizationUri": "https://accounts.google.com/o/oauth2/auth",
                    "authorizationGrants": ["code"],
                    "scopes": ["https://mail.google.com/"]
                }
            }}],
            "resourcesCount": 21,
            "methodsCount": 30
        },
        {
            "name": "GMail Media Upload",
            "description": "descriptionexamle",
            "RAMLVersion": "1.0",
            "location": "https://raw.githubusercontent.com/raml-apis/GoogleMail/raml1.0/uploadApi.raml",
            "raml-1-parser_result": "https://raw.githubusercontent.com/caveman7444/registry/master/registry/projects/GoogleMail/raml1.0/uploadApi.json",
            "baseUri": "https://www.googleapis.com/upload/gmail/{version}/users",
            "version": "v1",
            "securitySchemes": [{"oauth_2_0": {
                "name": "oauth_2_0",
                "type": "OAuth 2.0",
                "description": "",
                "describedBy": {
                    "queryParameters": {"access_token": {
                        "name": "access_token",
                        "displayName": "access_token",
                        "type": ["string"],
                        "repeat": false,
                        "required": true,
                        "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"Authorization\" header\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true}
                        }}
                    }},
                    "headers": {"Authorization": {
                        "name": "Authorization",
                        "displayName": "Authorization",
                        "type": ["string"],
                        "repeat": false,
                        "required": true,
                        "description": "Used to send a valid OAuth 2 access token. Do not use together with\nthe \"access_token\" queryParameters string parameter.\n",
                        "__METADATA__": {"primitiveValuesMeta": {
                            "displayName": {"calculated": true},
                            "type": {"insertedAsDefault": true},
                            "repeat": {"insertedAsDefault": true},
                            "required": {"insertedAsDefault": true}
                        }}
                    }}
                },
                "settings": {
                    "accessTokenUri": "https://accounts.google.com/o/oauth2/token",
                    "authorizationUri": "https://accounts.google.com/o/oauth2/auth",
                    "authorizationGrants": ["code"],
                    "scopes": ["https://mail.google.com/"]
                }
            }}],
            "resourcesCount": 7,
            "methodsCount": 6
        }
    ]}}
]}